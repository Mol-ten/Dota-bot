// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dota_gcmessages_client_chat.proto
// Protobuf Java Version: 4.28.0

package kz.moltenhaze.proto.dota;

public final class DotaGcmessagesClientChat {
  private DotaGcmessagesClientChat() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 0,
      /* suffix= */ "",
      DotaGcmessagesClientChat.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CMsgClientToGCPrivateChatInviteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCPrivateChatInvite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    boolean hasPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    java.lang.String getPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes();

    /**
     * <code>optional uint32 invited_account_id = 2;</code>
     * @return Whether the invitedAccountId field is set.
     */
    boolean hasInvitedAccountId();
    /**
     * <code>optional uint32 invited_account_id = 2;</code>
     * @return The invitedAccountId.
     */
    int getInvitedAccountId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCPrivateChatInvite}
   */
  public static final class CMsgClientToGCPrivateChatInvite extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCPrivateChatInvite)
      CMsgClientToGCPrivateChatInviteOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCPrivateChatInvite.class.getName());
    }
    // Use CMsgClientToGCPrivateChatInvite.newBuilder() to construct.
    private CMsgClientToGCPrivateChatInvite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCPrivateChatInvite() {
      privateChatChannelName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatInvite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatInvite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.Builder.class);
    }

    private int bitField0_;
    public static final int PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateChatChannelName_ = "";
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    @java.lang.Override
    public boolean hasPrivateChatChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    @java.lang.Override
    public java.lang.String getPrivateChatChannelName() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          privateChatChannelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateChatChannelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INVITED_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int invitedAccountId_ = 0;
    /**
     * <code>optional uint32 invited_account_id = 2;</code>
     * @return Whether the invitedAccountId field is set.
     */
    @java.lang.Override
    public boolean hasInvitedAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 invited_account_id = 2;</code>
     * @return The invitedAccountId.
     */
    @java.lang.Override
    public int getInvitedAccountId() {
      return invitedAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, invitedAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, invitedAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite) obj;

      if (hasPrivateChatChannelName() != other.hasPrivateChatChannelName()) return false;
      if (hasPrivateChatChannelName()) {
        if (!getPrivateChatChannelName()
            .equals(other.getPrivateChatChannelName())) return false;
      }
      if (hasInvitedAccountId() != other.hasInvitedAccountId()) return false;
      if (hasInvitedAccountId()) {
        if (getInvitedAccountId()
            != other.getInvitedAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrivateChatChannelName()) {
        hash = (37 * hash) + PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateChatChannelName().hashCode();
      }
      if (hasInvitedAccountId()) {
        hash = (37 * hash) + INVITED_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getInvitedAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCPrivateChatInvite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCPrivateChatInvite)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInviteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatInvite_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatInvite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        privateChatChannelName_ = "";
        invitedAccountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatInvite_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.privateChatChannelName_ = privateChatChannelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.invitedAccountId_ = invitedAccountId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite.getDefaultInstance()) return this;
        if (other.hasPrivateChatChannelName()) {
          privateChatChannelName_ = other.privateChatChannelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasInvitedAccountId()) {
          setInvitedAccountId(other.getInvitedAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                privateChatChannelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                invitedAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object privateChatChannelName_ = "";
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return Whether the privateChatChannelName field is set.
       */
      public boolean hasPrivateChatChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The privateChatChannelName.
       */
      public java.lang.String getPrivateChatChannelName() {
        java.lang.Object ref = privateChatChannelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            privateChatChannelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The bytes for privateChatChannelName.
       */
      public com.google.protobuf.ByteString
          getPrivateChatChannelNameBytes() {
        java.lang.Object ref = privateChatChannelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateChatChannelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateChatChannelName() {
        privateChatChannelName_ = getDefaultInstance().getPrivateChatChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The bytes for privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int invitedAccountId_ ;
      /**
       * <code>optional uint32 invited_account_id = 2;</code>
       * @return Whether the invitedAccountId field is set.
       */
      @java.lang.Override
      public boolean hasInvitedAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 invited_account_id = 2;</code>
       * @return The invitedAccountId.
       */
      @java.lang.Override
      public int getInvitedAccountId() {
        return invitedAccountId_;
      }
      /**
       * <code>optional uint32 invited_account_id = 2;</code>
       * @param value The invitedAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setInvitedAccountId(int value) {

        invitedAccountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 invited_account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInvitedAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        invitedAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCPrivateChatInvite)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCPrivateChatInvite)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCPrivateChatInvite>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCPrivateChatInvite>() {
      @java.lang.Override
      public CMsgClientToGCPrivateChatInvite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCPrivateChatInvite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCPrivateChatInvite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatInvite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCPrivateChatKickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCPrivateChatKick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    boolean hasPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    java.lang.String getPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes();

    /**
     * <code>optional uint32 kick_account_id = 2;</code>
     * @return Whether the kickAccountId field is set.
     */
    boolean hasKickAccountId();
    /**
     * <code>optional uint32 kick_account_id = 2;</code>
     * @return The kickAccountId.
     */
    int getKickAccountId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCPrivateChatKick}
   */
  public static final class CMsgClientToGCPrivateChatKick extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCPrivateChatKick)
      CMsgClientToGCPrivateChatKickOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCPrivateChatKick.class.getName());
    }
    // Use CMsgClientToGCPrivateChatKick.newBuilder() to construct.
    private CMsgClientToGCPrivateChatKick(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCPrivateChatKick() {
      privateChatChannelName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatKick_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatKick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.Builder.class);
    }

    private int bitField0_;
    public static final int PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateChatChannelName_ = "";
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    @java.lang.Override
    public boolean hasPrivateChatChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    @java.lang.Override
    public java.lang.String getPrivateChatChannelName() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          privateChatChannelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateChatChannelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KICK_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int kickAccountId_ = 0;
    /**
     * <code>optional uint32 kick_account_id = 2;</code>
     * @return Whether the kickAccountId field is set.
     */
    @java.lang.Override
    public boolean hasKickAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 kick_account_id = 2;</code>
     * @return The kickAccountId.
     */
    @java.lang.Override
    public int getKickAccountId() {
      return kickAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, kickAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, kickAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick) obj;

      if (hasPrivateChatChannelName() != other.hasPrivateChatChannelName()) return false;
      if (hasPrivateChatChannelName()) {
        if (!getPrivateChatChannelName()
            .equals(other.getPrivateChatChannelName())) return false;
      }
      if (hasKickAccountId() != other.hasKickAccountId()) return false;
      if (hasKickAccountId()) {
        if (getKickAccountId()
            != other.getKickAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrivateChatChannelName()) {
        hash = (37 * hash) + PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateChatChannelName().hashCode();
      }
      if (hasKickAccountId()) {
        hash = (37 * hash) + KICK_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getKickAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCPrivateChatKick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCPrivateChatKick)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatKick_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatKick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        privateChatChannelName_ = "";
        kickAccountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatKick_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.privateChatChannelName_ = privateChatChannelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.kickAccountId_ = kickAccountId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick.getDefaultInstance()) return this;
        if (other.hasPrivateChatChannelName()) {
          privateChatChannelName_ = other.privateChatChannelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasKickAccountId()) {
          setKickAccountId(other.getKickAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                privateChatChannelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                kickAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object privateChatChannelName_ = "";
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return Whether the privateChatChannelName field is set.
       */
      public boolean hasPrivateChatChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The privateChatChannelName.
       */
      public java.lang.String getPrivateChatChannelName() {
        java.lang.Object ref = privateChatChannelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            privateChatChannelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The bytes for privateChatChannelName.
       */
      public com.google.protobuf.ByteString
          getPrivateChatChannelNameBytes() {
        java.lang.Object ref = privateChatChannelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateChatChannelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateChatChannelName() {
        privateChatChannelName_ = getDefaultInstance().getPrivateChatChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The bytes for privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int kickAccountId_ ;
      /**
       * <code>optional uint32 kick_account_id = 2;</code>
       * @return Whether the kickAccountId field is set.
       */
      @java.lang.Override
      public boolean hasKickAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 kick_account_id = 2;</code>
       * @return The kickAccountId.
       */
      @java.lang.Override
      public int getKickAccountId() {
        return kickAccountId_;
      }
      /**
       * <code>optional uint32 kick_account_id = 2;</code>
       * @param value The kickAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setKickAccountId(int value) {

        kickAccountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 kick_account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKickAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kickAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCPrivateChatKick)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCPrivateChatKick)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCPrivateChatKick>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCPrivateChatKick>() {
      @java.lang.Override
      public CMsgClientToGCPrivateChatKick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCPrivateChatKick> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCPrivateChatKick> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatKick getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCPrivateChatPromoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCPrivateChatPromote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    boolean hasPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    java.lang.String getPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes();

    /**
     * <code>optional uint32 promote_account_id = 2;</code>
     * @return Whether the promoteAccountId field is set.
     */
    boolean hasPromoteAccountId();
    /**
     * <code>optional uint32 promote_account_id = 2;</code>
     * @return The promoteAccountId.
     */
    int getPromoteAccountId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCPrivateChatPromote}
   */
  public static final class CMsgClientToGCPrivateChatPromote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCPrivateChatPromote)
      CMsgClientToGCPrivateChatPromoteOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCPrivateChatPromote.class.getName());
    }
    // Use CMsgClientToGCPrivateChatPromote.newBuilder() to construct.
    private CMsgClientToGCPrivateChatPromote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCPrivateChatPromote() {
      privateChatChannelName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatPromote_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatPromote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.Builder.class);
    }

    private int bitField0_;
    public static final int PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateChatChannelName_ = "";
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    @java.lang.Override
    public boolean hasPrivateChatChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    @java.lang.Override
    public java.lang.String getPrivateChatChannelName() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          privateChatChannelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateChatChannelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROMOTE_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int promoteAccountId_ = 0;
    /**
     * <code>optional uint32 promote_account_id = 2;</code>
     * @return Whether the promoteAccountId field is set.
     */
    @java.lang.Override
    public boolean hasPromoteAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 promote_account_id = 2;</code>
     * @return The promoteAccountId.
     */
    @java.lang.Override
    public int getPromoteAccountId() {
      return promoteAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, promoteAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, promoteAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote) obj;

      if (hasPrivateChatChannelName() != other.hasPrivateChatChannelName()) return false;
      if (hasPrivateChatChannelName()) {
        if (!getPrivateChatChannelName()
            .equals(other.getPrivateChatChannelName())) return false;
      }
      if (hasPromoteAccountId() != other.hasPromoteAccountId()) return false;
      if (hasPromoteAccountId()) {
        if (getPromoteAccountId()
            != other.getPromoteAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrivateChatChannelName()) {
        hash = (37 * hash) + PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateChatChannelName().hashCode();
      }
      if (hasPromoteAccountId()) {
        hash = (37 * hash) + PROMOTE_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPromoteAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCPrivateChatPromote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCPrivateChatPromote)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatPromote_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatPromote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        privateChatChannelName_ = "";
        promoteAccountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatPromote_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.privateChatChannelName_ = privateChatChannelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.promoteAccountId_ = promoteAccountId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote.getDefaultInstance()) return this;
        if (other.hasPrivateChatChannelName()) {
          privateChatChannelName_ = other.privateChatChannelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPromoteAccountId()) {
          setPromoteAccountId(other.getPromoteAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                privateChatChannelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                promoteAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object privateChatChannelName_ = "";
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return Whether the privateChatChannelName field is set.
       */
      public boolean hasPrivateChatChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The privateChatChannelName.
       */
      public java.lang.String getPrivateChatChannelName() {
        java.lang.Object ref = privateChatChannelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            privateChatChannelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The bytes for privateChatChannelName.
       */
      public com.google.protobuf.ByteString
          getPrivateChatChannelNameBytes() {
        java.lang.Object ref = privateChatChannelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateChatChannelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateChatChannelName() {
        privateChatChannelName_ = getDefaultInstance().getPrivateChatChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The bytes for privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int promoteAccountId_ ;
      /**
       * <code>optional uint32 promote_account_id = 2;</code>
       * @return Whether the promoteAccountId field is set.
       */
      @java.lang.Override
      public boolean hasPromoteAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 promote_account_id = 2;</code>
       * @return The promoteAccountId.
       */
      @java.lang.Override
      public int getPromoteAccountId() {
        return promoteAccountId_;
      }
      /**
       * <code>optional uint32 promote_account_id = 2;</code>
       * @param value The promoteAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setPromoteAccountId(int value) {

        promoteAccountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 promote_account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPromoteAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        promoteAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCPrivateChatPromote)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCPrivateChatPromote)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCPrivateChatPromote>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCPrivateChatPromote>() {
      @java.lang.Override
      public CMsgClientToGCPrivateChatPromote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCPrivateChatPromote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCPrivateChatPromote> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatPromote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCPrivateChatDemoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCPrivateChatDemote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    boolean hasPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    java.lang.String getPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes();

    /**
     * <code>optional uint32 demote_account_id = 2;</code>
     * @return Whether the demoteAccountId field is set.
     */
    boolean hasDemoteAccountId();
    /**
     * <code>optional uint32 demote_account_id = 2;</code>
     * @return The demoteAccountId.
     */
    int getDemoteAccountId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCPrivateChatDemote}
   */
  public static final class CMsgClientToGCPrivateChatDemote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCPrivateChatDemote)
      CMsgClientToGCPrivateChatDemoteOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCPrivateChatDemote.class.getName());
    }
    // Use CMsgClientToGCPrivateChatDemote.newBuilder() to construct.
    private CMsgClientToGCPrivateChatDemote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCPrivateChatDemote() {
      privateChatChannelName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatDemote_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatDemote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.Builder.class);
    }

    private int bitField0_;
    public static final int PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateChatChannelName_ = "";
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    @java.lang.Override
    public boolean hasPrivateChatChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    @java.lang.Override
    public java.lang.String getPrivateChatChannelName() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          privateChatChannelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateChatChannelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEMOTE_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int demoteAccountId_ = 0;
    /**
     * <code>optional uint32 demote_account_id = 2;</code>
     * @return Whether the demoteAccountId field is set.
     */
    @java.lang.Override
    public boolean hasDemoteAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 demote_account_id = 2;</code>
     * @return The demoteAccountId.
     */
    @java.lang.Override
    public int getDemoteAccountId() {
      return demoteAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, demoteAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, demoteAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote) obj;

      if (hasPrivateChatChannelName() != other.hasPrivateChatChannelName()) return false;
      if (hasPrivateChatChannelName()) {
        if (!getPrivateChatChannelName()
            .equals(other.getPrivateChatChannelName())) return false;
      }
      if (hasDemoteAccountId() != other.hasDemoteAccountId()) return false;
      if (hasDemoteAccountId()) {
        if (getDemoteAccountId()
            != other.getDemoteAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrivateChatChannelName()) {
        hash = (37 * hash) + PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateChatChannelName().hashCode();
      }
      if (hasDemoteAccountId()) {
        hash = (37 * hash) + DEMOTE_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDemoteAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCPrivateChatDemote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCPrivateChatDemote)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatDemote_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatDemote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        privateChatChannelName_ = "";
        demoteAccountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgClientToGCPrivateChatDemote_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.privateChatChannelName_ = privateChatChannelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.demoteAccountId_ = demoteAccountId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote.getDefaultInstance()) return this;
        if (other.hasPrivateChatChannelName()) {
          privateChatChannelName_ = other.privateChatChannelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDemoteAccountId()) {
          setDemoteAccountId(other.getDemoteAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                privateChatChannelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                demoteAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object privateChatChannelName_ = "";
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return Whether the privateChatChannelName field is set.
       */
      public boolean hasPrivateChatChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The privateChatChannelName.
       */
      public java.lang.String getPrivateChatChannelName() {
        java.lang.Object ref = privateChatChannelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            privateChatChannelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The bytes for privateChatChannelName.
       */
      public com.google.protobuf.ByteString
          getPrivateChatChannelNameBytes() {
        java.lang.Object ref = privateChatChannelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateChatChannelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateChatChannelName() {
        privateChatChannelName_ = getDefaultInstance().getPrivateChatChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The bytes for privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int demoteAccountId_ ;
      /**
       * <code>optional uint32 demote_account_id = 2;</code>
       * @return Whether the demoteAccountId field is set.
       */
      @java.lang.Override
      public boolean hasDemoteAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 demote_account_id = 2;</code>
       * @return The demoteAccountId.
       */
      @java.lang.Override
      public int getDemoteAccountId() {
        return demoteAccountId_;
      }
      /**
       * <code>optional uint32 demote_account_id = 2;</code>
       * @param value The demoteAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setDemoteAccountId(int value) {

        demoteAccountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 demote_account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDemoteAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        demoteAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCPrivateChatDemote)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCPrivateChatDemote)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCPrivateChatDemote>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCPrivateChatDemote>() {
      @java.lang.Override
      public CMsgClientToGCPrivateChatDemote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCPrivateChatDemote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCPrivateChatDemote> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgClientToGCPrivateChatDemote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgGCToClientPrivateChatResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCToClientPrivateChatResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    boolean hasPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    java.lang.String getPrivateChatChannelName();
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes();

    /**
     * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result getResult();

    /**
     * <code>optional string username = 3;</code>
     * @return Whether the username field is set.
     */
    boolean hasUsername();
    /**
     * <code>optional string username = 3;</code>
     * @return The username.
     */
    java.lang.String getUsername();
    /**
     * <code>optional string username = 3;</code>
     * @return The bytes for username.
     */
    com.google.protobuf.ByteString
        getUsernameBytes();
  }
  /**
   * Protobuf type {@code CMsgGCToClientPrivateChatResponse}
   */
  public static final class CMsgGCToClientPrivateChatResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCToClientPrivateChatResponse)
      CMsgGCToClientPrivateChatResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgGCToClientPrivateChatResponse.class.getName());
    }
    // Use CMsgGCToClientPrivateChatResponse.newBuilder() to construct.
    private CMsgGCToClientPrivateChatResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgGCToClientPrivateChatResponse() {
      privateChatChannelName_ = "";
      result_ = 0;
      username_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCToClientPrivateChatResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCToClientPrivateChatResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgGCToClientPrivateChatResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>FAILURE_CREATION_LOCK = 1;</code>
       */
      FAILURE_CREATION_LOCK(1),
      /**
       * <code>FAILURE_SQL_TRANSACTION = 2;</code>
       */
      FAILURE_SQL_TRANSACTION(2),
      /**
       * <code>FAILURE_SDO_LOAD = 3;</code>
       */
      FAILURE_SDO_LOAD(3),
      /**
       * <code>FAILURE_NO_PERMISSION = 4;</code>
       */
      FAILURE_NO_PERMISSION(4),
      /**
       * <code>FAILURE_ALREADY_MEMBER = 5;</code>
       */
      FAILURE_ALREADY_MEMBER(5),
      /**
       * <code>FAILURE_NOT_A_MEMBER = 7;</code>
       */
      FAILURE_NOT_A_MEMBER(7),
      /**
       * <code>FAILURE_NO_REMAINING_ADMINS = 8;</code>
       */
      FAILURE_NO_REMAINING_ADMINS(8),
      /**
       * <code>FAILURE_NO_ROOM = 9;</code>
       */
      FAILURE_NO_ROOM(9),
      /**
       * <code>FAILURE_CREATION_RATE_LIMITED = 10;</code>
       */
      FAILURE_CREATION_RATE_LIMITED(10),
      /**
       * <code>FAILURE_UNKNOWN_CHANNEL_NAME = 11;</code>
       */
      FAILURE_UNKNOWN_CHANNEL_NAME(11),
      /**
       * <code>FAILURE_UNKNOWN_USER = 12;</code>
       */
      FAILURE_UNKNOWN_USER(12),
      /**
       * <code>FAILURE_UNKNOWN_ERROR = 13;</code>
       */
      FAILURE_UNKNOWN_ERROR(13),
      /**
       * <code>FAILURE_CANNOT_KICK_ADMIN = 14;</code>
       */
      FAILURE_CANNOT_KICK_ADMIN(14),
      /**
       * <code>FAILURE_ALREADY_ADMIN = 15;</code>
       */
      FAILURE_ALREADY_ADMIN(15),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Result.class.getName());
      }
      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>FAILURE_CREATION_LOCK = 1;</code>
       */
      public static final int FAILURE_CREATION_LOCK_VALUE = 1;
      /**
       * <code>FAILURE_SQL_TRANSACTION = 2;</code>
       */
      public static final int FAILURE_SQL_TRANSACTION_VALUE = 2;
      /**
       * <code>FAILURE_SDO_LOAD = 3;</code>
       */
      public static final int FAILURE_SDO_LOAD_VALUE = 3;
      /**
       * <code>FAILURE_NO_PERMISSION = 4;</code>
       */
      public static final int FAILURE_NO_PERMISSION_VALUE = 4;
      /**
       * <code>FAILURE_ALREADY_MEMBER = 5;</code>
       */
      public static final int FAILURE_ALREADY_MEMBER_VALUE = 5;
      /**
       * <code>FAILURE_NOT_A_MEMBER = 7;</code>
       */
      public static final int FAILURE_NOT_A_MEMBER_VALUE = 7;
      /**
       * <code>FAILURE_NO_REMAINING_ADMINS = 8;</code>
       */
      public static final int FAILURE_NO_REMAINING_ADMINS_VALUE = 8;
      /**
       * <code>FAILURE_NO_ROOM = 9;</code>
       */
      public static final int FAILURE_NO_ROOM_VALUE = 9;
      /**
       * <code>FAILURE_CREATION_RATE_LIMITED = 10;</code>
       */
      public static final int FAILURE_CREATION_RATE_LIMITED_VALUE = 10;
      /**
       * <code>FAILURE_UNKNOWN_CHANNEL_NAME = 11;</code>
       */
      public static final int FAILURE_UNKNOWN_CHANNEL_NAME_VALUE = 11;
      /**
       * <code>FAILURE_UNKNOWN_USER = 12;</code>
       */
      public static final int FAILURE_UNKNOWN_USER_VALUE = 12;
      /**
       * <code>FAILURE_UNKNOWN_ERROR = 13;</code>
       */
      public static final int FAILURE_UNKNOWN_ERROR_VALUE = 13;
      /**
       * <code>FAILURE_CANNOT_KICK_ADMIN = 14;</code>
       */
      public static final int FAILURE_CANNOT_KICK_ADMIN_VALUE = 14;
      /**
       * <code>FAILURE_ALREADY_ADMIN = 15;</code>
       */
      public static final int FAILURE_ALREADY_ADMIN_VALUE = 15;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Result forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return FAILURE_CREATION_LOCK;
          case 2: return FAILURE_SQL_TRANSACTION;
          case 3: return FAILURE_SDO_LOAD;
          case 4: return FAILURE_NO_PERMISSION;
          case 5: return FAILURE_ALREADY_MEMBER;
          case 7: return FAILURE_NOT_A_MEMBER;
          case 8: return FAILURE_NO_REMAINING_ADMINS;
          case 9: return FAILURE_NO_ROOM;
          case 10: return FAILURE_CREATION_RATE_LIMITED;
          case 11: return FAILURE_UNKNOWN_CHANNEL_NAME;
          case 12: return FAILURE_UNKNOWN_USER;
          case 13: return FAILURE_UNKNOWN_ERROR;
          case 14: return FAILURE_CANNOT_KICK_ADMIN;
          case 15: return FAILURE_ALREADY_ADMIN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgGCToClientPrivateChatResponse.Result)
    }

    private int bitField0_;
    public static final int PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object privateChatChannelName_ = "";
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return Whether the privateChatChannelName field is set.
     */
    @java.lang.Override
    public boolean hasPrivateChatChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The privateChatChannelName.
     */
    @java.lang.Override
    public java.lang.String getPrivateChatChannelName() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          privateChatChannelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string private_chat_channel_name = 1;</code>
     * @return The bytes for privateChatChannelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateChatChannelNameBytes() {
      java.lang.Object ref = privateChatChannelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateChatChannelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_ = 0;
    /**
     * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result getResult() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result.SUCCESS : result;
    }

    public static final int USERNAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object username_ = "";
    /**
     * <code>optional string username = 3;</code>
     * @return Whether the username field is set.
     */
    @java.lang.Override
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string username = 3;</code>
     * @return The username.
     */
    @java.lang.Override
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string username = 3;</code>
     * @return The bytes for username.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, result_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, username_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, privateChatChannelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, username_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse) obj;

      if (hasPrivateChatChannelName() != other.hasPrivateChatChannelName()) return false;
      if (hasPrivateChatChannelName()) {
        if (!getPrivateChatChannelName()
            .equals(other.getPrivateChatChannelName())) return false;
      }
      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (hasUsername() != other.hasUsername()) return false;
      if (hasUsername()) {
        if (!getUsername()
            .equals(other.getUsername())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrivateChatChannelName()) {
        hash = (37 * hash) + PRIVATE_CHAT_CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateChatChannelName().hashCode();
      }
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasUsername()) {
        hash = (37 * hash) + USERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getUsername().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCToClientPrivateChatResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCToClientPrivateChatResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCToClientPrivateChatResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCToClientPrivateChatResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        privateChatChannelName_ = "";
        result_ = 0;
        username_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCToClientPrivateChatResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.privateChatChannelName_ = privateChatChannelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.username_ = username_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.getDefaultInstance()) return this;
        if (other.hasPrivateChatChannelName()) {
          privateChatChannelName_ = other.privateChatChannelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasUsername()) {
          username_ = other.username_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                privateChatChannelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 26: {
                username_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object privateChatChannelName_ = "";
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return Whether the privateChatChannelName field is set.
       */
      public boolean hasPrivateChatChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The privateChatChannelName.
       */
      public java.lang.String getPrivateChatChannelName() {
        java.lang.Object ref = privateChatChannelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            privateChatChannelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return The bytes for privateChatChannelName.
       */
      public com.google.protobuf.ByteString
          getPrivateChatChannelNameBytes() {
        java.lang.Object ref = privateChatChannelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateChatChannelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateChatChannelName() {
        privateChatChannelName_ = getDefaultInstance().getPrivateChatChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string private_chat_channel_name = 1;</code>
       * @param value The bytes for privateChatChannelName to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        privateChatChannelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int result_ = 0;
      /**
       * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result getResult() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgGCToClientPrivateChatResponse.Result result = 2 [default = SUCCESS];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object username_ = "";
      /**
       * <code>optional string username = 3;</code>
       * @return Whether the username field is set.
       */
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string username = 3;</code>
       * @return The username.
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            username_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string username = 3;</code>
       * @return The bytes for username.
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string username = 3;</code>
       * @param value The username to set.
       * @return This builder for chaining.
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        username_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsername() {
        username_ = getDefaultInstance().getUsername();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 3;</code>
       * @param value The bytes for username to set.
       * @return This builder for chaining.
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        username_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCToClientPrivateChatResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgGCToClientPrivateChatResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgGCToClientPrivateChatResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgGCToClientPrivateChatResponse>() {
      @java.lang.Override
      public CMsgGCToClientPrivateChatResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgGCToClientPrivateChatResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCToClientPrivateChatResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCToClientPrivateChatResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAJoinChatChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAJoinChatChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string channel_name = 2;</code>
     * @return Whether the channelName field is set.
     */
    boolean hasChannelName();
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The channelName.
     */
    java.lang.String getChannelName();
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The bytes for channelName.
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    boolean hasChannelType();
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType();

    /**
     * <code>optional bool silent_rejection = 5;</code>
     * @return Whether the silentRejection field is set.
     */
    boolean hasSilentRejection();
    /**
     * <code>optional bool silent_rejection = 5;</code>
     * @return The silentRejection.
     */
    boolean getSilentRejection();
  }
  /**
   * Protobuf type {@code CMsgDOTAJoinChatChannel}
   */
  public static final class CMsgDOTAJoinChatChannel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAJoinChatChannel)
      CMsgDOTAJoinChatChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAJoinChatChannel.class.getName());
    }
    // Use CMsgDOTAJoinChatChannel.newBuilder() to construct.
    private CMsgDOTAJoinChatChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAJoinChatChannel() {
      channelName_ = "";
      channelType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object channelName_ = "";
    /**
     * <code>optional string channel_name = 2;</code>
     * @return Whether the channelName field is set.
     */
    @java.lang.Override
    public boolean hasChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The channelName.
     */
    @java.lang.Override
    public java.lang.String getChannelName() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The bytes for channelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_TYPE_FIELD_NUMBER = 4;
    private int channelType_ = 0;
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    @java.lang.Override public boolean hasChannelType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
    }

    public static final int SILENT_REJECTION_FIELD_NUMBER = 5;
    private boolean silentRejection_ = false;
    /**
     * <code>optional bool silent_rejection = 5;</code>
     * @return Whether the silentRejection field is set.
     */
    @java.lang.Override
    public boolean hasSilentRejection() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool silent_rejection = 5;</code>
     * @return The silentRejection.
     */
    @java.lang.Override
    public boolean getSilentRejection() {
      return silentRejection_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, channelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(4, channelType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(5, silentRejection_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, channelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, channelType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, silentRejection_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel) obj;

      if (hasChannelName() != other.hasChannelName()) return false;
      if (hasChannelName()) {
        if (!getChannelName()
            .equals(other.getChannelName())) return false;
      }
      if (hasChannelType() != other.hasChannelType()) return false;
      if (hasChannelType()) {
        if (channelType_ != other.channelType_) return false;
      }
      if (hasSilentRejection() != other.hasSilentRejection()) return false;
      if (hasSilentRejection()) {
        if (getSilentRejection()
            != other.getSilentRejection()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelName()) {
        hash = (37 * hash) + CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getChannelName().hashCode();
      }
      if (hasChannelType()) {
        hash = (37 * hash) + CHANNEL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + channelType_;
      }
      if (hasSilentRejection()) {
        hash = (37 * hash) + SILENT_REJECTION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSilentRejection());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAJoinChatChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAJoinChatChannel)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelName_ = "";
        channelType_ = 0;
        silentRejection_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannel_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelName_ = channelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelType_ = channelType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.silentRejection_ = silentRejection_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel.getDefaultInstance()) return this;
        if (other.hasChannelName()) {
          channelName_ = other.channelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        if (other.hasSilentRejection()) {
          setSilentRejection(other.getSilentRejection());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                channelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 18
              case 32: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  channelType_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 32
              case 40: {
                silentRejection_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object channelName_ = "";
      /**
       * <code>optional string channel_name = 2;</code>
       * @return Whether the channelName field is set.
       */
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @return The channelName.
       */
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @return The bytes for channelName.
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @param value The channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelName() {
        channelName_ = getDefaultInstance().getChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @param value The bytes for channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int channelType_ = 0;
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
       * @return Whether the channelType field is set.
       */
      @java.lang.Override public boolean hasChannelType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
       * @return The channelType.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
       * @param value The channelType to set.
       * @return This builder for chaining.
       */
      public Builder setChannelType(kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        channelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 4 [default = DOTAChannelType_Regional];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelType_ = 0;
        onChanged();
        return this;
      }

      private boolean silentRejection_ ;
      /**
       * <code>optional bool silent_rejection = 5;</code>
       * @return Whether the silentRejection field is set.
       */
      @java.lang.Override
      public boolean hasSilentRejection() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool silent_rejection = 5;</code>
       * @return The silentRejection.
       */
      @java.lang.Override
      public boolean getSilentRejection() {
        return silentRejection_;
      }
      /**
       * <code>optional bool silent_rejection = 5;</code>
       * @param value The silentRejection to set.
       * @return This builder for chaining.
       */
      public Builder setSilentRejection(boolean value) {

        silentRejection_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool silent_rejection = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSilentRejection() {
        bitField0_ = (bitField0_ & ~0x00000004);
        silentRejection_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAJoinChatChannel)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAJoinChatChannel)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAJoinChatChannel>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAJoinChatChannel>() {
      @java.lang.Override
      public CMsgDOTAJoinChatChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAJoinChatChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAJoinChatChannel> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTALeaveChatChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTALeaveChatChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return The channelId.
     */
    long getChannelId();
  }
  /**
   * Protobuf type {@code CMsgDOTALeaveChatChannel}
   */
  public static final class CMsgDOTALeaveChatChannel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTALeaveChatChannel)
      CMsgDOTALeaveChatChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTALeaveChatChannel.class.getName());
    }
    // Use CMsgDOTALeaveChatChannel.newBuilder() to construct.
    private CMsgDOTALeaveChatChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTALeaveChatChannel() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTALeaveChatChannel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTALeaveChatChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private long channelId_ = 0L;
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, channelId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, channelId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTALeaveChatChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTALeaveChatChannel)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTALeaveChatChannel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTALeaveChatChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTALeaveChatChannel_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long channelId_ ;
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTALeaveChatChannel)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTALeaveChatChannel)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTALeaveChatChannel>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTALeaveChatChannel>() {
      @java.lang.Override
      public CMsgDOTALeaveChatChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTALeaveChatChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTALeaveChatChannel> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTALeaveChatChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgGCChatReportPublicSpamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCChatReportPublicSpam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>optional uint32 channel_user_id = 2;</code>
     * @return Whether the channelUserId field is set.
     */
    boolean hasChannelUserId();
    /**
     * <code>optional uint32 channel_user_id = 2;</code>
     * @return The channelUserId.
     */
    int getChannelUserId();
  }
  /**
   * Protobuf type {@code CMsgGCChatReportPublicSpam}
   */
  public static final class CMsgGCChatReportPublicSpam extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCChatReportPublicSpam)
      CMsgGCChatReportPublicSpamOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgGCChatReportPublicSpam.class.getName());
    }
    // Use CMsgGCChatReportPublicSpam.newBuilder() to construct.
    private CMsgGCChatReportPublicSpam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgGCChatReportPublicSpam() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCChatReportPublicSpam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCChatReportPublicSpam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private long channelId_ = 0L;
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int CHANNEL_USER_ID_FIELD_NUMBER = 2;
    private int channelUserId_ = 0;
    /**
     * <code>optional uint32 channel_user_id = 2;</code>
     * @return Whether the channelUserId field is set.
     */
    @java.lang.Override
    public boolean hasChannelUserId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 channel_user_id = 2;</code>
     * @return The channelUserId.
     */
    @java.lang.Override
    public int getChannelUserId() {
      return channelUserId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, channelUserId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, channelUserId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasChannelUserId() != other.hasChannelUserId()) return false;
      if (hasChannelUserId()) {
        if (getChannelUserId()
            != other.getChannelUserId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (hasChannelUserId()) {
        hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUserId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCChatReportPublicSpam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCChatReportPublicSpam)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCChatReportPublicSpam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCChatReportPublicSpam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0L;
        channelUserId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgGCChatReportPublicSpam_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelUserId_ = channelUserId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasChannelUserId()) {
          setChannelUserId(other.getChannelUserId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                channelUserId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long channelId_ ;
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private int channelUserId_ ;
      /**
       * <code>optional uint32 channel_user_id = 2;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 2;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }
      /**
       * <code>optional uint32 channel_user_id = 2;</code>
       * @param value The channelUserId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUserId(int value) {

        channelUserId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_user_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelUserId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCChatReportPublicSpam)
    }

    // @@protoc_insertion_point(class_scope:CMsgGCChatReportPublicSpam)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgGCChatReportPublicSpam>
        PARSER = new com.google.protobuf.AbstractParser<CMsgGCChatReportPublicSpam>() {
      @java.lang.Override
      public CMsgGCChatReportPublicSpam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgGCChatReportPublicSpam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCChatReportPublicSpam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgGCChatReportPublicSpam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatModeratorBanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatModeratorBan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return The accountId.
     */
    int getAccountId();

    /**
     * <code>optional uint32 duration = 3;</code>
     * @return Whether the duration field is set.
     */
    boolean hasDuration();
    /**
     * <code>optional uint32 duration = 3;</code>
     * @return The duration.
     */
    int getDuration();
  }
  /**
   * Protobuf type {@code CMsgDOTAChatModeratorBan}
   */
  public static final class CMsgDOTAChatModeratorBan extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatModeratorBan)
      CMsgDOTAChatModeratorBanOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatModeratorBan.class.getName());
    }
    // Use CMsgDOTAChatModeratorBan.newBuilder() to construct.
    private CMsgDOTAChatModeratorBan(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatModeratorBan() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatModeratorBan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatModeratorBan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private long channelId_ = 0L;
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    public static final int DURATION_FIELD_NUMBER = 3;
    private int duration_ = 0;
    /**
     * <code>optional uint32 duration = 3;</code>
     * @return Whether the duration field is set.
     */
    @java.lang.Override
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 duration = 3;</code>
     * @return The duration.
     */
    @java.lang.Override
    public int getDuration() {
      return duration_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, accountId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (getDuration()
            != other.getDuration()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatModeratorBan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatModeratorBan)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatModeratorBan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatModeratorBan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0L;
        accountId_ = 0;
        duration_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatModeratorBan_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.duration_ = duration_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                duration_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long channelId_ ;
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional uint32 duration = 3;</code>
       * @return Whether the duration field is set.
       */
      @java.lang.Override
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 duration = 3;</code>
       * @return The duration.
       */
      @java.lang.Override
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional uint32 duration = 3;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(int value) {

        duration_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 duration = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatModeratorBan)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatModeratorBan)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatModeratorBan>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatModeratorBan>() {
      @java.lang.Override
      public CMsgDOTAChatModeratorBan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatModeratorBan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatModeratorBan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatModeratorBan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    int getAccountId();

    /**
     * <code>optional uint64 channel_id = 2;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint64 channel_id = 2;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>optional string persona_name = 3;</code>
     * @return Whether the personaName field is set.
     */
    boolean hasPersonaName();
    /**
     * <code>optional string persona_name = 3;</code>
     * @return The personaName.
     */
    java.lang.String getPersonaName();
    /**
     * <code>optional string persona_name = 3;</code>
     * @return The bytes for personaName.
     */
    com.google.protobuf.ByteString
        getPersonaNameBytes();

    /**
     * <code>optional string text = 4;</code>
     * @return Whether the text field is set.
     */
    boolean hasText();
    /**
     * <code>optional string text = 4;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 4;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional uint32 timestamp = 5;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 5;</code>
     * @return The timestamp.
     */
    int getTimestamp();

    /**
     * <code>optional uint32 suggest_invite_account_id = 6;</code>
     * @return Whether the suggestInviteAccountId field is set.
     */
    boolean hasSuggestInviteAccountId();
    /**
     * <code>optional uint32 suggest_invite_account_id = 6;</code>
     * @return The suggestInviteAccountId.
     */
    int getSuggestInviteAccountId();

    /**
     * <code>optional string suggest_invite_name = 7;</code>
     * @return Whether the suggestInviteName field is set.
     */
    boolean hasSuggestInviteName();
    /**
     * <code>optional string suggest_invite_name = 7;</code>
     * @return The suggestInviteName.
     */
    java.lang.String getSuggestInviteName();
    /**
     * <code>optional string suggest_invite_name = 7;</code>
     * @return The bytes for suggestInviteName.
     */
    com.google.protobuf.ByteString
        getSuggestInviteNameBytes();

    /**
     * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
     * @return Whether the fantasyDraftOwnerAccountId field is set.
     */
    boolean hasFantasyDraftOwnerAccountId();
    /**
     * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
     * @return The fantasyDraftOwnerAccountId.
     */
    int getFantasyDraftOwnerAccountId();

    /**
     * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
     * @return Whether the fantasyDraftPlayerAccountId field is set.
     */
    boolean hasFantasyDraftPlayerAccountId();
    /**
     * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
     * @return The fantasyDraftPlayerAccountId.
     */
    int getFantasyDraftPlayerAccountId();

    /**
     * <code>optional uint32 event_id = 10;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 10;</code>
     * @return The eventId.
     */
    int getEventId();

    /**
     * <code>optional bool suggest_invite_to_lobby = 11;</code>
     * @return Whether the suggestInviteToLobby field is set.
     */
    boolean hasSuggestInviteToLobby();
    /**
     * <code>optional bool suggest_invite_to_lobby = 11;</code>
     * @return The suggestInviteToLobby.
     */
    boolean getSuggestInviteToLobby();

    /**
     * <code>optional bool coin_flip = 13;</code>
     * @return Whether the coinFlip field is set.
     */
    boolean hasCoinFlip();
    /**
     * <code>optional bool coin_flip = 13;</code>
     * @return The coinFlip.
     */
    boolean getCoinFlip();

    /**
     * <code>optional int32 player_id = 14 [default = -1];</code>
     * @return Whether the playerId field is set.
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 player_id = 14 [default = -1];</code>
     * @return The playerId.
     */
    int getPlayerId();

    /**
     * <code>optional uint32 share_profile_account_id = 15;</code>
     * @return Whether the shareProfileAccountId field is set.
     */
    boolean hasShareProfileAccountId();
    /**
     * <code>optional uint32 share_profile_account_id = 15;</code>
     * @return The shareProfileAccountId.
     */
    int getShareProfileAccountId();

    /**
     * <code>optional uint32 channel_user_id = 16;</code>
     * @return Whether the channelUserId field is set.
     */
    boolean hasChannelUserId();
    /**
     * <code>optional uint32 channel_user_id = 16;</code>
     * @return The channelUserId.
     */
    int getChannelUserId();

    /**
     * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
     * @return Whether the diceRoll field is set.
     */
    boolean hasDiceRoll();
    /**
     * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
     * @return The diceRoll.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll getDiceRoll();
    /**
     * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder getDiceRollOrBuilder();

    /**
     * <code>optional uint64 share_party_id = 18;</code>
     * @return Whether the sharePartyId field is set.
     */
    boolean hasSharePartyId();
    /**
     * <code>optional uint64 share_party_id = 18;</code>
     * @return The sharePartyId.
     */
    long getSharePartyId();

    /**
     * <code>optional uint64 share_lobby_id = 19;</code>
     * @return Whether the shareLobbyId field is set.
     */
    boolean hasShareLobbyId();
    /**
     * <code>optional uint64 share_lobby_id = 19;</code>
     * @return The shareLobbyId.
     */
    long getShareLobbyId();

    /**
     * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
     * @return Whether the shareLobbyCustomGameId field is set.
     */
    boolean hasShareLobbyCustomGameId();
    /**
     * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
     * @return The shareLobbyCustomGameId.
     */
    long getShareLobbyCustomGameId();

    /**
     * <code>optional string share_lobby_passkey = 21;</code>
     * @return Whether the shareLobbyPasskey field is set.
     */
    boolean hasShareLobbyPasskey();
    /**
     * <code>optional string share_lobby_passkey = 21;</code>
     * @return The shareLobbyPasskey.
     */
    java.lang.String getShareLobbyPasskey();
    /**
     * <code>optional string share_lobby_passkey = 21;</code>
     * @return The bytes for shareLobbyPasskey.
     */
    com.google.protobuf.ByteString
        getShareLobbyPasskeyBytes();

    /**
     * <code>optional uint32 private_chat_channel_id = 22;</code>
     * @return Whether the privateChatChannelId field is set.
     */
    boolean hasPrivateChatChannelId();
    /**
     * <code>optional uint32 private_chat_channel_id = 22;</code>
     * @return The privateChatChannelId.
     */
    int getPrivateChatChannelId();

    /**
     * <code>optional uint32 status = 23;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 23;</code>
     * @return The status.
     */
    int getStatus();

    /**
     * <code>optional bool legacy_battle_cup_victory = 24;</code>
     * @return Whether the legacyBattleCupVictory field is set.
     */
    boolean hasLegacyBattleCupVictory();
    /**
     * <code>optional bool legacy_battle_cup_victory = 24;</code>
     * @return The legacyBattleCupVictory.
     */
    boolean getLegacyBattleCupVictory();

    /**
     * <code>optional uint32 battle_cup_streak = 29;</code>
     * @return Whether the battleCupStreak field is set.
     */
    boolean hasBattleCupStreak();
    /**
     * <code>optional uint32 battle_cup_streak = 29;</code>
     * @return The battleCupStreak.
     */
    int getBattleCupStreak();

    /**
     * <code>optional uint32 badge_level = 25;</code>
     * @return Whether the badgeLevel field is set.
     */
    boolean hasBadgeLevel();
    /**
     * <code>optional uint32 badge_level = 25;</code>
     * @return The badgeLevel.
     */
    int getBadgeLevel();

    /**
     * <code>optional int32 suggest_pick_hero_id = 26;</code>
     * @return Whether the suggestPickHeroId field is set.
     */
    boolean hasSuggestPickHeroId();
    /**
     * <code>optional int32 suggest_pick_hero_id = 26;</code>
     * @return The suggestPickHeroId.
     */
    int getSuggestPickHeroId();

    /**
     * <code>optional string suggest_pick_hero_role = 27;</code>
     * @return Whether the suggestPickHeroRole field is set.
     */
    boolean hasSuggestPickHeroRole();
    /**
     * <code>optional string suggest_pick_hero_role = 27;</code>
     * @return The suggestPickHeroRole.
     */
    java.lang.String getSuggestPickHeroRole();
    /**
     * <code>optional string suggest_pick_hero_role = 27;</code>
     * @return The bytes for suggestPickHeroRole.
     */
    com.google.protobuf.ByteString
        getSuggestPickHeroRoleBytes();

    /**
     * <code>optional int32 suggest_ban_hero_id = 30;</code>
     * @return Whether the suggestBanHeroId field is set.
     */
    boolean hasSuggestBanHeroId();
    /**
     * <code>optional int32 suggest_ban_hero_id = 30;</code>
     * @return The suggestBanHeroId.
     */
    int getSuggestBanHeroId();

    /**
     * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
     * @return Whether the triviaAnswer field is set.
     */
    boolean hasTriviaAnswer();
    /**
     * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
     * @return The triviaAnswer.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered getTriviaAnswer();
    /**
     * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder getTriviaAnswerOrBuilder();

    /**
     * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
     * @return Whether the requestedAbilityId field is set.
     */
    boolean hasRequestedAbilityId();
    /**
     * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
     * @return The requestedAbilityId.
     */
    int getRequestedAbilityId();

    /**
     * <code>optional uint32 chat_flags = 34;</code>
     * @return Whether the chatFlags field is set.
     */
    boolean hasChatFlags();
    /**
     * <code>optional uint32 chat_flags = 34;</code>
     * @return The chatFlags.
     */
    int getChatFlags();

    /**
     * <code>optional bool started_finding_match = 35;</code>
     * @return Whether the startedFindingMatch field is set.
     */
    boolean hasStartedFindingMatch();
    /**
     * <code>optional bool started_finding_match = 35;</code>
     * @return The startedFindingMatch.
     */
    boolean getStartedFindingMatch();

    /**
     * <code>optional bool ctrl_is_down = 36;</code>
     * @return Whether the ctrlIsDown field is set.
     */
    boolean hasCtrlIsDown();
    /**
     * <code>optional bool ctrl_is_down = 36;</code>
     * @return The ctrlIsDown.
     */
    boolean getCtrlIsDown();

    /**
     * <code>optional uint32 favorite_team_id = 37;</code>
     * @return Whether the favoriteTeamId field is set.
     */
    boolean hasFavoriteTeamId();
    /**
     * <code>optional uint32 favorite_team_id = 37;</code>
     * @return The favoriteTeamId.
     */
    int getFavoriteTeamId();

    /**
     * <code>optional uint32 favorite_team_quality = 38;</code>
     * @return Whether the favoriteTeamQuality field is set.
     */
    boolean hasFavoriteTeamQuality();
    /**
     * <code>optional uint32 favorite_team_quality = 38;</code>
     * @return The favoriteTeamQuality.
     */
    int getFavoriteTeamQuality();

    /**
     * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
     * @return Whether the suggestPlayerDraftPick field is set.
     */
    boolean hasSuggestPlayerDraftPick();
    /**
     * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
     * @return The suggestPlayerDraftPick.
     */
    int getSuggestPlayerDraftPick();

    /**
     * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
     * @return Whether the playerDraftPick field is set.
     */
    boolean hasPlayerDraftPick();
    /**
     * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
     * @return The playerDraftPick.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick getPlayerDraftPick();
    /**
     * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder getPlayerDraftPickOrBuilder();

    /**
     * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
     * @return Whether the chatWheelMessage field is set.
     */
    boolean hasChatWheelMessage();
    /**
     * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
     * @return The chatWheelMessage.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage getChatWheelMessage();
    /**
     * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder getChatWheelMessageOrBuilder();

    /**
     * <code>optional uint32 event_level = 42;</code>
     * @return Whether the eventLevel field is set.
     */
    boolean hasEventLevel();
    /**
     * <code>optional uint32 event_level = 42;</code>
     * @return The eventLevel.
     */
    int getEventLevel();

    /**
     * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
     * @return Whether the suggestPickHeroFacet field is set.
     */
    boolean hasSuggestPickHeroFacet();
    /**
     * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
     * @return The suggestPickHeroFacet.
     */
    int getSuggestPickHeroFacet();
  }
  /**
   * Protobuf type {@code CMsgDOTAChatMessage}
   */
  public static final class CMsgDOTAChatMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatMessage)
      CMsgDOTAChatMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatMessage.class.getName());
    }
    // Use CMsgDOTAChatMessage.newBuilder() to construct.
    private CMsgDOTAChatMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatMessage() {
      personaName_ = "";
      text_ = "";
      suggestInviteName_ = "";
      playerId_ = -1;
      shareLobbyPasskey_ = "";
      suggestPickHeroRole_ = "";
      requestedAbilityId_ = -1;
      suggestPlayerDraftPick_ = -1;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.Builder.class);
    }

    public interface DiceRollOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAChatMessage.DiceRoll)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 roll_min = 1;</code>
       * @return Whether the rollMin field is set.
       */
      boolean hasRollMin();
      /**
       * <code>optional int32 roll_min = 1;</code>
       * @return The rollMin.
       */
      int getRollMin();

      /**
       * <code>optional int32 roll_max = 2;</code>
       * @return Whether the rollMax field is set.
       */
      boolean hasRollMax();
      /**
       * <code>optional int32 roll_max = 2;</code>
       * @return The rollMax.
       */
      int getRollMax();

      /**
       * <code>optional int32 result = 3;</code>
       * @return Whether the result field is set.
       */
      boolean hasResult();
      /**
       * <code>optional int32 result = 3;</code>
       * @return The result.
       */
      int getResult();
    }
    /**
     * Protobuf type {@code CMsgDOTAChatMessage.DiceRoll}
     */
    public static final class DiceRoll extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAChatMessage.DiceRoll)
        DiceRollOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          DiceRoll.class.getName());
      }
      // Use DiceRoll.newBuilder() to construct.
      private DiceRoll(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private DiceRoll() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_DiceRoll_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_DiceRoll_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder.class);
      }

      private int bitField0_;
      public static final int ROLL_MIN_FIELD_NUMBER = 1;
      private int rollMin_ = 0;
      /**
       * <code>optional int32 roll_min = 1;</code>
       * @return Whether the rollMin field is set.
       */
      @java.lang.Override
      public boolean hasRollMin() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 roll_min = 1;</code>
       * @return The rollMin.
       */
      @java.lang.Override
      public int getRollMin() {
        return rollMin_;
      }

      public static final int ROLL_MAX_FIELD_NUMBER = 2;
      private int rollMax_ = 0;
      /**
       * <code>optional int32 roll_max = 2;</code>
       * @return Whether the rollMax field is set.
       */
      @java.lang.Override
      public boolean hasRollMax() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 roll_max = 2;</code>
       * @return The rollMax.
       */
      @java.lang.Override
      public int getRollMax() {
        return rollMax_;
      }

      public static final int RESULT_FIELD_NUMBER = 3;
      private int result_ = 0;
      /**
       * <code>optional int32 result = 3;</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override
      public boolean hasResult() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 result = 3;</code>
       * @return The result.
       */
      @java.lang.Override
      public int getResult() {
        return result_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, rollMin_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, rollMax_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, result_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, rollMin_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, rollMax_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, result_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll) obj;

        if (hasRollMin() != other.hasRollMin()) return false;
        if (hasRollMin()) {
          if (getRollMin()
              != other.getRollMin()) return false;
        }
        if (hasRollMax() != other.hasRollMax()) return false;
        if (hasRollMax()) {
          if (getRollMax()
              != other.getRollMax()) return false;
        }
        if (hasResult() != other.hasResult()) return false;
        if (hasResult()) {
          if (getResult()
              != other.getResult()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRollMin()) {
          hash = (37 * hash) + ROLL_MIN_FIELD_NUMBER;
          hash = (53 * hash) + getRollMin();
        }
        if (hasRollMax()) {
          hash = (37 * hash) + ROLL_MAX_FIELD_NUMBER;
          hash = (53 * hash) + getRollMax();
        }
        if (hasResult()) {
          hash = (37 * hash) + RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getResult();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAChatMessage.DiceRoll}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAChatMessage.DiceRoll)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_DiceRoll_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_DiceRoll_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          rollMin_ = 0;
          rollMax_ = 0;
          result_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_DiceRoll_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.rollMin_ = rollMin_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.rollMax_ = rollMax_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.result_ = result_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance()) return this;
          if (other.hasRollMin()) {
            setRollMin(other.getRollMin());
          }
          if (other.hasRollMax()) {
            setRollMax(other.getRollMax());
          }
          if (other.hasResult()) {
            setResult(other.getResult());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  rollMin_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  rollMax_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  result_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int rollMin_ ;
        /**
         * <code>optional int32 roll_min = 1;</code>
         * @return Whether the rollMin field is set.
         */
        @java.lang.Override
        public boolean hasRollMin() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 roll_min = 1;</code>
         * @return The rollMin.
         */
        @java.lang.Override
        public int getRollMin() {
          return rollMin_;
        }
        /**
         * <code>optional int32 roll_min = 1;</code>
         * @param value The rollMin to set.
         * @return This builder for chaining.
         */
        public Builder setRollMin(int value) {

          rollMin_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 roll_min = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRollMin() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rollMin_ = 0;
          onChanged();
          return this;
        }

        private int rollMax_ ;
        /**
         * <code>optional int32 roll_max = 2;</code>
         * @return Whether the rollMax field is set.
         */
        @java.lang.Override
        public boolean hasRollMax() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 roll_max = 2;</code>
         * @return The rollMax.
         */
        @java.lang.Override
        public int getRollMax() {
          return rollMax_;
        }
        /**
         * <code>optional int32 roll_max = 2;</code>
         * @param value The rollMax to set.
         * @return This builder for chaining.
         */
        public Builder setRollMax(int value) {

          rollMax_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 roll_max = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearRollMax() {
          bitField0_ = (bitField0_ & ~0x00000002);
          rollMax_ = 0;
          onChanged();
          return this;
        }

        private int result_ ;
        /**
         * <code>optional int32 result = 3;</code>
         * @return Whether the result field is set.
         */
        @java.lang.Override
        public boolean hasResult() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 result = 3;</code>
         * @return The result.
         */
        @java.lang.Override
        public int getResult() {
          return result_;
        }
        /**
         * <code>optional int32 result = 3;</code>
         * @param value The result to set.
         * @return This builder for chaining.
         */
        public Builder setResult(int value) {

          result_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 result = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearResult() {
          bitField0_ = (bitField0_ & ~0x00000004);
          result_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAChatMessage.DiceRoll)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAChatMessage.DiceRoll)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DiceRoll>
          PARSER = new com.google.protobuf.AbstractParser<DiceRoll>() {
        @java.lang.Override
        public DiceRoll parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<DiceRoll> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DiceRoll> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TriviaAnsweredOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAChatMessage.TriviaAnswered)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 question_id = 1;</code>
       * @return Whether the questionId field is set.
       */
      boolean hasQuestionId();
      /**
       * <code>optional uint32 question_id = 1;</code>
       * @return The questionId.
       */
      int getQuestionId();

      /**
       * <code>optional uint32 answer_index = 2;</code>
       * @return Whether the answerIndex field is set.
       */
      boolean hasAnswerIndex();
      /**
       * <code>optional uint32 answer_index = 2;</code>
       * @return The answerIndex.
       */
      int getAnswerIndex();

      /**
       * <code>optional uint32 party_questions_correct = 3;</code>
       * @return Whether the partyQuestionsCorrect field is set.
       */
      boolean hasPartyQuestionsCorrect();
      /**
       * <code>optional uint32 party_questions_correct = 3;</code>
       * @return The partyQuestionsCorrect.
       */
      int getPartyQuestionsCorrect();

      /**
       * <code>optional uint32 party_questions_viewed = 4;</code>
       * @return Whether the partyQuestionsViewed field is set.
       */
      boolean hasPartyQuestionsViewed();
      /**
       * <code>optional uint32 party_questions_viewed = 4;</code>
       * @return The partyQuestionsViewed.
       */
      int getPartyQuestionsViewed();

      /**
       * <code>optional uint32 party_trivia_points = 5;</code>
       * @return Whether the partyTriviaPoints field is set.
       */
      boolean hasPartyTriviaPoints();
      /**
       * <code>optional uint32 party_trivia_points = 5;</code>
       * @return The partyTriviaPoints.
       */
      int getPartyTriviaPoints();
    }
    /**
     * Protobuf type {@code CMsgDOTAChatMessage.TriviaAnswered}
     */
    public static final class TriviaAnswered extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAChatMessage.TriviaAnswered)
        TriviaAnsweredOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          TriviaAnswered.class.getName());
      }
      // Use TriviaAnswered.newBuilder() to construct.
      private TriviaAnswered(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private TriviaAnswered() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_TriviaAnswered_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_TriviaAnswered_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder.class);
      }

      private int bitField0_;
      public static final int QUESTION_ID_FIELD_NUMBER = 1;
      private int questionId_ = 0;
      /**
       * <code>optional uint32 question_id = 1;</code>
       * @return Whether the questionId field is set.
       */
      @java.lang.Override
      public boolean hasQuestionId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 question_id = 1;</code>
       * @return The questionId.
       */
      @java.lang.Override
      public int getQuestionId() {
        return questionId_;
      }

      public static final int ANSWER_INDEX_FIELD_NUMBER = 2;
      private int answerIndex_ = 0;
      /**
       * <code>optional uint32 answer_index = 2;</code>
       * @return Whether the answerIndex field is set.
       */
      @java.lang.Override
      public boolean hasAnswerIndex() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 answer_index = 2;</code>
       * @return The answerIndex.
       */
      @java.lang.Override
      public int getAnswerIndex() {
        return answerIndex_;
      }

      public static final int PARTY_QUESTIONS_CORRECT_FIELD_NUMBER = 3;
      private int partyQuestionsCorrect_ = 0;
      /**
       * <code>optional uint32 party_questions_correct = 3;</code>
       * @return Whether the partyQuestionsCorrect field is set.
       */
      @java.lang.Override
      public boolean hasPartyQuestionsCorrect() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 party_questions_correct = 3;</code>
       * @return The partyQuestionsCorrect.
       */
      @java.lang.Override
      public int getPartyQuestionsCorrect() {
        return partyQuestionsCorrect_;
      }

      public static final int PARTY_QUESTIONS_VIEWED_FIELD_NUMBER = 4;
      private int partyQuestionsViewed_ = 0;
      /**
       * <code>optional uint32 party_questions_viewed = 4;</code>
       * @return Whether the partyQuestionsViewed field is set.
       */
      @java.lang.Override
      public boolean hasPartyQuestionsViewed() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 party_questions_viewed = 4;</code>
       * @return The partyQuestionsViewed.
       */
      @java.lang.Override
      public int getPartyQuestionsViewed() {
        return partyQuestionsViewed_;
      }

      public static final int PARTY_TRIVIA_POINTS_FIELD_NUMBER = 5;
      private int partyTriviaPoints_ = 0;
      /**
       * <code>optional uint32 party_trivia_points = 5;</code>
       * @return Whether the partyTriviaPoints field is set.
       */
      @java.lang.Override
      public boolean hasPartyTriviaPoints() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 party_trivia_points = 5;</code>
       * @return The partyTriviaPoints.
       */
      @java.lang.Override
      public int getPartyTriviaPoints() {
        return partyTriviaPoints_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, questionId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, answerIndex_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, partyQuestionsCorrect_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, partyQuestionsViewed_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, partyTriviaPoints_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, questionId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, answerIndex_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, partyQuestionsCorrect_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, partyQuestionsViewed_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, partyTriviaPoints_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered) obj;

        if (hasQuestionId() != other.hasQuestionId()) return false;
        if (hasQuestionId()) {
          if (getQuestionId()
              != other.getQuestionId()) return false;
        }
        if (hasAnswerIndex() != other.hasAnswerIndex()) return false;
        if (hasAnswerIndex()) {
          if (getAnswerIndex()
              != other.getAnswerIndex()) return false;
        }
        if (hasPartyQuestionsCorrect() != other.hasPartyQuestionsCorrect()) return false;
        if (hasPartyQuestionsCorrect()) {
          if (getPartyQuestionsCorrect()
              != other.getPartyQuestionsCorrect()) return false;
        }
        if (hasPartyQuestionsViewed() != other.hasPartyQuestionsViewed()) return false;
        if (hasPartyQuestionsViewed()) {
          if (getPartyQuestionsViewed()
              != other.getPartyQuestionsViewed()) return false;
        }
        if (hasPartyTriviaPoints() != other.hasPartyTriviaPoints()) return false;
        if (hasPartyTriviaPoints()) {
          if (getPartyTriviaPoints()
              != other.getPartyTriviaPoints()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasQuestionId()) {
          hash = (37 * hash) + QUESTION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getQuestionId();
        }
        if (hasAnswerIndex()) {
          hash = (37 * hash) + ANSWER_INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getAnswerIndex();
        }
        if (hasPartyQuestionsCorrect()) {
          hash = (37 * hash) + PARTY_QUESTIONS_CORRECT_FIELD_NUMBER;
          hash = (53 * hash) + getPartyQuestionsCorrect();
        }
        if (hasPartyQuestionsViewed()) {
          hash = (37 * hash) + PARTY_QUESTIONS_VIEWED_FIELD_NUMBER;
          hash = (53 * hash) + getPartyQuestionsViewed();
        }
        if (hasPartyTriviaPoints()) {
          hash = (37 * hash) + PARTY_TRIVIA_POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPartyTriviaPoints();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAChatMessage.TriviaAnswered}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAChatMessage.TriviaAnswered)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_TriviaAnswered_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_TriviaAnswered_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          questionId_ = 0;
          answerIndex_ = 0;
          partyQuestionsCorrect_ = 0;
          partyQuestionsViewed_ = 0;
          partyTriviaPoints_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_TriviaAnswered_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.questionId_ = questionId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.answerIndex_ = answerIndex_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.partyQuestionsCorrect_ = partyQuestionsCorrect_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.partyQuestionsViewed_ = partyQuestionsViewed_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.partyTriviaPoints_ = partyTriviaPoints_;
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance()) return this;
          if (other.hasQuestionId()) {
            setQuestionId(other.getQuestionId());
          }
          if (other.hasAnswerIndex()) {
            setAnswerIndex(other.getAnswerIndex());
          }
          if (other.hasPartyQuestionsCorrect()) {
            setPartyQuestionsCorrect(other.getPartyQuestionsCorrect());
          }
          if (other.hasPartyQuestionsViewed()) {
            setPartyQuestionsViewed(other.getPartyQuestionsViewed());
          }
          if (other.hasPartyTriviaPoints()) {
            setPartyTriviaPoints(other.getPartyTriviaPoints());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  questionId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  answerIndex_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  partyQuestionsCorrect_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  partyQuestionsViewed_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  partyTriviaPoints_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int questionId_ ;
        /**
         * <code>optional uint32 question_id = 1;</code>
         * @return Whether the questionId field is set.
         */
        @java.lang.Override
        public boolean hasQuestionId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 question_id = 1;</code>
         * @return The questionId.
         */
        @java.lang.Override
        public int getQuestionId() {
          return questionId_;
        }
        /**
         * <code>optional uint32 question_id = 1;</code>
         * @param value The questionId to set.
         * @return This builder for chaining.
         */
        public Builder setQuestionId(int value) {

          questionId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 question_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearQuestionId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          questionId_ = 0;
          onChanged();
          return this;
        }

        private int answerIndex_ ;
        /**
         * <code>optional uint32 answer_index = 2;</code>
         * @return Whether the answerIndex field is set.
         */
        @java.lang.Override
        public boolean hasAnswerIndex() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 answer_index = 2;</code>
         * @return The answerIndex.
         */
        @java.lang.Override
        public int getAnswerIndex() {
          return answerIndex_;
        }
        /**
         * <code>optional uint32 answer_index = 2;</code>
         * @param value The answerIndex to set.
         * @return This builder for chaining.
         */
        public Builder setAnswerIndex(int value) {

          answerIndex_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 answer_index = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAnswerIndex() {
          bitField0_ = (bitField0_ & ~0x00000002);
          answerIndex_ = 0;
          onChanged();
          return this;
        }

        private int partyQuestionsCorrect_ ;
        /**
         * <code>optional uint32 party_questions_correct = 3;</code>
         * @return Whether the partyQuestionsCorrect field is set.
         */
        @java.lang.Override
        public boolean hasPartyQuestionsCorrect() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 party_questions_correct = 3;</code>
         * @return The partyQuestionsCorrect.
         */
        @java.lang.Override
        public int getPartyQuestionsCorrect() {
          return partyQuestionsCorrect_;
        }
        /**
         * <code>optional uint32 party_questions_correct = 3;</code>
         * @param value The partyQuestionsCorrect to set.
         * @return This builder for chaining.
         */
        public Builder setPartyQuestionsCorrect(int value) {

          partyQuestionsCorrect_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 party_questions_correct = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPartyQuestionsCorrect() {
          bitField0_ = (bitField0_ & ~0x00000004);
          partyQuestionsCorrect_ = 0;
          onChanged();
          return this;
        }

        private int partyQuestionsViewed_ ;
        /**
         * <code>optional uint32 party_questions_viewed = 4;</code>
         * @return Whether the partyQuestionsViewed field is set.
         */
        @java.lang.Override
        public boolean hasPartyQuestionsViewed() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 party_questions_viewed = 4;</code>
         * @return The partyQuestionsViewed.
         */
        @java.lang.Override
        public int getPartyQuestionsViewed() {
          return partyQuestionsViewed_;
        }
        /**
         * <code>optional uint32 party_questions_viewed = 4;</code>
         * @param value The partyQuestionsViewed to set.
         * @return This builder for chaining.
         */
        public Builder setPartyQuestionsViewed(int value) {

          partyQuestionsViewed_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 party_questions_viewed = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPartyQuestionsViewed() {
          bitField0_ = (bitField0_ & ~0x00000008);
          partyQuestionsViewed_ = 0;
          onChanged();
          return this;
        }

        private int partyTriviaPoints_ ;
        /**
         * <code>optional uint32 party_trivia_points = 5;</code>
         * @return Whether the partyTriviaPoints field is set.
         */
        @java.lang.Override
        public boolean hasPartyTriviaPoints() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 party_trivia_points = 5;</code>
         * @return The partyTriviaPoints.
         */
        @java.lang.Override
        public int getPartyTriviaPoints() {
          return partyTriviaPoints_;
        }
        /**
         * <code>optional uint32 party_trivia_points = 5;</code>
         * @param value The partyTriviaPoints to set.
         * @return This builder for chaining.
         */
        public Builder setPartyTriviaPoints(int value) {

          partyTriviaPoints_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 party_trivia_points = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearPartyTriviaPoints() {
          bitField0_ = (bitField0_ & ~0x00000010);
          partyTriviaPoints_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAChatMessage.TriviaAnswered)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAChatMessage.TriviaAnswered)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TriviaAnswered>
          PARSER = new com.google.protobuf.AbstractParser<TriviaAnswered>() {
        @java.lang.Override
        public TriviaAnswered parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TriviaAnswered> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TriviaAnswered> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PlayerDraftPickOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAChatMessage.PlayerDraftPick)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 player_id = 1 [default = -1];</code>
       * @return Whether the playerId field is set.
       */
      boolean hasPlayerId();
      /**
       * <code>optional int32 player_id = 1 [default = -1];</code>
       * @return The playerId.
       */
      int getPlayerId();

      /**
       * <code>optional int32 team = 2;</code>
       * @return Whether the team field is set.
       */
      boolean hasTeam();
      /**
       * <code>optional int32 team = 2;</code>
       * @return The team.
       */
      int getTeam();
    }
    /**
     * Protobuf type {@code CMsgDOTAChatMessage.PlayerDraftPick}
     */
    public static final class PlayerDraftPick extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAChatMessage.PlayerDraftPick)
        PlayerDraftPickOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          PlayerDraftPick.class.getName());
      }
      // Use PlayerDraftPick.newBuilder() to construct.
      private PlayerDraftPick(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PlayerDraftPick() {
        playerId_ = -1;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_PlayerDraftPick_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_PlayerDraftPick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder.class);
      }

      private int bitField0_;
      public static final int PLAYER_ID_FIELD_NUMBER = 1;
      private int playerId_ = -1;
      /**
       * <code>optional int32 player_id = 1 [default = -1];</code>
       * @return Whether the playerId field is set.
       */
      @java.lang.Override
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 player_id = 1 [default = -1];</code>
       * @return The playerId.
       */
      @java.lang.Override
      public int getPlayerId() {
        return playerId_;
      }

      public static final int TEAM_FIELD_NUMBER = 2;
      private int team_ = 0;
      /**
       * <code>optional int32 team = 2;</code>
       * @return Whether the team field is set.
       */
      @java.lang.Override
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 team = 2;</code>
       * @return The team.
       */
      @java.lang.Override
      public int getTeam() {
        return team_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, team_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, team_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick) obj;

        if (hasPlayerId() != other.hasPlayerId()) return false;
        if (hasPlayerId()) {
          if (getPlayerId()
              != other.getPlayerId()) return false;
        }
        if (hasTeam() != other.hasTeam()) return false;
        if (hasTeam()) {
          if (getTeam()
              != other.getTeam()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPlayerId()) {
          hash = (37 * hash) + PLAYER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerId();
        }
        if (hasTeam()) {
          hash = (37 * hash) + TEAM_FIELD_NUMBER;
          hash = (53 * hash) + getTeam();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAChatMessage.PlayerDraftPick}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAChatMessage.PlayerDraftPick)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_PlayerDraftPick_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_PlayerDraftPick_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          playerId_ = -1;
          team_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_PlayerDraftPick_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.playerId_ = playerId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.team_ = team_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance()) return this;
          if (other.hasPlayerId()) {
            setPlayerId(other.getPlayerId());
          }
          if (other.hasTeam()) {
            setTeam(other.getTeam());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  playerId_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  team_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int playerId_ = -1;
        /**
         * <code>optional int32 player_id = 1 [default = -1];</code>
         * @return Whether the playerId field is set.
         */
        @java.lang.Override
        public boolean hasPlayerId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 player_id = 1 [default = -1];</code>
         * @return The playerId.
         */
        @java.lang.Override
        public int getPlayerId() {
          return playerId_;
        }
        /**
         * <code>optional int32 player_id = 1 [default = -1];</code>
         * @param value The playerId to set.
         * @return This builder for chaining.
         */
        public Builder setPlayerId(int value) {

          playerId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 player_id = 1 [default = -1];</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerId_ = -1;
          onChanged();
          return this;
        }

        private int team_ ;
        /**
         * <code>optional int32 team = 2;</code>
         * @return Whether the team field is set.
         */
        @java.lang.Override
        public boolean hasTeam() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 team = 2;</code>
         * @return The team.
         */
        @java.lang.Override
        public int getTeam() {
          return team_;
        }
        /**
         * <code>optional int32 team = 2;</code>
         * @param value The team to set.
         * @return This builder for chaining.
         */
        public Builder setTeam(int value) {

          team_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 team = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeam() {
          bitField0_ = (bitField0_ & ~0x00000002);
          team_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAChatMessage.PlayerDraftPick)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAChatMessage.PlayerDraftPick)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PlayerDraftPick>
          PARSER = new com.google.protobuf.AbstractParser<PlayerDraftPick>() {
        @java.lang.Override
        public PlayerDraftPick parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PlayerDraftPick> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerDraftPick> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ChatWheelMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAChatMessage.ChatWheelMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
       * @return Whether the messageId field is set.
       */
      boolean hasMessageId();
      /**
       * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
       * @return The messageId.
       */
      int getMessageId();

      /**
       * <code>optional uint32 emoticon_id = 2;</code>
       * @return Whether the emoticonId field is set.
       */
      boolean hasEmoticonId();
      /**
       * <code>optional uint32 emoticon_id = 2;</code>
       * @return The emoticonId.
       */
      int getEmoticonId();

      /**
       * <code>optional string message_text = 3;</code>
       * @return Whether the messageText field is set.
       */
      boolean hasMessageText();
      /**
       * <code>optional string message_text = 3;</code>
       * @return The messageText.
       */
      java.lang.String getMessageText();
      /**
       * <code>optional string message_text = 3;</code>
       * @return The bytes for messageText.
       */
      com.google.protobuf.ByteString
          getMessageTextBytes();

      /**
       * <code>optional uint32 hero_badge_tier = 4;</code>
       * @return Whether the heroBadgeTier field is set.
       */
      boolean hasHeroBadgeTier();
      /**
       * <code>optional uint32 hero_badge_tier = 4;</code>
       * @return The heroBadgeTier.
       */
      int getHeroBadgeTier();
    }
    /**
     * Protobuf type {@code CMsgDOTAChatMessage.ChatWheelMessage}
     */
    public static final class ChatWheelMessage extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAChatMessage.ChatWheelMessage)
        ChatWheelMessageOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          ChatWheelMessage.class.getName());
      }
      // Use ChatWheelMessage.newBuilder() to construct.
      private ChatWheelMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ChatWheelMessage() {
        messageId_ = -1;
        messageText_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_ChatWheelMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_ChatWheelMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder.class);
      }

      private int bitField0_;
      public static final int MESSAGE_ID_FIELD_NUMBER = 1;
      private int messageId_ = -1;
      /**
       * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
       * @return Whether the messageId field is set.
       */
      @java.lang.Override
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
       * @return The messageId.
       */
      @java.lang.Override
      public int getMessageId() {
        return messageId_;
      }

      public static final int EMOTICON_ID_FIELD_NUMBER = 2;
      private int emoticonId_ = 0;
      /**
       * <code>optional uint32 emoticon_id = 2;</code>
       * @return Whether the emoticonId field is set.
       */
      @java.lang.Override
      public boolean hasEmoticonId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 emoticon_id = 2;</code>
       * @return The emoticonId.
       */
      @java.lang.Override
      public int getEmoticonId() {
        return emoticonId_;
      }

      public static final int MESSAGE_TEXT_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object messageText_ = "";
      /**
       * <code>optional string message_text = 3;</code>
       * @return Whether the messageText field is set.
       */
      @java.lang.Override
      public boolean hasMessageText() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string message_text = 3;</code>
       * @return The messageText.
       */
      @java.lang.Override
      public java.lang.String getMessageText() {
        java.lang.Object ref = messageText_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            messageText_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string message_text = 3;</code>
       * @return The bytes for messageText.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageTextBytes() {
        java.lang.Object ref = messageText_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          messageText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HERO_BADGE_TIER_FIELD_NUMBER = 4;
      private int heroBadgeTier_ = 0;
      /**
       * <code>optional uint32 hero_badge_tier = 4;</code>
       * @return Whether the heroBadgeTier field is set.
       */
      @java.lang.Override
      public boolean hasHeroBadgeTier() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 hero_badge_tier = 4;</code>
       * @return The heroBadgeTier.
       */
      @java.lang.Override
      public int getHeroBadgeTier() {
        return heroBadgeTier_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, messageId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, emoticonId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 3, messageText_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, heroBadgeTier_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, messageId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, emoticonId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(3, messageText_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, heroBadgeTier_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage) obj;

        if (hasMessageId() != other.hasMessageId()) return false;
        if (hasMessageId()) {
          if (getMessageId()
              != other.getMessageId()) return false;
        }
        if (hasEmoticonId() != other.hasEmoticonId()) return false;
        if (hasEmoticonId()) {
          if (getEmoticonId()
              != other.getEmoticonId()) return false;
        }
        if (hasMessageText() != other.hasMessageText()) return false;
        if (hasMessageText()) {
          if (!getMessageText()
              .equals(other.getMessageText())) return false;
        }
        if (hasHeroBadgeTier() != other.hasHeroBadgeTier()) return false;
        if (hasHeroBadgeTier()) {
          if (getHeroBadgeTier()
              != other.getHeroBadgeTier()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMessageId()) {
          hash = (37 * hash) + MESSAGE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getMessageId();
        }
        if (hasEmoticonId()) {
          hash = (37 * hash) + EMOTICON_ID_FIELD_NUMBER;
          hash = (53 * hash) + getEmoticonId();
        }
        if (hasMessageText()) {
          hash = (37 * hash) + MESSAGE_TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getMessageText().hashCode();
        }
        if (hasHeroBadgeTier()) {
          hash = (37 * hash) + HERO_BADGE_TIER_FIELD_NUMBER;
          hash = (53 * hash) + getHeroBadgeTier();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAChatMessage.ChatWheelMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAChatMessage.ChatWheelMessage)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_ChatWheelMessage_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_ChatWheelMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          messageId_ = -1;
          emoticonId_ = 0;
          messageText_ = "";
          heroBadgeTier_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_ChatWheelMessage_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.messageId_ = messageId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.emoticonId_ = emoticonId_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.messageText_ = messageText_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.heroBadgeTier_ = heroBadgeTier_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance()) return this;
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          if (other.hasEmoticonId()) {
            setEmoticonId(other.getEmoticonId());
          }
          if (other.hasMessageText()) {
            messageText_ = other.messageText_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          if (other.hasHeroBadgeTier()) {
            setHeroBadgeTier(other.getHeroBadgeTier());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  messageId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  emoticonId_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  messageText_ = input.readBytes();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 32: {
                  heroBadgeTier_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int messageId_ = -1;
        /**
         * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
         * @return Whether the messageId field is set.
         */
        @java.lang.Override
        public boolean hasMessageId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
         * @return The messageId.
         */
        @java.lang.Override
        public int getMessageId() {
          return messageId_;
        }
        /**
         * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
         * @param value The messageId to set.
         * @return This builder for chaining.
         */
        public Builder setMessageId(int value) {

          messageId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 message_id = 1 [default = 4294967295];</code>
         * @return This builder for chaining.
         */
        public Builder clearMessageId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          messageId_ = -1;
          onChanged();
          return this;
        }

        private int emoticonId_ ;
        /**
         * <code>optional uint32 emoticon_id = 2;</code>
         * @return Whether the emoticonId field is set.
         */
        @java.lang.Override
        public boolean hasEmoticonId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 emoticon_id = 2;</code>
         * @return The emoticonId.
         */
        @java.lang.Override
        public int getEmoticonId() {
          return emoticonId_;
        }
        /**
         * <code>optional uint32 emoticon_id = 2;</code>
         * @param value The emoticonId to set.
         * @return This builder for chaining.
         */
        public Builder setEmoticonId(int value) {

          emoticonId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 emoticon_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEmoticonId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          emoticonId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object messageText_ = "";
        /**
         * <code>optional string message_text = 3;</code>
         * @return Whether the messageText field is set.
         */
        public boolean hasMessageText() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string message_text = 3;</code>
         * @return The messageText.
         */
        public java.lang.String getMessageText() {
          java.lang.Object ref = messageText_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              messageText_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message_text = 3;</code>
         * @return The bytes for messageText.
         */
        public com.google.protobuf.ByteString
            getMessageTextBytes() {
          java.lang.Object ref = messageText_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            messageText_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message_text = 3;</code>
         * @param value The messageText to set.
         * @return This builder for chaining.
         */
        public Builder setMessageText(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          messageText_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message_text = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMessageText() {
          messageText_ = getDefaultInstance().getMessageText();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>optional string message_text = 3;</code>
         * @param value The bytes for messageText to set.
         * @return This builder for chaining.
         */
        public Builder setMessageTextBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          messageText_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }

        private int heroBadgeTier_ ;
        /**
         * <code>optional uint32 hero_badge_tier = 4;</code>
         * @return Whether the heroBadgeTier field is set.
         */
        @java.lang.Override
        public boolean hasHeroBadgeTier() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 hero_badge_tier = 4;</code>
         * @return The heroBadgeTier.
         */
        @java.lang.Override
        public int getHeroBadgeTier() {
          return heroBadgeTier_;
        }
        /**
         * <code>optional uint32 hero_badge_tier = 4;</code>
         * @param value The heroBadgeTier to set.
         * @return This builder for chaining.
         */
        public Builder setHeroBadgeTier(int value) {

          heroBadgeTier_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_badge_tier = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearHeroBadgeTier() {
          bitField0_ = (bitField0_ & ~0x00000008);
          heroBadgeTier_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAChatMessage.ChatWheelMessage)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAChatMessage.ChatWheelMessage)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ChatWheelMessage>
          PARSER = new com.google.protobuf.AbstractParser<ChatWheelMessage>() {
        @java.lang.Override
        public ChatWheelMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ChatWheelMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ChatWheelMessage> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int bitField1_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private long channelId_ = 0L;
    /**
     * <code>optional uint64 channel_id = 2;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint64 channel_id = 2;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int PERSONA_NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object personaName_ = "";
    /**
     * <code>optional string persona_name = 3;</code>
     * @return Whether the personaName field is set.
     */
    @java.lang.Override
    public boolean hasPersonaName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string persona_name = 3;</code>
     * @return The personaName.
     */
    @java.lang.Override
    public java.lang.String getPersonaName() {
      java.lang.Object ref = personaName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          personaName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string persona_name = 3;</code>
     * @return The bytes for personaName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPersonaNameBytes() {
      java.lang.Object ref = personaName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        personaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object text_ = "";
    /**
     * <code>optional string text = 4;</code>
     * @return Whether the text field is set.
     */
    @java.lang.Override
    public boolean hasText() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional string text = 4;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 4;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 5;
    private int timestamp_ = 0;
    /**
     * <code>optional uint32 timestamp = 5;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 timestamp = 5;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int SUGGEST_INVITE_ACCOUNT_ID_FIELD_NUMBER = 6;
    private int suggestInviteAccountId_ = 0;
    /**
     * <code>optional uint32 suggest_invite_account_id = 6;</code>
     * @return Whether the suggestInviteAccountId field is set.
     */
    @java.lang.Override
    public boolean hasSuggestInviteAccountId() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 suggest_invite_account_id = 6;</code>
     * @return The suggestInviteAccountId.
     */
    @java.lang.Override
    public int getSuggestInviteAccountId() {
      return suggestInviteAccountId_;
    }

    public static final int SUGGEST_INVITE_NAME_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object suggestInviteName_ = "";
    /**
     * <code>optional string suggest_invite_name = 7;</code>
     * @return Whether the suggestInviteName field is set.
     */
    @java.lang.Override
    public boolean hasSuggestInviteName() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional string suggest_invite_name = 7;</code>
     * @return The suggestInviteName.
     */
    @java.lang.Override
    public java.lang.String getSuggestInviteName() {
      java.lang.Object ref = suggestInviteName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          suggestInviteName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string suggest_invite_name = 7;</code>
     * @return The bytes for suggestInviteName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSuggestInviteNameBytes() {
      java.lang.Object ref = suggestInviteName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        suggestInviteName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FANTASY_DRAFT_OWNER_ACCOUNT_ID_FIELD_NUMBER = 8;
    private int fantasyDraftOwnerAccountId_ = 0;
    /**
     * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
     * @return Whether the fantasyDraftOwnerAccountId field is set.
     */
    @java.lang.Override
    public boolean hasFantasyDraftOwnerAccountId() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
     * @return The fantasyDraftOwnerAccountId.
     */
    @java.lang.Override
    public int getFantasyDraftOwnerAccountId() {
      return fantasyDraftOwnerAccountId_;
    }

    public static final int FANTASY_DRAFT_PLAYER_ACCOUNT_ID_FIELD_NUMBER = 9;
    private int fantasyDraftPlayerAccountId_ = 0;
    /**
     * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
     * @return Whether the fantasyDraftPlayerAccountId field is set.
     */
    @java.lang.Override
    public boolean hasFantasyDraftPlayerAccountId() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
     * @return The fantasyDraftPlayerAccountId.
     */
    @java.lang.Override
    public int getFantasyDraftPlayerAccountId() {
      return fantasyDraftPlayerAccountId_;
    }

    public static final int EVENT_ID_FIELD_NUMBER = 10;
    private int eventId_ = 0;
    /**
     * <code>optional uint32 event_id = 10;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint32 event_id = 10;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public int getEventId() {
      return eventId_;
    }

    public static final int SUGGEST_INVITE_TO_LOBBY_FIELD_NUMBER = 11;
    private boolean suggestInviteToLobby_ = false;
    /**
     * <code>optional bool suggest_invite_to_lobby = 11;</code>
     * @return Whether the suggestInviteToLobby field is set.
     */
    @java.lang.Override
    public boolean hasSuggestInviteToLobby() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional bool suggest_invite_to_lobby = 11;</code>
     * @return The suggestInviteToLobby.
     */
    @java.lang.Override
    public boolean getSuggestInviteToLobby() {
      return suggestInviteToLobby_;
    }

    public static final int COIN_FLIP_FIELD_NUMBER = 13;
    private boolean coinFlip_ = false;
    /**
     * <code>optional bool coin_flip = 13;</code>
     * @return Whether the coinFlip field is set.
     */
    @java.lang.Override
    public boolean hasCoinFlip() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional bool coin_flip = 13;</code>
     * @return The coinFlip.
     */
    @java.lang.Override
    public boolean getCoinFlip() {
      return coinFlip_;
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 14;
    private int playerId_ = -1;
    /**
     * <code>optional int32 player_id = 14 [default = -1];</code>
     * @return Whether the playerId field is set.
     */
    @java.lang.Override
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional int32 player_id = 14 [default = -1];</code>
     * @return The playerId.
     */
    @java.lang.Override
    public int getPlayerId() {
      return playerId_;
    }

    public static final int SHARE_PROFILE_ACCOUNT_ID_FIELD_NUMBER = 15;
    private int shareProfileAccountId_ = 0;
    /**
     * <code>optional uint32 share_profile_account_id = 15;</code>
     * @return Whether the shareProfileAccountId field is set.
     */
    @java.lang.Override
    public boolean hasShareProfileAccountId() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional uint32 share_profile_account_id = 15;</code>
     * @return The shareProfileAccountId.
     */
    @java.lang.Override
    public int getShareProfileAccountId() {
      return shareProfileAccountId_;
    }

    public static final int CHANNEL_USER_ID_FIELD_NUMBER = 16;
    private int channelUserId_ = 0;
    /**
     * <code>optional uint32 channel_user_id = 16;</code>
     * @return Whether the channelUserId field is set.
     */
    @java.lang.Override
    public boolean hasChannelUserId() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional uint32 channel_user_id = 16;</code>
     * @return The channelUserId.
     */
    @java.lang.Override
    public int getChannelUserId() {
      return channelUserId_;
    }

    public static final int DICE_ROLL_FIELD_NUMBER = 17;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll diceRoll_;
    /**
     * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
     * @return Whether the diceRoll field is set.
     */
    @java.lang.Override
    public boolean hasDiceRoll() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
     * @return The diceRoll.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll getDiceRoll() {
      return diceRoll_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance() : diceRoll_;
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder getDiceRollOrBuilder() {
      return diceRoll_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance() : diceRoll_;
    }

    public static final int SHARE_PARTY_ID_FIELD_NUMBER = 18;
    private long sharePartyId_ = 0L;
    /**
     * <code>optional uint64 share_party_id = 18;</code>
     * @return Whether the sharePartyId field is set.
     */
    @java.lang.Override
    public boolean hasSharePartyId() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional uint64 share_party_id = 18;</code>
     * @return The sharePartyId.
     */
    @java.lang.Override
    public long getSharePartyId() {
      return sharePartyId_;
    }

    public static final int SHARE_LOBBY_ID_FIELD_NUMBER = 19;
    private long shareLobbyId_ = 0L;
    /**
     * <code>optional uint64 share_lobby_id = 19;</code>
     * @return Whether the shareLobbyId field is set.
     */
    @java.lang.Override
    public boolean hasShareLobbyId() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint64 share_lobby_id = 19;</code>
     * @return The shareLobbyId.
     */
    @java.lang.Override
    public long getShareLobbyId() {
      return shareLobbyId_;
    }

    public static final int SHARE_LOBBY_CUSTOM_GAME_ID_FIELD_NUMBER = 20;
    private long shareLobbyCustomGameId_ = 0L;
    /**
     * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
     * @return Whether the shareLobbyCustomGameId field is set.
     */
    @java.lang.Override
    public boolean hasShareLobbyCustomGameId() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
     * @return The shareLobbyCustomGameId.
     */
    @java.lang.Override
    public long getShareLobbyCustomGameId() {
      return shareLobbyCustomGameId_;
    }

    public static final int SHARE_LOBBY_PASSKEY_FIELD_NUMBER = 21;
    @SuppressWarnings("serial")
    private volatile java.lang.Object shareLobbyPasskey_ = "";
    /**
     * <code>optional string share_lobby_passkey = 21;</code>
     * @return Whether the shareLobbyPasskey field is set.
     */
    @java.lang.Override
    public boolean hasShareLobbyPasskey() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional string share_lobby_passkey = 21;</code>
     * @return The shareLobbyPasskey.
     */
    @java.lang.Override
    public java.lang.String getShareLobbyPasskey() {
      java.lang.Object ref = shareLobbyPasskey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shareLobbyPasskey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string share_lobby_passkey = 21;</code>
     * @return The bytes for shareLobbyPasskey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShareLobbyPasskeyBytes() {
      java.lang.Object ref = shareLobbyPasskey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shareLobbyPasskey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIVATE_CHAT_CHANNEL_ID_FIELD_NUMBER = 22;
    private int privateChatChannelId_ = 0;
    /**
     * <code>optional uint32 private_chat_channel_id = 22;</code>
     * @return Whether the privateChatChannelId field is set.
     */
    @java.lang.Override
    public boolean hasPrivateChatChannelId() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional uint32 private_chat_channel_id = 22;</code>
     * @return The privateChatChannelId.
     */
    @java.lang.Override
    public int getPrivateChatChannelId() {
      return privateChatChannelId_;
    }

    public static final int STATUS_FIELD_NUMBER = 23;
    private int status_ = 0;
    /**
     * <code>optional uint32 status = 23;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>optional uint32 status = 23;</code>
     * @return The status.
     */
    @java.lang.Override
    public int getStatus() {
      return status_;
    }

    public static final int LEGACY_BATTLE_CUP_VICTORY_FIELD_NUMBER = 24;
    private boolean legacyBattleCupVictory_ = false;
    /**
     * <code>optional bool legacy_battle_cup_victory = 24;</code>
     * @return Whether the legacyBattleCupVictory field is set.
     */
    @java.lang.Override
    public boolean hasLegacyBattleCupVictory() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <code>optional bool legacy_battle_cup_victory = 24;</code>
     * @return The legacyBattleCupVictory.
     */
    @java.lang.Override
    public boolean getLegacyBattleCupVictory() {
      return legacyBattleCupVictory_;
    }

    public static final int BATTLE_CUP_STREAK_FIELD_NUMBER = 29;
    private int battleCupStreak_ = 0;
    /**
     * <code>optional uint32 battle_cup_streak = 29;</code>
     * @return Whether the battleCupStreak field is set.
     */
    @java.lang.Override
    public boolean hasBattleCupStreak() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <code>optional uint32 battle_cup_streak = 29;</code>
     * @return The battleCupStreak.
     */
    @java.lang.Override
    public int getBattleCupStreak() {
      return battleCupStreak_;
    }

    public static final int BADGE_LEVEL_FIELD_NUMBER = 25;
    private int badgeLevel_ = 0;
    /**
     * <code>optional uint32 badge_level = 25;</code>
     * @return Whether the badgeLevel field is set.
     */
    @java.lang.Override
    public boolean hasBadgeLevel() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <code>optional uint32 badge_level = 25;</code>
     * @return The badgeLevel.
     */
    @java.lang.Override
    public int getBadgeLevel() {
      return badgeLevel_;
    }

    public static final int SUGGEST_PICK_HERO_ID_FIELD_NUMBER = 26;
    private int suggestPickHeroId_ = 0;
    /**
     * <code>optional int32 suggest_pick_hero_id = 26;</code>
     * @return Whether the suggestPickHeroId field is set.
     */
    @java.lang.Override
    public boolean hasSuggestPickHeroId() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <code>optional int32 suggest_pick_hero_id = 26;</code>
     * @return The suggestPickHeroId.
     */
    @java.lang.Override
    public int getSuggestPickHeroId() {
      return suggestPickHeroId_;
    }

    public static final int SUGGEST_PICK_HERO_ROLE_FIELD_NUMBER = 27;
    @SuppressWarnings("serial")
    private volatile java.lang.Object suggestPickHeroRole_ = "";
    /**
     * <code>optional string suggest_pick_hero_role = 27;</code>
     * @return Whether the suggestPickHeroRole field is set.
     */
    @java.lang.Override
    public boolean hasSuggestPickHeroRole() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <code>optional string suggest_pick_hero_role = 27;</code>
     * @return The suggestPickHeroRole.
     */
    @java.lang.Override
    public java.lang.String getSuggestPickHeroRole() {
      java.lang.Object ref = suggestPickHeroRole_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          suggestPickHeroRole_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string suggest_pick_hero_role = 27;</code>
     * @return The bytes for suggestPickHeroRole.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSuggestPickHeroRoleBytes() {
      java.lang.Object ref = suggestPickHeroRole_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        suggestPickHeroRole_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUGGEST_BAN_HERO_ID_FIELD_NUMBER = 30;
    private int suggestBanHeroId_ = 0;
    /**
     * <code>optional int32 suggest_ban_hero_id = 30;</code>
     * @return Whether the suggestBanHeroId field is set.
     */
    @java.lang.Override
    public boolean hasSuggestBanHeroId() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <code>optional int32 suggest_ban_hero_id = 30;</code>
     * @return The suggestBanHeroId.
     */
    @java.lang.Override
    public int getSuggestBanHeroId() {
      return suggestBanHeroId_;
    }

    public static final int TRIVIA_ANSWER_FIELD_NUMBER = 32;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered triviaAnswer_;
    /**
     * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
     * @return Whether the triviaAnswer field is set.
     */
    @java.lang.Override
    public boolean hasTriviaAnswer() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
     * @return The triviaAnswer.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered getTriviaAnswer() {
      return triviaAnswer_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance() : triviaAnswer_;
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder getTriviaAnswerOrBuilder() {
      return triviaAnswer_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance() : triviaAnswer_;
    }

    public static final int REQUESTED_ABILITY_ID_FIELD_NUMBER = 33;
    private int requestedAbilityId_ = -1;
    /**
     * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
     * @return Whether the requestedAbilityId field is set.
     */
    @java.lang.Override
    public boolean hasRequestedAbilityId() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
     * @return The requestedAbilityId.
     */
    @java.lang.Override
    public int getRequestedAbilityId() {
      return requestedAbilityId_;
    }

    public static final int CHAT_FLAGS_FIELD_NUMBER = 34;
    private int chatFlags_ = 0;
    /**
     * <code>optional uint32 chat_flags = 34;</code>
     * @return Whether the chatFlags field is set.
     */
    @java.lang.Override
    public boolean hasChatFlags() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <code>optional uint32 chat_flags = 34;</code>
     * @return The chatFlags.
     */
    @java.lang.Override
    public int getChatFlags() {
      return chatFlags_;
    }

    public static final int STARTED_FINDING_MATCH_FIELD_NUMBER = 35;
    private boolean startedFindingMatch_ = false;
    /**
     * <code>optional bool started_finding_match = 35;</code>
     * @return Whether the startedFindingMatch field is set.
     */
    @java.lang.Override
    public boolean hasStartedFindingMatch() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <code>optional bool started_finding_match = 35;</code>
     * @return The startedFindingMatch.
     */
    @java.lang.Override
    public boolean getStartedFindingMatch() {
      return startedFindingMatch_;
    }

    public static final int CTRL_IS_DOWN_FIELD_NUMBER = 36;
    private boolean ctrlIsDown_ = false;
    /**
     * <code>optional bool ctrl_is_down = 36;</code>
     * @return Whether the ctrlIsDown field is set.
     */
    @java.lang.Override
    public boolean hasCtrlIsDown() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool ctrl_is_down = 36;</code>
     * @return The ctrlIsDown.
     */
    @java.lang.Override
    public boolean getCtrlIsDown() {
      return ctrlIsDown_;
    }

    public static final int FAVORITE_TEAM_ID_FIELD_NUMBER = 37;
    private int favoriteTeamId_ = 0;
    /**
     * <code>optional uint32 favorite_team_id = 37;</code>
     * @return Whether the favoriteTeamId field is set.
     */
    @java.lang.Override
    public boolean hasFavoriteTeamId() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 favorite_team_id = 37;</code>
     * @return The favoriteTeamId.
     */
    @java.lang.Override
    public int getFavoriteTeamId() {
      return favoriteTeamId_;
    }

    public static final int FAVORITE_TEAM_QUALITY_FIELD_NUMBER = 38;
    private int favoriteTeamQuality_ = 0;
    /**
     * <code>optional uint32 favorite_team_quality = 38;</code>
     * @return Whether the favoriteTeamQuality field is set.
     */
    @java.lang.Override
    public boolean hasFavoriteTeamQuality() {
      return ((bitField1_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 favorite_team_quality = 38;</code>
     * @return The favoriteTeamQuality.
     */
    @java.lang.Override
    public int getFavoriteTeamQuality() {
      return favoriteTeamQuality_;
    }

    public static final int SUGGEST_PLAYER_DRAFT_PICK_FIELD_NUMBER = 39;
    private int suggestPlayerDraftPick_ = -1;
    /**
     * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
     * @return Whether the suggestPlayerDraftPick field is set.
     */
    @java.lang.Override
    public boolean hasSuggestPlayerDraftPick() {
      return ((bitField1_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
     * @return The suggestPlayerDraftPick.
     */
    @java.lang.Override
    public int getSuggestPlayerDraftPick() {
      return suggestPlayerDraftPick_;
    }

    public static final int PLAYER_DRAFT_PICK_FIELD_NUMBER = 40;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick playerDraftPick_;
    /**
     * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
     * @return Whether the playerDraftPick field is set.
     */
    @java.lang.Override
    public boolean hasPlayerDraftPick() {
      return ((bitField1_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
     * @return The playerDraftPick.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick getPlayerDraftPick() {
      return playerDraftPick_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance() : playerDraftPick_;
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder getPlayerDraftPickOrBuilder() {
      return playerDraftPick_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance() : playerDraftPick_;
    }

    public static final int CHAT_WHEEL_MESSAGE_FIELD_NUMBER = 41;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage chatWheelMessage_;
    /**
     * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
     * @return Whether the chatWheelMessage field is set.
     */
    @java.lang.Override
    public boolean hasChatWheelMessage() {
      return ((bitField1_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
     * @return The chatWheelMessage.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage getChatWheelMessage() {
      return chatWheelMessage_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance() : chatWheelMessage_;
    }
    /**
     * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder getChatWheelMessageOrBuilder() {
      return chatWheelMessage_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance() : chatWheelMessage_;
    }

    public static final int EVENT_LEVEL_FIELD_NUMBER = 42;
    private int eventLevel_ = 0;
    /**
     * <code>optional uint32 event_level = 42;</code>
     * @return Whether the eventLevel field is set.
     */
    @java.lang.Override
    public boolean hasEventLevel() {
      return ((bitField1_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 event_level = 42;</code>
     * @return The eventLevel.
     */
    @java.lang.Override
    public int getEventLevel() {
      return eventLevel_;
    }

    public static final int SUGGEST_PICK_HERO_FACET_FIELD_NUMBER = 43;
    private int suggestPickHeroFacet_ = 0;
    /**
     * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
     * @return Whether the suggestPickHeroFacet field is set.
     */
    @java.lang.Override
    public boolean hasSuggestPickHeroFacet() {
      return ((bitField1_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
     * @return The suggestPickHeroFacet.
     */
    @java.lang.Override
    public int getSuggestPickHeroFacet() {
      return suggestPickHeroFacet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, channelId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, personaName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, text_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, timestamp_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, suggestInviteAccountId_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, suggestInviteName_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, fantasyDraftOwnerAccountId_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(9, fantasyDraftPlayerAccountId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(10, eventId_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeBool(11, suggestInviteToLobby_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(13, coinFlip_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(14, playerId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(15, shareProfileAccountId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(16, channelUserId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeMessage(17, getDiceRoll());
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeUInt64(18, sharePartyId_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeUInt64(19, shareLobbyId_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeUInt64(20, shareLobbyCustomGameId_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 21, shareLobbyPasskey_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeUInt32(22, privateChatChannelId_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeUInt32(23, status_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeBool(24, legacyBattleCupVictory_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        output.writeUInt32(25, badgeLevel_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        output.writeInt32(26, suggestPickHeroId_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 27, suggestPickHeroRole_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        output.writeUInt32(29, battleCupStreak_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        output.writeInt32(30, suggestBanHeroId_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        output.writeMessage(32, getTriviaAnswer());
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        output.writeInt32(33, requestedAbilityId_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        output.writeUInt32(34, chatFlags_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        output.writeBool(35, startedFindingMatch_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        output.writeBool(36, ctrlIsDown_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        output.writeUInt32(37, favoriteTeamId_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        output.writeUInt32(38, favoriteTeamQuality_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        output.writeInt32(39, suggestPlayerDraftPick_);
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        output.writeMessage(40, getPlayerDraftPick());
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        output.writeMessage(41, getChatWheelMessage());
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        output.writeUInt32(42, eventLevel_);
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        output.writeUInt32(43, suggestPickHeroFacet_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, channelId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, personaName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, text_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, timestamp_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, suggestInviteAccountId_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, suggestInviteName_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, fantasyDraftOwnerAccountId_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, fantasyDraftPlayerAccountId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, eventId_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, suggestInviteToLobby_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, coinFlip_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, playerId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, shareProfileAccountId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, channelUserId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getDiceRoll());
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, sharePartyId_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(19, shareLobbyId_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(20, shareLobbyCustomGameId_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(21, shareLobbyPasskey_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, privateChatChannelId_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, status_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, legacyBattleCupVictory_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, badgeLevel_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, suggestPickHeroId_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(27, suggestPickHeroRole_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, battleCupStreak_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, suggestBanHeroId_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getTriviaAnswer());
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, requestedAbilityId_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, chatFlags_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(35, startedFindingMatch_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, ctrlIsDown_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(37, favoriteTeamId_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, favoriteTeamQuality_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, suggestPlayerDraftPick_);
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getPlayerDraftPick());
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getChatWheelMessage());
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(42, eventLevel_);
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(43, suggestPickHeroFacet_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage) obj;

      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasPersonaName() != other.hasPersonaName()) return false;
      if (hasPersonaName()) {
        if (!getPersonaName()
            .equals(other.getPersonaName())) return false;
      }
      if (hasText() != other.hasText()) return false;
      if (hasText()) {
        if (!getText()
            .equals(other.getText())) return false;
      }
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (getTimestamp()
            != other.getTimestamp()) return false;
      }
      if (hasSuggestInviteAccountId() != other.hasSuggestInviteAccountId()) return false;
      if (hasSuggestInviteAccountId()) {
        if (getSuggestInviteAccountId()
            != other.getSuggestInviteAccountId()) return false;
      }
      if (hasSuggestInviteName() != other.hasSuggestInviteName()) return false;
      if (hasSuggestInviteName()) {
        if (!getSuggestInviteName()
            .equals(other.getSuggestInviteName())) return false;
      }
      if (hasFantasyDraftOwnerAccountId() != other.hasFantasyDraftOwnerAccountId()) return false;
      if (hasFantasyDraftOwnerAccountId()) {
        if (getFantasyDraftOwnerAccountId()
            != other.getFantasyDraftOwnerAccountId()) return false;
      }
      if (hasFantasyDraftPlayerAccountId() != other.hasFantasyDraftPlayerAccountId()) return false;
      if (hasFantasyDraftPlayerAccountId()) {
        if (getFantasyDraftPlayerAccountId()
            != other.getFantasyDraftPlayerAccountId()) return false;
      }
      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasSuggestInviteToLobby() != other.hasSuggestInviteToLobby()) return false;
      if (hasSuggestInviteToLobby()) {
        if (getSuggestInviteToLobby()
            != other.getSuggestInviteToLobby()) return false;
      }
      if (hasCoinFlip() != other.hasCoinFlip()) return false;
      if (hasCoinFlip()) {
        if (getCoinFlip()
            != other.getCoinFlip()) return false;
      }
      if (hasPlayerId() != other.hasPlayerId()) return false;
      if (hasPlayerId()) {
        if (getPlayerId()
            != other.getPlayerId()) return false;
      }
      if (hasShareProfileAccountId() != other.hasShareProfileAccountId()) return false;
      if (hasShareProfileAccountId()) {
        if (getShareProfileAccountId()
            != other.getShareProfileAccountId()) return false;
      }
      if (hasChannelUserId() != other.hasChannelUserId()) return false;
      if (hasChannelUserId()) {
        if (getChannelUserId()
            != other.getChannelUserId()) return false;
      }
      if (hasDiceRoll() != other.hasDiceRoll()) return false;
      if (hasDiceRoll()) {
        if (!getDiceRoll()
            .equals(other.getDiceRoll())) return false;
      }
      if (hasSharePartyId() != other.hasSharePartyId()) return false;
      if (hasSharePartyId()) {
        if (getSharePartyId()
            != other.getSharePartyId()) return false;
      }
      if (hasShareLobbyId() != other.hasShareLobbyId()) return false;
      if (hasShareLobbyId()) {
        if (getShareLobbyId()
            != other.getShareLobbyId()) return false;
      }
      if (hasShareLobbyCustomGameId() != other.hasShareLobbyCustomGameId()) return false;
      if (hasShareLobbyCustomGameId()) {
        if (getShareLobbyCustomGameId()
            != other.getShareLobbyCustomGameId()) return false;
      }
      if (hasShareLobbyPasskey() != other.hasShareLobbyPasskey()) return false;
      if (hasShareLobbyPasskey()) {
        if (!getShareLobbyPasskey()
            .equals(other.getShareLobbyPasskey())) return false;
      }
      if (hasPrivateChatChannelId() != other.hasPrivateChatChannelId()) return false;
      if (hasPrivateChatChannelId()) {
        if (getPrivateChatChannelId()
            != other.getPrivateChatChannelId()) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (getStatus()
            != other.getStatus()) return false;
      }
      if (hasLegacyBattleCupVictory() != other.hasLegacyBattleCupVictory()) return false;
      if (hasLegacyBattleCupVictory()) {
        if (getLegacyBattleCupVictory()
            != other.getLegacyBattleCupVictory()) return false;
      }
      if (hasBattleCupStreak() != other.hasBattleCupStreak()) return false;
      if (hasBattleCupStreak()) {
        if (getBattleCupStreak()
            != other.getBattleCupStreak()) return false;
      }
      if (hasBadgeLevel() != other.hasBadgeLevel()) return false;
      if (hasBadgeLevel()) {
        if (getBadgeLevel()
            != other.getBadgeLevel()) return false;
      }
      if (hasSuggestPickHeroId() != other.hasSuggestPickHeroId()) return false;
      if (hasSuggestPickHeroId()) {
        if (getSuggestPickHeroId()
            != other.getSuggestPickHeroId()) return false;
      }
      if (hasSuggestPickHeroRole() != other.hasSuggestPickHeroRole()) return false;
      if (hasSuggestPickHeroRole()) {
        if (!getSuggestPickHeroRole()
            .equals(other.getSuggestPickHeroRole())) return false;
      }
      if (hasSuggestBanHeroId() != other.hasSuggestBanHeroId()) return false;
      if (hasSuggestBanHeroId()) {
        if (getSuggestBanHeroId()
            != other.getSuggestBanHeroId()) return false;
      }
      if (hasTriviaAnswer() != other.hasTriviaAnswer()) return false;
      if (hasTriviaAnswer()) {
        if (!getTriviaAnswer()
            .equals(other.getTriviaAnswer())) return false;
      }
      if (hasRequestedAbilityId() != other.hasRequestedAbilityId()) return false;
      if (hasRequestedAbilityId()) {
        if (getRequestedAbilityId()
            != other.getRequestedAbilityId()) return false;
      }
      if (hasChatFlags() != other.hasChatFlags()) return false;
      if (hasChatFlags()) {
        if (getChatFlags()
            != other.getChatFlags()) return false;
      }
      if (hasStartedFindingMatch() != other.hasStartedFindingMatch()) return false;
      if (hasStartedFindingMatch()) {
        if (getStartedFindingMatch()
            != other.getStartedFindingMatch()) return false;
      }
      if (hasCtrlIsDown() != other.hasCtrlIsDown()) return false;
      if (hasCtrlIsDown()) {
        if (getCtrlIsDown()
            != other.getCtrlIsDown()) return false;
      }
      if (hasFavoriteTeamId() != other.hasFavoriteTeamId()) return false;
      if (hasFavoriteTeamId()) {
        if (getFavoriteTeamId()
            != other.getFavoriteTeamId()) return false;
      }
      if (hasFavoriteTeamQuality() != other.hasFavoriteTeamQuality()) return false;
      if (hasFavoriteTeamQuality()) {
        if (getFavoriteTeamQuality()
            != other.getFavoriteTeamQuality()) return false;
      }
      if (hasSuggestPlayerDraftPick() != other.hasSuggestPlayerDraftPick()) return false;
      if (hasSuggestPlayerDraftPick()) {
        if (getSuggestPlayerDraftPick()
            != other.getSuggestPlayerDraftPick()) return false;
      }
      if (hasPlayerDraftPick() != other.hasPlayerDraftPick()) return false;
      if (hasPlayerDraftPick()) {
        if (!getPlayerDraftPick()
            .equals(other.getPlayerDraftPick())) return false;
      }
      if (hasChatWheelMessage() != other.hasChatWheelMessage()) return false;
      if (hasChatWheelMessage()) {
        if (!getChatWheelMessage()
            .equals(other.getChatWheelMessage())) return false;
      }
      if (hasEventLevel() != other.hasEventLevel()) return false;
      if (hasEventLevel()) {
        if (getEventLevel()
            != other.getEventLevel()) return false;
      }
      if (hasSuggestPickHeroFacet() != other.hasSuggestPickHeroFacet()) return false;
      if (hasSuggestPickHeroFacet()) {
        if (getSuggestPickHeroFacet()
            != other.getSuggestPickHeroFacet()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (hasPersonaName()) {
        hash = (37 * hash) + PERSONA_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPersonaName().hashCode();
      }
      if (hasText()) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasSuggestInviteAccountId()) {
        hash = (37 * hash) + SUGGEST_INVITE_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestInviteAccountId();
      }
      if (hasSuggestInviteName()) {
        hash = (37 * hash) + SUGGEST_INVITE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestInviteName().hashCode();
      }
      if (hasFantasyDraftOwnerAccountId()) {
        hash = (37 * hash) + FANTASY_DRAFT_OWNER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyDraftOwnerAccountId();
      }
      if (hasFantasyDraftPlayerAccountId()) {
        hash = (37 * hash) + FANTASY_DRAFT_PLAYER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyDraftPlayerAccountId();
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEventId();
      }
      if (hasSuggestInviteToLobby()) {
        hash = (37 * hash) + SUGGEST_INVITE_TO_LOBBY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSuggestInviteToLobby());
      }
      if (hasCoinFlip()) {
        hash = (37 * hash) + COIN_FLIP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCoinFlip());
      }
      if (hasPlayerId()) {
        hash = (37 * hash) + PLAYER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerId();
      }
      if (hasShareProfileAccountId()) {
        hash = (37 * hash) + SHARE_PROFILE_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getShareProfileAccountId();
      }
      if (hasChannelUserId()) {
        hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUserId();
      }
      if (hasDiceRoll()) {
        hash = (37 * hash) + DICE_ROLL_FIELD_NUMBER;
        hash = (53 * hash) + getDiceRoll().hashCode();
      }
      if (hasSharePartyId()) {
        hash = (37 * hash) + SHARE_PARTY_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSharePartyId());
      }
      if (hasShareLobbyId()) {
        hash = (37 * hash) + SHARE_LOBBY_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getShareLobbyId());
      }
      if (hasShareLobbyCustomGameId()) {
        hash = (37 * hash) + SHARE_LOBBY_CUSTOM_GAME_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getShareLobbyCustomGameId());
      }
      if (hasShareLobbyPasskey()) {
        hash = (37 * hash) + SHARE_LOBBY_PASSKEY_FIELD_NUMBER;
        hash = (53 * hash) + getShareLobbyPasskey().hashCode();
      }
      if (hasPrivateChatChannelId()) {
        hash = (37 * hash) + PRIVATE_CHAT_CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateChatChannelId();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus();
      }
      if (hasLegacyBattleCupVictory()) {
        hash = (37 * hash) + LEGACY_BATTLE_CUP_VICTORY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLegacyBattleCupVictory());
      }
      if (hasBattleCupStreak()) {
        hash = (37 * hash) + BATTLE_CUP_STREAK_FIELD_NUMBER;
        hash = (53 * hash) + getBattleCupStreak();
      }
      if (hasBadgeLevel()) {
        hash = (37 * hash) + BADGE_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getBadgeLevel();
      }
      if (hasSuggestPickHeroId()) {
        hash = (37 * hash) + SUGGEST_PICK_HERO_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestPickHeroId();
      }
      if (hasSuggestPickHeroRole()) {
        hash = (37 * hash) + SUGGEST_PICK_HERO_ROLE_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestPickHeroRole().hashCode();
      }
      if (hasSuggestBanHeroId()) {
        hash = (37 * hash) + SUGGEST_BAN_HERO_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestBanHeroId();
      }
      if (hasTriviaAnswer()) {
        hash = (37 * hash) + TRIVIA_ANSWER_FIELD_NUMBER;
        hash = (53 * hash) + getTriviaAnswer().hashCode();
      }
      if (hasRequestedAbilityId()) {
        hash = (37 * hash) + REQUESTED_ABILITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRequestedAbilityId();
      }
      if (hasChatFlags()) {
        hash = (37 * hash) + CHAT_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getChatFlags();
      }
      if (hasStartedFindingMatch()) {
        hash = (37 * hash) + STARTED_FINDING_MATCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getStartedFindingMatch());
      }
      if (hasCtrlIsDown()) {
        hash = (37 * hash) + CTRL_IS_DOWN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCtrlIsDown());
      }
      if (hasFavoriteTeamId()) {
        hash = (37 * hash) + FAVORITE_TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFavoriteTeamId();
      }
      if (hasFavoriteTeamQuality()) {
        hash = (37 * hash) + FAVORITE_TEAM_QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getFavoriteTeamQuality();
      }
      if (hasSuggestPlayerDraftPick()) {
        hash = (37 * hash) + SUGGEST_PLAYER_DRAFT_PICK_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestPlayerDraftPick();
      }
      if (hasPlayerDraftPick()) {
        hash = (37 * hash) + PLAYER_DRAFT_PICK_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerDraftPick().hashCode();
      }
      if (hasChatWheelMessage()) {
        hash = (37 * hash) + CHAT_WHEEL_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getChatWheelMessage().hashCode();
      }
      if (hasEventLevel()) {
        hash = (37 * hash) + EVENT_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getEventLevel();
      }
      if (hasSuggestPickHeroFacet()) {
        hash = (37 * hash) + SUGGEST_PICK_HERO_FACET_FIELD_NUMBER;
        hash = (53 * hash) + getSuggestPickHeroFacet();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatMessage)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDiceRollFieldBuilder();
          getTriviaAnswerFieldBuilder();
          getPlayerDraftPickFieldBuilder();
          getChatWheelMessageFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        accountId_ = 0;
        channelId_ = 0L;
        personaName_ = "";
        text_ = "";
        timestamp_ = 0;
        suggestInviteAccountId_ = 0;
        suggestInviteName_ = "";
        fantasyDraftOwnerAccountId_ = 0;
        fantasyDraftPlayerAccountId_ = 0;
        eventId_ = 0;
        suggestInviteToLobby_ = false;
        coinFlip_ = false;
        playerId_ = -1;
        shareProfileAccountId_ = 0;
        channelUserId_ = 0;
        diceRoll_ = null;
        if (diceRollBuilder_ != null) {
          diceRollBuilder_.dispose();
          diceRollBuilder_ = null;
        }
        sharePartyId_ = 0L;
        shareLobbyId_ = 0L;
        shareLobbyCustomGameId_ = 0L;
        shareLobbyPasskey_ = "";
        privateChatChannelId_ = 0;
        status_ = 0;
        legacyBattleCupVictory_ = false;
        battleCupStreak_ = 0;
        badgeLevel_ = 0;
        suggestPickHeroId_ = 0;
        suggestPickHeroRole_ = "";
        suggestBanHeroId_ = 0;
        triviaAnswer_ = null;
        if (triviaAnswerBuilder_ != null) {
          triviaAnswerBuilder_.dispose();
          triviaAnswerBuilder_ = null;
        }
        requestedAbilityId_ = -1;
        chatFlags_ = 0;
        startedFindingMatch_ = false;
        ctrlIsDown_ = false;
        favoriteTeamId_ = 0;
        favoriteTeamQuality_ = 0;
        suggestPlayerDraftPick_ = -1;
        playerDraftPick_ = null;
        if (playerDraftPickBuilder_ != null) {
          playerDraftPickBuilder_.dispose();
          playerDraftPickBuilder_ = null;
        }
        chatWheelMessage_ = null;
        if (chatWheelMessageBuilder_ != null) {
          chatWheelMessageBuilder_.dispose();
          chatWheelMessageBuilder_ = null;
        }
        eventLevel_ = 0;
        suggestPickHeroFacet_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMessage_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.personaName_ = personaName_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.text_ = text_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.suggestInviteAccountId_ = suggestInviteAccountId_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.suggestInviteName_ = suggestInviteName_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.fantasyDraftOwnerAccountId_ = fantasyDraftOwnerAccountId_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.fantasyDraftPlayerAccountId_ = fantasyDraftPlayerAccountId_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.suggestInviteToLobby_ = suggestInviteToLobby_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.coinFlip_ = coinFlip_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.playerId_ = playerId_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.shareProfileAccountId_ = shareProfileAccountId_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.channelUserId_ = channelUserId_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.diceRoll_ = diceRollBuilder_ == null
              ? diceRoll_
              : diceRollBuilder_.build();
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.sharePartyId_ = sharePartyId_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.shareLobbyId_ = shareLobbyId_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.shareLobbyCustomGameId_ = shareLobbyCustomGameId_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.shareLobbyPasskey_ = shareLobbyPasskey_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.privateChatChannelId_ = privateChatChannelId_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.status_ = status_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.legacyBattleCupVictory_ = legacyBattleCupVictory_;
          to_bitField0_ |= 0x00400000;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.battleCupStreak_ = battleCupStreak_;
          to_bitField0_ |= 0x00800000;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.badgeLevel_ = badgeLevel_;
          to_bitField0_ |= 0x01000000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.suggestPickHeroId_ = suggestPickHeroId_;
          to_bitField0_ |= 0x02000000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.suggestPickHeroRole_ = suggestPickHeroRole_;
          to_bitField0_ |= 0x04000000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.suggestBanHeroId_ = suggestBanHeroId_;
          to_bitField0_ |= 0x08000000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.triviaAnswer_ = triviaAnswerBuilder_ == null
              ? triviaAnswer_
              : triviaAnswerBuilder_.build();
          to_bitField0_ |= 0x10000000;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.requestedAbilityId_ = requestedAbilityId_;
          to_bitField0_ |= 0x20000000;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.chatFlags_ = chatFlags_;
          to_bitField0_ |= 0x40000000;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.startedFindingMatch_ = startedFindingMatch_;
          to_bitField0_ |= 0x80000000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartial1(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage result) {
        int from_bitField1_ = bitField1_;
        int to_bitField1_ = 0;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.ctrlIsDown_ = ctrlIsDown_;
          to_bitField1_ |= 0x00000001;
        }
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.favoriteTeamId_ = favoriteTeamId_;
          to_bitField1_ |= 0x00000002;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.favoriteTeamQuality_ = favoriteTeamQuality_;
          to_bitField1_ |= 0x00000004;
        }
        if (((from_bitField1_ & 0x00000008) != 0)) {
          result.suggestPlayerDraftPick_ = suggestPlayerDraftPick_;
          to_bitField1_ |= 0x00000008;
        }
        if (((from_bitField1_ & 0x00000010) != 0)) {
          result.playerDraftPick_ = playerDraftPickBuilder_ == null
              ? playerDraftPick_
              : playerDraftPickBuilder_.build();
          to_bitField1_ |= 0x00000010;
        }
        if (((from_bitField1_ & 0x00000020) != 0)) {
          result.chatWheelMessage_ = chatWheelMessageBuilder_ == null
              ? chatWheelMessage_
              : chatWheelMessageBuilder_.build();
          to_bitField1_ |= 0x00000020;
        }
        if (((from_bitField1_ & 0x00000040) != 0)) {
          result.eventLevel_ = eventLevel_;
          to_bitField1_ |= 0x00000040;
        }
        if (((from_bitField1_ & 0x00000080) != 0)) {
          result.suggestPickHeroFacet_ = suggestPickHeroFacet_;
          to_bitField1_ |= 0x00000080;
        }
        result.bitField1_ |= to_bitField1_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasPersonaName()) {
          personaName_ = other.personaName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasText()) {
          text_ = other.text_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSuggestInviteAccountId()) {
          setSuggestInviteAccountId(other.getSuggestInviteAccountId());
        }
        if (other.hasSuggestInviteName()) {
          suggestInviteName_ = other.suggestInviteName_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.hasFantasyDraftOwnerAccountId()) {
          setFantasyDraftOwnerAccountId(other.getFantasyDraftOwnerAccountId());
        }
        if (other.hasFantasyDraftPlayerAccountId()) {
          setFantasyDraftPlayerAccountId(other.getFantasyDraftPlayerAccountId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasSuggestInviteToLobby()) {
          setSuggestInviteToLobby(other.getSuggestInviteToLobby());
        }
        if (other.hasCoinFlip()) {
          setCoinFlip(other.getCoinFlip());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasShareProfileAccountId()) {
          setShareProfileAccountId(other.getShareProfileAccountId());
        }
        if (other.hasChannelUserId()) {
          setChannelUserId(other.getChannelUserId());
        }
        if (other.hasDiceRoll()) {
          mergeDiceRoll(other.getDiceRoll());
        }
        if (other.hasSharePartyId()) {
          setSharePartyId(other.getSharePartyId());
        }
        if (other.hasShareLobbyId()) {
          setShareLobbyId(other.getShareLobbyId());
        }
        if (other.hasShareLobbyCustomGameId()) {
          setShareLobbyCustomGameId(other.getShareLobbyCustomGameId());
        }
        if (other.hasShareLobbyPasskey()) {
          shareLobbyPasskey_ = other.shareLobbyPasskey_;
          bitField0_ |= 0x00080000;
          onChanged();
        }
        if (other.hasPrivateChatChannelId()) {
          setPrivateChatChannelId(other.getPrivateChatChannelId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasLegacyBattleCupVictory()) {
          setLegacyBattleCupVictory(other.getLegacyBattleCupVictory());
        }
        if (other.hasBattleCupStreak()) {
          setBattleCupStreak(other.getBattleCupStreak());
        }
        if (other.hasBadgeLevel()) {
          setBadgeLevel(other.getBadgeLevel());
        }
        if (other.hasSuggestPickHeroId()) {
          setSuggestPickHeroId(other.getSuggestPickHeroId());
        }
        if (other.hasSuggestPickHeroRole()) {
          suggestPickHeroRole_ = other.suggestPickHeroRole_;
          bitField0_ |= 0x04000000;
          onChanged();
        }
        if (other.hasSuggestBanHeroId()) {
          setSuggestBanHeroId(other.getSuggestBanHeroId());
        }
        if (other.hasTriviaAnswer()) {
          mergeTriviaAnswer(other.getTriviaAnswer());
        }
        if (other.hasRequestedAbilityId()) {
          setRequestedAbilityId(other.getRequestedAbilityId());
        }
        if (other.hasChatFlags()) {
          setChatFlags(other.getChatFlags());
        }
        if (other.hasStartedFindingMatch()) {
          setStartedFindingMatch(other.getStartedFindingMatch());
        }
        if (other.hasCtrlIsDown()) {
          setCtrlIsDown(other.getCtrlIsDown());
        }
        if (other.hasFavoriteTeamId()) {
          setFavoriteTeamId(other.getFavoriteTeamId());
        }
        if (other.hasFavoriteTeamQuality()) {
          setFavoriteTeamQuality(other.getFavoriteTeamQuality());
        }
        if (other.hasSuggestPlayerDraftPick()) {
          setSuggestPlayerDraftPick(other.getSuggestPlayerDraftPick());
        }
        if (other.hasPlayerDraftPick()) {
          mergePlayerDraftPick(other.getPlayerDraftPick());
        }
        if (other.hasChatWheelMessage()) {
          mergeChatWheelMessage(other.getChatWheelMessage());
        }
        if (other.hasEventLevel()) {
          setEventLevel(other.getEventLevel());
        }
        if (other.hasSuggestPickHeroFacet()) {
          setSuggestPickHeroFacet(other.getSuggestPickHeroFacet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                channelId_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                personaName_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                text_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                timestamp_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                suggestInviteAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                suggestInviteName_ = input.readBytes();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 64: {
                fantasyDraftOwnerAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                fantasyDraftPlayerAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                eventId_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                suggestInviteToLobby_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 104: {
                coinFlip_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 104
              case 112: {
                playerId_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 112
              case 120: {
                shareProfileAccountId_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 120
              case 128: {
                channelUserId_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 128
              case 138: {
                input.readMessage(
                    getDiceRollFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00008000;
                break;
              } // case 138
              case 144: {
                sharePartyId_ = input.readUInt64();
                bitField0_ |= 0x00010000;
                break;
              } // case 144
              case 152: {
                shareLobbyId_ = input.readUInt64();
                bitField0_ |= 0x00020000;
                break;
              } // case 152
              case 160: {
                shareLobbyCustomGameId_ = input.readUInt64();
                bitField0_ |= 0x00040000;
                break;
              } // case 160
              case 170: {
                shareLobbyPasskey_ = input.readBytes();
                bitField0_ |= 0x00080000;
                break;
              } // case 170
              case 176: {
                privateChatChannelId_ = input.readUInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 176
              case 184: {
                status_ = input.readUInt32();
                bitField0_ |= 0x00200000;
                break;
              } // case 184
              case 192: {
                legacyBattleCupVictory_ = input.readBool();
                bitField0_ |= 0x00400000;
                break;
              } // case 192
              case 200: {
                badgeLevel_ = input.readUInt32();
                bitField0_ |= 0x01000000;
                break;
              } // case 200
              case 208: {
                suggestPickHeroId_ = input.readInt32();
                bitField0_ |= 0x02000000;
                break;
              } // case 208
              case 218: {
                suggestPickHeroRole_ = input.readBytes();
                bitField0_ |= 0x04000000;
                break;
              } // case 218
              case 232: {
                battleCupStreak_ = input.readUInt32();
                bitField0_ |= 0x00800000;
                break;
              } // case 232
              case 240: {
                suggestBanHeroId_ = input.readInt32();
                bitField0_ |= 0x08000000;
                break;
              } // case 240
              case 258: {
                input.readMessage(
                    getTriviaAnswerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x10000000;
                break;
              } // case 258
              case 264: {
                requestedAbilityId_ = input.readInt32();
                bitField0_ |= 0x20000000;
                break;
              } // case 264
              case 272: {
                chatFlags_ = input.readUInt32();
                bitField0_ |= 0x40000000;
                break;
              } // case 272
              case 280: {
                startedFindingMatch_ = input.readBool();
                bitField0_ |= 0x80000000;
                break;
              } // case 280
              case 288: {
                ctrlIsDown_ = input.readBool();
                bitField1_ |= 0x00000001;
                break;
              } // case 288
              case 296: {
                favoriteTeamId_ = input.readUInt32();
                bitField1_ |= 0x00000002;
                break;
              } // case 296
              case 304: {
                favoriteTeamQuality_ = input.readUInt32();
                bitField1_ |= 0x00000004;
                break;
              } // case 304
              case 312: {
                suggestPlayerDraftPick_ = input.readInt32();
                bitField1_ |= 0x00000008;
                break;
              } // case 312
              case 322: {
                input.readMessage(
                    getPlayerDraftPickFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000010;
                break;
              } // case 322
              case 330: {
                input.readMessage(
                    getChatWheelMessageFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000020;
                break;
              } // case 330
              case 336: {
                eventLevel_ = input.readUInt32();
                bitField1_ |= 0x00000040;
                break;
              } // case 336
              case 344: {
                suggestPickHeroFacet_ = input.readUInt32();
                bitField1_ |= 0x00000080;
                break;
              } // case 344
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private long channelId_ ;
      /**
       * <code>optional uint64 channel_id = 2;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 channel_id = 2;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint64 channel_id = 2;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channel_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object personaName_ = "";
      /**
       * <code>optional string persona_name = 3;</code>
       * @return Whether the personaName field is set.
       */
      public boolean hasPersonaName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string persona_name = 3;</code>
       * @return The personaName.
       */
      public java.lang.String getPersonaName() {
        java.lang.Object ref = personaName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            personaName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string persona_name = 3;</code>
       * @return The bytes for personaName.
       */
      public com.google.protobuf.ByteString
          getPersonaNameBytes() {
        java.lang.Object ref = personaName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          personaName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string persona_name = 3;</code>
       * @param value The personaName to set.
       * @return This builder for chaining.
       */
      public Builder setPersonaName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        personaName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPersonaName() {
        personaName_ = getDefaultInstance().getPersonaName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona_name = 3;</code>
       * @param value The bytes for personaName to set.
       * @return This builder for chaining.
       */
      public Builder setPersonaNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        personaName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 4;</code>
       * @return Whether the text field is set.
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string text = 4;</code>
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 4;</code>
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 4;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        text_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        text_ = getDefaultInstance().getText();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 4;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        text_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 5;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 timestamp = 5;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 5;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(int value) {

        timestamp_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int suggestInviteAccountId_ ;
      /**
       * <code>optional uint32 suggest_invite_account_id = 6;</code>
       * @return Whether the suggestInviteAccountId field is set.
       */
      @java.lang.Override
      public boolean hasSuggestInviteAccountId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 suggest_invite_account_id = 6;</code>
       * @return The suggestInviteAccountId.
       */
      @java.lang.Override
      public int getSuggestInviteAccountId() {
        return suggestInviteAccountId_;
      }
      /**
       * <code>optional uint32 suggest_invite_account_id = 6;</code>
       * @param value The suggestInviteAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestInviteAccountId(int value) {

        suggestInviteAccountId_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 suggest_invite_account_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestInviteAccountId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        suggestInviteAccountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object suggestInviteName_ = "";
      /**
       * <code>optional string suggest_invite_name = 7;</code>
       * @return Whether the suggestInviteName field is set.
       */
      public boolean hasSuggestInviteName() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional string suggest_invite_name = 7;</code>
       * @return The suggestInviteName.
       */
      public java.lang.String getSuggestInviteName() {
        java.lang.Object ref = suggestInviteName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            suggestInviteName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string suggest_invite_name = 7;</code>
       * @return The bytes for suggestInviteName.
       */
      public com.google.protobuf.ByteString
          getSuggestInviteNameBytes() {
        java.lang.Object ref = suggestInviteName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          suggestInviteName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string suggest_invite_name = 7;</code>
       * @param value The suggestInviteName to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestInviteName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        suggestInviteName_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional string suggest_invite_name = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestInviteName() {
        suggestInviteName_ = getDefaultInstance().getSuggestInviteName();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>optional string suggest_invite_name = 7;</code>
       * @param value The bytes for suggestInviteName to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestInviteNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        suggestInviteName_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private int fantasyDraftOwnerAccountId_ ;
      /**
       * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
       * @return Whether the fantasyDraftOwnerAccountId field is set.
       */
      @java.lang.Override
      public boolean hasFantasyDraftOwnerAccountId() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
       * @return The fantasyDraftOwnerAccountId.
       */
      @java.lang.Override
      public int getFantasyDraftOwnerAccountId() {
        return fantasyDraftOwnerAccountId_;
      }
      /**
       * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
       * @param value The fantasyDraftOwnerAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyDraftOwnerAccountId(int value) {

        fantasyDraftOwnerAccountId_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_draft_owner_account_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyDraftOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fantasyDraftOwnerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyDraftPlayerAccountId_ ;
      /**
       * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
       * @return Whether the fantasyDraftPlayerAccountId field is set.
       */
      @java.lang.Override
      public boolean hasFantasyDraftPlayerAccountId() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
       * @return The fantasyDraftPlayerAccountId.
       */
      @java.lang.Override
      public int getFantasyDraftPlayerAccountId() {
        return fantasyDraftPlayerAccountId_;
      }
      /**
       * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
       * @param value The fantasyDraftPlayerAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyDraftPlayerAccountId(int value) {

        fantasyDraftPlayerAccountId_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_draft_player_account_id = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyDraftPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fantasyDraftPlayerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 10;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 event_id = 10;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 10;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(int value) {

        eventId_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        eventId_ = 0;
        onChanged();
        return this;
      }

      private boolean suggestInviteToLobby_ ;
      /**
       * <code>optional bool suggest_invite_to_lobby = 11;</code>
       * @return Whether the suggestInviteToLobby field is set.
       */
      @java.lang.Override
      public boolean hasSuggestInviteToLobby() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool suggest_invite_to_lobby = 11;</code>
       * @return The suggestInviteToLobby.
       */
      @java.lang.Override
      public boolean getSuggestInviteToLobby() {
        return suggestInviteToLobby_;
      }
      /**
       * <code>optional bool suggest_invite_to_lobby = 11;</code>
       * @param value The suggestInviteToLobby to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestInviteToLobby(boolean value) {

        suggestInviteToLobby_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool suggest_invite_to_lobby = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestInviteToLobby() {
        bitField0_ = (bitField0_ & ~0x00000400);
        suggestInviteToLobby_ = false;
        onChanged();
        return this;
      }

      private boolean coinFlip_ ;
      /**
       * <code>optional bool coin_flip = 13;</code>
       * @return Whether the coinFlip field is set.
       */
      @java.lang.Override
      public boolean hasCoinFlip() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional bool coin_flip = 13;</code>
       * @return The coinFlip.
       */
      @java.lang.Override
      public boolean getCoinFlip() {
        return coinFlip_;
      }
      /**
       * <code>optional bool coin_flip = 13;</code>
       * @param value The coinFlip to set.
       * @return This builder for chaining.
       */
      public Builder setCoinFlip(boolean value) {

        coinFlip_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool coin_flip = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoinFlip() {
        bitField0_ = (bitField0_ & ~0x00000800);
        coinFlip_ = false;
        onChanged();
        return this;
      }

      private int playerId_ = -1;
      /**
       * <code>optional int32 player_id = 14 [default = -1];</code>
       * @return Whether the playerId field is set.
       */
      @java.lang.Override
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional int32 player_id = 14 [default = -1];</code>
       * @return The playerId.
       */
      @java.lang.Override
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 player_id = 14 [default = -1];</code>
       * @param value The playerId to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerId(int value) {

        playerId_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_id = 14 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        playerId_ = -1;
        onChanged();
        return this;
      }

      private int shareProfileAccountId_ ;
      /**
       * <code>optional uint32 share_profile_account_id = 15;</code>
       * @return Whether the shareProfileAccountId field is set.
       */
      @java.lang.Override
      public boolean hasShareProfileAccountId() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional uint32 share_profile_account_id = 15;</code>
       * @return The shareProfileAccountId.
       */
      @java.lang.Override
      public int getShareProfileAccountId() {
        return shareProfileAccountId_;
      }
      /**
       * <code>optional uint32 share_profile_account_id = 15;</code>
       * @param value The shareProfileAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setShareProfileAccountId(int value) {

        shareProfileAccountId_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 share_profile_account_id = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearShareProfileAccountId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        shareProfileAccountId_ = 0;
        onChanged();
        return this;
      }

      private int channelUserId_ ;
      /**
       * <code>optional uint32 channel_user_id = 16;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 16;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }
      /**
       * <code>optional uint32 channel_user_id = 16;</code>
       * @param value The channelUserId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUserId(int value) {

        channelUserId_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_user_id = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUserId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        channelUserId_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll diceRoll_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder> diceRollBuilder_;
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       * @return Whether the diceRoll field is set.
       */
      public boolean hasDiceRoll() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       * @return The diceRoll.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll getDiceRoll() {
        if (diceRollBuilder_ == null) {
          return diceRoll_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance() : diceRoll_;
        } else {
          return diceRollBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      public Builder setDiceRoll(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll value) {
        if (diceRollBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          diceRoll_ = value;
        } else {
          diceRollBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      public Builder setDiceRoll(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder builderForValue) {
        if (diceRollBuilder_ == null) {
          diceRoll_ = builderForValue.build();
        } else {
          diceRollBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      public Builder mergeDiceRoll(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll value) {
        if (diceRollBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0) &&
            diceRoll_ != null &&
            diceRoll_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance()) {
            getDiceRollBuilder().mergeFrom(value);
          } else {
            diceRoll_ = value;
          }
        } else {
          diceRollBuilder_.mergeFrom(value);
        }
        if (diceRoll_ != null) {
          bitField0_ |= 0x00008000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      public Builder clearDiceRoll() {
        bitField0_ = (bitField0_ & ~0x00008000);
        diceRoll_ = null;
        if (diceRollBuilder_ != null) {
          diceRollBuilder_.dispose();
          diceRollBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder getDiceRollBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getDiceRollFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder getDiceRollOrBuilder() {
        if (diceRollBuilder_ != null) {
          return diceRollBuilder_.getMessageOrBuilder();
        } else {
          return diceRoll_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.getDefaultInstance() : diceRoll_;
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.DiceRoll dice_roll = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder> 
          getDiceRollFieldBuilder() {
        if (diceRollBuilder_ == null) {
          diceRollBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRoll.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.DiceRollOrBuilder>(
                  getDiceRoll(),
                  getParentForChildren(),
                  isClean());
          diceRoll_ = null;
        }
        return diceRollBuilder_;
      }

      private long sharePartyId_ ;
      /**
       * <code>optional uint64 share_party_id = 18;</code>
       * @return Whether the sharePartyId field is set.
       */
      @java.lang.Override
      public boolean hasSharePartyId() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional uint64 share_party_id = 18;</code>
       * @return The sharePartyId.
       */
      @java.lang.Override
      public long getSharePartyId() {
        return sharePartyId_;
      }
      /**
       * <code>optional uint64 share_party_id = 18;</code>
       * @param value The sharePartyId to set.
       * @return This builder for chaining.
       */
      public Builder setSharePartyId(long value) {

        sharePartyId_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 share_party_id = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearSharePartyId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        sharePartyId_ = 0L;
        onChanged();
        return this;
      }

      private long shareLobbyId_ ;
      /**
       * <code>optional uint64 share_lobby_id = 19;</code>
       * @return Whether the shareLobbyId field is set.
       */
      @java.lang.Override
      public boolean hasShareLobbyId() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional uint64 share_lobby_id = 19;</code>
       * @return The shareLobbyId.
       */
      @java.lang.Override
      public long getShareLobbyId() {
        return shareLobbyId_;
      }
      /**
       * <code>optional uint64 share_lobby_id = 19;</code>
       * @param value The shareLobbyId to set.
       * @return This builder for chaining.
       */
      public Builder setShareLobbyId(long value) {

        shareLobbyId_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 share_lobby_id = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearShareLobbyId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        shareLobbyId_ = 0L;
        onChanged();
        return this;
      }

      private long shareLobbyCustomGameId_ ;
      /**
       * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
       * @return Whether the shareLobbyCustomGameId field is set.
       */
      @java.lang.Override
      public boolean hasShareLobbyCustomGameId() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
       * @return The shareLobbyCustomGameId.
       */
      @java.lang.Override
      public long getShareLobbyCustomGameId() {
        return shareLobbyCustomGameId_;
      }
      /**
       * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
       * @param value The shareLobbyCustomGameId to set.
       * @return This builder for chaining.
       */
      public Builder setShareLobbyCustomGameId(long value) {

        shareLobbyCustomGameId_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 share_lobby_custom_game_id = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearShareLobbyCustomGameId() {
        bitField0_ = (bitField0_ & ~0x00040000);
        shareLobbyCustomGameId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object shareLobbyPasskey_ = "";
      /**
       * <code>optional string share_lobby_passkey = 21;</code>
       * @return Whether the shareLobbyPasskey field is set.
       */
      public boolean hasShareLobbyPasskey() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional string share_lobby_passkey = 21;</code>
       * @return The shareLobbyPasskey.
       */
      public java.lang.String getShareLobbyPasskey() {
        java.lang.Object ref = shareLobbyPasskey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shareLobbyPasskey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string share_lobby_passkey = 21;</code>
       * @return The bytes for shareLobbyPasskey.
       */
      public com.google.protobuf.ByteString
          getShareLobbyPasskeyBytes() {
        java.lang.Object ref = shareLobbyPasskey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shareLobbyPasskey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string share_lobby_passkey = 21;</code>
       * @param value The shareLobbyPasskey to set.
       * @return This builder for chaining.
       */
      public Builder setShareLobbyPasskey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        shareLobbyPasskey_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string share_lobby_passkey = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearShareLobbyPasskey() {
        shareLobbyPasskey_ = getDefaultInstance().getShareLobbyPasskey();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string share_lobby_passkey = 21;</code>
       * @param value The bytes for shareLobbyPasskey to set.
       * @return This builder for chaining.
       */
      public Builder setShareLobbyPasskeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        shareLobbyPasskey_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }

      private int privateChatChannelId_ ;
      /**
       * <code>optional uint32 private_chat_channel_id = 22;</code>
       * @return Whether the privateChatChannelId field is set.
       */
      @java.lang.Override
      public boolean hasPrivateChatChannelId() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional uint32 private_chat_channel_id = 22;</code>
       * @return The privateChatChannelId.
       */
      @java.lang.Override
      public int getPrivateChatChannelId() {
        return privateChatChannelId_;
      }
      /**
       * <code>optional uint32 private_chat_channel_id = 22;</code>
       * @param value The privateChatChannelId to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateChatChannelId(int value) {

        privateChatChannelId_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 private_chat_channel_id = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateChatChannelId() {
        bitField0_ = (bitField0_ & ~0x00100000);
        privateChatChannelId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional uint32 status = 23;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional uint32 status = 23;</code>
       * @return The status.
       */
      @java.lang.Override
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 23;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(int value) {

        status_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00200000);
        status_ = 0;
        onChanged();
        return this;
      }

      private boolean legacyBattleCupVictory_ ;
      /**
       * <code>optional bool legacy_battle_cup_victory = 24;</code>
       * @return Whether the legacyBattleCupVictory field is set.
       */
      @java.lang.Override
      public boolean hasLegacyBattleCupVictory() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <code>optional bool legacy_battle_cup_victory = 24;</code>
       * @return The legacyBattleCupVictory.
       */
      @java.lang.Override
      public boolean getLegacyBattleCupVictory() {
        return legacyBattleCupVictory_;
      }
      /**
       * <code>optional bool legacy_battle_cup_victory = 24;</code>
       * @param value The legacyBattleCupVictory to set.
       * @return This builder for chaining.
       */
      public Builder setLegacyBattleCupVictory(boolean value) {

        legacyBattleCupVictory_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool legacy_battle_cup_victory = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearLegacyBattleCupVictory() {
        bitField0_ = (bitField0_ & ~0x00400000);
        legacyBattleCupVictory_ = false;
        onChanged();
        return this;
      }

      private int battleCupStreak_ ;
      /**
       * <code>optional uint32 battle_cup_streak = 29;</code>
       * @return Whether the battleCupStreak field is set.
       */
      @java.lang.Override
      public boolean hasBattleCupStreak() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <code>optional uint32 battle_cup_streak = 29;</code>
       * @return The battleCupStreak.
       */
      @java.lang.Override
      public int getBattleCupStreak() {
        return battleCupStreak_;
      }
      /**
       * <code>optional uint32 battle_cup_streak = 29;</code>
       * @param value The battleCupStreak to set.
       * @return This builder for chaining.
       */
      public Builder setBattleCupStreak(int value) {

        battleCupStreak_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battle_cup_streak = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearBattleCupStreak() {
        bitField0_ = (bitField0_ & ~0x00800000);
        battleCupStreak_ = 0;
        onChanged();
        return this;
      }

      private int badgeLevel_ ;
      /**
       * <code>optional uint32 badge_level = 25;</code>
       * @return Whether the badgeLevel field is set.
       */
      @java.lang.Override
      public boolean hasBadgeLevel() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <code>optional uint32 badge_level = 25;</code>
       * @return The badgeLevel.
       */
      @java.lang.Override
      public int getBadgeLevel() {
        return badgeLevel_;
      }
      /**
       * <code>optional uint32 badge_level = 25;</code>
       * @param value The badgeLevel to set.
       * @return This builder for chaining.
       */
      public Builder setBadgeLevel(int value) {

        badgeLevel_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 badge_level = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearBadgeLevel() {
        bitField0_ = (bitField0_ & ~0x01000000);
        badgeLevel_ = 0;
        onChanged();
        return this;
      }

      private int suggestPickHeroId_ ;
      /**
       * <code>optional int32 suggest_pick_hero_id = 26;</code>
       * @return Whether the suggestPickHeroId field is set.
       */
      @java.lang.Override
      public boolean hasSuggestPickHeroId() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <code>optional int32 suggest_pick_hero_id = 26;</code>
       * @return The suggestPickHeroId.
       */
      @java.lang.Override
      public int getSuggestPickHeroId() {
        return suggestPickHeroId_;
      }
      /**
       * <code>optional int32 suggest_pick_hero_id = 26;</code>
       * @param value The suggestPickHeroId to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestPickHeroId(int value) {

        suggestPickHeroId_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 suggest_pick_hero_id = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestPickHeroId() {
        bitField0_ = (bitField0_ & ~0x02000000);
        suggestPickHeroId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object suggestPickHeroRole_ = "";
      /**
       * <code>optional string suggest_pick_hero_role = 27;</code>
       * @return Whether the suggestPickHeroRole field is set.
       */
      public boolean hasSuggestPickHeroRole() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>optional string suggest_pick_hero_role = 27;</code>
       * @return The suggestPickHeroRole.
       */
      public java.lang.String getSuggestPickHeroRole() {
        java.lang.Object ref = suggestPickHeroRole_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            suggestPickHeroRole_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string suggest_pick_hero_role = 27;</code>
       * @return The bytes for suggestPickHeroRole.
       */
      public com.google.protobuf.ByteString
          getSuggestPickHeroRoleBytes() {
        java.lang.Object ref = suggestPickHeroRole_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          suggestPickHeroRole_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string suggest_pick_hero_role = 27;</code>
       * @param value The suggestPickHeroRole to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestPickHeroRole(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        suggestPickHeroRole_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string suggest_pick_hero_role = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestPickHeroRole() {
        suggestPickHeroRole_ = getDefaultInstance().getSuggestPickHeroRole();
        bitField0_ = (bitField0_ & ~0x04000000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string suggest_pick_hero_role = 27;</code>
       * @param value The bytes for suggestPickHeroRole to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestPickHeroRoleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        suggestPickHeroRole_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }

      private int suggestBanHeroId_ ;
      /**
       * <code>optional int32 suggest_ban_hero_id = 30;</code>
       * @return Whether the suggestBanHeroId field is set.
       */
      @java.lang.Override
      public boolean hasSuggestBanHeroId() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <code>optional int32 suggest_ban_hero_id = 30;</code>
       * @return The suggestBanHeroId.
       */
      @java.lang.Override
      public int getSuggestBanHeroId() {
        return suggestBanHeroId_;
      }
      /**
       * <code>optional int32 suggest_ban_hero_id = 30;</code>
       * @param value The suggestBanHeroId to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestBanHeroId(int value) {

        suggestBanHeroId_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 suggest_ban_hero_id = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestBanHeroId() {
        bitField0_ = (bitField0_ & ~0x08000000);
        suggestBanHeroId_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered triviaAnswer_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder> triviaAnswerBuilder_;
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       * @return Whether the triviaAnswer field is set.
       */
      public boolean hasTriviaAnswer() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       * @return The triviaAnswer.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered getTriviaAnswer() {
        if (triviaAnswerBuilder_ == null) {
          return triviaAnswer_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance() : triviaAnswer_;
        } else {
          return triviaAnswerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      public Builder setTriviaAnswer(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered value) {
        if (triviaAnswerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          triviaAnswer_ = value;
        } else {
          triviaAnswerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      public Builder setTriviaAnswer(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder builderForValue) {
        if (triviaAnswerBuilder_ == null) {
          triviaAnswer_ = builderForValue.build();
        } else {
          triviaAnswerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      public Builder mergeTriviaAnswer(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered value) {
        if (triviaAnswerBuilder_ == null) {
          if (((bitField0_ & 0x10000000) != 0) &&
            triviaAnswer_ != null &&
            triviaAnswer_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance()) {
            getTriviaAnswerBuilder().mergeFrom(value);
          } else {
            triviaAnswer_ = value;
          }
        } else {
          triviaAnswerBuilder_.mergeFrom(value);
        }
        if (triviaAnswer_ != null) {
          bitField0_ |= 0x10000000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      public Builder clearTriviaAnswer() {
        bitField0_ = (bitField0_ & ~0x10000000);
        triviaAnswer_ = null;
        if (triviaAnswerBuilder_ != null) {
          triviaAnswerBuilder_.dispose();
          triviaAnswerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder getTriviaAnswerBuilder() {
        bitField0_ |= 0x10000000;
        onChanged();
        return getTriviaAnswerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder getTriviaAnswerOrBuilder() {
        if (triviaAnswerBuilder_ != null) {
          return triviaAnswerBuilder_.getMessageOrBuilder();
        } else {
          return triviaAnswer_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.getDefaultInstance() : triviaAnswer_;
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.TriviaAnswered trivia_answer = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder> 
          getTriviaAnswerFieldBuilder() {
        if (triviaAnswerBuilder_ == null) {
          triviaAnswerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnswered.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.TriviaAnsweredOrBuilder>(
                  getTriviaAnswer(),
                  getParentForChildren(),
                  isClean());
          triviaAnswer_ = null;
        }
        return triviaAnswerBuilder_;
      }

      private int requestedAbilityId_ = -1;
      /**
       * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
       * @return Whether the requestedAbilityId field is set.
       */
      @java.lang.Override
      public boolean hasRequestedAbilityId() {
        return ((bitField0_ & 0x20000000) != 0);
      }
      /**
       * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
       * @return The requestedAbilityId.
       */
      @java.lang.Override
      public int getRequestedAbilityId() {
        return requestedAbilityId_;
      }
      /**
       * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
       * @param value The requestedAbilityId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestedAbilityId(int value) {

        requestedAbilityId_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 requested_ability_id = 33 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestedAbilityId() {
        bitField0_ = (bitField0_ & ~0x20000000);
        requestedAbilityId_ = -1;
        onChanged();
        return this;
      }

      private int chatFlags_ ;
      /**
       * <code>optional uint32 chat_flags = 34;</code>
       * @return Whether the chatFlags field is set.
       */
      @java.lang.Override
      public boolean hasChatFlags() {
        return ((bitField0_ & 0x40000000) != 0);
      }
      /**
       * <code>optional uint32 chat_flags = 34;</code>
       * @return The chatFlags.
       */
      @java.lang.Override
      public int getChatFlags() {
        return chatFlags_;
      }
      /**
       * <code>optional uint32 chat_flags = 34;</code>
       * @param value The chatFlags to set.
       * @return This builder for chaining.
       */
      public Builder setChatFlags(int value) {

        chatFlags_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 chat_flags = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearChatFlags() {
        bitField0_ = (bitField0_ & ~0x40000000);
        chatFlags_ = 0;
        onChanged();
        return this;
      }

      private boolean startedFindingMatch_ ;
      /**
       * <code>optional bool started_finding_match = 35;</code>
       * @return Whether the startedFindingMatch field is set.
       */
      @java.lang.Override
      public boolean hasStartedFindingMatch() {
        return ((bitField0_ & 0x80000000) != 0);
      }
      /**
       * <code>optional bool started_finding_match = 35;</code>
       * @return The startedFindingMatch.
       */
      @java.lang.Override
      public boolean getStartedFindingMatch() {
        return startedFindingMatch_;
      }
      /**
       * <code>optional bool started_finding_match = 35;</code>
       * @param value The startedFindingMatch to set.
       * @return This builder for chaining.
       */
      public Builder setStartedFindingMatch(boolean value) {

        startedFindingMatch_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool started_finding_match = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartedFindingMatch() {
        bitField0_ = (bitField0_ & ~0x80000000);
        startedFindingMatch_ = false;
        onChanged();
        return this;
      }

      private boolean ctrlIsDown_ ;
      /**
       * <code>optional bool ctrl_is_down = 36;</code>
       * @return Whether the ctrlIsDown field is set.
       */
      @java.lang.Override
      public boolean hasCtrlIsDown() {
        return ((bitField1_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool ctrl_is_down = 36;</code>
       * @return The ctrlIsDown.
       */
      @java.lang.Override
      public boolean getCtrlIsDown() {
        return ctrlIsDown_;
      }
      /**
       * <code>optional bool ctrl_is_down = 36;</code>
       * @param value The ctrlIsDown to set.
       * @return This builder for chaining.
       */
      public Builder setCtrlIsDown(boolean value) {

        ctrlIsDown_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ctrl_is_down = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtrlIsDown() {
        bitField1_ = (bitField1_ & ~0x00000001);
        ctrlIsDown_ = false;
        onChanged();
        return this;
      }

      private int favoriteTeamId_ ;
      /**
       * <code>optional uint32 favorite_team_id = 37;</code>
       * @return Whether the favoriteTeamId field is set.
       */
      @java.lang.Override
      public boolean hasFavoriteTeamId() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 favorite_team_id = 37;</code>
       * @return The favoriteTeamId.
       */
      @java.lang.Override
      public int getFavoriteTeamId() {
        return favoriteTeamId_;
      }
      /**
       * <code>optional uint32 favorite_team_id = 37;</code>
       * @param value The favoriteTeamId to set.
       * @return This builder for chaining.
       */
      public Builder setFavoriteTeamId(int value) {

        favoriteTeamId_ = value;
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 favorite_team_id = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearFavoriteTeamId() {
        bitField1_ = (bitField1_ & ~0x00000002);
        favoriteTeamId_ = 0;
        onChanged();
        return this;
      }

      private int favoriteTeamQuality_ ;
      /**
       * <code>optional uint32 favorite_team_quality = 38;</code>
       * @return Whether the favoriteTeamQuality field is set.
       */
      @java.lang.Override
      public boolean hasFavoriteTeamQuality() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 favorite_team_quality = 38;</code>
       * @return The favoriteTeamQuality.
       */
      @java.lang.Override
      public int getFavoriteTeamQuality() {
        return favoriteTeamQuality_;
      }
      /**
       * <code>optional uint32 favorite_team_quality = 38;</code>
       * @param value The favoriteTeamQuality to set.
       * @return This builder for chaining.
       */
      public Builder setFavoriteTeamQuality(int value) {

        favoriteTeamQuality_ = value;
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 favorite_team_quality = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearFavoriteTeamQuality() {
        bitField1_ = (bitField1_ & ~0x00000004);
        favoriteTeamQuality_ = 0;
        onChanged();
        return this;
      }

      private int suggestPlayerDraftPick_ = -1;
      /**
       * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
       * @return Whether the suggestPlayerDraftPick field is set.
       */
      @java.lang.Override
      public boolean hasSuggestPlayerDraftPick() {
        return ((bitField1_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
       * @return The suggestPlayerDraftPick.
       */
      @java.lang.Override
      public int getSuggestPlayerDraftPick() {
        return suggestPlayerDraftPick_;
      }
      /**
       * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
       * @param value The suggestPlayerDraftPick to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestPlayerDraftPick(int value) {

        suggestPlayerDraftPick_ = value;
        bitField1_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 suggest_player_draft_pick = 39 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestPlayerDraftPick() {
        bitField1_ = (bitField1_ & ~0x00000008);
        suggestPlayerDraftPick_ = -1;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick playerDraftPick_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder> playerDraftPickBuilder_;
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       * @return Whether the playerDraftPick field is set.
       */
      public boolean hasPlayerDraftPick() {
        return ((bitField1_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       * @return The playerDraftPick.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick getPlayerDraftPick() {
        if (playerDraftPickBuilder_ == null) {
          return playerDraftPick_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance() : playerDraftPick_;
        } else {
          return playerDraftPickBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      public Builder setPlayerDraftPick(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick value) {
        if (playerDraftPickBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerDraftPick_ = value;
        } else {
          playerDraftPickBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      public Builder setPlayerDraftPick(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder builderForValue) {
        if (playerDraftPickBuilder_ == null) {
          playerDraftPick_ = builderForValue.build();
        } else {
          playerDraftPickBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      public Builder mergePlayerDraftPick(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick value) {
        if (playerDraftPickBuilder_ == null) {
          if (((bitField1_ & 0x00000010) != 0) &&
            playerDraftPick_ != null &&
            playerDraftPick_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance()) {
            getPlayerDraftPickBuilder().mergeFrom(value);
          } else {
            playerDraftPick_ = value;
          }
        } else {
          playerDraftPickBuilder_.mergeFrom(value);
        }
        if (playerDraftPick_ != null) {
          bitField1_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      public Builder clearPlayerDraftPick() {
        bitField1_ = (bitField1_ & ~0x00000010);
        playerDraftPick_ = null;
        if (playerDraftPickBuilder_ != null) {
          playerDraftPickBuilder_.dispose();
          playerDraftPickBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder getPlayerDraftPickBuilder() {
        bitField1_ |= 0x00000010;
        onChanged();
        return getPlayerDraftPickFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder getPlayerDraftPickOrBuilder() {
        if (playerDraftPickBuilder_ != null) {
          return playerDraftPickBuilder_.getMessageOrBuilder();
        } else {
          return playerDraftPick_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.getDefaultInstance() : playerDraftPick_;
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.PlayerDraftPick player_draft_pick = 40;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder> 
          getPlayerDraftPickFieldBuilder() {
        if (playerDraftPickBuilder_ == null) {
          playerDraftPickBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPick.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.PlayerDraftPickOrBuilder>(
                  getPlayerDraftPick(),
                  getParentForChildren(),
                  isClean());
          playerDraftPick_ = null;
        }
        return playerDraftPickBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage chatWheelMessage_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder> chatWheelMessageBuilder_;
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       * @return Whether the chatWheelMessage field is set.
       */
      public boolean hasChatWheelMessage() {
        return ((bitField1_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       * @return The chatWheelMessage.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage getChatWheelMessage() {
        if (chatWheelMessageBuilder_ == null) {
          return chatWheelMessage_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance() : chatWheelMessage_;
        } else {
          return chatWheelMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      public Builder setChatWheelMessage(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage value) {
        if (chatWheelMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chatWheelMessage_ = value;
        } else {
          chatWheelMessageBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      public Builder setChatWheelMessage(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder builderForValue) {
        if (chatWheelMessageBuilder_ == null) {
          chatWheelMessage_ = builderForValue.build();
        } else {
          chatWheelMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      public Builder mergeChatWheelMessage(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage value) {
        if (chatWheelMessageBuilder_ == null) {
          if (((bitField1_ & 0x00000020) != 0) &&
            chatWheelMessage_ != null &&
            chatWheelMessage_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance()) {
            getChatWheelMessageBuilder().mergeFrom(value);
          } else {
            chatWheelMessage_ = value;
          }
        } else {
          chatWheelMessageBuilder_.mergeFrom(value);
        }
        if (chatWheelMessage_ != null) {
          bitField1_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      public Builder clearChatWheelMessage() {
        bitField1_ = (bitField1_ & ~0x00000020);
        chatWheelMessage_ = null;
        if (chatWheelMessageBuilder_ != null) {
          chatWheelMessageBuilder_.dispose();
          chatWheelMessageBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder getChatWheelMessageBuilder() {
        bitField1_ |= 0x00000020;
        onChanged();
        return getChatWheelMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder getChatWheelMessageOrBuilder() {
        if (chatWheelMessageBuilder_ != null) {
          return chatWheelMessageBuilder_.getMessageOrBuilder();
        } else {
          return chatWheelMessage_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.getDefaultInstance() : chatWheelMessage_;
        }
      }
      /**
       * <code>optional .CMsgDOTAChatMessage.ChatWheelMessage chat_wheel_message = 41;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder> 
          getChatWheelMessageFieldBuilder() {
        if (chatWheelMessageBuilder_ == null) {
          chatWheelMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessage.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage.ChatWheelMessageOrBuilder>(
                  getChatWheelMessage(),
                  getParentForChildren(),
                  isClean());
          chatWheelMessage_ = null;
        }
        return chatWheelMessageBuilder_;
      }

      private int eventLevel_ ;
      /**
       * <code>optional uint32 event_level = 42;</code>
       * @return Whether the eventLevel field is set.
       */
      @java.lang.Override
      public boolean hasEventLevel() {
        return ((bitField1_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 event_level = 42;</code>
       * @return The eventLevel.
       */
      @java.lang.Override
      public int getEventLevel() {
        return eventLevel_;
      }
      /**
       * <code>optional uint32 event_level = 42;</code>
       * @param value The eventLevel to set.
       * @return This builder for chaining.
       */
      public Builder setEventLevel(int value) {

        eventLevel_ = value;
        bitField1_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_level = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventLevel() {
        bitField1_ = (bitField1_ & ~0x00000040);
        eventLevel_ = 0;
        onChanged();
        return this;
      }

      private int suggestPickHeroFacet_ ;
      /**
       * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
       * @return Whether the suggestPickHeroFacet field is set.
       */
      @java.lang.Override
      public boolean hasSuggestPickHeroFacet() {
        return ((bitField1_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
       * @return The suggestPickHeroFacet.
       */
      @java.lang.Override
      public int getSuggestPickHeroFacet() {
        return suggestPickHeroFacet_;
      }
      /**
       * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
       * @param value The suggestPickHeroFacet to set.
       * @return This builder for chaining.
       */
      public Builder setSuggestPickHeroFacet(int value) {

        suggestPickHeroFacet_ = value;
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 suggest_pick_hero_facet = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuggestPickHeroFacet() {
        bitField1_ = (bitField1_ & ~0x00000080);
        suggestPickHeroFacet_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatMessage)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatMessage)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatMessage>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatMessage>() {
      @java.lang.Override
      public CMsgDOTAChatMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatMemberOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatMember)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steam_id = 1;</code>
     * @return Whether the steamId field is set.
     */
    boolean hasSteamId();
    /**
     * <code>optional fixed64 steam_id = 1;</code>
     * @return The steamId.
     */
    long getSteamId();

    /**
     * <code>optional string persona_name = 2;</code>
     * @return Whether the personaName field is set.
     */
    boolean hasPersonaName();
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The personaName.
     */
    java.lang.String getPersonaName();
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The bytes for personaName.
     */
    com.google.protobuf.ByteString
        getPersonaNameBytes();

    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return Whether the channelUserId field is set.
     */
    boolean hasChannelUserId();
    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return The channelUserId.
     */
    int getChannelUserId();

    /**
     * <code>optional uint32 status = 4;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 4;</code>
     * @return The status.
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code CMsgDOTAChatMember}
   */
  public static final class CMsgDOTAChatMember extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatMember)
      CMsgDOTAChatMemberOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatMember.class.getName());
    }
    // Use CMsgDOTAChatMember.newBuilder() to construct.
    private CMsgDOTAChatMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatMember() {
      personaName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMember_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMember_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder.class);
    }

    private int bitField0_;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private long steamId_ = 0L;
    /**
     * <code>optional fixed64 steam_id = 1;</code>
     * @return Whether the steamId field is set.
     */
    @java.lang.Override
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed64 steam_id = 1;</code>
     * @return The steamId.
     */
    @java.lang.Override
    public long getSteamId() {
      return steamId_;
    }

    public static final int PERSONA_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object personaName_ = "";
    /**
     * <code>optional string persona_name = 2;</code>
     * @return Whether the personaName field is set.
     */
    @java.lang.Override
    public boolean hasPersonaName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The personaName.
     */
    @java.lang.Override
    public java.lang.String getPersonaName() {
      java.lang.Object ref = personaName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          personaName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The bytes for personaName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPersonaNameBytes() {
      java.lang.Object ref = personaName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        personaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_USER_ID_FIELD_NUMBER = 3;
    private int channelUserId_ = 0;
    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return Whether the channelUserId field is set.
     */
    @java.lang.Override
    public boolean hasChannelUserId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return The channelUserId.
     */
    @java.lang.Override
    public int getChannelUserId() {
      return channelUserId_;
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_ = 0;
    /**
     * <code>optional uint32 status = 4;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 status = 4;</code>
     * @return The status.
     */
    @java.lang.Override
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, personaName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, channelUserId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, status_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, personaName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, channelUserId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember) obj;

      if (hasSteamId() != other.hasSteamId()) return false;
      if (hasSteamId()) {
        if (getSteamId()
            != other.getSteamId()) return false;
      }
      if (hasPersonaName() != other.hasPersonaName()) return false;
      if (hasPersonaName()) {
        if (!getPersonaName()
            .equals(other.getPersonaName())) return false;
      }
      if (hasChannelUserId() != other.hasChannelUserId()) return false;
      if (hasChannelUserId()) {
        if (getChannelUserId()
            != other.getChannelUserId()) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (getStatus()
            != other.getStatus()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (hasPersonaName()) {
        hash = (37 * hash) + PERSONA_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPersonaName().hashCode();
      }
      if (hasChannelUserId()) {
        hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUserId();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatMember}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatMember)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMember_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        steamId_ = 0L;
        personaName_ = "";
        channelUserId_ = 0;
        status_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatMember_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.steamId_ = steamId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.personaName_ = personaName_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.channelUserId_ = channelUserId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.status_ = status_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasPersonaName()) {
          personaName_ = other.personaName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasChannelUserId()) {
          setChannelUserId(other.getChannelUserId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                steamId_ = input.readFixed64();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 18: {
                personaName_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                channelUserId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                status_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long steamId_ ;
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @param value The steamId to set.
       * @return This builder for chaining.
       */
      public Builder setSteamId(long value) {

        steamId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object personaName_ = "";
      /**
       * <code>optional string persona_name = 2;</code>
       * @return Whether the personaName field is set.
       */
      public boolean hasPersonaName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The personaName.
       */
      public java.lang.String getPersonaName() {
        java.lang.Object ref = personaName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            personaName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The bytes for personaName.
       */
      public com.google.protobuf.ByteString
          getPersonaNameBytes() {
        java.lang.Object ref = personaName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          personaName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @param value The personaName to set.
       * @return This builder for chaining.
       */
      public Builder setPersonaName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        personaName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPersonaName() {
        personaName_ = getDefaultInstance().getPersonaName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @param value The bytes for personaName to set.
       * @return This builder for chaining.
       */
      public Builder setPersonaNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        personaName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int channelUserId_ ;
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @param value The channelUserId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUserId(int value) {

        channelUserId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUserId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelUserId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional uint32 status = 4;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 status = 4;</code>
       * @return The status.
       */
      @java.lang.Override
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 4;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(int value) {

        status_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatMember)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatMember)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatMember>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatMember>() {
      @java.lang.Override
      public CMsgDOTAChatMember parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatMember> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatMember> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAJoinChatChannelResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAJoinChatChannelResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 response = 1;</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional uint32 response = 1;</code>
     * @return The response.
     */
    int getResponse();

    /**
     * <code>optional string channel_name = 2;</code>
     * @return Whether the channelName field is set.
     */
    boolean hasChannelName();
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The channelName.
     */
    java.lang.String getChannelName();
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The bytes for channelName.
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <code>optional fixed64 channel_id = 3;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional fixed64 channel_id = 3;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>optional uint32 max_members = 4;</code>
     * @return Whether the maxMembers field is set.
     */
    boolean hasMaxMembers();
    /**
     * <code>optional uint32 max_members = 4;</code>
     * @return The maxMembers.
     */
    int getMaxMembers();

    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember> 
        getMembersList();
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember getMembers(int index);
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder getMembersOrBuilder(
        int index);

    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    boolean hasChannelType();
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType();

    /**
     * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result getResult();

    /**
     * <code>optional bool gc_initiated_join = 8;</code>
     * @return Whether the gcInitiatedJoin field is set.
     */
    boolean hasGcInitiatedJoin();
    /**
     * <code>optional bool gc_initiated_join = 8;</code>
     * @return The gcInitiatedJoin.
     */
    boolean getGcInitiatedJoin();

    /**
     * <code>optional uint32 channel_user_id = 9;</code>
     * @return Whether the channelUserId field is set.
     */
    boolean hasChannelUserId();
    /**
     * <code>optional uint32 channel_user_id = 9;</code>
     * @return The channelUserId.
     */
    int getChannelUserId();

    /**
     * <code>optional string welcome_message = 10;</code>
     * @return Whether the welcomeMessage field is set.
     */
    boolean hasWelcomeMessage();
    /**
     * <code>optional string welcome_message = 10;</code>
     * @return The welcomeMessage.
     */
    java.lang.String getWelcomeMessage();
    /**
     * <code>optional string welcome_message = 10;</code>
     * @return The bytes for welcomeMessage.
     */
    com.google.protobuf.ByteString
        getWelcomeMessageBytes();

    /**
     * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
     * @return Whether the specialPrivileges field is set.
     */
    boolean hasSpecialPrivileges();
    /**
     * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
     * @return The specialPrivileges.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges getSpecialPrivileges();
  }
  /**
   * Protobuf type {@code CMsgDOTAJoinChatChannelResponse}
   */
  public static final class CMsgDOTAJoinChatChannelResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAJoinChatChannelResponse)
      CMsgDOTAJoinChatChannelResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAJoinChatChannelResponse.class.getName());
    }
    // Use CMsgDOTAJoinChatChannelResponse.newBuilder() to construct.
    private CMsgDOTAJoinChatChannelResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAJoinChatChannelResponse() {
      channelName_ = "";
      members_ = java.util.Collections.emptyList();
      channelType_ = 0;
      result_ = 0;
      welcomeMessage_ = "";
      specialPrivileges_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannelResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannelResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAJoinChatChannelResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>JOIN_SUCCESS = 0;</code>
       */
      JOIN_SUCCESS(0),
      /**
       * <code>INVALID_CHANNEL_TYPE = 1;</code>
       */
      INVALID_CHANNEL_TYPE(1),
      /**
       * <code>ACCOUNT_NOT_FOUND = 2;</code>
       */
      ACCOUNT_NOT_FOUND(2),
      /**
       * <code>ACH_FAILED = 3;</code>
       */
      ACH_FAILED(3),
      /**
       * <code>USER_IN_TOO_MANY_CHANNELS = 4;</code>
       */
      USER_IN_TOO_MANY_CHANNELS(4),
      /**
       * <code>RATE_LIMIT_EXCEEDED = 5;</code>
       */
      RATE_LIMIT_EXCEEDED(5),
      /**
       * <code>CHANNEL_FULL = 6;</code>
       */
      CHANNEL_FULL(6),
      /**
       * <code>CHANNEL_FULL_OVERFLOWED = 7;</code>
       */
      CHANNEL_FULL_OVERFLOWED(7),
      /**
       * <code>FAILED_TO_ADD_USER = 8;</code>
       */
      FAILED_TO_ADD_USER(8),
      /**
       * <code>CHANNEL_TYPE_DISABLED = 9;</code>
       */
      CHANNEL_TYPE_DISABLED(9),
      /**
       * <code>PRIVATE_CHAT_CREATE_FAILED = 10;</code>
       */
      PRIVATE_CHAT_CREATE_FAILED(10),
      /**
       * <code>PRIVATE_CHAT_NO_PERMISSION = 11;</code>
       */
      PRIVATE_CHAT_NO_PERMISSION(11),
      /**
       * <code>PRIVATE_CHAT_CREATE_LOCK_FAILED = 12;</code>
       */
      PRIVATE_CHAT_CREATE_LOCK_FAILED(12),
      /**
       * <code>PRIVATE_CHAT_KICKED = 13;</code>
       */
      PRIVATE_CHAT_KICKED(13),
      /**
       * <code>USER_NOT_ALLOWED = 14;</code>
       */
      USER_NOT_ALLOWED(14),
      /**
       * <code>ENSURE_SPECIAL_PRIVILEGES_FAILED = 15;</code>
       */
      ENSURE_SPECIAL_PRIVILEGES_FAILED(15),
      /**
       * <code>NEW_PLAYER_USER_NOT_ELIGIBLE = 16;</code>
       */
      NEW_PLAYER_USER_NOT_ELIGIBLE(16),
      /**
       * <code>SILENT_ERROR = 17;</code>
       */
      SILENT_ERROR(17),
      /**
       * <code>NEW_PLAYER_USER_BANNED = 18;</code>
       */
      NEW_PLAYER_USER_BANNED(18),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Result.class.getName());
      }
      /**
       * <code>JOIN_SUCCESS = 0;</code>
       */
      public static final int JOIN_SUCCESS_VALUE = 0;
      /**
       * <code>INVALID_CHANNEL_TYPE = 1;</code>
       */
      public static final int INVALID_CHANNEL_TYPE_VALUE = 1;
      /**
       * <code>ACCOUNT_NOT_FOUND = 2;</code>
       */
      public static final int ACCOUNT_NOT_FOUND_VALUE = 2;
      /**
       * <code>ACH_FAILED = 3;</code>
       */
      public static final int ACH_FAILED_VALUE = 3;
      /**
       * <code>USER_IN_TOO_MANY_CHANNELS = 4;</code>
       */
      public static final int USER_IN_TOO_MANY_CHANNELS_VALUE = 4;
      /**
       * <code>RATE_LIMIT_EXCEEDED = 5;</code>
       */
      public static final int RATE_LIMIT_EXCEEDED_VALUE = 5;
      /**
       * <code>CHANNEL_FULL = 6;</code>
       */
      public static final int CHANNEL_FULL_VALUE = 6;
      /**
       * <code>CHANNEL_FULL_OVERFLOWED = 7;</code>
       */
      public static final int CHANNEL_FULL_OVERFLOWED_VALUE = 7;
      /**
       * <code>FAILED_TO_ADD_USER = 8;</code>
       */
      public static final int FAILED_TO_ADD_USER_VALUE = 8;
      /**
       * <code>CHANNEL_TYPE_DISABLED = 9;</code>
       */
      public static final int CHANNEL_TYPE_DISABLED_VALUE = 9;
      /**
       * <code>PRIVATE_CHAT_CREATE_FAILED = 10;</code>
       */
      public static final int PRIVATE_CHAT_CREATE_FAILED_VALUE = 10;
      /**
       * <code>PRIVATE_CHAT_NO_PERMISSION = 11;</code>
       */
      public static final int PRIVATE_CHAT_NO_PERMISSION_VALUE = 11;
      /**
       * <code>PRIVATE_CHAT_CREATE_LOCK_FAILED = 12;</code>
       */
      public static final int PRIVATE_CHAT_CREATE_LOCK_FAILED_VALUE = 12;
      /**
       * <code>PRIVATE_CHAT_KICKED = 13;</code>
       */
      public static final int PRIVATE_CHAT_KICKED_VALUE = 13;
      /**
       * <code>USER_NOT_ALLOWED = 14;</code>
       */
      public static final int USER_NOT_ALLOWED_VALUE = 14;
      /**
       * <code>ENSURE_SPECIAL_PRIVILEGES_FAILED = 15;</code>
       */
      public static final int ENSURE_SPECIAL_PRIVILEGES_FAILED_VALUE = 15;
      /**
       * <code>NEW_PLAYER_USER_NOT_ELIGIBLE = 16;</code>
       */
      public static final int NEW_PLAYER_USER_NOT_ELIGIBLE_VALUE = 16;
      /**
       * <code>SILENT_ERROR = 17;</code>
       */
      public static final int SILENT_ERROR_VALUE = 17;
      /**
       * <code>NEW_PLAYER_USER_BANNED = 18;</code>
       */
      public static final int NEW_PLAYER_USER_BANNED_VALUE = 18;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Result forNumber(int value) {
        switch (value) {
          case 0: return JOIN_SUCCESS;
          case 1: return INVALID_CHANNEL_TYPE;
          case 2: return ACCOUNT_NOT_FOUND;
          case 3: return ACH_FAILED;
          case 4: return USER_IN_TOO_MANY_CHANNELS;
          case 5: return RATE_LIMIT_EXCEEDED;
          case 6: return CHANNEL_FULL;
          case 7: return CHANNEL_FULL_OVERFLOWED;
          case 8: return FAILED_TO_ADD_USER;
          case 9: return CHANNEL_TYPE_DISABLED;
          case 10: return PRIVATE_CHAT_CREATE_FAILED;
          case 11: return PRIVATE_CHAT_NO_PERMISSION;
          case 12: return PRIVATE_CHAT_CREATE_LOCK_FAILED;
          case 13: return PRIVATE_CHAT_KICKED;
          case 14: return USER_NOT_ALLOWED;
          case 15: return ENSURE_SPECIAL_PRIVILEGES_FAILED;
          case 16: return NEW_PLAYER_USER_NOT_ELIGIBLE;
          case 17: return SILENT_ERROR;
          case 18: return NEW_PLAYER_USER_BANNED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAJoinChatChannelResponse.Result)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional uint32 response = 1;</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override
    public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 response = 1;</code>
     * @return The response.
     */
    @java.lang.Override
    public int getResponse() {
      return response_;
    }

    public static final int CHANNEL_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object channelName_ = "";
    /**
     * <code>optional string channel_name = 2;</code>
     * @return Whether the channelName field is set.
     */
    @java.lang.Override
    public boolean hasChannelName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The channelName.
     */
    @java.lang.Override
    public java.lang.String getChannelName() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_name = 2;</code>
     * @return The bytes for channelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 3;
    private long channelId_ = 0L;
    /**
     * <code>optional fixed64 channel_id = 3;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional fixed64 channel_id = 3;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int MAX_MEMBERS_FIELD_NUMBER = 4;
    private int maxMembers_ = 0;
    /**
     * <code>optional uint32 max_members = 4;</code>
     * @return Whether the maxMembers field is set.
     */
    @java.lang.Override
    public boolean hasMaxMembers() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 max_members = 4;</code>
     * @return The maxMembers.
     */
    @java.lang.Override
    public int getMaxMembers() {
      return maxMembers_;
    }

    public static final int MEMBERS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember> members_;
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    @java.lang.Override
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAChatMember members = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    public static final int CHANNEL_TYPE_FIELD_NUMBER = 6;
    private int channelType_ = 0;
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    @java.lang.Override public boolean hasChannelType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
    }

    public static final int RESULT_FIELD_NUMBER = 7;
    private int result_ = 0;
    /**
     * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result getResult() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result.JOIN_SUCCESS : result;
    }

    public static final int GC_INITIATED_JOIN_FIELD_NUMBER = 8;
    private boolean gcInitiatedJoin_ = false;
    /**
     * <code>optional bool gc_initiated_join = 8;</code>
     * @return Whether the gcInitiatedJoin field is set.
     */
    @java.lang.Override
    public boolean hasGcInitiatedJoin() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool gc_initiated_join = 8;</code>
     * @return The gcInitiatedJoin.
     */
    @java.lang.Override
    public boolean getGcInitiatedJoin() {
      return gcInitiatedJoin_;
    }

    public static final int CHANNEL_USER_ID_FIELD_NUMBER = 9;
    private int channelUserId_ = 0;
    /**
     * <code>optional uint32 channel_user_id = 9;</code>
     * @return Whether the channelUserId field is set.
     */
    @java.lang.Override
    public boolean hasChannelUserId() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 channel_user_id = 9;</code>
     * @return The channelUserId.
     */
    @java.lang.Override
    public int getChannelUserId() {
      return channelUserId_;
    }

    public static final int WELCOME_MESSAGE_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private volatile java.lang.Object welcomeMessage_ = "";
    /**
     * <code>optional string welcome_message = 10;</code>
     * @return Whether the welcomeMessage field is set.
     */
    @java.lang.Override
    public boolean hasWelcomeMessage() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional string welcome_message = 10;</code>
     * @return The welcomeMessage.
     */
    @java.lang.Override
    public java.lang.String getWelcomeMessage() {
      java.lang.Object ref = welcomeMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          welcomeMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string welcome_message = 10;</code>
     * @return The bytes for welcomeMessage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWelcomeMessageBytes() {
      java.lang.Object ref = welcomeMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        welcomeMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPECIAL_PRIVILEGES_FIELD_NUMBER = 11;
    private int specialPrivileges_ = 0;
    /**
     * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
     * @return Whether the specialPrivileges field is set.
     */
    @java.lang.Override public boolean hasSpecialPrivileges() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
     * @return The specialPrivileges.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges getSpecialPrivileges() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges result = kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges.forNumber(specialPrivileges_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges.k_EChatSpecialPrivileges_None : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, channelName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFixed64(3, channelId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, maxMembers_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(5, members_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeEnum(6, channelType_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeEnum(7, result_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(8, gcInitiatedJoin_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(9, channelUserId_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 10, welcomeMessage_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeEnum(11, specialPrivileges_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, channelName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, channelId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, maxMembers_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, members_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, channelType_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, result_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, gcInitiatedJoin_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, channelUserId_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(10, welcomeMessage_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, specialPrivileges_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (getResponse()
            != other.getResponse()) return false;
      }
      if (hasChannelName() != other.hasChannelName()) return false;
      if (hasChannelName()) {
        if (!getChannelName()
            .equals(other.getChannelName())) return false;
      }
      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasMaxMembers() != other.hasMaxMembers()) return false;
      if (hasMaxMembers()) {
        if (getMaxMembers()
            != other.getMaxMembers()) return false;
      }
      if (!getMembersList()
          .equals(other.getMembersList())) return false;
      if (hasChannelType() != other.hasChannelType()) return false;
      if (hasChannelType()) {
        if (channelType_ != other.channelType_) return false;
      }
      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (hasGcInitiatedJoin() != other.hasGcInitiatedJoin()) return false;
      if (hasGcInitiatedJoin()) {
        if (getGcInitiatedJoin()
            != other.getGcInitiatedJoin()) return false;
      }
      if (hasChannelUserId() != other.hasChannelUserId()) return false;
      if (hasChannelUserId()) {
        if (getChannelUserId()
            != other.getChannelUserId()) return false;
      }
      if (hasWelcomeMessage() != other.hasWelcomeMessage()) return false;
      if (hasWelcomeMessage()) {
        if (!getWelcomeMessage()
            .equals(other.getWelcomeMessage())) return false;
      }
      if (hasSpecialPrivileges() != other.hasSpecialPrivileges()) return false;
      if (hasSpecialPrivileges()) {
        if (specialPrivileges_ != other.specialPrivileges_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse();
      }
      if (hasChannelName()) {
        hash = (37 * hash) + CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getChannelName().hashCode();
      }
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (hasMaxMembers()) {
        hash = (37 * hash) + MAX_MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxMembers();
      }
      if (getMembersCount() > 0) {
        hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getMembersList().hashCode();
      }
      if (hasChannelType()) {
        hash = (37 * hash) + CHANNEL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + channelType_;
      }
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasGcInitiatedJoin()) {
        hash = (37 * hash) + GC_INITIATED_JOIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getGcInitiatedJoin());
      }
      if (hasChannelUserId()) {
        hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUserId();
      }
      if (hasWelcomeMessage()) {
        hash = (37 * hash) + WELCOME_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getWelcomeMessage().hashCode();
      }
      if (hasSpecialPrivileges()) {
        hash = (37 * hash) + SPECIAL_PRIVILEGES_FIELD_NUMBER;
        hash = (53 * hash) + specialPrivileges_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAJoinChatChannelResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAJoinChatChannelResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannelResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannelResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        channelName_ = "";
        channelId_ = 0L;
        maxMembers_ = 0;
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
        } else {
          members_ = null;
          membersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        channelType_ = 0;
        result_ = 0;
        gcInitiatedJoin_ = false;
        channelUserId_ = 0;
        welcomeMessage_ = "";
        specialPrivileges_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAJoinChatChannelResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse result) {
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelName_ = channelName_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.maxMembers_ = maxMembers_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.channelType_ = channelType_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.gcInitiatedJoin_ = gcInitiatedJoin_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.channelUserId_ = channelUserId_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.welcomeMessage_ = welcomeMessage_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.specialPrivileges_ = specialPrivileges_;
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasChannelName()) {
          channelName_ = other.channelName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasMaxMembers()) {
          setMaxMembers(other.getMaxMembers());
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000010);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasGcInitiatedJoin()) {
          setGcInitiatedJoin(other.getGcInitiatedJoin());
        }
        if (other.hasChannelUserId()) {
          setChannelUserId(other.getChannelUserId());
        }
        if (other.hasWelcomeMessage()) {
          welcomeMessage_ = other.welcomeMessage_;
          bitField0_ |= 0x00000200;
          onChanged();
        }
        if (other.hasSpecialPrivileges()) {
          setSpecialPrivileges(other.getSpecialPrivileges());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                response_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                channelName_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 25: {
                channelId_ = input.readFixed64();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 32: {
                maxMembers_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.parser(),
                        extensionRegistry);
                if (membersBuilder_ == null) {
                  ensureMembersIsMutable();
                  members_.add(m);
                } else {
                  membersBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 48: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(6, tmpRaw);
                } else {
                  channelType_ = tmpRaw;
                  bitField0_ |= 0x00000020;
                }
                break;
              } // case 48
              case 56: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(7, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000040;
                }
                break;
              } // case 56
              case 64: {
                gcInitiatedJoin_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                channelUserId_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 82: {
                welcomeMessage_ = input.readBytes();
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 88: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(11, tmpRaw);
                } else {
                  specialPrivileges_ = tmpRaw;
                  bitField0_ |= 0x00000400;
                }
                break;
              } // case 88
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ ;
      /**
       * <code>optional uint32 response = 1;</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override
      public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 response = 1;</code>
       * @return The response.
       */
      @java.lang.Override
      public int getResponse() {
        return response_;
      }
      /**
       * <code>optional uint32 response = 1;</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(int value) {

        response_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 response = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channelName_ = "";
      /**
       * <code>optional string channel_name = 2;</code>
       * @return Whether the channelName field is set.
       */
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @return The channelName.
       */
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @return The bytes for channelName.
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @param value The channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelName() {
        channelName_ = getDefaultInstance().getChannelName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 2;</code>
       * @param value The bytes for channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private long channelId_ ;
      /**
       * <code>optional fixed64 channel_id = 3;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional fixed64 channel_id = 3;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional fixed64 channel_id = 3;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 channel_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private int maxMembers_ ;
      /**
       * <code>optional uint32 max_members = 4;</code>
       * @return Whether the maxMembers field is set.
       */
      @java.lang.Override
      public boolean hasMaxMembers() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 max_members = 4;</code>
       * @return The maxMembers.
       */
      @java.lang.Override
      public int getMaxMembers() {
        return maxMembers_;
      }
      /**
       * <code>optional uint32 max_members = 4;</code>
       * @param value The maxMembers to set.
       * @return This builder for chaining.
       */
      public Builder setMaxMembers(int value) {

        maxMembers_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 max_members = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxMembers() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxMembers_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          members_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember>(members_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder addMembers(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder addMembers(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAChatMember members = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      private int channelType_ = 0;
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
       * @return Whether the channelType field is set.
       */
      @java.lang.Override public boolean hasChannelType() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
       * @return The channelType.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
       * @param value The channelType to set.
       * @return This builder for chaining.
       */
      public Builder setChannelType(kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        channelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 6 [default = DOTAChannelType_Regional];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channelType_ = 0;
        onChanged();
        return this;
      }

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result getResult() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result.JOIN_SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAJoinChatChannelResponse.Result result = 7 [default = JOIN_SUCCESS];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000040);
        result_ = 0;
        onChanged();
        return this;
      }

      private boolean gcInitiatedJoin_ ;
      /**
       * <code>optional bool gc_initiated_join = 8;</code>
       * @return Whether the gcInitiatedJoin field is set.
       */
      @java.lang.Override
      public boolean hasGcInitiatedJoin() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional bool gc_initiated_join = 8;</code>
       * @return The gcInitiatedJoin.
       */
      @java.lang.Override
      public boolean getGcInitiatedJoin() {
        return gcInitiatedJoin_;
      }
      /**
       * <code>optional bool gc_initiated_join = 8;</code>
       * @param value The gcInitiatedJoin to set.
       * @return This builder for chaining.
       */
      public Builder setGcInitiatedJoin(boolean value) {

        gcInitiatedJoin_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool gc_initiated_join = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearGcInitiatedJoin() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gcInitiatedJoin_ = false;
        onChanged();
        return this;
      }

      private int channelUserId_ ;
      /**
       * <code>optional uint32 channel_user_id = 9;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 9;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }
      /**
       * <code>optional uint32 channel_user_id = 9;</code>
       * @param value The channelUserId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUserId(int value) {

        channelUserId_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_user_id = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUserId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        channelUserId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object welcomeMessage_ = "";
      /**
       * <code>optional string welcome_message = 10;</code>
       * @return Whether the welcomeMessage field is set.
       */
      public boolean hasWelcomeMessage() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional string welcome_message = 10;</code>
       * @return The welcomeMessage.
       */
      public java.lang.String getWelcomeMessage() {
        java.lang.Object ref = welcomeMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            welcomeMessage_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string welcome_message = 10;</code>
       * @return The bytes for welcomeMessage.
       */
      public com.google.protobuf.ByteString
          getWelcomeMessageBytes() {
        java.lang.Object ref = welcomeMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          welcomeMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string welcome_message = 10;</code>
       * @param value The welcomeMessage to set.
       * @return This builder for chaining.
       */
      public Builder setWelcomeMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        welcomeMessage_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional string welcome_message = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearWelcomeMessage() {
        welcomeMessage_ = getDefaultInstance().getWelcomeMessage();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>optional string welcome_message = 10;</code>
       * @param value The bytes for welcomeMessage to set.
       * @return This builder for chaining.
       */
      public Builder setWelcomeMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        welcomeMessage_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }

      private int specialPrivileges_ = 0;
      /**
       * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
       * @return Whether the specialPrivileges field is set.
       */
      @java.lang.Override public boolean hasSpecialPrivileges() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
       * @return The specialPrivileges.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges getSpecialPrivileges() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges result = kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges.forNumber(specialPrivileges_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges.k_EChatSpecialPrivileges_None : result;
      }
      /**
       * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
       * @param value The specialPrivileges to set.
       * @return This builder for chaining.
       */
      public Builder setSpecialPrivileges(kz.moltenhaze.proto.dota.DotaSharedEnums.EChatSpecialPrivileges value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        specialPrivileges_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .EChatSpecialPrivileges special_privileges = 11 [default = k_EChatSpecialPrivileges_None];</code>
       * @return This builder for chaining.
       */
      public Builder clearSpecialPrivileges() {
        bitField0_ = (bitField0_ & ~0x00000400);
        specialPrivileges_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAJoinChatChannelResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAJoinChatChannelResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAJoinChatChannelResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAJoinChatChannelResponse>() {
      @java.lang.Override
      public CMsgDOTAJoinChatChannelResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAJoinChatChannelResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAJoinChatChannelResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAJoinChatChannelResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAOtherJoinedChatChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAOtherJoinedChatChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>optional string persona_name = 2;</code>
     * @return Whether the personaName field is set.
     */
    boolean hasPersonaName();
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The personaName.
     */
    java.lang.String getPersonaName();
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The bytes for personaName.
     */
    com.google.protobuf.ByteString
        getPersonaNameBytes();

    /**
     * <code>optional fixed64 steam_id = 3;</code>
     * @return Whether the steamId field is set.
     */
    boolean hasSteamId();
    /**
     * <code>optional fixed64 steam_id = 3;</code>
     * @return The steamId.
     */
    long getSteamId();

    /**
     * <code>optional uint32 channel_user_id = 4;</code>
     * @return Whether the channelUserId field is set.
     */
    boolean hasChannelUserId();
    /**
     * <code>optional uint32 channel_user_id = 4;</code>
     * @return The channelUserId.
     */
    int getChannelUserId();

    /**
     * <code>optional uint32 status = 5;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 5;</code>
     * @return The status.
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code CMsgDOTAOtherJoinedChatChannel}
   */
  public static final class CMsgDOTAOtherJoinedChatChannel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAOtherJoinedChatChannel)
      CMsgDOTAOtherJoinedChatChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAOtherJoinedChatChannel.class.getName());
    }
    // Use CMsgDOTAOtherJoinedChatChannel.newBuilder() to construct.
    private CMsgDOTAOtherJoinedChatChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAOtherJoinedChatChannel() {
      personaName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherJoinedChatChannel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherJoinedChatChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private long channelId_ = 0L;
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int PERSONA_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object personaName_ = "";
    /**
     * <code>optional string persona_name = 2;</code>
     * @return Whether the personaName field is set.
     */
    @java.lang.Override
    public boolean hasPersonaName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The personaName.
     */
    @java.lang.Override
    public java.lang.String getPersonaName() {
      java.lang.Object ref = personaName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          personaName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string persona_name = 2;</code>
     * @return The bytes for personaName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPersonaNameBytes() {
      java.lang.Object ref = personaName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        personaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STEAM_ID_FIELD_NUMBER = 3;
    private long steamId_ = 0L;
    /**
     * <code>optional fixed64 steam_id = 3;</code>
     * @return Whether the steamId field is set.
     */
    @java.lang.Override
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional fixed64 steam_id = 3;</code>
     * @return The steamId.
     */
    @java.lang.Override
    public long getSteamId() {
      return steamId_;
    }

    public static final int CHANNEL_USER_ID_FIELD_NUMBER = 4;
    private int channelUserId_ = 0;
    /**
     * <code>optional uint32 channel_user_id = 4;</code>
     * @return Whether the channelUserId field is set.
     */
    @java.lang.Override
    public boolean hasChannelUserId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 channel_user_id = 4;</code>
     * @return The channelUserId.
     */
    @java.lang.Override
    public int getChannelUserId() {
      return channelUserId_;
    }

    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_ = 0;
    /**
     * <code>optional uint32 status = 5;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 status = 5;</code>
     * @return The status.
     */
    @java.lang.Override
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, personaName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFixed64(3, steamId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, channelUserId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, status_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, personaName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, steamId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, channelUserId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasPersonaName() != other.hasPersonaName()) return false;
      if (hasPersonaName()) {
        if (!getPersonaName()
            .equals(other.getPersonaName())) return false;
      }
      if (hasSteamId() != other.hasSteamId()) return false;
      if (hasSteamId()) {
        if (getSteamId()
            != other.getSteamId()) return false;
      }
      if (hasChannelUserId() != other.hasChannelUserId()) return false;
      if (hasChannelUserId()) {
        if (getChannelUserId()
            != other.getChannelUserId()) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (getStatus()
            != other.getStatus()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (hasPersonaName()) {
        hash = (37 * hash) + PERSONA_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPersonaName().hashCode();
      }
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (hasChannelUserId()) {
        hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUserId();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAOtherJoinedChatChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAOtherJoinedChatChannel)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherJoinedChatChannel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherJoinedChatChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0L;
        personaName_ = "";
        steamId_ = 0L;
        channelUserId_ = 0;
        status_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherJoinedChatChannel_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.personaName_ = personaName_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.steamId_ = steamId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.channelUserId_ = channelUserId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.status_ = status_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasPersonaName()) {
          personaName_ = other.personaName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasChannelUserId()) {
          setChannelUserId(other.getChannelUserId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                channelId_ = input.readFixed64();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 18: {
                personaName_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 25: {
                steamId_ = input.readFixed64();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 32: {
                channelUserId_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                status_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long channelId_ ;
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object personaName_ = "";
      /**
       * <code>optional string persona_name = 2;</code>
       * @return Whether the personaName field is set.
       */
      public boolean hasPersonaName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The personaName.
       */
      public java.lang.String getPersonaName() {
        java.lang.Object ref = personaName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            personaName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The bytes for personaName.
       */
      public com.google.protobuf.ByteString
          getPersonaNameBytes() {
        java.lang.Object ref = personaName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          personaName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @param value The personaName to set.
       * @return This builder for chaining.
       */
      public Builder setPersonaName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        personaName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPersonaName() {
        personaName_ = getDefaultInstance().getPersonaName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @param value The bytes for personaName to set.
       * @return This builder for chaining.
       */
      public Builder setPersonaNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        personaName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private long steamId_ ;
      /**
       * <code>optional fixed64 steam_id = 3;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional fixed64 steam_id = 3;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional fixed64 steam_id = 3;</code>
       * @param value The steamId to set.
       * @return This builder for chaining.
       */
      public Builder setSteamId(long value) {

        steamId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steam_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private int channelUserId_ ;
      /**
       * <code>optional uint32 channel_user_id = 4;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 4;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }
      /**
       * <code>optional uint32 channel_user_id = 4;</code>
       * @param value The channelUserId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUserId(int value) {

        channelUserId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_user_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUserId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channelUserId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional uint32 status = 5;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 status = 5;</code>
       * @return The status.
       */
      @java.lang.Override
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 5;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(int value) {

        status_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAOtherJoinedChatChannel)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAOtherJoinedChatChannel)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAOtherJoinedChatChannel>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAOtherJoinedChatChannel>() {
      @java.lang.Override
      public CMsgDOTAOtherJoinedChatChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAOtherJoinedChatChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAOtherJoinedChatChannel> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherJoinedChatChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAOtherLeftChatChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAOtherLeftChatChannel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>optional fixed64 steam_id = 2;</code>
     * @return Whether the steamId field is set.
     */
    boolean hasSteamId();
    /**
     * <code>optional fixed64 steam_id = 2;</code>
     * @return The steamId.
     */
    long getSteamId();

    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return Whether the channelUserId field is set.
     */
    boolean hasChannelUserId();
    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return The channelUserId.
     */
    int getChannelUserId();
  }
  /**
   * Protobuf type {@code CMsgDOTAOtherLeftChatChannel}
   */
  public static final class CMsgDOTAOtherLeftChatChannel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAOtherLeftChatChannel)
      CMsgDOTAOtherLeftChatChannelOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAOtherLeftChatChannel.class.getName());
    }
    // Use CMsgDOTAOtherLeftChatChannel.newBuilder() to construct.
    private CMsgDOTAOtherLeftChatChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAOtherLeftChatChannel() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherLeftChatChannel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherLeftChatChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private long channelId_ = 0L;
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int STEAM_ID_FIELD_NUMBER = 2;
    private long steamId_ = 0L;
    /**
     * <code>optional fixed64 steam_id = 2;</code>
     * @return Whether the steamId field is set.
     */
    @java.lang.Override
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 steam_id = 2;</code>
     * @return The steamId.
     */
    @java.lang.Override
    public long getSteamId() {
      return steamId_;
    }

    public static final int CHANNEL_USER_ID_FIELD_NUMBER = 3;
    private int channelUserId_ = 0;
    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return Whether the channelUserId field is set.
     */
    @java.lang.Override
    public boolean hasChannelUserId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 channel_user_id = 3;</code>
     * @return The channelUserId.
     */
    @java.lang.Override
    public int getChannelUserId() {
      return channelUserId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, steamId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, channelUserId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, steamId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, channelUserId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasSteamId() != other.hasSteamId()) return false;
      if (hasSteamId()) {
        if (getSteamId()
            != other.getSteamId()) return false;
      }
      if (hasChannelUserId() != other.hasChannelUserId()) return false;
      if (hasChannelUserId()) {
        if (getChannelUserId()
            != other.getChannelUserId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (hasChannelUserId()) {
        hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelUserId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAOtherLeftChatChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAOtherLeftChatChannel)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherLeftChatChannel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherLeftChatChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0L;
        steamId_ = 0L;
        channelUserId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAOtherLeftChatChannel_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.steamId_ = steamId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.channelUserId_ = channelUserId_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasChannelUserId()) {
          setChannelUserId(other.getChannelUserId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                channelId_ = input.readFixed64();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                steamId_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 24: {
                channelUserId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long channelId_ ;
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private long steamId_ ;
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @param value The steamId to set.
       * @return This builder for chaining.
       */
      public Builder setSteamId(long value) {

        steamId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private int channelUserId_ ;
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @param value The channelUserId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUserId(int value) {

        channelUserId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUserId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelUserId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAOtherLeftChatChannel)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAOtherLeftChatChannel)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAOtherLeftChatChannel>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAOtherLeftChatChannel>() {
      @java.lang.Override
      public CMsgDOTAOtherLeftChatChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAOtherLeftChatChannel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAOtherLeftChatChannel> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAOtherLeftChatChannel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTARequestChatChannelListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTARequestChatChannelList)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgDOTARequestChatChannelList}
   */
  public static final class CMsgDOTARequestChatChannelList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTARequestChatChannelList)
      CMsgDOTARequestChatChannelListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTARequestChatChannelList.class.getName());
    }
    // Use CMsgDOTARequestChatChannelList.newBuilder() to construct.
    private CMsgDOTARequestChatChannelList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTARequestChatChannelList() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTARequestChatChannelList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTARequestChatChannelList)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelList_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTARequestChatChannelList)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTARequestChatChannelList)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTARequestChatChannelList>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTARequestChatChannelList>() {
      @java.lang.Override
      public CMsgDOTARequestChatChannelList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTARequestChatChannelList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTARequestChatChannelList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTARequestChatChannelListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTARequestChatChannelListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel> 
        getChannelsList();
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel getChannels(int index);
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    int getChannelsCount();
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder> 
        getChannelsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder getChannelsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTARequestChatChannelListResponse}
   */
  public static final class CMsgDOTARequestChatChannelListResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTARequestChatChannelListResponse)
      CMsgDOTARequestChatChannelListResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTARequestChatChannelListResponse.class.getName());
    }
    // Use CMsgDOTARequestChatChannelListResponse.newBuilder() to construct.
    private CMsgDOTARequestChatChannelListResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTARequestChatChannelListResponse() {
      channels_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.Builder.class);
    }

    public interface ChatChannelOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTARequestChatChannelListResponse.ChatChannel)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string channel_name = 1;</code>
       * @return Whether the channelName field is set.
       */
      boolean hasChannelName();
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The channelName.
       */
      java.lang.String getChannelName();
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The bytes for channelName.
       */
      com.google.protobuf.ByteString
          getChannelNameBytes();

      /**
       * <code>optional uint32 num_members = 2;</code>
       * @return Whether the numMembers field is set.
       */
      boolean hasNumMembers();
      /**
       * <code>optional uint32 num_members = 2;</code>
       * @return The numMembers.
       */
      int getNumMembers();

      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
       * @return Whether the channelType field is set.
       */
      boolean hasChannelType();
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
       * @return The channelType.
       */
      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType();
    }
    /**
     * Protobuf type {@code CMsgDOTARequestChatChannelListResponse.ChatChannel}
     */
    public static final class ChatChannel extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTARequestChatChannelListResponse.ChatChannel)
        ChatChannelOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          ChatChannel.class.getName());
      }
      // Use ChatChannel.newBuilder() to construct.
      private ChatChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ChatChannel() {
        channelName_ = "";
        channelType_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder.class);
      }

      private int bitField0_;
      public static final int CHANNEL_NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object channelName_ = "";
      /**
       * <code>optional string channel_name = 1;</code>
       * @return Whether the channelName field is set.
       */
      @java.lang.Override
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The channelName.
       */
      @java.lang.Override
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The bytes for channelName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NUM_MEMBERS_FIELD_NUMBER = 2;
      private int numMembers_ = 0;
      /**
       * <code>optional uint32 num_members = 2;</code>
       * @return Whether the numMembers field is set.
       */
      @java.lang.Override
      public boolean hasNumMembers() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 num_members = 2;</code>
       * @return The numMembers.
       */
      @java.lang.Override
      public int getNumMembers() {
        return numMembers_;
      }

      public static final int CHANNEL_TYPE_FIELD_NUMBER = 3;
      private int channelType_ = 0;
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
       * @return Whether the channelType field is set.
       */
      @java.lang.Override public boolean hasChannelType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
       * @return The channelType.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, channelName_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, numMembers_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeEnum(3, channelType_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, channelName_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, numMembers_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, channelType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel) obj;

        if (hasChannelName() != other.hasChannelName()) return false;
        if (hasChannelName()) {
          if (!getChannelName()
              .equals(other.getChannelName())) return false;
        }
        if (hasNumMembers() != other.hasNumMembers()) return false;
        if (hasNumMembers()) {
          if (getNumMembers()
              != other.getNumMembers()) return false;
        }
        if (hasChannelType() != other.hasChannelType()) return false;
        if (hasChannelType()) {
          if (channelType_ != other.channelType_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasChannelName()) {
          hash = (37 * hash) + CHANNEL_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getChannelName().hashCode();
        }
        if (hasNumMembers()) {
          hash = (37 * hash) + NUM_MEMBERS_FIELD_NUMBER;
          hash = (53 * hash) + getNumMembers();
        }
        if (hasChannelType()) {
          hash = (37 * hash) + CHANNEL_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + channelType_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTARequestChatChannelListResponse.ChatChannel}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTARequestChatChannelListResponse.ChatChannel)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          channelName_ = "";
          numMembers_ = 0;
          channelType_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.channelName_ = channelName_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.numMembers_ = numMembers_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.channelType_ = channelType_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.getDefaultInstance()) return this;
          if (other.hasChannelName()) {
            channelName_ = other.channelName_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasNumMembers()) {
            setNumMembers(other.getNumMembers());
          }
          if (other.hasChannelType()) {
            setChannelType(other.getChannelType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  channelName_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  numMembers_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t tmpValue =
                      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(3, tmpRaw);
                  } else {
                    channelType_ = tmpRaw;
                    bitField0_ |= 0x00000004;
                  }
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object channelName_ = "";
        /**
         * <code>optional string channel_name = 1;</code>
         * @return Whether the channelName field is set.
         */
        public boolean hasChannelName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string channel_name = 1;</code>
         * @return The channelName.
         */
        public java.lang.String getChannelName() {
          java.lang.Object ref = channelName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              channelName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string channel_name = 1;</code>
         * @return The bytes for channelName.
         */
        public com.google.protobuf.ByteString
            getChannelNameBytes() {
          java.lang.Object ref = channelName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            channelName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string channel_name = 1;</code>
         * @param value The channelName to set.
         * @return This builder for chaining.
         */
        public Builder setChannelName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          channelName_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string channel_name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearChannelName() {
          channelName_ = getDefaultInstance().getChannelName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string channel_name = 1;</code>
         * @param value The bytes for channelName to set.
         * @return This builder for chaining.
         */
        public Builder setChannelNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          channelName_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private int numMembers_ ;
        /**
         * <code>optional uint32 num_members = 2;</code>
         * @return Whether the numMembers field is set.
         */
        @java.lang.Override
        public boolean hasNumMembers() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 num_members = 2;</code>
         * @return The numMembers.
         */
        @java.lang.Override
        public int getNumMembers() {
          return numMembers_;
        }
        /**
         * <code>optional uint32 num_members = 2;</code>
         * @param value The numMembers to set.
         * @return This builder for chaining.
         */
        public Builder setNumMembers(int value) {

          numMembers_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 num_members = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNumMembers() {
          bitField0_ = (bitField0_ & ~0x00000002);
          numMembers_ = 0;
          onChanged();
          return this;
        }

        private int channelType_ = 0;
        /**
         * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
         * @return Whether the channelType field is set.
         */
        @java.lang.Override public boolean hasChannelType() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
         * @return The channelType.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
          kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
          return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
        }
        /**
         * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
         * @param value The channelType to set.
         * @return This builder for chaining.
         */
        public Builder setChannelType(kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          channelType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .DOTAChatChannelType_t channel_type = 3 [default = DOTAChannelType_Regional];</code>
         * @return This builder for chaining.
         */
        public Builder clearChannelType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          channelType_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTARequestChatChannelListResponse.ChatChannel)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTARequestChatChannelListResponse.ChatChannel)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ChatChannel>
          PARSER = new com.google.protobuf.AbstractParser<ChatChannel>() {
        @java.lang.Override
        public ChatChannel parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ChatChannel> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ChatChannel> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CHANNELS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel> channels_;
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel> getChannelsList() {
      return channels_;
    }
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder> 
        getChannelsOrBuilderList() {
      return channels_;
    }
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    @java.lang.Override
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel getChannels(int index) {
      return channels_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder getChannelsOrBuilder(
        int index) {
      return channels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < channels_.size(); i++) {
        output.writeMessage(1, channels_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < channels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, channels_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse) obj;

      if (!getChannelsList()
          .equals(other.getChannelsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChannelsCount() > 0) {
        hash = (37 * hash) + CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTARequestChatChannelListResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTARequestChatChannelListResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
        } else {
          channels_ = null;
          channelsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTARequestChatChannelListResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse result) {
        if (channelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            channels_ = java.util.Collections.unmodifiableList(channels_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.channels_ = channels_;
        } else {
          result.channels_ = channelsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.getDefaultInstance()) return this;
        if (channelsBuilder_ == null) {
          if (!other.channels_.isEmpty()) {
            if (channels_.isEmpty()) {
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChannelsIsMutable();
              channels_.addAll(other.channels_);
            }
            onChanged();
          }
        } else {
          if (!other.channels_.isEmpty()) {
            if (channelsBuilder_.isEmpty()) {
              channelsBuilder_.dispose();
              channelsBuilder_ = null;
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
              channelsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChannelsFieldBuilder() : null;
            } else {
              channelsBuilder_.addAllMessages(other.channels_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.parser(),
                        extensionRegistry);
                if (channelsBuilder_ == null) {
                  ensureChannelsIsMutable();
                  channels_.add(m);
                } else {
                  channelsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel> channels_ =
        java.util.Collections.emptyList();
      private void ensureChannelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          channels_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel>(channels_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder> channelsBuilder_;

      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel> getChannelsList() {
        if (channelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channels_);
        } else {
          return channelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public int getChannelsCount() {
        if (channelsBuilder_ == null) {
          return channels_.size();
        } else {
          return channelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel getChannels(int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);
        } else {
          return channelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder setChannels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.set(index, value);
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder setChannels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder addChannels(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder addChannels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(index, value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder addChannels(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder addChannels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel> values) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channels_);
          onChanged();
        } else {
          channelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder clearChannels() {
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public Builder removeChannels(int index) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.remove(index);
          onChanged();
        } else {
          channelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder getChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder getChannelsOrBuilder(
          int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);  } else {
          return channelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder> 
           getChannelsOrBuilderList() {
        if (channelsBuilder_ != null) {
          return channelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channels_);
        }
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder addChannelsBuilder() {
        return getChannelsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder addChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARequestChatChannelListResponse.ChatChannel channels = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder> 
           getChannelsBuilderList() {
        return getChannelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder> 
          getChannelsFieldBuilder() {
        if (channelsBuilder_ == null) {
          channelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannel.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse.ChatChannelOrBuilder>(
                  channels_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          channels_ = null;
        }
        return channelsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTARequestChatChannelListResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTARequestChatChannelListResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTARequestChatChannelListResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTARequestChatChannelListResponse>() {
      @java.lang.Override
      public CMsgDOTARequestChatChannelListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTARequestChatChannelListResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTARequestChatChannelListResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTARequestChatChannelListResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatGetUserListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatGetUserListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return The channelId.
     */
    long getChannelId();

    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member> 
        getMembersList();
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member getMembers(int index);
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder getMembersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAChatGetUserListResponse}
   */
  public static final class CMsgDOTAChatGetUserListResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatGetUserListResponse)
      CMsgDOTAChatGetUserListResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatGetUserListResponse.class.getName());
    }
    // Use CMsgDOTAChatGetUserListResponse.newBuilder() to construct.
    private CMsgDOTAChatGetUserListResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatGetUserListResponse() {
      members_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Builder.class);
    }

    public interface MemberOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAChatGetUserListResponse.Member)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return Whether the steamId field is set.
       */
      boolean hasSteamId();
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return The steamId.
       */
      long getSteamId();

      /**
       * <code>optional string persona_name = 2;</code>
       * @return Whether the personaName field is set.
       */
      boolean hasPersonaName();
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The personaName.
       */
      java.lang.String getPersonaName();
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The bytes for personaName.
       */
      com.google.protobuf.ByteString
          getPersonaNameBytes();

      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return Whether the channelUserId field is set.
       */
      boolean hasChannelUserId();
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return The channelUserId.
       */
      int getChannelUserId();

      /**
       * <code>optional uint32 status = 4;</code>
       * @return Whether the status field is set.
       */
      boolean hasStatus();
      /**
       * <code>optional uint32 status = 4;</code>
       * @return The status.
       */
      int getStatus();
    }
    /**
     * Protobuf type {@code CMsgDOTAChatGetUserListResponse.Member}
     */
    public static final class Member extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAChatGetUserListResponse.Member)
        MemberOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Member.class.getName());
      }
      // Use Member.newBuilder() to construct.
      private Member(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Member() {
        personaName_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_Member_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_Member_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder.class);
      }

      private int bitField0_;
      public static final int STEAM_ID_FIELD_NUMBER = 1;
      private long steamId_ = 0L;
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 steam_id = 1;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }

      public static final int PERSONA_NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object personaName_ = "";
      /**
       * <code>optional string persona_name = 2;</code>
       * @return Whether the personaName field is set.
       */
      @java.lang.Override
      public boolean hasPersonaName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The personaName.
       */
      @java.lang.Override
      public java.lang.String getPersonaName() {
        java.lang.Object ref = personaName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            personaName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string persona_name = 2;</code>
       * @return The bytes for personaName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPersonaNameBytes() {
        java.lang.Object ref = personaName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          personaName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CHANNEL_USER_ID_FIELD_NUMBER = 3;
      private int channelUserId_ = 0;
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return Whether the channelUserId field is set.
       */
      @java.lang.Override
      public boolean hasChannelUserId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 channel_user_id = 3;</code>
       * @return The channelUserId.
       */
      @java.lang.Override
      public int getChannelUserId() {
        return channelUserId_;
      }

      public static final int STATUS_FIELD_NUMBER = 4;
      private int status_ = 0;
      /**
       * <code>optional uint32 status = 4;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 status = 4;</code>
       * @return The status.
       */
      @java.lang.Override
      public int getStatus() {
        return status_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFixed64(1, steamId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, personaName_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, channelUserId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, status_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, steamId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, personaName_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, channelUserId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, status_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member) obj;

        if (hasSteamId() != other.hasSteamId()) return false;
        if (hasSteamId()) {
          if (getSteamId()
              != other.getSteamId()) return false;
        }
        if (hasPersonaName() != other.hasPersonaName()) return false;
        if (hasPersonaName()) {
          if (!getPersonaName()
              .equals(other.getPersonaName())) return false;
        }
        if (hasChannelUserId() != other.hasChannelUserId()) return false;
        if (hasChannelUserId()) {
          if (getChannelUserId()
              != other.getChannelUserId()) return false;
        }
        if (hasStatus() != other.hasStatus()) return false;
        if (hasStatus()) {
          if (getStatus()
              != other.getStatus()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSteamId()) {
          hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSteamId());
        }
        if (hasPersonaName()) {
          hash = (37 * hash) + PERSONA_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getPersonaName().hashCode();
        }
        if (hasChannelUserId()) {
          hash = (37 * hash) + CHANNEL_USER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getChannelUserId();
        }
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getStatus();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAChatGetUserListResponse.Member}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAChatGetUserListResponse.Member)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_Member_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_Member_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          steamId_ = 0L;
          personaName_ = "";
          channelUserId_ = 0;
          status_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_Member_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.steamId_ = steamId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.personaName_ = personaName_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.channelUserId_ = channelUserId_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.status_ = status_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.getDefaultInstance()) return this;
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          if (other.hasPersonaName()) {
            personaName_ = other.personaName_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.hasChannelUserId()) {
            setChannelUserId(other.getChannelUserId());
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  steamId_ = input.readFixed64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 18: {
                  personaName_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  channelUserId_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  status_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long steamId_ ;
        /**
         * <code>optional fixed64 steam_id = 1;</code>
         * @return Whether the steamId field is set.
         */
        @java.lang.Override
        public boolean hasSteamId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional fixed64 steam_id = 1;</code>
         * @return The steamId.
         */
        @java.lang.Override
        public long getSteamId() {
          return steamId_;
        }
        /**
         * <code>optional fixed64 steam_id = 1;</code>
         * @param value The steamId to set.
         * @return This builder for chaining.
         */
        public Builder setSteamId(long value) {

          steamId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steam_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSteamId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          steamId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object personaName_ = "";
        /**
         * <code>optional string persona_name = 2;</code>
         * @return Whether the personaName field is set.
         */
        public boolean hasPersonaName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string persona_name = 2;</code>
         * @return The personaName.
         */
        public java.lang.String getPersonaName() {
          java.lang.Object ref = personaName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              personaName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string persona_name = 2;</code>
         * @return The bytes for personaName.
         */
        public com.google.protobuf.ByteString
            getPersonaNameBytes() {
          java.lang.Object ref = personaName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            personaName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string persona_name = 2;</code>
         * @param value The personaName to set.
         * @return This builder for chaining.
         */
        public Builder setPersonaName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          personaName_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string persona_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPersonaName() {
          personaName_ = getDefaultInstance().getPersonaName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string persona_name = 2;</code>
         * @param value The bytes for personaName to set.
         * @return This builder for chaining.
         */
        public Builder setPersonaNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          personaName_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private int channelUserId_ ;
        /**
         * <code>optional uint32 channel_user_id = 3;</code>
         * @return Whether the channelUserId field is set.
         */
        @java.lang.Override
        public boolean hasChannelUserId() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 channel_user_id = 3;</code>
         * @return The channelUserId.
         */
        @java.lang.Override
        public int getChannelUserId() {
          return channelUserId_;
        }
        /**
         * <code>optional uint32 channel_user_id = 3;</code>
         * @param value The channelUserId to set.
         * @return This builder for chaining.
         */
        public Builder setChannelUserId(int value) {

          channelUserId_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 channel_user_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearChannelUserId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          channelUserId_ = 0;
          onChanged();
          return this;
        }

        private int status_ ;
        /**
         * <code>optional uint32 status = 4;</code>
         * @return Whether the status field is set.
         */
        @java.lang.Override
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 status = 4;</code>
         * @return The status.
         */
        @java.lang.Override
        public int getStatus() {
          return status_;
        }
        /**
         * <code>optional uint32 status = 4;</code>
         * @param value The status to set.
         * @return This builder for chaining.
         */
        public Builder setStatus(int value) {

          status_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 status = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000008);
          status_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAChatGetUserListResponse.Member)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetUserListResponse.Member)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Member>
          PARSER = new com.google.protobuf.AbstractParser<Member>() {
        @java.lang.Override
        public Member parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Member> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Member> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private long channelId_ = 0L;
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed64 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public long getChannelId() {
      return channelId_;
    }

    public static final int MEMBERS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member> members_;
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    @java.lang.Override
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(1, channelId_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(2, members_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, channelId_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, members_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (!getMembersList()
          .equals(other.getMembersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getChannelId());
      }
      if (getMembersCount() > 0) {
        hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getMembersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatGetUserListResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatGetUserListResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0L;
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
        } else {
          members_ = null;
          membersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetUserListResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse result) {
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000002);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                channelId_ = input.readFixed64();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.parser(),
                        extensionRegistry);
                if (membersBuilder_ == null) {
                  ensureMembersIsMutable();
                  members_.add(m);
                } else {
                  membersBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long channelId_ ;
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(long value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          members_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member>(members_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder addMembers(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder addMembers(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAChatGetUserListResponse.Member members = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.Member.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse.MemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatGetUserListResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetUserListResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatGetUserListResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatGetUserListResponse>() {
      @java.lang.Override
      public CMsgDOTAChatGetUserListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatGetUserListResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatGetUserListResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetUserListResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatGetMemberCountOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatGetMemberCount)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string channel_name = 1;</code>
     * @return Whether the channelName field is set.
     */
    boolean hasChannelName();
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The channelName.
     */
    java.lang.String getChannelName();
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The bytes for channelName.
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    boolean hasChannelType();
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType();
  }
  /**
   * Protobuf type {@code CMsgDOTAChatGetMemberCount}
   */
  public static final class CMsgDOTAChatGetMemberCount extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatGetMemberCount)
      CMsgDOTAChatGetMemberCountOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatGetMemberCount.class.getName());
    }
    // Use CMsgDOTAChatGetMemberCount.newBuilder() to construct.
    private CMsgDOTAChatGetMemberCount(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatGetMemberCount() {
      channelName_ = "";
      channelType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object channelName_ = "";
    /**
     * <code>optional string channel_name = 1;</code>
     * @return Whether the channelName field is set.
     */
    @java.lang.Override
    public boolean hasChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The channelName.
     */
    @java.lang.Override
    public java.lang.String getChannelName() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The bytes for channelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_TYPE_FIELD_NUMBER = 2;
    private int channelType_ = 0;
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    @java.lang.Override public boolean hasChannelType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, channelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, channelType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, channelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, channelType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount) obj;

      if (hasChannelName() != other.hasChannelName()) return false;
      if (hasChannelName()) {
        if (!getChannelName()
            .equals(other.getChannelName())) return false;
      }
      if (hasChannelType() != other.hasChannelType()) return false;
      if (hasChannelType()) {
        if (channelType_ != other.channelType_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelName()) {
        hash = (37 * hash) + CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getChannelName().hashCode();
      }
      if (hasChannelType()) {
        hash = (37 * hash) + CHANNEL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + channelType_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatGetMemberCount}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatGetMemberCount)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCount_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelName_ = "";
        channelType_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCount_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelName_ = channelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelType_ = channelType_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount.getDefaultInstance()) return this;
        if (other.hasChannelName()) {
          channelName_ = other.channelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                channelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  channelType_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object channelName_ = "";
      /**
       * <code>optional string channel_name = 1;</code>
       * @return Whether the channelName field is set.
       */
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The channelName.
       */
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The bytes for channelName.
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @param value The channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelName() {
        channelName_ = getDefaultInstance().getChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @param value The bytes for channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int channelType_ = 0;
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @return Whether the channelType field is set.
       */
      @java.lang.Override public boolean hasChannelType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @return The channelType.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @param value The channelType to set.
       * @return This builder for chaining.
       */
      public Builder setChannelType(kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        channelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatGetMemberCount)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetMemberCount)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatGetMemberCount>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatGetMemberCount>() {
      @java.lang.Override
      public CMsgDOTAChatGetMemberCount parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatGetMemberCount> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatGetMemberCount> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCount getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatGetMemberCountResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatGetMemberCountResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string channel_name = 1;</code>
     * @return Whether the channelName field is set.
     */
    boolean hasChannelName();
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The channelName.
     */
    java.lang.String getChannelName();
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The bytes for channelName.
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    boolean hasChannelType();
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType();

    /**
     * <code>optional uint32 member_count = 3;</code>
     * @return Whether the memberCount field is set.
     */
    boolean hasMemberCount();
    /**
     * <code>optional uint32 member_count = 3;</code>
     * @return The memberCount.
     */
    int getMemberCount();
  }
  /**
   * Protobuf type {@code CMsgDOTAChatGetMemberCountResponse}
   */
  public static final class CMsgDOTAChatGetMemberCountResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatGetMemberCountResponse)
      CMsgDOTAChatGetMemberCountResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatGetMemberCountResponse.class.getName());
    }
    // Use CMsgDOTAChatGetMemberCountResponse.newBuilder() to construct.
    private CMsgDOTAChatGetMemberCountResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatGetMemberCountResponse() {
      channelName_ = "";
      channelType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCountResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCountResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object channelName_ = "";
    /**
     * <code>optional string channel_name = 1;</code>
     * @return Whether the channelName field is set.
     */
    @java.lang.Override
    public boolean hasChannelName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The channelName.
     */
    @java.lang.Override
    public java.lang.String getChannelName() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel_name = 1;</code>
     * @return The bytes for channelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_TYPE_FIELD_NUMBER = 2;
    private int channelType_ = 0;
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return Whether the channelType field is set.
     */
    @java.lang.Override public boolean hasChannelType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
     * @return The channelType.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
    }

    public static final int MEMBER_COUNT_FIELD_NUMBER = 3;
    private int memberCount_ = 0;
    /**
     * <code>optional uint32 member_count = 3;</code>
     * @return Whether the memberCount field is set.
     */
    @java.lang.Override
    public boolean hasMemberCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 member_count = 3;</code>
     * @return The memberCount.
     */
    @java.lang.Override
    public int getMemberCount() {
      return memberCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, channelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, channelType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, memberCount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, channelName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, channelType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, memberCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse) obj;

      if (hasChannelName() != other.hasChannelName()) return false;
      if (hasChannelName()) {
        if (!getChannelName()
            .equals(other.getChannelName())) return false;
      }
      if (hasChannelType() != other.hasChannelType()) return false;
      if (hasChannelType()) {
        if (channelType_ != other.channelType_) return false;
      }
      if (hasMemberCount() != other.hasMemberCount()) return false;
      if (hasMemberCount()) {
        if (getMemberCount()
            != other.getMemberCount()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelName()) {
        hash = (37 * hash) + CHANNEL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getChannelName().hashCode();
      }
      if (hasChannelType()) {
        hash = (37 * hash) + CHANNEL_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + channelType_;
      }
      if (hasMemberCount()) {
        hash = (37 * hash) + MEMBER_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getMemberCount();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatGetMemberCountResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatGetMemberCountResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCountResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCountResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelName_ = "";
        channelType_ = 0;
        memberCount_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatGetMemberCountResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelName_ = channelName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelType_ = channelType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.memberCount_ = memberCount_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse.getDefaultInstance()) return this;
        if (other.hasChannelName()) {
          channelName_ = other.channelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        if (other.hasMemberCount()) {
          setMemberCount(other.getMemberCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                channelName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  channelType_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 24: {
                memberCount_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object channelName_ = "";
      /**
       * <code>optional string channel_name = 1;</code>
       * @return Whether the channelName field is set.
       */
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The channelName.
       */
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return The bytes for channelName.
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @param value The channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelName() {
        channelName_ = getDefaultInstance().getChannelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel_name = 1;</code>
       * @param value The bytes for channelName to set.
       * @return This builder for chaining.
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        channelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int channelType_ = 0;
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @return Whether the channelType field is set.
       */
      @java.lang.Override public boolean hasChannelType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @return The channelType.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t getChannelType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.forNumber(channelType_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t.DOTAChannelType_Regional : result;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @param value The channelType to set.
       * @return This builder for chaining.
       */
      public Builder setChannelType(kz.moltenhaze.proto.dota.DotaSharedEnums.DOTAChatChannelType_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        channelType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTAChatChannelType_t channel_type = 2 [default = DOTAChannelType_Regional];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelType_ = 0;
        onChanged();
        return this;
      }

      private int memberCount_ ;
      /**
       * <code>optional uint32 member_count = 3;</code>
       * @return Whether the memberCount field is set.
       */
      @java.lang.Override
      public boolean hasMemberCount() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 member_count = 3;</code>
       * @return The memberCount.
       */
      @java.lang.Override
      public int getMemberCount() {
        return memberCount_;
      }
      /**
       * <code>optional uint32 member_count = 3;</code>
       * @param value The memberCount to set.
       * @return This builder for chaining.
       */
      public Builder setMemberCount(int value) {

        memberCount_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 member_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemberCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        memberCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatGetMemberCountResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatGetMemberCountResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatGetMemberCountResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatGetMemberCountResponse>() {
      @java.lang.Override
      public CMsgDOTAChatGetMemberCountResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatGetMemberCountResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatGetMemberCountResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatGetMemberCountResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAChatRegionsEnabledOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAChatRegionsEnabled)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool enable_all_regions = 1;</code>
     * @return Whether the enableAllRegions field is set.
     */
    boolean hasEnableAllRegions();
    /**
     * <code>optional bool enable_all_regions = 1;</code>
     * @return The enableAllRegions.
     */
    boolean getEnableAllRegions();

    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region> 
        getEnabledRegionsList();
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region getEnabledRegions(int index);
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    int getEnabledRegionsCount();
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder> 
        getEnabledRegionsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder getEnabledRegionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAChatRegionsEnabled}
   */
  public static final class CMsgDOTAChatRegionsEnabled extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAChatRegionsEnabled)
      CMsgDOTAChatRegionsEnabledOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAChatRegionsEnabled.class.getName());
    }
    // Use CMsgDOTAChatRegionsEnabled.newBuilder() to construct.
    private CMsgDOTAChatRegionsEnabled(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAChatRegionsEnabled() {
      enabledRegions_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Builder.class);
    }

    public interface RegionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAChatRegionsEnabled.Region)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float min_latitude = 1;</code>
       * @return Whether the minLatitude field is set.
       */
      boolean hasMinLatitude();
      /**
       * <code>optional float min_latitude = 1;</code>
       * @return The minLatitude.
       */
      float getMinLatitude();

      /**
       * <code>optional float max_latitude = 2;</code>
       * @return Whether the maxLatitude field is set.
       */
      boolean hasMaxLatitude();
      /**
       * <code>optional float max_latitude = 2;</code>
       * @return The maxLatitude.
       */
      float getMaxLatitude();

      /**
       * <code>optional float min_longitude = 3;</code>
       * @return Whether the minLongitude field is set.
       */
      boolean hasMinLongitude();
      /**
       * <code>optional float min_longitude = 3;</code>
       * @return The minLongitude.
       */
      float getMinLongitude();

      /**
       * <code>optional float max_longitude = 4;</code>
       * @return Whether the maxLongitude field is set.
       */
      boolean hasMaxLongitude();
      /**
       * <code>optional float max_longitude = 4;</code>
       * @return The maxLongitude.
       */
      float getMaxLongitude();
    }
    /**
     * Protobuf type {@code CMsgDOTAChatRegionsEnabled.Region}
     */
    public static final class Region extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAChatRegionsEnabled.Region)
        RegionOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Region.class.getName());
      }
      // Use Region.newBuilder() to construct.
      private Region(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Region() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_Region_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_Region_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder.class);
      }

      private int bitField0_;
      public static final int MIN_LATITUDE_FIELD_NUMBER = 1;
      private float minLatitude_ = 0F;
      /**
       * <code>optional float min_latitude = 1;</code>
       * @return Whether the minLatitude field is set.
       */
      @java.lang.Override
      public boolean hasMinLatitude() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float min_latitude = 1;</code>
       * @return The minLatitude.
       */
      @java.lang.Override
      public float getMinLatitude() {
        return minLatitude_;
      }

      public static final int MAX_LATITUDE_FIELD_NUMBER = 2;
      private float maxLatitude_ = 0F;
      /**
       * <code>optional float max_latitude = 2;</code>
       * @return Whether the maxLatitude field is set.
       */
      @java.lang.Override
      public boolean hasMaxLatitude() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float max_latitude = 2;</code>
       * @return The maxLatitude.
       */
      @java.lang.Override
      public float getMaxLatitude() {
        return maxLatitude_;
      }

      public static final int MIN_LONGITUDE_FIELD_NUMBER = 3;
      private float minLongitude_ = 0F;
      /**
       * <code>optional float min_longitude = 3;</code>
       * @return Whether the minLongitude field is set.
       */
      @java.lang.Override
      public boolean hasMinLongitude() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float min_longitude = 3;</code>
       * @return The minLongitude.
       */
      @java.lang.Override
      public float getMinLongitude() {
        return minLongitude_;
      }

      public static final int MAX_LONGITUDE_FIELD_NUMBER = 4;
      private float maxLongitude_ = 0F;
      /**
       * <code>optional float max_longitude = 4;</code>
       * @return Whether the maxLongitude field is set.
       */
      @java.lang.Override
      public boolean hasMaxLongitude() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional float max_longitude = 4;</code>
       * @return The maxLongitude.
       */
      @java.lang.Override
      public float getMaxLongitude() {
        return maxLongitude_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFloat(1, minLatitude_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFloat(2, maxLatitude_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeFloat(3, minLongitude_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeFloat(4, maxLongitude_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, minLatitude_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, maxLatitude_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, minLongitude_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, maxLongitude_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region) obj;

        if (hasMinLatitude() != other.hasMinLatitude()) return false;
        if (hasMinLatitude()) {
          if (java.lang.Float.floatToIntBits(getMinLatitude())
              != java.lang.Float.floatToIntBits(
                  other.getMinLatitude())) return false;
        }
        if (hasMaxLatitude() != other.hasMaxLatitude()) return false;
        if (hasMaxLatitude()) {
          if (java.lang.Float.floatToIntBits(getMaxLatitude())
              != java.lang.Float.floatToIntBits(
                  other.getMaxLatitude())) return false;
        }
        if (hasMinLongitude() != other.hasMinLongitude()) return false;
        if (hasMinLongitude()) {
          if (java.lang.Float.floatToIntBits(getMinLongitude())
              != java.lang.Float.floatToIntBits(
                  other.getMinLongitude())) return false;
        }
        if (hasMaxLongitude() != other.hasMaxLongitude()) return false;
        if (hasMaxLongitude()) {
          if (java.lang.Float.floatToIntBits(getMaxLongitude())
              != java.lang.Float.floatToIntBits(
                  other.getMaxLongitude())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMinLatitude()) {
          hash = (37 * hash) + MIN_LATITUDE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMinLatitude());
        }
        if (hasMaxLatitude()) {
          hash = (37 * hash) + MAX_LATITUDE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMaxLatitude());
        }
        if (hasMinLongitude()) {
          hash = (37 * hash) + MIN_LONGITUDE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMinLongitude());
        }
        if (hasMaxLongitude()) {
          hash = (37 * hash) + MAX_LONGITUDE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMaxLongitude());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAChatRegionsEnabled.Region}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAChatRegionsEnabled.Region)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_Region_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_Region_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          minLatitude_ = 0F;
          maxLatitude_ = 0F;
          minLongitude_ = 0F;
          maxLongitude_ = 0F;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_Region_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.minLatitude_ = minLatitude_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.maxLatitude_ = maxLatitude_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.minLongitude_ = minLongitude_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.maxLongitude_ = maxLongitude_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.getDefaultInstance()) return this;
          if (other.hasMinLatitude()) {
            setMinLatitude(other.getMinLatitude());
          }
          if (other.hasMaxLatitude()) {
            setMaxLatitude(other.getMaxLatitude());
          }
          if (other.hasMinLongitude()) {
            setMinLongitude(other.getMinLongitude());
          }
          if (other.hasMaxLongitude()) {
            setMaxLongitude(other.getMaxLongitude());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  minLatitude_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                case 21: {
                  maxLatitude_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  minLongitude_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                case 37: {
                  maxLongitude_ = input.readFloat();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 37
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float minLatitude_ ;
        /**
         * <code>optional float min_latitude = 1;</code>
         * @return Whether the minLatitude field is set.
         */
        @java.lang.Override
        public boolean hasMinLatitude() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float min_latitude = 1;</code>
         * @return The minLatitude.
         */
        @java.lang.Override
        public float getMinLatitude() {
          return minLatitude_;
        }
        /**
         * <code>optional float min_latitude = 1;</code>
         * @param value The minLatitude to set.
         * @return This builder for chaining.
         */
        public Builder setMinLatitude(float value) {

          minLatitude_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional float min_latitude = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinLatitude() {
          bitField0_ = (bitField0_ & ~0x00000001);
          minLatitude_ = 0F;
          onChanged();
          return this;
        }

        private float maxLatitude_ ;
        /**
         * <code>optional float max_latitude = 2;</code>
         * @return Whether the maxLatitude field is set.
         */
        @java.lang.Override
        public boolean hasMaxLatitude() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float max_latitude = 2;</code>
         * @return The maxLatitude.
         */
        @java.lang.Override
        public float getMaxLatitude() {
          return maxLatitude_;
        }
        /**
         * <code>optional float max_latitude = 2;</code>
         * @param value The maxLatitude to set.
         * @return This builder for chaining.
         */
        public Builder setMaxLatitude(float value) {

          maxLatitude_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional float max_latitude = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxLatitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          maxLatitude_ = 0F;
          onChanged();
          return this;
        }

        private float minLongitude_ ;
        /**
         * <code>optional float min_longitude = 3;</code>
         * @return Whether the minLongitude field is set.
         */
        @java.lang.Override
        public boolean hasMinLongitude() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float min_longitude = 3;</code>
         * @return The minLongitude.
         */
        @java.lang.Override
        public float getMinLongitude() {
          return minLongitude_;
        }
        /**
         * <code>optional float min_longitude = 3;</code>
         * @param value The minLongitude to set.
         * @return This builder for chaining.
         */
        public Builder setMinLongitude(float value) {

          minLongitude_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional float min_longitude = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinLongitude() {
          bitField0_ = (bitField0_ & ~0x00000004);
          minLongitude_ = 0F;
          onChanged();
          return this;
        }

        private float maxLongitude_ ;
        /**
         * <code>optional float max_longitude = 4;</code>
         * @return Whether the maxLongitude field is set.
         */
        @java.lang.Override
        public boolean hasMaxLongitude() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float max_longitude = 4;</code>
         * @return The maxLongitude.
         */
        @java.lang.Override
        public float getMaxLongitude() {
          return maxLongitude_;
        }
        /**
         * <code>optional float max_longitude = 4;</code>
         * @param value The maxLongitude to set.
         * @return This builder for chaining.
         */
        public Builder setMaxLongitude(float value) {

          maxLongitude_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional float max_longitude = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxLongitude() {
          bitField0_ = (bitField0_ & ~0x00000008);
          maxLongitude_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAChatRegionsEnabled.Region)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAChatRegionsEnabled.Region)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Region>
          PARSER = new com.google.protobuf.AbstractParser<Region>() {
        @java.lang.Override
        public Region parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Region> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Region> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ENABLE_ALL_REGIONS_FIELD_NUMBER = 1;
    private boolean enableAllRegions_ = false;
    /**
     * <code>optional bool enable_all_regions = 1;</code>
     * @return Whether the enableAllRegions field is set.
     */
    @java.lang.Override
    public boolean hasEnableAllRegions() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool enable_all_regions = 1;</code>
     * @return The enableAllRegions.
     */
    @java.lang.Override
    public boolean getEnableAllRegions() {
      return enableAllRegions_;
    }

    public static final int ENABLED_REGIONS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region> enabledRegions_;
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region> getEnabledRegionsList() {
      return enabledRegions_;
    }
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder> 
        getEnabledRegionsOrBuilderList() {
      return enabledRegions_;
    }
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    @java.lang.Override
    public int getEnabledRegionsCount() {
      return enabledRegions_.size();
    }
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region getEnabledRegions(int index) {
      return enabledRegions_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder getEnabledRegionsOrBuilder(
        int index) {
      return enabledRegions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, enableAllRegions_);
      }
      for (int i = 0; i < enabledRegions_.size(); i++) {
        output.writeMessage(2, enabledRegions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enableAllRegions_);
      }
      for (int i = 0; i < enabledRegions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, enabledRegions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled) obj;

      if (hasEnableAllRegions() != other.hasEnableAllRegions()) return false;
      if (hasEnableAllRegions()) {
        if (getEnableAllRegions()
            != other.getEnableAllRegions()) return false;
      }
      if (!getEnabledRegionsList()
          .equals(other.getEnabledRegionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEnableAllRegions()) {
        hash = (37 * hash) + ENABLE_ALL_REGIONS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnableAllRegions());
      }
      if (getEnabledRegionsCount() > 0) {
        hash = (37 * hash) + ENABLED_REGIONS_FIELD_NUMBER;
        hash = (53 * hash) + getEnabledRegionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAChatRegionsEnabled}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAChatRegionsEnabled)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabledOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        enableAllRegions_ = false;
        if (enabledRegionsBuilder_ == null) {
          enabledRegions_ = java.util.Collections.emptyList();
        } else {
          enabledRegions_ = null;
          enabledRegionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.internal_static_CMsgDOTAChatRegionsEnabled_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled result) {
        if (enabledRegionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            enabledRegions_ = java.util.Collections.unmodifiableList(enabledRegions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.enabledRegions_ = enabledRegions_;
        } else {
          result.enabledRegions_ = enabledRegionsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.enableAllRegions_ = enableAllRegions_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.getDefaultInstance()) return this;
        if (other.hasEnableAllRegions()) {
          setEnableAllRegions(other.getEnableAllRegions());
        }
        if (enabledRegionsBuilder_ == null) {
          if (!other.enabledRegions_.isEmpty()) {
            if (enabledRegions_.isEmpty()) {
              enabledRegions_ = other.enabledRegions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEnabledRegionsIsMutable();
              enabledRegions_.addAll(other.enabledRegions_);
            }
            onChanged();
          }
        } else {
          if (!other.enabledRegions_.isEmpty()) {
            if (enabledRegionsBuilder_.isEmpty()) {
              enabledRegionsBuilder_.dispose();
              enabledRegionsBuilder_ = null;
              enabledRegions_ = other.enabledRegions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              enabledRegionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEnabledRegionsFieldBuilder() : null;
            } else {
              enabledRegionsBuilder_.addAllMessages(other.enabledRegions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                enableAllRegions_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.parser(),
                        extensionRegistry);
                if (enabledRegionsBuilder_ == null) {
                  ensureEnabledRegionsIsMutable();
                  enabledRegions_.add(m);
                } else {
                  enabledRegionsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean enableAllRegions_ ;
      /**
       * <code>optional bool enable_all_regions = 1;</code>
       * @return Whether the enableAllRegions field is set.
       */
      @java.lang.Override
      public boolean hasEnableAllRegions() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool enable_all_regions = 1;</code>
       * @return The enableAllRegions.
       */
      @java.lang.Override
      public boolean getEnableAllRegions() {
        return enableAllRegions_;
      }
      /**
       * <code>optional bool enable_all_regions = 1;</code>
       * @param value The enableAllRegions to set.
       * @return This builder for chaining.
       */
      public Builder setEnableAllRegions(boolean value) {

        enableAllRegions_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool enable_all_regions = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnableAllRegions() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enableAllRegions_ = false;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region> enabledRegions_ =
        java.util.Collections.emptyList();
      private void ensureEnabledRegionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          enabledRegions_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region>(enabledRegions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder> enabledRegionsBuilder_;

      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region> getEnabledRegionsList() {
        if (enabledRegionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enabledRegions_);
        } else {
          return enabledRegionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public int getEnabledRegionsCount() {
        if (enabledRegionsBuilder_ == null) {
          return enabledRegions_.size();
        } else {
          return enabledRegionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region getEnabledRegions(int index) {
        if (enabledRegionsBuilder_ == null) {
          return enabledRegions_.get(index);
        } else {
          return enabledRegionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder setEnabledRegions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region value) {
        if (enabledRegionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnabledRegionsIsMutable();
          enabledRegions_.set(index, value);
          onChanged();
        } else {
          enabledRegionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder setEnabledRegions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder builderForValue) {
        if (enabledRegionsBuilder_ == null) {
          ensureEnabledRegionsIsMutable();
          enabledRegions_.set(index, builderForValue.build());
          onChanged();
        } else {
          enabledRegionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder addEnabledRegions(kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region value) {
        if (enabledRegionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnabledRegionsIsMutable();
          enabledRegions_.add(value);
          onChanged();
        } else {
          enabledRegionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder addEnabledRegions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region value) {
        if (enabledRegionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnabledRegionsIsMutable();
          enabledRegions_.add(index, value);
          onChanged();
        } else {
          enabledRegionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder addEnabledRegions(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder builderForValue) {
        if (enabledRegionsBuilder_ == null) {
          ensureEnabledRegionsIsMutable();
          enabledRegions_.add(builderForValue.build());
          onChanged();
        } else {
          enabledRegionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder addEnabledRegions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder builderForValue) {
        if (enabledRegionsBuilder_ == null) {
          ensureEnabledRegionsIsMutable();
          enabledRegions_.add(index, builderForValue.build());
          onChanged();
        } else {
          enabledRegionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder addAllEnabledRegions(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region> values) {
        if (enabledRegionsBuilder_ == null) {
          ensureEnabledRegionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, enabledRegions_);
          onChanged();
        } else {
          enabledRegionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder clearEnabledRegions() {
        if (enabledRegionsBuilder_ == null) {
          enabledRegions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          enabledRegionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public Builder removeEnabledRegions(int index) {
        if (enabledRegionsBuilder_ == null) {
          ensureEnabledRegionsIsMutable();
          enabledRegions_.remove(index);
          onChanged();
        } else {
          enabledRegionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder getEnabledRegionsBuilder(
          int index) {
        return getEnabledRegionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder getEnabledRegionsOrBuilder(
          int index) {
        if (enabledRegionsBuilder_ == null) {
          return enabledRegions_.get(index);  } else {
          return enabledRegionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder> 
           getEnabledRegionsOrBuilderList() {
        if (enabledRegionsBuilder_ != null) {
          return enabledRegionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enabledRegions_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder addEnabledRegionsBuilder() {
        return getEnabledRegionsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder addEnabledRegionsBuilder(
          int index) {
        return getEnabledRegionsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAChatRegionsEnabled.Region enabled_regions = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder> 
           getEnabledRegionsBuilderList() {
        return getEnabledRegionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder> 
          getEnabledRegionsFieldBuilder() {
        if (enabledRegionsBuilder_ == null) {
          enabledRegionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.Region.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled.RegionOrBuilder>(
                  enabledRegions_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          enabledRegions_ = null;
        }
        return enabledRegionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAChatRegionsEnabled)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAChatRegionsEnabled)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAChatRegionsEnabled>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAChatRegionsEnabled>() {
      @java.lang.Override
      public CMsgDOTAChatRegionsEnabled parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAChatRegionsEnabled> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAChatRegionsEnabled> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientChat.CMsgDOTAChatRegionsEnabled getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCPrivateChatInvite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCPrivateChatInvite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCPrivateChatKick_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCPrivateChatKick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCPrivateChatPromote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCPrivateChatPromote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCPrivateChatDemote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCPrivateChatDemote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCToClientPrivateChatResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCToClientPrivateChatResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAJoinChatChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAJoinChatChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTALeaveChatChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTALeaveChatChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCChatReportPublicSpam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCChatReportPublicSpam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatModeratorBan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatModeratorBan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatMessage_DiceRoll_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatMessage_DiceRoll_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatMessage_TriviaAnswered_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatMessage_TriviaAnswered_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatMessage_PlayerDraftPick_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatMessage_PlayerDraftPick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatMessage_ChatWheelMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatMessage_ChatWheelMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatMember_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatMember_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAJoinChatChannelResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAJoinChatChannelResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAOtherJoinedChatChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAOtherJoinedChatChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAOtherLeftChatChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAOtherLeftChatChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARequestChatChannelList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARequestChatChannelList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARequestChatChannelListResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARequestChatChannelListResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatGetUserListResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatGetUserListResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatGetUserListResponse_Member_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatGetUserListResponse_Member_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatGetMemberCount_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatGetMemberCount_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatGetMemberCountResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatGetMemberCountResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatRegionsEnabled_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatRegionsEnabled_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAChatRegionsEnabled_Region_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAChatRegionsEnabled_Region_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!dota_gcmessages_client_chat.proto\032\027dot" +
      "a_shared_enums.proto\"`\n\037CMsgClientToGCPr" +
      "ivateChatInvite\022!\n\031private_chat_channel_" +
      "name\030\001 \001(\t\022\032\n\022invited_account_id\030\002 \001(\r\"[" +
      "\n\035CMsgClientToGCPrivateChatKick\022!\n\031priva" +
      "te_chat_channel_name\030\001 \001(\t\022\027\n\017kick_accou" +
      "nt_id\030\002 \001(\r\"a\n CMsgClientToGCPrivateChat" +
      "Promote\022!\n\031private_chat_channel_name\030\001 \001" +
      "(\t\022\032\n\022promote_account_id\030\002 \001(\r\"_\n\037CMsgCl" +
      "ientToGCPrivateChatDemote\022!\n\031private_cha" +
      "t_channel_name\030\001 \001(\t\022\031\n\021demote_account_i" +
      "d\030\002 \001(\r\"\275\004\n!CMsgGCToClientPrivateChatRes" +
      "ponse\022!\n\031private_chat_channel_name\030\001 \001(\t" +
      "\022B\n\006result\030\002 \001(\0162).CMsgGCToClientPrivate" +
      "ChatResponse.Result:\007SUCCESS\022\020\n\010username" +
      "\030\003 \001(\t\"\236\003\n\006Result\022\013\n\007SUCCESS\020\000\022\031\n\025FAILUR" +
      "E_CREATION_LOCK\020\001\022\033\n\027FAILURE_SQL_TRANSAC" +
      "TION\020\002\022\024\n\020FAILURE_SDO_LOAD\020\003\022\031\n\025FAILURE_" +
      "NO_PERMISSION\020\004\022\032\n\026FAILURE_ALREADY_MEMBE" +
      "R\020\005\022\030\n\024FAILURE_NOT_A_MEMBER\020\007\022\037\n\033FAILURE" +
      "_NO_REMAINING_ADMINS\020\010\022\023\n\017FAILURE_NO_ROO" +
      "M\020\t\022!\n\035FAILURE_CREATION_RATE_LIMITED\020\n\022 " +
      "\n\034FAILURE_UNKNOWN_CHANNEL_NAME\020\013\022\030\n\024FAIL" +
      "URE_UNKNOWN_USER\020\014\022\031\n\025FAILURE_UNKNOWN_ER" +
      "ROR\020\r\022\035\n\031FAILURE_CANNOT_KICK_ADMIN\020\016\022\031\n\025" +
      "FAILURE_ALREADY_ADMIN\020\017\"\221\001\n\027CMsgDOTAJoin" +
      "ChatChannel\022\024\n\014channel_name\030\002 \001(\t\022F\n\014cha" +
      "nnel_type\030\004 \001(\0162\026.DOTAChatChannelType_t:" +
      "\030DOTAChannelType_Regional\022\030\n\020silent_reje" +
      "ction\030\005 \001(\010\".\n\030CMsgDOTALeaveChatChannel\022" +
      "\022\n\nchannel_id\030\001 \001(\004\"I\n\032CMsgGCChatReportP" +
      "ublicSpam\022\022\n\nchannel_id\030\001 \001(\004\022\027\n\017channel" +
      "_user_id\030\002 \001(\r\"T\n\030CMsgDOTAChatModeratorB" +
      "an\022\022\n\nchannel_id\030\001 \001(\004\022\022\n\naccount_id\030\002 \001" +
      "(\r\022\020\n\010duration\030\003 \001(\r\"\354\014\n\023CMsgDOTAChatMes" +
      "sage\022\022\n\naccount_id\030\001 \001(\r\022\022\n\nchannel_id\030\002" +
      " \001(\004\022\024\n\014persona_name\030\003 \001(\t\022\014\n\004text\030\004 \001(\t" +
      "\022\021\n\ttimestamp\030\005 \001(\r\022!\n\031suggest_invite_ac" +
      "count_id\030\006 \001(\r\022\033\n\023suggest_invite_name\030\007 " +
      "\001(\t\022&\n\036fantasy_draft_owner_account_id\030\010 " +
      "\001(\r\022\'\n\037fantasy_draft_player_account_id\030\t" +
      " \001(\r\022\020\n\010event_id\030\n \001(\r\022\037\n\027suggest_invite" +
      "_to_lobby\030\013 \001(\010\022\021\n\tcoin_flip\030\r \001(\010\022\025\n\tpl" +
      "ayer_id\030\016 \001(\005:\002-1\022 \n\030share_profile_accou" +
      "nt_id\030\017 \001(\r\022\027\n\017channel_user_id\030\020 \001(\r\0220\n\t" +
      "dice_roll\030\021 \001(\0132\035.CMsgDOTAChatMessage.Di" +
      "ceRoll\022\026\n\016share_party_id\030\022 \001(\004\022\026\n\016share_" +
      "lobby_id\030\023 \001(\004\022\"\n\032share_lobby_custom_gam" +
      "e_id\030\024 \001(\004\022\033\n\023share_lobby_passkey\030\025 \001(\t\022" +
      "\037\n\027private_chat_channel_id\030\026 \001(\r\022\016\n\006stat" +
      "us\030\027 \001(\r\022!\n\031legacy_battle_cup_victory\030\030 " +
      "\001(\010\022\031\n\021battle_cup_streak\030\035 \001(\r\022\023\n\013badge_" +
      "level\030\031 \001(\r\022\034\n\024suggest_pick_hero_id\030\032 \001(" +
      "\005\022\036\n\026suggest_pick_hero_role\030\033 \001(\t\022\033\n\023sug" +
      "gest_ban_hero_id\030\036 \001(\005\022:\n\rtrivia_answer\030" +
      "  \001(\0132#.CMsgDOTAChatMessage.TriviaAnswer" +
      "ed\022 \n\024requested_ability_id\030! \001(\005:\002-1\022\022\n\n" +
      "chat_flags\030\" \001(\r\022\035\n\025started_finding_matc" +
      "h\030# \001(\010\022\024\n\014ctrl_is_down\030$ \001(\010\022\030\n\020favorit" +
      "e_team_id\030% \001(\r\022\035\n\025favorite_team_quality" +
      "\030& \001(\r\022%\n\031suggest_player_draft_pick\030\' \001(" +
      "\005:\002-1\022?\n\021player_draft_pick\030( \001(\0132$.CMsgD" +
      "OTAChatMessage.PlayerDraftPick\022A\n\022chat_w" +
      "heel_message\030) \001(\0132%.CMsgDOTAChatMessage" +
      ".ChatWheelMessage\022\023\n\013event_level\030* \001(\r\022\037" +
      "\n\027suggest_pick_hero_facet\030+ \001(\r\032>\n\010DiceR" +
      "oll\022\020\n\010roll_min\030\001 \001(\005\022\020\n\010roll_max\030\002 \001(\005\022" +
      "\016\n\006result\030\003 \001(\005\032\231\001\n\016TriviaAnswered\022\023\n\013qu" +
      "estion_id\030\001 \001(\r\022\024\n\014answer_index\030\002 \001(\r\022\037\n" +
      "\027party_questions_correct\030\003 \001(\r\022\036\n\026party_" +
      "questions_viewed\030\004 \001(\r\022\033\n\023party_trivia_p" +
      "oints\030\005 \001(\r\0326\n\017PlayerDraftPick\022\025\n\tplayer" +
      "_id\030\001 \001(\005:\002-1\022\014\n\004team\030\002 \001(\005\032v\n\020ChatWheel" +
      "Message\022\036\n\nmessage_id\030\001 \001(\r:\n4294967295\022" +
      "\023\n\013emoticon_id\030\002 \001(\r\022\024\n\014message_text\030\003 \001" +
      "(\t\022\027\n\017hero_badge_tier\030\004 \001(\r\"e\n\022CMsgDOTAC" +
      "hatMember\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014persona_n" +
      "ame\030\002 \001(\t\022\027\n\017channel_user_id\030\003 \001(\r\022\016\n\006st" +
      "atus\030\004 \001(\r\"\312\007\n\037CMsgDOTAJoinChatChannelRe" +
      "sponse\022\020\n\010response\030\001 \001(\r\022\024\n\014channel_name" +
      "\030\002 \001(\t\022\022\n\nchannel_id\030\003 \001(\006\022\023\n\013max_member" +
      "s\030\004 \001(\r\022$\n\007members\030\005 \003(\0132\023.CMsgDOTAChatM" +
      "ember\022F\n\014channel_type\030\006 \001(\0162\026.DOTAChatCh" +
      "annelType_t:\030DOTAChannelType_Regional\022E\n" +
      "\006result\030\007 \001(\0162\'.CMsgDOTAJoinChatChannelR" +
      "esponse.Result:\014JOIN_SUCCESS\022\031\n\021gc_initi" +
      "ated_join\030\010 \001(\010\022\027\n\017channel_user_id\030\t \001(\r" +
      "\022\027\n\017welcome_message\030\n \001(\t\022R\n\022special_pri" +
      "vileges\030\013 \001(\0162\027.EChatSpecialPrivileges:\035" +
      "k_EChatSpecialPrivileges_None\"\377\003\n\006Result" +
      "\022\020\n\014JOIN_SUCCESS\020\000\022\030\n\024INVALID_CHANNEL_TY" +
      "PE\020\001\022\025\n\021ACCOUNT_NOT_FOUND\020\002\022\016\n\nACH_FAILE" +
      "D\020\003\022\035\n\031USER_IN_TOO_MANY_CHANNELS\020\004\022\027\n\023RA" +
      "TE_LIMIT_EXCEEDED\020\005\022\020\n\014CHANNEL_FULL\020\006\022\033\n" +
      "\027CHANNEL_FULL_OVERFLOWED\020\007\022\026\n\022FAILED_TO_" +
      "ADD_USER\020\010\022\031\n\025CHANNEL_TYPE_DISABLED\020\t\022\036\n" +
      "\032PRIVATE_CHAT_CREATE_FAILED\020\n\022\036\n\032PRIVATE" +
      "_CHAT_NO_PERMISSION\020\013\022#\n\037PRIVATE_CHAT_CR" +
      "EATE_LOCK_FAILED\020\014\022\027\n\023PRIVATE_CHAT_KICKE" +
      "D\020\r\022\024\n\020USER_NOT_ALLOWED\020\016\022$\n ENSURE_SPEC" +
      "IAL_PRIVILEGES_FAILED\020\017\022 \n\034NEW_PLAYER_US" +
      "ER_NOT_ELIGIBLE\020\020\022\020\n\014SILENT_ERROR\020\021\022\032\n\026N" +
      "EW_PLAYER_USER_BANNED\020\022\"\205\001\n\036CMsgDOTAOthe" +
      "rJoinedChatChannel\022\022\n\nchannel_id\030\001 \001(\006\022\024" +
      "\n\014persona_name\030\002 \001(\t\022\020\n\010steam_id\030\003 \001(\006\022\027" +
      "\n\017channel_user_id\030\004 \001(\r\022\016\n\006status\030\005 \001(\r\"" +
      "]\n\034CMsgDOTAOtherLeftChatChannel\022\022\n\nchann" +
      "el_id\030\001 \001(\006\022\020\n\010steam_id\030\002 \001(\006\022\027\n\017channel" +
      "_user_id\030\003 \001(\r\" \n\036CMsgDOTARequestChatCha" +
      "nnelList\"\362\001\n&CMsgDOTARequestChatChannelL" +
      "istResponse\022E\n\010channels\030\001 \003(\01323.CMsgDOTA" +
      "RequestChatChannelListResponse.ChatChann" +
      "el\032\200\001\n\013ChatChannel\022\024\n\014channel_name\030\001 \001(\t" +
      "\022\023\n\013num_members\030\002 \001(\r\022F\n\014channel_type\030\003 " +
      "\001(\0162\026.DOTAChatChannelType_t:\030DOTAChannel" +
      "Type_Regional\"\312\001\n\037CMsgDOTAChatGetUserLis" +
      "tResponse\022\022\n\nchannel_id\030\001 \001(\006\0228\n\007members" +
      "\030\002 \003(\0132\'.CMsgDOTAChatGetUserListResponse" +
      ".Member\032Y\n\006Member\022\020\n\010steam_id\030\001 \001(\006\022\024\n\014p" +
      "ersona_name\030\002 \001(\t\022\027\n\017channel_user_id\030\003 \001" +
      "(\r\022\016\n\006status\030\004 \001(\r\"z\n\032CMsgDOTAChatGetMem" +
      "berCount\022\024\n\014channel_name\030\001 \001(\t\022F\n\014channe" +
      "l_type\030\002 \001(\0162\026.DOTAChatChannelType_t:\030DO" +
      "TAChannelType_Regional\"\230\001\n\"CMsgDOTAChatG" +
      "etMemberCountResponse\022\024\n\014channel_name\030\001 " +
      "\001(\t\022F\n\014channel_type\030\002 \001(\0162\026.DOTAChatChan" +
      "nelType_t:\030DOTAChannelType_Regional\022\024\n\014m" +
      "ember_count\030\003 \001(\r\"\331\001\n\032CMsgDOTAChatRegion" +
      "sEnabled\022\032\n\022enable_all_regions\030\001 \001(\010\022;\n\017" +
      "enabled_regions\030\002 \003(\0132\".CMsgDOTAChatRegi" +
      "onsEnabled.Region\032b\n\006Region\022\024\n\014min_latit" +
      "ude\030\001 \001(\002\022\024\n\014max_latitude\030\002 \001(\002\022\025\n\rmin_l" +
      "ongitude\030\003 \001(\002\022\025\n\rmax_longitude\030\004 \001(\002B\032\n" +
      "\030kz.moltenhaze.proto.dota"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.moltenhaze.proto.dota.DotaSharedEnums.getDescriptor(),
        });
    internal_static_CMsgClientToGCPrivateChatInvite_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgClientToGCPrivateChatInvite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCPrivateChatInvite_descriptor,
        new java.lang.String[] { "PrivateChatChannelName", "InvitedAccountId", });
    internal_static_CMsgClientToGCPrivateChatKick_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgClientToGCPrivateChatKick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCPrivateChatKick_descriptor,
        new java.lang.String[] { "PrivateChatChannelName", "KickAccountId", });
    internal_static_CMsgClientToGCPrivateChatPromote_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgClientToGCPrivateChatPromote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCPrivateChatPromote_descriptor,
        new java.lang.String[] { "PrivateChatChannelName", "PromoteAccountId", });
    internal_static_CMsgClientToGCPrivateChatDemote_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgClientToGCPrivateChatDemote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCPrivateChatDemote_descriptor,
        new java.lang.String[] { "PrivateChatChannelName", "DemoteAccountId", });
    internal_static_CMsgGCToClientPrivateChatResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgGCToClientPrivateChatResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCToClientPrivateChatResponse_descriptor,
        new java.lang.String[] { "PrivateChatChannelName", "Result", "Username", });
    internal_static_CMsgDOTAJoinChatChannel_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgDOTAJoinChatChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAJoinChatChannel_descriptor,
        new java.lang.String[] { "ChannelName", "ChannelType", "SilentRejection", });
    internal_static_CMsgDOTALeaveChatChannel_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgDOTALeaveChatChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTALeaveChatChannel_descriptor,
        new java.lang.String[] { "ChannelId", });
    internal_static_CMsgGCChatReportPublicSpam_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgGCChatReportPublicSpam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCChatReportPublicSpam_descriptor,
        new java.lang.String[] { "ChannelId", "ChannelUserId", });
    internal_static_CMsgDOTAChatModeratorBan_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgDOTAChatModeratorBan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatModeratorBan_descriptor,
        new java.lang.String[] { "ChannelId", "AccountId", "Duration", });
    internal_static_CMsgDOTAChatMessage_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgDOTAChatMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatMessage_descriptor,
        new java.lang.String[] { "AccountId", "ChannelId", "PersonaName", "Text", "Timestamp", "SuggestInviteAccountId", "SuggestInviteName", "FantasyDraftOwnerAccountId", "FantasyDraftPlayerAccountId", "EventId", "SuggestInviteToLobby", "CoinFlip", "PlayerId", "ShareProfileAccountId", "ChannelUserId", "DiceRoll", "SharePartyId", "ShareLobbyId", "ShareLobbyCustomGameId", "ShareLobbyPasskey", "PrivateChatChannelId", "Status", "LegacyBattleCupVictory", "BattleCupStreak", "BadgeLevel", "SuggestPickHeroId", "SuggestPickHeroRole", "SuggestBanHeroId", "TriviaAnswer", "RequestedAbilityId", "ChatFlags", "StartedFindingMatch", "CtrlIsDown", "FavoriteTeamId", "FavoriteTeamQuality", "SuggestPlayerDraftPick", "PlayerDraftPick", "ChatWheelMessage", "EventLevel", "SuggestPickHeroFacet", });
    internal_static_CMsgDOTAChatMessage_DiceRoll_descriptor =
      internal_static_CMsgDOTAChatMessage_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAChatMessage_DiceRoll_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatMessage_DiceRoll_descriptor,
        new java.lang.String[] { "RollMin", "RollMax", "Result", });
    internal_static_CMsgDOTAChatMessage_TriviaAnswered_descriptor =
      internal_static_CMsgDOTAChatMessage_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAChatMessage_TriviaAnswered_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatMessage_TriviaAnswered_descriptor,
        new java.lang.String[] { "QuestionId", "AnswerIndex", "PartyQuestionsCorrect", "PartyQuestionsViewed", "PartyTriviaPoints", });
    internal_static_CMsgDOTAChatMessage_PlayerDraftPick_descriptor =
      internal_static_CMsgDOTAChatMessage_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTAChatMessage_PlayerDraftPick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatMessage_PlayerDraftPick_descriptor,
        new java.lang.String[] { "PlayerId", "Team", });
    internal_static_CMsgDOTAChatMessage_ChatWheelMessage_descriptor =
      internal_static_CMsgDOTAChatMessage_descriptor.getNestedTypes().get(3);
    internal_static_CMsgDOTAChatMessage_ChatWheelMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatMessage_ChatWheelMessage_descriptor,
        new java.lang.String[] { "MessageId", "EmoticonId", "MessageText", "HeroBadgeTier", });
    internal_static_CMsgDOTAChatMember_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgDOTAChatMember_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatMember_descriptor,
        new java.lang.String[] { "SteamId", "PersonaName", "ChannelUserId", "Status", });
    internal_static_CMsgDOTAJoinChatChannelResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgDOTAJoinChatChannelResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAJoinChatChannelResponse_descriptor,
        new java.lang.String[] { "Response", "ChannelName", "ChannelId", "MaxMembers", "Members", "ChannelType", "Result", "GcInitiatedJoin", "ChannelUserId", "WelcomeMessage", "SpecialPrivileges", });
    internal_static_CMsgDOTAOtherJoinedChatChannel_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgDOTAOtherJoinedChatChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAOtherJoinedChatChannel_descriptor,
        new java.lang.String[] { "ChannelId", "PersonaName", "SteamId", "ChannelUserId", "Status", });
    internal_static_CMsgDOTAOtherLeftChatChannel_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgDOTAOtherLeftChatChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAOtherLeftChatChannel_descriptor,
        new java.lang.String[] { "ChannelId", "SteamId", "ChannelUserId", });
    internal_static_CMsgDOTARequestChatChannelList_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CMsgDOTARequestChatChannelList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTARequestChatChannelList_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgDOTARequestChatChannelListResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CMsgDOTARequestChatChannelListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTARequestChatChannelListResponse_descriptor,
        new java.lang.String[] { "Channels", });
    internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_descriptor =
      internal_static_CMsgDOTARequestChatChannelListResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTARequestChatChannelListResponse_ChatChannel_descriptor,
        new java.lang.String[] { "ChannelName", "NumMembers", "ChannelType", });
    internal_static_CMsgDOTAChatGetUserListResponse_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CMsgDOTAChatGetUserListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatGetUserListResponse_descriptor,
        new java.lang.String[] { "ChannelId", "Members", });
    internal_static_CMsgDOTAChatGetUserListResponse_Member_descriptor =
      internal_static_CMsgDOTAChatGetUserListResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAChatGetUserListResponse_Member_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatGetUserListResponse_Member_descriptor,
        new java.lang.String[] { "SteamId", "PersonaName", "ChannelUserId", "Status", });
    internal_static_CMsgDOTAChatGetMemberCount_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CMsgDOTAChatGetMemberCount_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatGetMemberCount_descriptor,
        new java.lang.String[] { "ChannelName", "ChannelType", });
    internal_static_CMsgDOTAChatGetMemberCountResponse_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CMsgDOTAChatGetMemberCountResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatGetMemberCountResponse_descriptor,
        new java.lang.String[] { "ChannelName", "ChannelType", "MemberCount", });
    internal_static_CMsgDOTAChatRegionsEnabled_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_CMsgDOTAChatRegionsEnabled_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatRegionsEnabled_descriptor,
        new java.lang.String[] { "EnableAllRegions", "EnabledRegions", });
    internal_static_CMsgDOTAChatRegionsEnabled_Region_descriptor =
      internal_static_CMsgDOTAChatRegionsEnabled_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAChatRegionsEnabled_Region_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAChatRegionsEnabled_Region_descriptor,
        new java.lang.String[] { "MinLatitude", "MaxLatitude", "MinLongitude", "MaxLongitude", });
    descriptor.resolveAllFeaturesImmutable();
    kz.moltenhaze.proto.dota.DotaSharedEnums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
