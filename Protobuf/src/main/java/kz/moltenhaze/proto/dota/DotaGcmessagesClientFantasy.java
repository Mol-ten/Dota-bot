// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dota_gcmessages_client_fantasy.proto
// Protobuf Java Version: 4.28.0

package kz.moltenhaze.proto.dota;

public final class DotaGcmessagesClientFantasy {
  private DotaGcmessagesClientFantasy() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 0,
      /* suffix= */ "",
      DotaGcmessagesClientFantasy.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code DOTA_2013PassportSelectionIndices}
   */
  public enum DOTA_2013PassportSelectionIndices
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_0 = 0;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_0(0),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_1 = 1;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_1(1),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_2 = 2;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_2(2),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_3 = 3;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_3(3),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_4 = 4;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_4(4),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_5 = 5;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_5(5),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_6 = 6;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_6(6),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_7 = 7;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_7(7),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_8 = 8;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_8(8),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_9 = 9;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_9(9),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_0 = 10;</code>
     */
    PP13_SEL_QUALPRED_WEST_0(10),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_1 = 11;</code>
     */
    PP13_SEL_QUALPRED_WEST_1(11),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_2 = 12;</code>
     */
    PP13_SEL_QUALPRED_WEST_2(12),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_3 = 13;</code>
     */
    PP13_SEL_QUALPRED_WEST_3(13),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_4 = 14;</code>
     */
    PP13_SEL_QUALPRED_WEST_4(14),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_5 = 15;</code>
     */
    PP13_SEL_QUALPRED_WEST_5(15),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_6 = 16;</code>
     */
    PP13_SEL_QUALPRED_WEST_6(16),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_7 = 17;</code>
     */
    PP13_SEL_QUALPRED_WEST_7(17),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_8 = 18;</code>
     */
    PP13_SEL_QUALPRED_WEST_8(18),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_9 = 19;</code>
     */
    PP13_SEL_QUALPRED_WEST_9(19),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_10 = 20;</code>
     */
    PP13_SEL_QUALPRED_WEST_10(20),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_11 = 21;</code>
     */
    PP13_SEL_QUALPRED_WEST_11(21),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_12 = 22;</code>
     */
    PP13_SEL_QUALPRED_WEST_12(22),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_13 = 23;</code>
     */
    PP13_SEL_QUALPRED_WEST_13(23),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_14 = 24;</code>
     */
    PP13_SEL_QUALPRED_WEST_14(24),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_0 = 25;</code>
     */
    PP13_SEL_QUALPRED_EAST_0(25),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_1 = 26;</code>
     */
    PP13_SEL_QUALPRED_EAST_1(26),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_2 = 27;</code>
     */
    PP13_SEL_QUALPRED_EAST_2(27),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_3 = 28;</code>
     */
    PP13_SEL_QUALPRED_EAST_3(28),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_4 = 29;</code>
     */
    PP13_SEL_QUALPRED_EAST_4(29),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_5 = 30;</code>
     */
    PP13_SEL_QUALPRED_EAST_5(30),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_6 = 31;</code>
     */
    PP13_SEL_QUALPRED_EAST_6(31),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_7 = 32;</code>
     */
    PP13_SEL_QUALPRED_EAST_7(32),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_8 = 33;</code>
     */
    PP13_SEL_QUALPRED_EAST_8(33),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_9 = 34;</code>
     */
    PP13_SEL_QUALPRED_EAST_9(34),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_10 = 35;</code>
     */
    PP13_SEL_QUALPRED_EAST_10(35),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_11 = 36;</code>
     */
    PP13_SEL_QUALPRED_EAST_11(36),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_12 = 37;</code>
     */
    PP13_SEL_QUALPRED_EAST_12(37),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_13 = 38;</code>
     */
    PP13_SEL_QUALPRED_EAST_13(38),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_14 = 39;</code>
     */
    PP13_SEL_QUALPRED_EAST_14(39),
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM = 40;</code>
     */
    PP13_SEL_TEAMCUP_TEAM(40),
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER = 41;</code>
     */
    PP13_SEL_TEAMCUP_PLAYER(41),
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM_LOCK = 42;</code>
     */
    PP13_SEL_TEAMCUP_TEAM_LOCK(42),
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER_LOCK = 43;</code>
     */
    PP13_SEL_TEAMCUP_PLAYER_LOCK(43),
    /**
     * <code>PP13_SEL_EVENTPRED_0 = 44;</code>
     */
    PP13_SEL_EVENTPRED_0(44),
    /**
     * <code>PP13_SEL_EVENTPRED_1 = 45;</code>
     */
    PP13_SEL_EVENTPRED_1(45),
    /**
     * <code>PP13_SEL_EVENTPRED_2 = 46;</code>
     */
    PP13_SEL_EVENTPRED_2(46),
    /**
     * <code>PP13_SEL_EVENTPRED_3 = 47;</code>
     */
    PP13_SEL_EVENTPRED_3(47),
    /**
     * <code>PP13_SEL_EVENTPRED_4 = 48;</code>
     */
    PP13_SEL_EVENTPRED_4(48),
    /**
     * <code>PP13_SEL_EVENTPRED_5 = 49;</code>
     */
    PP13_SEL_EVENTPRED_5(49),
    /**
     * <code>PP13_SEL_EVENTPRED_6 = 50;</code>
     */
    PP13_SEL_EVENTPRED_6(50),
    /**
     * <code>PP13_SEL_EVENTPRED_7 = 51;</code>
     */
    PP13_SEL_EVENTPRED_7(51),
    /**
     * <code>PP13_SEL_EVENTPRED_8 = 52;</code>
     */
    PP13_SEL_EVENTPRED_8(52),
    /**
     * <code>PP13_SEL_EVENTPRED_9 = 53;</code>
     */
    PP13_SEL_EVENTPRED_9(53),
    /**
     * <code>PP13_SEL_EVENTPRED_10 = 54;</code>
     */
    PP13_SEL_EVENTPRED_10(54),
    /**
     * <code>PP13_SEL_EVENTPRED_11 = 55;</code>
     */
    PP13_SEL_EVENTPRED_11(55),
    /**
     * <code>PP13_SEL_EVENTPRED_12 = 56;</code>
     */
    PP13_SEL_EVENTPRED_12(56),
    /**
     * <code>PP13_SEL_EVENTPRED_13 = 57;</code>
     */
    PP13_SEL_EVENTPRED_13(57),
    /**
     * <code>PP13_SEL_EVENTPRED_14 = 58;</code>
     */
    PP13_SEL_EVENTPRED_14(58),
    /**
     * <code>PP13_SEL_EVENTPRED_15 = 59;</code>
     */
    PP13_SEL_EVENTPRED_15(59),
    /**
     * <code>PP13_SEL_EVENTPRED_16 = 60;</code>
     */
    PP13_SEL_EVENTPRED_16(60),
    /**
     * <code>PP13_SEL_EVENTPRED_17 = 61;</code>
     */
    PP13_SEL_EVENTPRED_17(61),
    /**
     * <code>PP13_SEL_EVENTPRED_18 = 62;</code>
     */
    PP13_SEL_EVENTPRED_18(62),
    /**
     * <code>PP13_SEL_EVENTPRED_19 = 63;</code>
     */
    PP13_SEL_EVENTPRED_19(63),
    /**
     * <code>PP13_SEL_EVENTPRED_20 = 64;</code>
     */
    PP13_SEL_EVENTPRED_20(64),
    /**
     * <code>PP13_SEL_EVENTPRED_21 = 65;</code>
     */
    PP13_SEL_EVENTPRED_21(65),
    /**
     * <code>PP13_SEL_EVENTPRED_22 = 66;</code>
     */
    PP13_SEL_EVENTPRED_22(66),
    /**
     * <code>PP13_SEL_EVENTPRED_23 = 67;</code>
     */
    PP13_SEL_EVENTPRED_23(67),
    /**
     * <code>PP13_SEL_EVENTPRED_24 = 68;</code>
     */
    PP13_SEL_EVENTPRED_24(68),
    /**
     * <code>PP13_SEL_EVENTPRED_25 = 69;</code>
     */
    PP13_SEL_EVENTPRED_25(69),
    /**
     * <code>PP13_SEL_EVENTPRED_26 = 70;</code>
     */
    PP13_SEL_EVENTPRED_26(70),
    /**
     * <code>PP13_SEL_EVENTPRED_27 = 71;</code>
     */
    PP13_SEL_EVENTPRED_27(71),
    /**
     * <code>PP13_SEL_EVENTPRED_28 = 72;</code>
     */
    PP13_SEL_EVENTPRED_28(72),
    /**
     * <code>PP13_SEL_EVENTPRED_29 = 73;</code>
     */
    PP13_SEL_EVENTPRED_29(73),
    /**
     * <code>PP13_SEL_EVENTPRED_30 = 74;</code>
     */
    PP13_SEL_EVENTPRED_30(74),
    /**
     * <code>PP13_SEL_EVENTPRED_31 = 75;</code>
     */
    PP13_SEL_EVENTPRED_31(75),
    /**
     * <code>PP13_SEL_EVENTPRED_32 = 76;</code>
     */
    PP13_SEL_EVENTPRED_32(76),
    /**
     * <code>PP13_SEL_EVENTPRED_33 = 77;</code>
     */
    PP13_SEL_EVENTPRED_33(77),
    /**
     * <code>PP13_SEL_EVENTPRED_34 = 78;</code>
     */
    PP13_SEL_EVENTPRED_34(78),
    /**
     * <code>PP13_SEL_EVENTPRED_35 = 79;</code>
     */
    PP13_SEL_EVENTPRED_35(79),
    /**
     * <code>PP13_SEL_EVENTPRED_36 = 80;</code>
     */
    PP13_SEL_EVENTPRED_36(80),
    /**
     * <code>PP13_SEL_EVENTPRED_37 = 81;</code>
     */
    PP13_SEL_EVENTPRED_37(81),
    /**
     * <code>PP13_SEL_EVENTPRED_38 = 82;</code>
     */
    PP13_SEL_EVENTPRED_38(82),
    /**
     * <code>PP13_SEL_EVENTPRED_39 = 83;</code>
     */
    PP13_SEL_EVENTPRED_39(83),
    /**
     * <code>PP13_SEL_EVENTPRED_40 = 84;</code>
     */
    PP13_SEL_EVENTPRED_40(84),
    /**
     * <code>PP13_SEL_EVENTPRED_41 = 85;</code>
     */
    PP13_SEL_EVENTPRED_41(85),
    /**
     * <code>PP13_SEL_EVENTPRED_42 = 86;</code>
     */
    PP13_SEL_EVENTPRED_42(86),
    /**
     * <code>PP13_SEL_EVENTPRED_43 = 87;</code>
     */
    PP13_SEL_EVENTPRED_43(87),
    /**
     * <code>PP13_SEL_SOLO_0 = 88;</code>
     */
    PP13_SEL_SOLO_0(88),
    /**
     * <code>PP13_SEL_SOLO_1 = 89;</code>
     */
    PP13_SEL_SOLO_1(89),
    /**
     * <code>PP13_SEL_SOLO_2 = 90;</code>
     */
    PP13_SEL_SOLO_2(90),
    /**
     * <code>PP13_SEL_SOLO_3 = 91;</code>
     */
    PP13_SEL_SOLO_3(91),
    /**
     * <code>PP13_SEL_SOLO_4 = 92;</code>
     */
    PP13_SEL_SOLO_4(92),
    /**
     * <code>PP13_SEL_SOLO_5 = 93;</code>
     */
    PP13_SEL_SOLO_5(93),
    /**
     * <code>PP13_SEL_SOLO_6 = 94;</code>
     */
    PP13_SEL_SOLO_6(94),
    /**
     * <code>PP13_SEL_SOLO_7 = 95;</code>
     */
    PP13_SEL_SOLO_7(95),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        DOTA_2013PassportSelectionIndices.class.getName());
    }
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_0 = 0;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_0_VALUE = 0;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_1 = 1;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_1_VALUE = 1;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_2 = 2;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_2_VALUE = 2;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_3 = 3;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_3_VALUE = 3;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_4 = 4;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_4_VALUE = 4;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_5 = 5;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_5_VALUE = 5;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_6 = 6;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_6_VALUE = 6;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_7 = 7;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_7_VALUE = 7;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_8 = 8;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_8_VALUE = 8;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_9 = 9;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_9_VALUE = 9;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_0 = 10;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_0_VALUE = 10;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_1 = 11;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_1_VALUE = 11;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_2 = 12;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_2_VALUE = 12;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_3 = 13;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_3_VALUE = 13;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_4 = 14;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_4_VALUE = 14;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_5 = 15;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_5_VALUE = 15;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_6 = 16;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_6_VALUE = 16;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_7 = 17;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_7_VALUE = 17;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_8 = 18;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_8_VALUE = 18;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_9 = 19;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_9_VALUE = 19;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_10 = 20;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_10_VALUE = 20;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_11 = 21;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_11_VALUE = 21;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_12 = 22;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_12_VALUE = 22;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_13 = 23;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_13_VALUE = 23;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_14 = 24;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_14_VALUE = 24;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_0 = 25;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_0_VALUE = 25;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_1 = 26;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_1_VALUE = 26;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_2 = 27;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_2_VALUE = 27;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_3 = 28;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_3_VALUE = 28;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_4 = 29;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_4_VALUE = 29;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_5 = 30;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_5_VALUE = 30;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_6 = 31;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_6_VALUE = 31;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_7 = 32;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_7_VALUE = 32;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_8 = 33;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_8_VALUE = 33;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_9 = 34;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_9_VALUE = 34;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_10 = 35;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_10_VALUE = 35;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_11 = 36;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_11_VALUE = 36;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_12 = 37;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_12_VALUE = 37;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_13 = 38;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_13_VALUE = 38;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_14 = 39;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_14_VALUE = 39;
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM = 40;</code>
     */
    public static final int PP13_SEL_TEAMCUP_TEAM_VALUE = 40;
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER = 41;</code>
     */
    public static final int PP13_SEL_TEAMCUP_PLAYER_VALUE = 41;
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM_LOCK = 42;</code>
     */
    public static final int PP13_SEL_TEAMCUP_TEAM_LOCK_VALUE = 42;
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER_LOCK = 43;</code>
     */
    public static final int PP13_SEL_TEAMCUP_PLAYER_LOCK_VALUE = 43;
    /**
     * <code>PP13_SEL_EVENTPRED_0 = 44;</code>
     */
    public static final int PP13_SEL_EVENTPRED_0_VALUE = 44;
    /**
     * <code>PP13_SEL_EVENTPRED_1 = 45;</code>
     */
    public static final int PP13_SEL_EVENTPRED_1_VALUE = 45;
    /**
     * <code>PP13_SEL_EVENTPRED_2 = 46;</code>
     */
    public static final int PP13_SEL_EVENTPRED_2_VALUE = 46;
    /**
     * <code>PP13_SEL_EVENTPRED_3 = 47;</code>
     */
    public static final int PP13_SEL_EVENTPRED_3_VALUE = 47;
    /**
     * <code>PP13_SEL_EVENTPRED_4 = 48;</code>
     */
    public static final int PP13_SEL_EVENTPRED_4_VALUE = 48;
    /**
     * <code>PP13_SEL_EVENTPRED_5 = 49;</code>
     */
    public static final int PP13_SEL_EVENTPRED_5_VALUE = 49;
    /**
     * <code>PP13_SEL_EVENTPRED_6 = 50;</code>
     */
    public static final int PP13_SEL_EVENTPRED_6_VALUE = 50;
    /**
     * <code>PP13_SEL_EVENTPRED_7 = 51;</code>
     */
    public static final int PP13_SEL_EVENTPRED_7_VALUE = 51;
    /**
     * <code>PP13_SEL_EVENTPRED_8 = 52;</code>
     */
    public static final int PP13_SEL_EVENTPRED_8_VALUE = 52;
    /**
     * <code>PP13_SEL_EVENTPRED_9 = 53;</code>
     */
    public static final int PP13_SEL_EVENTPRED_9_VALUE = 53;
    /**
     * <code>PP13_SEL_EVENTPRED_10 = 54;</code>
     */
    public static final int PP13_SEL_EVENTPRED_10_VALUE = 54;
    /**
     * <code>PP13_SEL_EVENTPRED_11 = 55;</code>
     */
    public static final int PP13_SEL_EVENTPRED_11_VALUE = 55;
    /**
     * <code>PP13_SEL_EVENTPRED_12 = 56;</code>
     */
    public static final int PP13_SEL_EVENTPRED_12_VALUE = 56;
    /**
     * <code>PP13_SEL_EVENTPRED_13 = 57;</code>
     */
    public static final int PP13_SEL_EVENTPRED_13_VALUE = 57;
    /**
     * <code>PP13_SEL_EVENTPRED_14 = 58;</code>
     */
    public static final int PP13_SEL_EVENTPRED_14_VALUE = 58;
    /**
     * <code>PP13_SEL_EVENTPRED_15 = 59;</code>
     */
    public static final int PP13_SEL_EVENTPRED_15_VALUE = 59;
    /**
     * <code>PP13_SEL_EVENTPRED_16 = 60;</code>
     */
    public static final int PP13_SEL_EVENTPRED_16_VALUE = 60;
    /**
     * <code>PP13_SEL_EVENTPRED_17 = 61;</code>
     */
    public static final int PP13_SEL_EVENTPRED_17_VALUE = 61;
    /**
     * <code>PP13_SEL_EVENTPRED_18 = 62;</code>
     */
    public static final int PP13_SEL_EVENTPRED_18_VALUE = 62;
    /**
     * <code>PP13_SEL_EVENTPRED_19 = 63;</code>
     */
    public static final int PP13_SEL_EVENTPRED_19_VALUE = 63;
    /**
     * <code>PP13_SEL_EVENTPRED_20 = 64;</code>
     */
    public static final int PP13_SEL_EVENTPRED_20_VALUE = 64;
    /**
     * <code>PP13_SEL_EVENTPRED_21 = 65;</code>
     */
    public static final int PP13_SEL_EVENTPRED_21_VALUE = 65;
    /**
     * <code>PP13_SEL_EVENTPRED_22 = 66;</code>
     */
    public static final int PP13_SEL_EVENTPRED_22_VALUE = 66;
    /**
     * <code>PP13_SEL_EVENTPRED_23 = 67;</code>
     */
    public static final int PP13_SEL_EVENTPRED_23_VALUE = 67;
    /**
     * <code>PP13_SEL_EVENTPRED_24 = 68;</code>
     */
    public static final int PP13_SEL_EVENTPRED_24_VALUE = 68;
    /**
     * <code>PP13_SEL_EVENTPRED_25 = 69;</code>
     */
    public static final int PP13_SEL_EVENTPRED_25_VALUE = 69;
    /**
     * <code>PP13_SEL_EVENTPRED_26 = 70;</code>
     */
    public static final int PP13_SEL_EVENTPRED_26_VALUE = 70;
    /**
     * <code>PP13_SEL_EVENTPRED_27 = 71;</code>
     */
    public static final int PP13_SEL_EVENTPRED_27_VALUE = 71;
    /**
     * <code>PP13_SEL_EVENTPRED_28 = 72;</code>
     */
    public static final int PP13_SEL_EVENTPRED_28_VALUE = 72;
    /**
     * <code>PP13_SEL_EVENTPRED_29 = 73;</code>
     */
    public static final int PP13_SEL_EVENTPRED_29_VALUE = 73;
    /**
     * <code>PP13_SEL_EVENTPRED_30 = 74;</code>
     */
    public static final int PP13_SEL_EVENTPRED_30_VALUE = 74;
    /**
     * <code>PP13_SEL_EVENTPRED_31 = 75;</code>
     */
    public static final int PP13_SEL_EVENTPRED_31_VALUE = 75;
    /**
     * <code>PP13_SEL_EVENTPRED_32 = 76;</code>
     */
    public static final int PP13_SEL_EVENTPRED_32_VALUE = 76;
    /**
     * <code>PP13_SEL_EVENTPRED_33 = 77;</code>
     */
    public static final int PP13_SEL_EVENTPRED_33_VALUE = 77;
    /**
     * <code>PP13_SEL_EVENTPRED_34 = 78;</code>
     */
    public static final int PP13_SEL_EVENTPRED_34_VALUE = 78;
    /**
     * <code>PP13_SEL_EVENTPRED_35 = 79;</code>
     */
    public static final int PP13_SEL_EVENTPRED_35_VALUE = 79;
    /**
     * <code>PP13_SEL_EVENTPRED_36 = 80;</code>
     */
    public static final int PP13_SEL_EVENTPRED_36_VALUE = 80;
    /**
     * <code>PP13_SEL_EVENTPRED_37 = 81;</code>
     */
    public static final int PP13_SEL_EVENTPRED_37_VALUE = 81;
    /**
     * <code>PP13_SEL_EVENTPRED_38 = 82;</code>
     */
    public static final int PP13_SEL_EVENTPRED_38_VALUE = 82;
    /**
     * <code>PP13_SEL_EVENTPRED_39 = 83;</code>
     */
    public static final int PP13_SEL_EVENTPRED_39_VALUE = 83;
    /**
     * <code>PP13_SEL_EVENTPRED_40 = 84;</code>
     */
    public static final int PP13_SEL_EVENTPRED_40_VALUE = 84;
    /**
     * <code>PP13_SEL_EVENTPRED_41 = 85;</code>
     */
    public static final int PP13_SEL_EVENTPRED_41_VALUE = 85;
    /**
     * <code>PP13_SEL_EVENTPRED_42 = 86;</code>
     */
    public static final int PP13_SEL_EVENTPRED_42_VALUE = 86;
    /**
     * <code>PP13_SEL_EVENTPRED_43 = 87;</code>
     */
    public static final int PP13_SEL_EVENTPRED_43_VALUE = 87;
    /**
     * <code>PP13_SEL_SOLO_0 = 88;</code>
     */
    public static final int PP13_SEL_SOLO_0_VALUE = 88;
    /**
     * <code>PP13_SEL_SOLO_1 = 89;</code>
     */
    public static final int PP13_SEL_SOLO_1_VALUE = 89;
    /**
     * <code>PP13_SEL_SOLO_2 = 90;</code>
     */
    public static final int PP13_SEL_SOLO_2_VALUE = 90;
    /**
     * <code>PP13_SEL_SOLO_3 = 91;</code>
     */
    public static final int PP13_SEL_SOLO_3_VALUE = 91;
    /**
     * <code>PP13_SEL_SOLO_4 = 92;</code>
     */
    public static final int PP13_SEL_SOLO_4_VALUE = 92;
    /**
     * <code>PP13_SEL_SOLO_5 = 93;</code>
     */
    public static final int PP13_SEL_SOLO_5_VALUE = 93;
    /**
     * <code>PP13_SEL_SOLO_6 = 94;</code>
     */
    public static final int PP13_SEL_SOLO_6_VALUE = 94;
    /**
     * <code>PP13_SEL_SOLO_7 = 95;</code>
     */
    public static final int PP13_SEL_SOLO_7_VALUE = 95;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_2013PassportSelectionIndices valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_2013PassportSelectionIndices forNumber(int value) {
      switch (value) {
        case 0: return PP13_SEL_ALLSTAR_PLAYER_0;
        case 1: return PP13_SEL_ALLSTAR_PLAYER_1;
        case 2: return PP13_SEL_ALLSTAR_PLAYER_2;
        case 3: return PP13_SEL_ALLSTAR_PLAYER_3;
        case 4: return PP13_SEL_ALLSTAR_PLAYER_4;
        case 5: return PP13_SEL_ALLSTAR_PLAYER_5;
        case 6: return PP13_SEL_ALLSTAR_PLAYER_6;
        case 7: return PP13_SEL_ALLSTAR_PLAYER_7;
        case 8: return PP13_SEL_ALLSTAR_PLAYER_8;
        case 9: return PP13_SEL_ALLSTAR_PLAYER_9;
        case 10: return PP13_SEL_QUALPRED_WEST_0;
        case 11: return PP13_SEL_QUALPRED_WEST_1;
        case 12: return PP13_SEL_QUALPRED_WEST_2;
        case 13: return PP13_SEL_QUALPRED_WEST_3;
        case 14: return PP13_SEL_QUALPRED_WEST_4;
        case 15: return PP13_SEL_QUALPRED_WEST_5;
        case 16: return PP13_SEL_QUALPRED_WEST_6;
        case 17: return PP13_SEL_QUALPRED_WEST_7;
        case 18: return PP13_SEL_QUALPRED_WEST_8;
        case 19: return PP13_SEL_QUALPRED_WEST_9;
        case 20: return PP13_SEL_QUALPRED_WEST_10;
        case 21: return PP13_SEL_QUALPRED_WEST_11;
        case 22: return PP13_SEL_QUALPRED_WEST_12;
        case 23: return PP13_SEL_QUALPRED_WEST_13;
        case 24: return PP13_SEL_QUALPRED_WEST_14;
        case 25: return PP13_SEL_QUALPRED_EAST_0;
        case 26: return PP13_SEL_QUALPRED_EAST_1;
        case 27: return PP13_SEL_QUALPRED_EAST_2;
        case 28: return PP13_SEL_QUALPRED_EAST_3;
        case 29: return PP13_SEL_QUALPRED_EAST_4;
        case 30: return PP13_SEL_QUALPRED_EAST_5;
        case 31: return PP13_SEL_QUALPRED_EAST_6;
        case 32: return PP13_SEL_QUALPRED_EAST_7;
        case 33: return PP13_SEL_QUALPRED_EAST_8;
        case 34: return PP13_SEL_QUALPRED_EAST_9;
        case 35: return PP13_SEL_QUALPRED_EAST_10;
        case 36: return PP13_SEL_QUALPRED_EAST_11;
        case 37: return PP13_SEL_QUALPRED_EAST_12;
        case 38: return PP13_SEL_QUALPRED_EAST_13;
        case 39: return PP13_SEL_QUALPRED_EAST_14;
        case 40: return PP13_SEL_TEAMCUP_TEAM;
        case 41: return PP13_SEL_TEAMCUP_PLAYER;
        case 42: return PP13_SEL_TEAMCUP_TEAM_LOCK;
        case 43: return PP13_SEL_TEAMCUP_PLAYER_LOCK;
        case 44: return PP13_SEL_EVENTPRED_0;
        case 45: return PP13_SEL_EVENTPRED_1;
        case 46: return PP13_SEL_EVENTPRED_2;
        case 47: return PP13_SEL_EVENTPRED_3;
        case 48: return PP13_SEL_EVENTPRED_4;
        case 49: return PP13_SEL_EVENTPRED_5;
        case 50: return PP13_SEL_EVENTPRED_6;
        case 51: return PP13_SEL_EVENTPRED_7;
        case 52: return PP13_SEL_EVENTPRED_8;
        case 53: return PP13_SEL_EVENTPRED_9;
        case 54: return PP13_SEL_EVENTPRED_10;
        case 55: return PP13_SEL_EVENTPRED_11;
        case 56: return PP13_SEL_EVENTPRED_12;
        case 57: return PP13_SEL_EVENTPRED_13;
        case 58: return PP13_SEL_EVENTPRED_14;
        case 59: return PP13_SEL_EVENTPRED_15;
        case 60: return PP13_SEL_EVENTPRED_16;
        case 61: return PP13_SEL_EVENTPRED_17;
        case 62: return PP13_SEL_EVENTPRED_18;
        case 63: return PP13_SEL_EVENTPRED_19;
        case 64: return PP13_SEL_EVENTPRED_20;
        case 65: return PP13_SEL_EVENTPRED_21;
        case 66: return PP13_SEL_EVENTPRED_22;
        case 67: return PP13_SEL_EVENTPRED_23;
        case 68: return PP13_SEL_EVENTPRED_24;
        case 69: return PP13_SEL_EVENTPRED_25;
        case 70: return PP13_SEL_EVENTPRED_26;
        case 71: return PP13_SEL_EVENTPRED_27;
        case 72: return PP13_SEL_EVENTPRED_28;
        case 73: return PP13_SEL_EVENTPRED_29;
        case 74: return PP13_SEL_EVENTPRED_30;
        case 75: return PP13_SEL_EVENTPRED_31;
        case 76: return PP13_SEL_EVENTPRED_32;
        case 77: return PP13_SEL_EVENTPRED_33;
        case 78: return PP13_SEL_EVENTPRED_34;
        case 79: return PP13_SEL_EVENTPRED_35;
        case 80: return PP13_SEL_EVENTPRED_36;
        case 81: return PP13_SEL_EVENTPRED_37;
        case 82: return PP13_SEL_EVENTPRED_38;
        case 83: return PP13_SEL_EVENTPRED_39;
        case 84: return PP13_SEL_EVENTPRED_40;
        case 85: return PP13_SEL_EVENTPRED_41;
        case 86: return PP13_SEL_EVENTPRED_42;
        case 87: return PP13_SEL_EVENTPRED_43;
        case 88: return PP13_SEL_SOLO_0;
        case 89: return PP13_SEL_SOLO_1;
        case 90: return PP13_SEL_SOLO_2;
        case 91: return PP13_SEL_SOLO_3;
        case 92: return PP13_SEL_SOLO_4;
        case 93: return PP13_SEL_SOLO_5;
        case 94: return PP13_SEL_SOLO_6;
        case 95: return PP13_SEL_SOLO_7;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_2013PassportSelectionIndices> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>() {
            public DOTA_2013PassportSelectionIndices findValueByNumber(int number) {
              return DOTA_2013PassportSelectionIndices.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.getDescriptor().getEnumTypes().get(0);
    }

    private static final DOTA_2013PassportSelectionIndices[] VALUES = values();

    public static DOTA_2013PassportSelectionIndices valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_2013PassportSelectionIndices(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_2013PassportSelectionIndices)
  }

  public interface CMsgDOTAPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPlayerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    int getAccountId();

    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string country_code = 3;</code>
     * @return Whether the countryCode field is set.
     */
    boolean hasCountryCode();
    /**
     * <code>optional string country_code = 3;</code>
     * @return The countryCode.
     */
    java.lang.String getCountryCode();
    /**
     * <code>optional string country_code = 3;</code>
     * @return The bytes for countryCode.
     */
    com.google.protobuf.ByteString
        getCountryCodeBytes();

    /**
     * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
     * @return Whether the fantasyRole field is set.
     */
    boolean hasFantasyRole();
    /**
     * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
     * @return The fantasyRole.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles getFantasyRole();

    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return Whether the teamId field is set.
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return The teamId.
     */
    int getTeamId();

    /**
     * <code>optional string team_name = 6;</code>
     * @return Whether the teamName field is set.
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 6;</code>
     * @return The teamName.
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 6;</code>
     * @return The bytes for teamName.
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional string team_tag = 7;</code>
     * @return Whether the teamTag field is set.
     */
    boolean hasTeamTag();
    /**
     * <code>optional string team_tag = 7;</code>
     * @return The teamTag.
     */
    java.lang.String getTeamTag();
    /**
     * <code>optional string team_tag = 7;</code>
     * @return The bytes for teamTag.
     */
    com.google.protobuf.ByteString
        getTeamTagBytes();

    /**
     * <code>optional string sponsor = 8;</code>
     * @return Whether the sponsor field is set.
     */
    boolean hasSponsor();
    /**
     * <code>optional string sponsor = 8;</code>
     * @return The sponsor.
     */
    java.lang.String getSponsor();
    /**
     * <code>optional string sponsor = 8;</code>
     * @return The bytes for sponsor.
     */
    com.google.protobuf.ByteString
        getSponsorBytes();

    /**
     * <code>optional bool is_locked = 9;</code>
     * @return Whether the isLocked field is set.
     */
    boolean hasIsLocked();
    /**
     * <code>optional bool is_locked = 9;</code>
     * @return The isLocked.
     */
    boolean getIsLocked();

    /**
     * <code>optional bool is_pro = 10;</code>
     * @return Whether the isPro field is set.
     */
    boolean hasIsPro();
    /**
     * <code>optional bool is_pro = 10;</code>
     * @return The isPro.
     */
    boolean getIsPro();

    /**
     * <code>optional string real_name = 11;</code>
     * @return Whether the realName field is set.
     */
    boolean hasRealName();
    /**
     * <code>optional string real_name = 11;</code>
     * @return The realName.
     */
    java.lang.String getRealName();
    /**
     * <code>optional string real_name = 11;</code>
     * @return The bytes for realName.
     */
    com.google.protobuf.ByteString
        getRealNameBytes();

    /**
     * <code>optional uint32 total_earnings = 13;</code>
     * @return Whether the totalEarnings field is set.
     */
    boolean hasTotalEarnings();
    /**
     * <code>optional uint32 total_earnings = 13;</code>
     * @return The totalEarnings.
     */
    int getTotalEarnings();

    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results> 
        getResultsList();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results getResults(int index);
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder getResultsOrBuilder(
        int index);

    /**
     * <code>optional string team_url_logo = 15;</code>
     * @return Whether the teamUrlLogo field is set.
     */
    boolean hasTeamUrlLogo();
    /**
     * <code>optional string team_url_logo = 15;</code>
     * @return The teamUrlLogo.
     */
    java.lang.String getTeamUrlLogo();
    /**
     * <code>optional string team_url_logo = 15;</code>
     * @return The bytes for teamUrlLogo.
     */
    com.google.protobuf.ByteString
        getTeamUrlLogoBytes();

    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry> 
        getAuditEntriesList();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry getAuditEntries(int index);
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    int getAuditEntriesCount();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder> 
        getAuditEntriesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder getAuditEntriesOrBuilder(
        int index);

    /**
     * <code>optional string team_abbreviation = 17;</code>
     * @return Whether the teamAbbreviation field is set.
     */
    boolean hasTeamAbbreviation();
    /**
     * <code>optional string team_abbreviation = 17;</code>
     * @return The teamAbbreviation.
     */
    java.lang.String getTeamAbbreviation();
    /**
     * <code>optional string team_abbreviation = 17;</code>
     * @return The bytes for teamAbbreviation.
     */
    com.google.protobuf.ByteString
        getTeamAbbreviationBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAPlayerInfo}
   */
  public static final class CMsgDOTAPlayerInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPlayerInfo)
      CMsgDOTAPlayerInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPlayerInfo.class.getName());
    }
    // Use CMsgDOTAPlayerInfo.newBuilder() to construct.
    private CMsgDOTAPlayerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPlayerInfo() {
      name_ = "";
      countryCode_ = "";
      fantasyRole_ = 0;
      teamName_ = "";
      teamTag_ = "";
      sponsor_ = "";
      realName_ = "";
      results_ = java.util.Collections.emptyList();
      teamUrlLogo_ = "";
      auditEntries_ = java.util.Collections.emptyList();
      teamAbbreviation_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder.class);
    }

    public interface ResultsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAPlayerInfo.Results)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      boolean hasLeagueId();
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      int getLeagueId();

      /**
       * <code>optional uint32 placement = 2;</code>
       * @return Whether the placement field is set.
       */
      boolean hasPlacement();
      /**
       * <code>optional uint32 placement = 2;</code>
       * @return The placement.
       */
      int getPlacement();

      /**
       * <code>optional uint32 earnings = 3;</code>
       * @return Whether the earnings field is set.
       */
      boolean hasEarnings();
      /**
       * <code>optional uint32 earnings = 3;</code>
       * @return The earnings.
       */
      int getEarnings();
    }
    /**
     * Protobuf type {@code CMsgDOTAPlayerInfo.Results}
     */
    public static final class Results extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAPlayerInfo.Results)
        ResultsOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Results.class.getName());
      }
      // Use Results.newBuilder() to construct.
      private Results(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Results() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_Results_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_Results_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder.class);
      }

      private int bitField0_;
      public static final int LEAGUE_ID_FIELD_NUMBER = 1;
      private int leagueId_ = 0;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }

      public static final int PLACEMENT_FIELD_NUMBER = 2;
      private int placement_ = 0;
      /**
       * <code>optional uint32 placement = 2;</code>
       * @return Whether the placement field is set.
       */
      @java.lang.Override
      public boolean hasPlacement() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 placement = 2;</code>
       * @return The placement.
       */
      @java.lang.Override
      public int getPlacement() {
        return placement_;
      }

      public static final int EARNINGS_FIELD_NUMBER = 3;
      private int earnings_ = 0;
      /**
       * <code>optional uint32 earnings = 3;</code>
       * @return Whether the earnings field is set.
       */
      @java.lang.Override
      public boolean hasEarnings() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 earnings = 3;</code>
       * @return The earnings.
       */
      @java.lang.Override
      public int getEarnings() {
        return earnings_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, placement_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, earnings_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, placement_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, earnings_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results) obj;

        if (hasLeagueId() != other.hasLeagueId()) return false;
        if (hasLeagueId()) {
          if (getLeagueId()
              != other.getLeagueId()) return false;
        }
        if (hasPlacement() != other.hasPlacement()) return false;
        if (hasPlacement()) {
          if (getPlacement()
              != other.getPlacement()) return false;
        }
        if (hasEarnings() != other.hasEarnings()) return false;
        if (hasEarnings()) {
          if (getEarnings()
              != other.getEarnings()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLeagueId()) {
          hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueId();
        }
        if (hasPlacement()) {
          hash = (37 * hash) + PLACEMENT_FIELD_NUMBER;
          hash = (53 * hash) + getPlacement();
        }
        if (hasEarnings()) {
          hash = (37 * hash) + EARNINGS_FIELD_NUMBER;
          hash = (53 * hash) + getEarnings();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAPlayerInfo.Results}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAPlayerInfo.Results)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_Results_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_Results_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          leagueId_ = 0;
          placement_ = 0;
          earnings_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_Results_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.leagueId_ = leagueId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.placement_ = placement_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.earnings_ = earnings_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.getDefaultInstance()) return this;
          if (other.hasLeagueId()) {
            setLeagueId(other.getLeagueId());
          }
          if (other.hasPlacement()) {
            setPlacement(other.getPlacement());
          }
          if (other.hasEarnings()) {
            setEarnings(other.getEarnings());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  leagueId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  placement_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  earnings_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int leagueId_ ;
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return Whether the leagueId field is set.
         */
        @java.lang.Override
        public boolean hasLeagueId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return The leagueId.
         */
        @java.lang.Override
        public int getLeagueId() {
          return leagueId_;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @param value The leagueId to set.
         * @return This builder for chaining.
         */
        public Builder setLeagueId(int value) {

          leagueId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          leagueId_ = 0;
          onChanged();
          return this;
        }

        private int placement_ ;
        /**
         * <code>optional uint32 placement = 2;</code>
         * @return Whether the placement field is set.
         */
        @java.lang.Override
        public boolean hasPlacement() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 placement = 2;</code>
         * @return The placement.
         */
        @java.lang.Override
        public int getPlacement() {
          return placement_;
        }
        /**
         * <code>optional uint32 placement = 2;</code>
         * @param value The placement to set.
         * @return This builder for chaining.
         */
        public Builder setPlacement(int value) {

          placement_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 placement = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlacement() {
          bitField0_ = (bitField0_ & ~0x00000002);
          placement_ = 0;
          onChanged();
          return this;
        }

        private int earnings_ ;
        /**
         * <code>optional uint32 earnings = 3;</code>
         * @return Whether the earnings field is set.
         */
        @java.lang.Override
        public boolean hasEarnings() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 earnings = 3;</code>
         * @return The earnings.
         */
        @java.lang.Override
        public int getEarnings() {
          return earnings_;
        }
        /**
         * <code>optional uint32 earnings = 3;</code>
         * @param value The earnings to set.
         * @return This builder for chaining.
         */
        public Builder setEarnings(int value) {

          earnings_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 earnings = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearEarnings() {
          bitField0_ = (bitField0_ & ~0x00000004);
          earnings_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAPlayerInfo.Results)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerInfo.Results)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Results>
          PARSER = new com.google.protobuf.AbstractParser<Results>() {
        @java.lang.Override
        public Results parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Results> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Results> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AuditEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAPlayerInfo.AuditEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return Whether the startTimestamp field is set.
       */
      boolean hasStartTimestamp();
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return The startTimestamp.
       */
      int getStartTimestamp();

      /**
       * <code>optional uint32 end_timestamp = 2;</code>
       * @return Whether the endTimestamp field is set.
       */
      boolean hasEndTimestamp();
      /**
       * <code>optional uint32 end_timestamp = 2;</code>
       * @return The endTimestamp.
       */
      int getEndTimestamp();

      /**
       * <code>optional uint32 team_id = 3;</code>
       * @return Whether the teamId field is set.
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 3;</code>
       * @return The teamId.
       */
      int getTeamId();

      /**
       * <code>optional string team_name = 4;</code>
       * @return Whether the teamName field is set.
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 4;</code>
       * @return The teamName.
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 4;</code>
       * @return The bytes for teamName.
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional string team_tag = 5;</code>
       * @return Whether the teamTag field is set.
       */
      boolean hasTeamTag();
      /**
       * <code>optional string team_tag = 5;</code>
       * @return The teamTag.
       */
      java.lang.String getTeamTag();
      /**
       * <code>optional string team_tag = 5;</code>
       * @return The bytes for teamTag.
       */
      com.google.protobuf.ByteString
          getTeamTagBytes();

      /**
       * <code>optional string team_url_logo = 6;</code>
       * @return Whether the teamUrlLogo field is set.
       */
      boolean hasTeamUrlLogo();
      /**
       * <code>optional string team_url_logo = 6;</code>
       * @return The teamUrlLogo.
       */
      java.lang.String getTeamUrlLogo();
      /**
       * <code>optional string team_url_logo = 6;</code>
       * @return The bytes for teamUrlLogo.
       */
      com.google.protobuf.ByteString
          getTeamUrlLogoBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTAPlayerInfo.AuditEntry}
     */
    public static final class AuditEntry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAPlayerInfo.AuditEntry)
        AuditEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          AuditEntry.class.getName());
      }
      // Use AuditEntry.newBuilder() to construct.
      private AuditEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private AuditEntry() {
        teamName_ = "";
        teamTag_ = "";
        teamUrlLogo_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_AuditEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_AuditEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder.class);
      }

      private int bitField0_;
      public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
      private int startTimestamp_ = 0;
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return Whether the startTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return The startTimestamp.
       */
      @java.lang.Override
      public int getStartTimestamp() {
        return startTimestamp_;
      }

      public static final int END_TIMESTAMP_FIELD_NUMBER = 2;
      private int endTimestamp_ = 0;
      /**
       * <code>optional uint32 end_timestamp = 2;</code>
       * @return Whether the endTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 end_timestamp = 2;</code>
       * @return The endTimestamp.
       */
      @java.lang.Override
      public int getEndTimestamp() {
        return endTimestamp_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 3;
      private int teamId_ = 0;
      /**
       * <code>optional uint32 team_id = 3;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 team_id = 3;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private volatile java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 4;</code>
       * @return Whether the teamName field is set.
       */
      @java.lang.Override
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string team_name = 4;</code>
       * @return The teamName.
       */
      @java.lang.Override
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       * @return The bytes for teamName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_TAG_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private volatile java.lang.Object teamTag_ = "";
      /**
       * <code>optional string team_tag = 5;</code>
       * @return Whether the teamTag field is set.
       */
      @java.lang.Override
      public boolean hasTeamTag() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string team_tag = 5;</code>
       * @return The teamTag.
       */
      @java.lang.Override
      public java.lang.String getTeamTag() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamTag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_tag = 5;</code>
       * @return The bytes for teamTag.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTeamTagBytes() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_URL_LOGO_FIELD_NUMBER = 6;
      @SuppressWarnings("serial")
      private volatile java.lang.Object teamUrlLogo_ = "";
      /**
       * <code>optional string team_url_logo = 6;</code>
       * @return Whether the teamUrlLogo field is set.
       */
      @java.lang.Override
      public boolean hasTeamUrlLogo() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional string team_url_logo = 6;</code>
       * @return The teamUrlLogo.
       */
      @java.lang.Override
      public java.lang.String getTeamUrlLogo() {
        java.lang.Object ref = teamUrlLogo_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamUrlLogo_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_url_logo = 6;</code>
       * @return The bytes for teamUrlLogo.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTeamUrlLogoBytes() {
        java.lang.Object ref = teamUrlLogo_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamUrlLogo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, startTimestamp_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, endTimestamp_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, teamId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 4, teamName_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 5, teamTag_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 6, teamUrlLogo_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, startTimestamp_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, endTimestamp_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, teamId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(4, teamName_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(5, teamTag_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(6, teamUrlLogo_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry) obj;

        if (hasStartTimestamp() != other.hasStartTimestamp()) return false;
        if (hasStartTimestamp()) {
          if (getStartTimestamp()
              != other.getStartTimestamp()) return false;
        }
        if (hasEndTimestamp() != other.hasEndTimestamp()) return false;
        if (hasEndTimestamp()) {
          if (getEndTimestamp()
              != other.getEndTimestamp()) return false;
        }
        if (hasTeamId() != other.hasTeamId()) return false;
        if (hasTeamId()) {
          if (getTeamId()
              != other.getTeamId()) return false;
        }
        if (hasTeamName() != other.hasTeamName()) return false;
        if (hasTeamName()) {
          if (!getTeamName()
              .equals(other.getTeamName())) return false;
        }
        if (hasTeamTag() != other.hasTeamTag()) return false;
        if (hasTeamTag()) {
          if (!getTeamTag()
              .equals(other.getTeamTag())) return false;
        }
        if (hasTeamUrlLogo() != other.hasTeamUrlLogo()) return false;
        if (hasTeamUrlLogo()) {
          if (!getTeamUrlLogo()
              .equals(other.getTeamUrlLogo())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasStartTimestamp()) {
          hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getStartTimestamp();
        }
        if (hasEndTimestamp()) {
          hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getEndTimestamp();
        }
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasTeamName()) {
          hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTeamName().hashCode();
        }
        if (hasTeamTag()) {
          hash = (37 * hash) + TEAM_TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTeamTag().hashCode();
        }
        if (hasTeamUrlLogo()) {
          hash = (37 * hash) + TEAM_URL_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + getTeamUrlLogo().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAPlayerInfo.AuditEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAPlayerInfo.AuditEntry)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_AuditEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_AuditEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          startTimestamp_ = 0;
          endTimestamp_ = 0;
          teamId_ = 0;
          teamName_ = "";
          teamTag_ = "";
          teamUrlLogo_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_AuditEntry_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.startTimestamp_ = startTimestamp_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.endTimestamp_ = endTimestamp_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.teamId_ = teamId_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.teamName_ = teamName_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.teamTag_ = teamTag_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.teamUrlLogo_ = teamUrlLogo_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.getDefaultInstance()) return this;
          if (other.hasStartTimestamp()) {
            setStartTimestamp(other.getStartTimestamp());
          }
          if (other.hasEndTimestamp()) {
            setEndTimestamp(other.getEndTimestamp());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamName()) {
            teamName_ = other.teamName_;
            bitField0_ |= 0x00000008;
            onChanged();
          }
          if (other.hasTeamTag()) {
            teamTag_ = other.teamTag_;
            bitField0_ |= 0x00000010;
            onChanged();
          }
          if (other.hasTeamUrlLogo()) {
            teamUrlLogo_ = other.teamUrlLogo_;
            bitField0_ |= 0x00000020;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  startTimestamp_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  endTimestamp_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  teamId_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  teamName_ = input.readBytes();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 42: {
                  teamTag_ = input.readBytes();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                case 50: {
                  teamUrlLogo_ = input.readBytes();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 50
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int startTimestamp_ ;
        /**
         * <code>optional uint32 start_timestamp = 1;</code>
         * @return Whether the startTimestamp field is set.
         */
        @java.lang.Override
        public boolean hasStartTimestamp() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 start_timestamp = 1;</code>
         * @return The startTimestamp.
         */
        @java.lang.Override
        public int getStartTimestamp() {
          return startTimestamp_;
        }
        /**
         * <code>optional uint32 start_timestamp = 1;</code>
         * @param value The startTimestamp to set.
         * @return This builder for chaining.
         */
        public Builder setStartTimestamp(int value) {

          startTimestamp_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_timestamp = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startTimestamp_ = 0;
          onChanged();
          return this;
        }

        private int endTimestamp_ ;
        /**
         * <code>optional uint32 end_timestamp = 2;</code>
         * @return Whether the endTimestamp field is set.
         */
        @java.lang.Override
        public boolean hasEndTimestamp() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 end_timestamp = 2;</code>
         * @return The endTimestamp.
         */
        @java.lang.Override
        public int getEndTimestamp() {
          return endTimestamp_;
        }
        /**
         * <code>optional uint32 end_timestamp = 2;</code>
         * @param value The endTimestamp to set.
         * @return This builder for chaining.
         */
        public Builder setEndTimestamp(int value) {

          endTimestamp_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 end_timestamp = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEndTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endTimestamp_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 3;</code>
         * @return Whether the teamId field is set.
         */
        @java.lang.Override
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 team_id = 3;</code>
         * @return The teamId.
         */
        @java.lang.Override
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 3;</code>
         * @param value The teamId to set.
         * @return This builder for chaining.
         */
        public Builder setTeamId(int value) {

          teamId_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 4;</code>
         * @return Whether the teamName field is set.
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional string team_name = 4;</code>
         * @return The teamName.
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 4;</code>
         * @return The bytes for teamName.
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 4;</code>
         * @param value The teamName to set.
         * @return This builder for chaining.
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          teamName_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamName() {
          teamName_ = getDefaultInstance().getTeamName();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 4;</code>
         * @param value The bytes for teamName to set.
         * @return This builder for chaining.
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          teamName_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }

        private java.lang.Object teamTag_ = "";
        /**
         * <code>optional string team_tag = 5;</code>
         * @return Whether the teamTag field is set.
         */
        public boolean hasTeamTag() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional string team_tag = 5;</code>
         * @return The teamTag.
         */
        public java.lang.String getTeamTag() {
          java.lang.Object ref = teamTag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamTag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_tag = 5;</code>
         * @return The bytes for teamTag.
         */
        public com.google.protobuf.ByteString
            getTeamTagBytes() {
          java.lang.Object ref = teamTag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamTag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_tag = 5;</code>
         * @param value The teamTag to set.
         * @return This builder for chaining.
         */
        public Builder setTeamTag(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          teamTag_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_tag = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamTag() {
          teamTag_ = getDefaultInstance().getTeamTag();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_tag = 5;</code>
         * @param value The bytes for teamTag to set.
         * @return This builder for chaining.
         */
        public Builder setTeamTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          teamTag_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }

        private java.lang.Object teamUrlLogo_ = "";
        /**
         * <code>optional string team_url_logo = 6;</code>
         * @return Whether the teamUrlLogo field is set.
         */
        public boolean hasTeamUrlLogo() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional string team_url_logo = 6;</code>
         * @return The teamUrlLogo.
         */
        public java.lang.String getTeamUrlLogo() {
          java.lang.Object ref = teamUrlLogo_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamUrlLogo_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_url_logo = 6;</code>
         * @return The bytes for teamUrlLogo.
         */
        public com.google.protobuf.ByteString
            getTeamUrlLogoBytes() {
          java.lang.Object ref = teamUrlLogo_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamUrlLogo_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_url_logo = 6;</code>
         * @param value The teamUrlLogo to set.
         * @return This builder for chaining.
         */
        public Builder setTeamUrlLogo(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          teamUrlLogo_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_url_logo = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamUrlLogo() {
          teamUrlLogo_ = getDefaultInstance().getTeamUrlLogo();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_url_logo = 6;</code>
         * @param value The bytes for teamUrlLogo to set.
         * @return This builder for chaining.
         */
        public Builder setTeamUrlLogoBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          teamUrlLogo_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAPlayerInfo.AuditEntry)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerInfo.AuditEntry)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AuditEntry>
          PARSER = new com.google.protobuf.AbstractParser<AuditEntry>() {
        @java.lang.Override
        public AuditEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<AuditEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AuditEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNTRY_CODE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object countryCode_ = "";
    /**
     * <code>optional string country_code = 3;</code>
     * @return Whether the countryCode field is set.
     */
    @java.lang.Override
    public boolean hasCountryCode() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string country_code = 3;</code>
     * @return The countryCode.
     */
    @java.lang.Override
    public java.lang.String getCountryCode() {
      java.lang.Object ref = countryCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          countryCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string country_code = 3;</code>
     * @return The bytes for countryCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCountryCodeBytes() {
      java.lang.Object ref = countryCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        countryCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FANTASY_ROLE_FIELD_NUMBER = 4;
    private int fantasyRole_ = 0;
    /**
     * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
     * @return Whether the fantasyRole field is set.
     */
    @java.lang.Override public boolean hasFantasyRole() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
     * @return The fantasyRole.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles getFantasyRole() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.forNumber(fantasyRole_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.FANTASY_ROLE_UNDEFINED : result;
    }

    public static final int TEAM_ID_FIELD_NUMBER = 5;
    private int teamId_ = 0;
    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return Whether the teamId field is set.
     */
    @java.lang.Override
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return The teamId.
     */
    @java.lang.Override
    public int getTeamId() {
      return teamId_;
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object teamName_ = "";
    /**
     * <code>optional string team_name = 6;</code>
     * @return Whether the teamName field is set.
     */
    @java.lang.Override
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional string team_name = 6;</code>
     * @return The teamName.
     */
    @java.lang.Override
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 6;</code>
     * @return The bytes for teamName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_TAG_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object teamTag_ = "";
    /**
     * <code>optional string team_tag = 7;</code>
     * @return Whether the teamTag field is set.
     */
    @java.lang.Override
    public boolean hasTeamTag() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional string team_tag = 7;</code>
     * @return The teamTag.
     */
    @java.lang.Override
    public java.lang.String getTeamTag() {
      java.lang.Object ref = teamTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_tag = 7;</code>
     * @return The bytes for teamTag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTeamTagBytes() {
      java.lang.Object ref = teamTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPONSOR_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sponsor_ = "";
    /**
     * <code>optional string sponsor = 8;</code>
     * @return Whether the sponsor field is set.
     */
    @java.lang.Override
    public boolean hasSponsor() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional string sponsor = 8;</code>
     * @return The sponsor.
     */
    @java.lang.Override
    public java.lang.String getSponsor() {
      java.lang.Object ref = sponsor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sponsor_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sponsor = 8;</code>
     * @return The bytes for sponsor.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSponsorBytes() {
      java.lang.Object ref = sponsor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sponsor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_LOCKED_FIELD_NUMBER = 9;
    private boolean isLocked_ = false;
    /**
     * <code>optional bool is_locked = 9;</code>
     * @return Whether the isLocked field is set.
     */
    @java.lang.Override
    public boolean hasIsLocked() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool is_locked = 9;</code>
     * @return The isLocked.
     */
    @java.lang.Override
    public boolean getIsLocked() {
      return isLocked_;
    }

    public static final int IS_PRO_FIELD_NUMBER = 10;
    private boolean isPro_ = false;
    /**
     * <code>optional bool is_pro = 10;</code>
     * @return Whether the isPro field is set.
     */
    @java.lang.Override
    public boolean hasIsPro() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool is_pro = 10;</code>
     * @return The isPro.
     */
    @java.lang.Override
    public boolean getIsPro() {
      return isPro_;
    }

    public static final int REAL_NAME_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private volatile java.lang.Object realName_ = "";
    /**
     * <code>optional string real_name = 11;</code>
     * @return Whether the realName field is set.
     */
    @java.lang.Override
    public boolean hasRealName() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional string real_name = 11;</code>
     * @return The realName.
     */
    @java.lang.Override
    public java.lang.String getRealName() {
      java.lang.Object ref = realName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          realName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string real_name = 11;</code>
     * @return The bytes for realName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRealNameBytes() {
      java.lang.Object ref = realName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        realName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTAL_EARNINGS_FIELD_NUMBER = 13;
    private int totalEarnings_ = 0;
    /**
     * <code>optional uint32 total_earnings = 13;</code>
     * @return Whether the totalEarnings field is set.
     */
    @java.lang.Override
    public boolean hasTotalEarnings() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint32 total_earnings = 13;</code>
     * @return The totalEarnings.
     */
    @java.lang.Override
    public int getTotalEarnings() {
      return totalEarnings_;
    }

    public static final int RESULTS_FIELD_NUMBER = 14;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results> results_;
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    @java.lang.Override
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    public static final int TEAM_URL_LOGO_FIELD_NUMBER = 15;
    @SuppressWarnings("serial")
    private volatile java.lang.Object teamUrlLogo_ = "";
    /**
     * <code>optional string team_url_logo = 15;</code>
     * @return Whether the teamUrlLogo field is set.
     */
    @java.lang.Override
    public boolean hasTeamUrlLogo() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional string team_url_logo = 15;</code>
     * @return The teamUrlLogo.
     */
    @java.lang.Override
    public java.lang.String getTeamUrlLogo() {
      java.lang.Object ref = teamUrlLogo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamUrlLogo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_url_logo = 15;</code>
     * @return The bytes for teamUrlLogo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTeamUrlLogoBytes() {
      java.lang.Object ref = teamUrlLogo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamUrlLogo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUDIT_ENTRIES_FIELD_NUMBER = 16;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry> auditEntries_;
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry> getAuditEntriesList() {
      return auditEntries_;
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder> 
        getAuditEntriesOrBuilderList() {
      return auditEntries_;
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    @java.lang.Override
    public int getAuditEntriesCount() {
      return auditEntries_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry getAuditEntries(int index) {
      return auditEntries_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder getAuditEntriesOrBuilder(
        int index) {
      return auditEntries_.get(index);
    }

    public static final int TEAM_ABBREVIATION_FIELD_NUMBER = 17;
    @SuppressWarnings("serial")
    private volatile java.lang.Object teamAbbreviation_ = "";
    /**
     * <code>optional string team_abbreviation = 17;</code>
     * @return Whether the teamAbbreviation field is set.
     */
    @java.lang.Override
    public boolean hasTeamAbbreviation() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional string team_abbreviation = 17;</code>
     * @return The teamAbbreviation.
     */
    @java.lang.Override
    public java.lang.String getTeamAbbreviation() {
      java.lang.Object ref = teamAbbreviation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamAbbreviation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_abbreviation = 17;</code>
     * @return The bytes for teamAbbreviation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTeamAbbreviationBytes() {
      java.lang.Object ref = teamAbbreviation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamAbbreviation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, countryCode_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, fantasyRole_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, teamId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, teamName_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, teamTag_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, sponsor_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(9, isLocked_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(10, isPro_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 11, realName_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(13, totalEarnings_);
      }
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(14, results_.get(i));
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 15, teamUrlLogo_);
      }
      for (int i = 0; i < auditEntries_.size(); i++) {
        output.writeMessage(16, auditEntries_.get(i));
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 17, teamAbbreviation_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, countryCode_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, fantasyRole_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, teamName_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, teamTag_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, sponsor_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isLocked_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isPro_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(11, realName_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, totalEarnings_);
      }
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, results_.get(i));
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(15, teamUrlLogo_);
      }
      for (int i = 0; i < auditEntries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, auditEntries_.get(i));
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(17, teamAbbreviation_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo) obj;

      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasCountryCode() != other.hasCountryCode()) return false;
      if (hasCountryCode()) {
        if (!getCountryCode()
            .equals(other.getCountryCode())) return false;
      }
      if (hasFantasyRole() != other.hasFantasyRole()) return false;
      if (hasFantasyRole()) {
        if (fantasyRole_ != other.fantasyRole_) return false;
      }
      if (hasTeamId() != other.hasTeamId()) return false;
      if (hasTeamId()) {
        if (getTeamId()
            != other.getTeamId()) return false;
      }
      if (hasTeamName() != other.hasTeamName()) return false;
      if (hasTeamName()) {
        if (!getTeamName()
            .equals(other.getTeamName())) return false;
      }
      if (hasTeamTag() != other.hasTeamTag()) return false;
      if (hasTeamTag()) {
        if (!getTeamTag()
            .equals(other.getTeamTag())) return false;
      }
      if (hasSponsor() != other.hasSponsor()) return false;
      if (hasSponsor()) {
        if (!getSponsor()
            .equals(other.getSponsor())) return false;
      }
      if (hasIsLocked() != other.hasIsLocked()) return false;
      if (hasIsLocked()) {
        if (getIsLocked()
            != other.getIsLocked()) return false;
      }
      if (hasIsPro() != other.hasIsPro()) return false;
      if (hasIsPro()) {
        if (getIsPro()
            != other.getIsPro()) return false;
      }
      if (hasRealName() != other.hasRealName()) return false;
      if (hasRealName()) {
        if (!getRealName()
            .equals(other.getRealName())) return false;
      }
      if (hasTotalEarnings() != other.hasTotalEarnings()) return false;
      if (hasTotalEarnings()) {
        if (getTotalEarnings()
            != other.getTotalEarnings()) return false;
      }
      if (!getResultsList()
          .equals(other.getResultsList())) return false;
      if (hasTeamUrlLogo() != other.hasTeamUrlLogo()) return false;
      if (hasTeamUrlLogo()) {
        if (!getTeamUrlLogo()
            .equals(other.getTeamUrlLogo())) return false;
      }
      if (!getAuditEntriesList()
          .equals(other.getAuditEntriesList())) return false;
      if (hasTeamAbbreviation() != other.hasTeamAbbreviation()) return false;
      if (hasTeamAbbreviation()) {
        if (!getTeamAbbreviation()
            .equals(other.getTeamAbbreviation())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasCountryCode()) {
        hash = (37 * hash) + COUNTRY_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCountryCode().hashCode();
      }
      if (hasFantasyRole()) {
        hash = (37 * hash) + FANTASY_ROLE_FIELD_NUMBER;
        hash = (53 * hash) + fantasyRole_;
      }
      if (hasTeamId()) {
        hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTeamId();
      }
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasTeamTag()) {
        hash = (37 * hash) + TEAM_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTeamTag().hashCode();
      }
      if (hasSponsor()) {
        hash = (37 * hash) + SPONSOR_FIELD_NUMBER;
        hash = (53 * hash) + getSponsor().hashCode();
      }
      if (hasIsLocked()) {
        hash = (37 * hash) + IS_LOCKED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsLocked());
      }
      if (hasIsPro()) {
        hash = (37 * hash) + IS_PRO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsPro());
      }
      if (hasRealName()) {
        hash = (37 * hash) + REAL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getRealName().hashCode();
      }
      if (hasTotalEarnings()) {
        hash = (37 * hash) + TOTAL_EARNINGS_FIELD_NUMBER;
        hash = (53 * hash) + getTotalEarnings();
      }
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      if (hasTeamUrlLogo()) {
        hash = (37 * hash) + TEAM_URL_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + getTeamUrlLogo().hashCode();
      }
      if (getAuditEntriesCount() > 0) {
        hash = (37 * hash) + AUDIT_ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getAuditEntriesList().hashCode();
      }
      if (hasTeamAbbreviation()) {
        hash = (37 * hash) + TEAM_ABBREVIATION_FIELD_NUMBER;
        hash = (53 * hash) + getTeamAbbreviation().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPlayerInfo)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accountId_ = 0;
        name_ = "";
        countryCode_ = "";
        fantasyRole_ = 0;
        teamId_ = 0;
        teamName_ = "";
        teamTag_ = "";
        sponsor_ = "";
        isLocked_ = false;
        isPro_ = false;
        realName_ = "";
        totalEarnings_ = 0;
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
        } else {
          results_ = null;
          resultsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        teamUrlLogo_ = "";
        if (auditEntriesBuilder_ == null) {
          auditEntries_ = java.util.Collections.emptyList();
        } else {
          auditEntries_ = null;
          auditEntriesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        teamAbbreviation_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfo_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo result) {
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        if (auditEntriesBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0)) {
            auditEntries_ = java.util.Collections.unmodifiableList(auditEntries_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.auditEntries_ = auditEntries_;
        } else {
          result.auditEntries_ = auditEntriesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.countryCode_ = countryCode_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.fantasyRole_ = fantasyRole_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.teamId_ = teamId_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.teamName_ = teamName_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.teamTag_ = teamTag_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.sponsor_ = sponsor_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.isLocked_ = isLocked_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.isPro_ = isPro_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.realName_ = realName_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.totalEarnings_ = totalEarnings_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.teamUrlLogo_ = teamUrlLogo_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.teamAbbreviation_ = teamAbbreviation_;
          to_bitField0_ |= 0x00002000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasCountryCode()) {
          countryCode_ = other.countryCode_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasFantasyRole()) {
          setFantasyRole(other.getFantasyRole());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasTeamName()) {
          teamName_ = other.teamName_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (other.hasTeamTag()) {
          teamTag_ = other.teamTag_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.hasSponsor()) {
          sponsor_ = other.sponsor_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (other.hasIsLocked()) {
          setIsLocked(other.getIsLocked());
        }
        if (other.hasIsPro()) {
          setIsPro(other.getIsPro());
        }
        if (other.hasRealName()) {
          realName_ = other.realName_;
          bitField0_ |= 0x00000400;
          onChanged();
        }
        if (other.hasTotalEarnings()) {
          setTotalEarnings(other.getTotalEarnings());
        }
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00001000);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        if (other.hasTeamUrlLogo()) {
          teamUrlLogo_ = other.teamUrlLogo_;
          bitField0_ |= 0x00002000;
          onChanged();
        }
        if (auditEntriesBuilder_ == null) {
          if (!other.auditEntries_.isEmpty()) {
            if (auditEntries_.isEmpty()) {
              auditEntries_ = other.auditEntries_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureAuditEntriesIsMutable();
              auditEntries_.addAll(other.auditEntries_);
            }
            onChanged();
          }
        } else {
          if (!other.auditEntries_.isEmpty()) {
            if (auditEntriesBuilder_.isEmpty()) {
              auditEntriesBuilder_.dispose();
              auditEntriesBuilder_ = null;
              auditEntries_ = other.auditEntries_;
              bitField0_ = (bitField0_ & ~0x00004000);
              auditEntriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAuditEntriesFieldBuilder() : null;
            } else {
              auditEntriesBuilder_.addAllMessages(other.auditEntries_);
            }
          }
        }
        if (other.hasTeamAbbreviation()) {
          teamAbbreviation_ = other.teamAbbreviation_;
          bitField0_ |= 0x00008000;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                countryCode_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  fantasyRole_ = tmpRaw;
                  bitField0_ |= 0x00000008;
                }
                break;
              } // case 32
              case 40: {
                teamId_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                teamName_ = input.readBytes();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                teamTag_ = input.readBytes();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                sponsor_ = input.readBytes();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 72: {
                isLocked_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                isPro_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 90: {
                realName_ = input.readBytes();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 104: {
                totalEarnings_ = input.readUInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 104
              case 114: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.parser(),
                        extensionRegistry);
                if (resultsBuilder_ == null) {
                  ensureResultsIsMutable();
                  results_.add(m);
                } else {
                  resultsBuilder_.addMessage(m);
                }
                break;
              } // case 114
              case 122: {
                teamUrlLogo_ = input.readBytes();
                bitField0_ |= 0x00002000;
                break;
              } // case 122
              case 130: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.parser(),
                        extensionRegistry);
                if (auditEntriesBuilder_ == null) {
                  ensureAuditEntriesIsMutable();
                  auditEntries_.add(m);
                } else {
                  auditEntriesBuilder_.addMessage(m);
                }
                break;
              } // case 130
              case 138: {
                teamAbbreviation_ = input.readBytes();
                bitField0_ |= 0x00008000;
                break;
              } // case 138
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object countryCode_ = "";
      /**
       * <code>optional string country_code = 3;</code>
       * @return Whether the countryCode field is set.
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string country_code = 3;</code>
       * @return The countryCode.
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            countryCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string country_code = 3;</code>
       * @return The bytes for countryCode.
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string country_code = 3;</code>
       * @param value The countryCode to set.
       * @return This builder for chaining.
       */
      public Builder setCountryCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        countryCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string country_code = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCountryCode() {
        countryCode_ = getDefaultInstance().getCountryCode();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string country_code = 3;</code>
       * @param value The bytes for countryCode to set.
       * @return This builder for chaining.
       */
      public Builder setCountryCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        countryCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int fantasyRole_ = 0;
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return Whether the fantasyRole field is set.
       */
      @java.lang.Override public boolean hasFantasyRole() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return The fantasyRole.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles getFantasyRole() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.forNumber(fantasyRole_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.FANTASY_ROLE_UNDEFINED : result;
      }
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @param value The fantasyRole to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyRole(kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        fantasyRole_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 4 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyRole() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fantasyRole_ = 0;
        onChanged();
        return this;
      }

      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @param value The teamId to set.
       * @return This builder for chaining.
       */
      public Builder setTeamId(int value) {

        teamId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 6;</code>
       * @return Whether the teamName field is set.
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional string team_name = 6;</code>
       * @return The teamName.
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 6;</code>
       * @return The bytes for teamName.
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 6;</code>
       * @param value The teamName to set.
       * @return This builder for chaining.
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        teamName_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamName() {
        teamName_ = getDefaultInstance().getTeamName();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 6;</code>
       * @param value The bytes for teamName to set.
       * @return This builder for chaining.
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        teamName_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private java.lang.Object teamTag_ = "";
      /**
       * <code>optional string team_tag = 7;</code>
       * @return Whether the teamTag field is set.
       */
      public boolean hasTeamTag() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional string team_tag = 7;</code>
       * @return The teamTag.
       */
      public java.lang.String getTeamTag() {
        java.lang.Object ref = teamTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_tag = 7;</code>
       * @return The bytes for teamTag.
       */
      public com.google.protobuf.ByteString
          getTeamTagBytes() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_tag = 7;</code>
       * @param value The teamTag to set.
       * @return This builder for chaining.
       */
      public Builder setTeamTag(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        teamTag_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_tag = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamTag() {
        teamTag_ = getDefaultInstance().getTeamTag();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_tag = 7;</code>
       * @param value The bytes for teamTag to set.
       * @return This builder for chaining.
       */
      public Builder setTeamTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        teamTag_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private java.lang.Object sponsor_ = "";
      /**
       * <code>optional string sponsor = 8;</code>
       * @return Whether the sponsor field is set.
       */
      public boolean hasSponsor() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional string sponsor = 8;</code>
       * @return The sponsor.
       */
      public java.lang.String getSponsor() {
        java.lang.Object ref = sponsor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sponsor_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sponsor = 8;</code>
       * @return The bytes for sponsor.
       */
      public com.google.protobuf.ByteString
          getSponsorBytes() {
        java.lang.Object ref = sponsor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sponsor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sponsor = 8;</code>
       * @param value The sponsor to set.
       * @return This builder for chaining.
       */
      public Builder setSponsor(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sponsor_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sponsor = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSponsor() {
        sponsor_ = getDefaultInstance().getSponsor();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>optional string sponsor = 8;</code>
       * @param value The bytes for sponsor to set.
       * @return This builder for chaining.
       */
      public Builder setSponsorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        sponsor_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private boolean isLocked_ ;
      /**
       * <code>optional bool is_locked = 9;</code>
       * @return Whether the isLocked field is set.
       */
      @java.lang.Override
      public boolean hasIsLocked() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool is_locked = 9;</code>
       * @return The isLocked.
       */
      @java.lang.Override
      public boolean getIsLocked() {
        return isLocked_;
      }
      /**
       * <code>optional bool is_locked = 9;</code>
       * @param value The isLocked to set.
       * @return This builder for chaining.
       */
      public Builder setIsLocked(boolean value) {

        isLocked_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_locked = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLocked() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isLocked_ = false;
        onChanged();
        return this;
      }

      private boolean isPro_ ;
      /**
       * <code>optional bool is_pro = 10;</code>
       * @return Whether the isPro field is set.
       */
      @java.lang.Override
      public boolean hasIsPro() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool is_pro = 10;</code>
       * @return The isPro.
       */
      @java.lang.Override
      public boolean getIsPro() {
        return isPro_;
      }
      /**
       * <code>optional bool is_pro = 10;</code>
       * @param value The isPro to set.
       * @return This builder for chaining.
       */
      public Builder setIsPro(boolean value) {

        isPro_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_pro = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPro() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isPro_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object realName_ = "";
      /**
       * <code>optional string real_name = 11;</code>
       * @return Whether the realName field is set.
       */
      public boolean hasRealName() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional string real_name = 11;</code>
       * @return The realName.
       */
      public java.lang.String getRealName() {
        java.lang.Object ref = realName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            realName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string real_name = 11;</code>
       * @return The bytes for realName.
       */
      public com.google.protobuf.ByteString
          getRealNameBytes() {
        java.lang.Object ref = realName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          realName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string real_name = 11;</code>
       * @param value The realName to set.
       * @return This builder for chaining.
       */
      public Builder setRealName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        realName_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional string real_name = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRealName() {
        realName_ = getDefaultInstance().getRealName();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <code>optional string real_name = 11;</code>
       * @param value The bytes for realName to set.
       * @return This builder for chaining.
       */
      public Builder setRealNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        realName_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }

      private int totalEarnings_ ;
      /**
       * <code>optional uint32 total_earnings = 13;</code>
       * @return Whether the totalEarnings field is set.
       */
      @java.lang.Override
      public boolean hasTotalEarnings() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional uint32 total_earnings = 13;</code>
       * @return The totalEarnings.
       */
      @java.lang.Override
      public int getTotalEarnings() {
        return totalEarnings_;
      }
      /**
       * <code>optional uint32 total_earnings = 13;</code>
       * @param value The totalEarnings to set.
       * @return This builder for chaining.
       */
      public Builder setTotalEarnings(int value) {

        totalEarnings_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_earnings = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalEarnings() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalEarnings_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          results_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results>(results_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder setResults(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder setResults(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder addResults(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder addResults(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder addResults(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder addResults(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.Results results = 14;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Results.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.ResultsOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00001000) != 0),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }

      private java.lang.Object teamUrlLogo_ = "";
      /**
       * <code>optional string team_url_logo = 15;</code>
       * @return Whether the teamUrlLogo field is set.
       */
      public boolean hasTeamUrlLogo() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional string team_url_logo = 15;</code>
       * @return The teamUrlLogo.
       */
      public java.lang.String getTeamUrlLogo() {
        java.lang.Object ref = teamUrlLogo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamUrlLogo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_url_logo = 15;</code>
       * @return The bytes for teamUrlLogo.
       */
      public com.google.protobuf.ByteString
          getTeamUrlLogoBytes() {
        java.lang.Object ref = teamUrlLogo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamUrlLogo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_url_logo = 15;</code>
       * @param value The teamUrlLogo to set.
       * @return This builder for chaining.
       */
      public Builder setTeamUrlLogo(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        teamUrlLogo_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_url_logo = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamUrlLogo() {
        teamUrlLogo_ = getDefaultInstance().getTeamUrlLogo();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_url_logo = 15;</code>
       * @param value The bytes for teamUrlLogo to set.
       * @return This builder for chaining.
       */
      public Builder setTeamUrlLogoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        teamUrlLogo_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry> auditEntries_ =
        java.util.Collections.emptyList();
      private void ensureAuditEntriesIsMutable() {
        if (!((bitField0_ & 0x00004000) != 0)) {
          auditEntries_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry>(auditEntries_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder> auditEntriesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry> getAuditEntriesList() {
        if (auditEntriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(auditEntries_);
        } else {
          return auditEntriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public int getAuditEntriesCount() {
        if (auditEntriesBuilder_ == null) {
          return auditEntries_.size();
        } else {
          return auditEntriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry getAuditEntries(int index) {
        if (auditEntriesBuilder_ == null) {
          return auditEntries_.get(index);
        } else {
          return auditEntriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder setAuditEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry value) {
        if (auditEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAuditEntriesIsMutable();
          auditEntries_.set(index, value);
          onChanged();
        } else {
          auditEntriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder setAuditEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder builderForValue) {
        if (auditEntriesBuilder_ == null) {
          ensureAuditEntriesIsMutable();
          auditEntries_.set(index, builderForValue.build());
          onChanged();
        } else {
          auditEntriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder addAuditEntries(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry value) {
        if (auditEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAuditEntriesIsMutable();
          auditEntries_.add(value);
          onChanged();
        } else {
          auditEntriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder addAuditEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry value) {
        if (auditEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAuditEntriesIsMutable();
          auditEntries_.add(index, value);
          onChanged();
        } else {
          auditEntriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder addAuditEntries(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder builderForValue) {
        if (auditEntriesBuilder_ == null) {
          ensureAuditEntriesIsMutable();
          auditEntries_.add(builderForValue.build());
          onChanged();
        } else {
          auditEntriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder addAuditEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder builderForValue) {
        if (auditEntriesBuilder_ == null) {
          ensureAuditEntriesIsMutable();
          auditEntries_.add(index, builderForValue.build());
          onChanged();
        } else {
          auditEntriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder addAllAuditEntries(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry> values) {
        if (auditEntriesBuilder_ == null) {
          ensureAuditEntriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, auditEntries_);
          onChanged();
        } else {
          auditEntriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder clearAuditEntries() {
        if (auditEntriesBuilder_ == null) {
          auditEntries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          auditEntriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public Builder removeAuditEntries(int index) {
        if (auditEntriesBuilder_ == null) {
          ensureAuditEntriesIsMutable();
          auditEntries_.remove(index);
          onChanged();
        } else {
          auditEntriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder getAuditEntriesBuilder(
          int index) {
        return getAuditEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder getAuditEntriesOrBuilder(
          int index) {
        if (auditEntriesBuilder_ == null) {
          return auditEntries_.get(index);  } else {
          return auditEntriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder> 
           getAuditEntriesOrBuilderList() {
        if (auditEntriesBuilder_ != null) {
          return auditEntriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(auditEntries_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder addAuditEntriesBuilder() {
        return getAuditEntriesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder addAuditEntriesBuilder(
          int index) {
        return getAuditEntriesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo.AuditEntry audit_entries = 16;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder> 
           getAuditEntriesBuilderList() {
        return getAuditEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder> 
          getAuditEntriesFieldBuilder() {
        if (auditEntriesBuilder_ == null) {
          auditEntriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.AuditEntryOrBuilder>(
                  auditEntries_,
                  ((bitField0_ & 0x00004000) != 0),
                  getParentForChildren(),
                  isClean());
          auditEntries_ = null;
        }
        return auditEntriesBuilder_;
      }

      private java.lang.Object teamAbbreviation_ = "";
      /**
       * <code>optional string team_abbreviation = 17;</code>
       * @return Whether the teamAbbreviation field is set.
       */
      public boolean hasTeamAbbreviation() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional string team_abbreviation = 17;</code>
       * @return The teamAbbreviation.
       */
      public java.lang.String getTeamAbbreviation() {
        java.lang.Object ref = teamAbbreviation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamAbbreviation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_abbreviation = 17;</code>
       * @return The bytes for teamAbbreviation.
       */
      public com.google.protobuf.ByteString
          getTeamAbbreviationBytes() {
        java.lang.Object ref = teamAbbreviation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamAbbreviation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_abbreviation = 17;</code>
       * @param value The teamAbbreviation to set.
       * @return This builder for chaining.
       */
      public Builder setTeamAbbreviation(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        teamAbbreviation_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_abbreviation = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamAbbreviation() {
        teamAbbreviation_ = getDefaultInstance().getTeamAbbreviation();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_abbreviation = 17;</code>
       * @param value The bytes for teamAbbreviation to set.
       * @return This builder for chaining.
       */
      public Builder setTeamAbbreviationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        teamAbbreviation_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPlayerInfo)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerInfo)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPlayerInfo>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPlayerInfo>() {
      @java.lang.Override
      public CMsgDOTAPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPlayerInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPlayerInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPlayerInfoListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPlayerInfoList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo> 
        getPlayerInfosList();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getPlayerInfos(int index);
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    int getPlayerInfosCount();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> 
        getPlayerInfosOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder getPlayerInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAPlayerInfoList}
   */
  public static final class CMsgDOTAPlayerInfoList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPlayerInfoList)
      CMsgDOTAPlayerInfoListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPlayerInfoList.class.getName());
    }
    // Use CMsgDOTAPlayerInfoList.newBuilder() to construct.
    private CMsgDOTAPlayerInfoList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPlayerInfoList() {
      playerInfos_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfoList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfoList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.Builder.class);
    }

    public static final int PLAYER_INFOS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo> playerInfos_;
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo> getPlayerInfosList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> 
        getPlayerInfosOrBuilderList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    @java.lang.Override
    public int getPlayerInfosCount() {
      return playerInfos_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getPlayerInfos(int index) {
      return playerInfos_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder getPlayerInfosOrBuilder(
        int index) {
      return playerInfos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < playerInfos_.size(); i++) {
        output.writeMessage(1, playerInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList) obj;

      if (!getPlayerInfosList()
          .equals(other.getPlayerInfosList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPlayerInfosCount() > 0) {
        hash = (37 * hash) + PLAYER_INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInfosList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPlayerInfoList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPlayerInfoList)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfoList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfoList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
        } else {
          playerInfos_ = null;
          playerInfosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPlayerInfoList_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList result) {
        if (playerInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerInfos_ = playerInfos_;
        } else {
          result.playerInfos_ = playerInfosBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList.getDefaultInstance()) return this;
        if (playerInfosBuilder_ == null) {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfos_.isEmpty()) {
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerInfosIsMutable();
              playerInfos_.addAll(other.playerInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfosBuilder_.isEmpty()) {
              playerInfosBuilder_.dispose();
              playerInfosBuilder_ = null;
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerInfosFieldBuilder() : null;
            } else {
              playerInfosBuilder_.addAllMessages(other.playerInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.parser(),
                        extensionRegistry);
                if (playerInfosBuilder_ == null) {
                  ensurePlayerInfosIsMutable();
                  playerInfos_.add(m);
                } else {
                  playerInfosBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo> playerInfos_ =
        java.util.Collections.emptyList();
      private void ensurePlayerInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          playerInfos_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo>(playerInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> playerInfosBuilder_;

      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo> getPlayerInfosList() {
        if (playerInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerInfos_);
        } else {
          return playerInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public int getPlayerInfosCount() {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.size();
        } else {
          return playerInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getPlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);
        } else {
          return playerInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder setPlayerInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder setPlayerInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder addAllPlayerInfos(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo> values) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerInfos_);
          onChanged();
        } else {
          playerInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder clearPlayerInfos() {
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public Builder removePlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.remove(index);
          onChanged();
        } else {
          playerInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder getPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder getPlayerInfosOrBuilder(
          int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);  } else {
          return playerInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> 
           getPlayerInfosOrBuilderList() {
        if (playerInfosBuilder_ != null) {
          return playerInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerInfos_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder addPlayerInfosBuilder() {
        return getPlayerInfosFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder addPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPlayerInfo player_infos = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder> 
           getPlayerInfosBuilderList() {
        return getPlayerInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> 
          getPlayerInfosFieldBuilder() {
        if (playerInfosBuilder_ == null) {
          playerInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder>(
                  playerInfos_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          playerInfos_ = null;
        }
        return playerInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPlayerInfoList)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPlayerInfoList)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPlayerInfoList>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPlayerInfoList>() {
      @java.lang.Override
      public CMsgDOTAPlayerInfoList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPlayerInfoList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPlayerInfoList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATeamRosterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATeamRoster)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 1;</code>
     * @return The timestamp.
     */
    int getTimestamp();

    /**
     * <code>optional uint32 team_id = 2;</code>
     * @return Whether the teamId field is set.
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 2;</code>
     * @return The teamId.
     */
    int getTeamId();

    /**
     * <code>repeated uint32 member_account_ids = 3;</code>
     * @return A list containing the memberAccountIds.
     */
    java.util.List<java.lang.Integer> getMemberAccountIdsList();
    /**
     * <code>repeated uint32 member_account_ids = 3;</code>
     * @return The count of memberAccountIds.
     */
    int getMemberAccountIdsCount();
    /**
     * <code>repeated uint32 member_account_ids = 3;</code>
     * @param index The index of the element to return.
     * @return The memberAccountIds at the given index.
     */
    int getMemberAccountIds(int index);

    /**
     * <code>optional uint32 coach_account_id = 4;</code>
     * @return Whether the coachAccountId field is set.
     */
    boolean hasCoachAccountId();
    /**
     * <code>optional uint32 coach_account_id = 4;</code>
     * @return The coachAccountId.
     */
    int getCoachAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTATeamRoster}
   */
  public static final class CMsgDOTATeamRoster extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATeamRoster)
      CMsgDOTATeamRosterOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTATeamRoster.class.getName());
    }
    // Use CMsgDOTATeamRoster.newBuilder() to construct.
    private CMsgDOTATeamRoster(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATeamRoster() {
      memberAccountIds_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTATeamRoster_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTATeamRoster_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_ = 0;
    /**
     * <code>optional uint32 timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int TEAM_ID_FIELD_NUMBER = 2;
    private int teamId_ = 0;
    /**
     * <code>optional uint32 team_id = 2;</code>
     * @return Whether the teamId field is set.
     */
    @java.lang.Override
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 team_id = 2;</code>
     * @return The teamId.
     */
    @java.lang.Override
    public int getTeamId() {
      return teamId_;
    }

    public static final int MEMBER_ACCOUNT_IDS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList memberAccountIds_ =
        emptyIntList();
    /**
     * <code>repeated uint32 member_account_ids = 3;</code>
     * @return A list containing the memberAccountIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getMemberAccountIdsList() {
      return memberAccountIds_;
    }
    /**
     * <code>repeated uint32 member_account_ids = 3;</code>
     * @return The count of memberAccountIds.
     */
    public int getMemberAccountIdsCount() {
      return memberAccountIds_.size();
    }
    /**
     * <code>repeated uint32 member_account_ids = 3;</code>
     * @param index The index of the element to return.
     * @return The memberAccountIds at the given index.
     */
    public int getMemberAccountIds(int index) {
      return memberAccountIds_.getInt(index);
    }

    public static final int COACH_ACCOUNT_ID_FIELD_NUMBER = 4;
    private int coachAccountId_ = 0;
    /**
     * <code>optional uint32 coach_account_id = 4;</code>
     * @return Whether the coachAccountId field is set.
     */
    @java.lang.Override
    public boolean hasCoachAccountId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 coach_account_id = 4;</code>
     * @return The coachAccountId.
     */
    @java.lang.Override
    public int getCoachAccountId() {
      return coachAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, teamId_);
      }
      for (int i = 0; i < memberAccountIds_.size(); i++) {
        output.writeUInt32(3, memberAccountIds_.getInt(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, coachAccountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < memberAccountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(memberAccountIds_.getInt(i));
        }
        size += dataSize;
        size += 1 * getMemberAccountIdsList().size();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, coachAccountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster) obj;

      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (getTimestamp()
            != other.getTimestamp()) return false;
      }
      if (hasTeamId() != other.hasTeamId()) return false;
      if (hasTeamId()) {
        if (getTeamId()
            != other.getTeamId()) return false;
      }
      if (!getMemberAccountIdsList()
          .equals(other.getMemberAccountIdsList())) return false;
      if (hasCoachAccountId() != other.hasCoachAccountId()) return false;
      if (hasCoachAccountId()) {
        if (getCoachAccountId()
            != other.getCoachAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasTeamId()) {
        hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTeamId();
      }
      if (getMemberAccountIdsCount() > 0) {
        hash = (37 * hash) + MEMBER_ACCOUNT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getMemberAccountIdsList().hashCode();
      }
      if (hasCoachAccountId()) {
        hash = (37 * hash) + COACH_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCoachAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATeamRoster}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATeamRoster)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRosterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTATeamRoster_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTATeamRoster_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timestamp_ = 0;
        teamId_ = 0;
        memberAccountIds_ = emptyIntList();
        coachAccountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTATeamRoster_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.teamId_ = teamId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          memberAccountIds_.makeImmutable();
          result.memberAccountIds_ = memberAccountIds_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.coachAccountId_ = coachAccountId_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (!other.memberAccountIds_.isEmpty()) {
          if (memberAccountIds_.isEmpty()) {
            memberAccountIds_ = other.memberAccountIds_;
            memberAccountIds_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureMemberAccountIdsIsMutable();
            memberAccountIds_.addAll(other.memberAccountIds_);
          }
          onChanged();
        }
        if (other.hasCoachAccountId()) {
          setCoachAccountId(other.getCoachAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                timestamp_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                teamId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int v = input.readUInt32();
                ensureMemberAccountIdsIsMutable();
                memberAccountIds_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureMemberAccountIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  memberAccountIds_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                coachAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 1;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(int value) {

        timestamp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 2;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 team_id = 2;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 2;</code>
       * @param value The teamId to set.
       * @return This builder for chaining.
       */
      public Builder setTeamId(int value) {

        teamId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList memberAccountIds_ = emptyIntList();
      private void ensureMemberAccountIdsIsMutable() {
        if (!memberAccountIds_.isModifiable()) {
          memberAccountIds_ = makeMutableCopy(memberAccountIds_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @return A list containing the memberAccountIds.
       */
      public java.util.List<java.lang.Integer>
          getMemberAccountIdsList() {
        memberAccountIds_.makeImmutable();
        return memberAccountIds_;
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @return The count of memberAccountIds.
       */
      public int getMemberAccountIdsCount() {
        return memberAccountIds_.size();
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @param index The index of the element to return.
       * @return The memberAccountIds at the given index.
       */
      public int getMemberAccountIds(int index) {
        return memberAccountIds_.getInt(index);
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @param index The index to set the value at.
       * @param value The memberAccountIds to set.
       * @return This builder for chaining.
       */
      public Builder setMemberAccountIds(
          int index, int value) {

        ensureMemberAccountIdsIsMutable();
        memberAccountIds_.setInt(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @param value The memberAccountIds to add.
       * @return This builder for chaining.
       */
      public Builder addMemberAccountIds(int value) {

        ensureMemberAccountIdsIsMutable();
        memberAccountIds_.addInt(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @param values The memberAccountIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllMemberAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMemberAccountIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, memberAccountIds_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 member_account_ids = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemberAccountIds() {
        memberAccountIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int coachAccountId_ ;
      /**
       * <code>optional uint32 coach_account_id = 4;</code>
       * @return Whether the coachAccountId field is set.
       */
      @java.lang.Override
      public boolean hasCoachAccountId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 coach_account_id = 4;</code>
       * @return The coachAccountId.
       */
      @java.lang.Override
      public int getCoachAccountId() {
        return coachAccountId_;
      }
      /**
       * <code>optional uint32 coach_account_id = 4;</code>
       * @param value The coachAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setCoachAccountId(int value) {

        coachAccountId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 coach_account_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoachAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        coachAccountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTATeamRoster)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATeamRoster)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTATeamRoster>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATeamRoster>() {
      @java.lang.Override
      public CMsgDOTATeamRoster parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATeamRoster> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATeamRoster> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTATeamRoster getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTADPCProfileInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTADPCProfileInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
     * @return Whether the playerInfo field is set.
     */
    boolean hasPlayerInfo();
    /**
     * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
     * @return The playerInfo.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getPlayerInfo();
    /**
     * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder getPlayerInfoOrBuilder();

    /**
     * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
     * @return Whether the predictionInfo field is set.
     */
    boolean hasPredictionInfo();
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
     * @return The predictionInfo.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo getPredictionInfo();
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder getPredictionInfoOrBuilder();

    /**
     * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
     * @return Whether the fantasyInfo field is set.
     */
    boolean hasFantasyInfo();
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
     * @return The fantasyInfo.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo getFantasyInfo();
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder getFantasyInfoOrBuilder();

    /**
     * <code>repeated uint32 disabled_notifications = 4;</code>
     * @return A list containing the disabledNotifications.
     */
    java.util.List<java.lang.Integer> getDisabledNotificationsList();
    /**
     * <code>repeated uint32 disabled_notifications = 4;</code>
     * @return The count of disabledNotifications.
     */
    int getDisabledNotificationsCount();
    /**
     * <code>repeated uint32 disabled_notifications = 4;</code>
     * @param index The index of the element to return.
     * @return The disabledNotifications at the given index.
     */
    int getDisabledNotifications(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTADPCProfileInfo}
   */
  public static final class CMsgDOTADPCProfileInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTADPCProfileInfo)
      CMsgDOTADPCProfileInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTADPCProfileInfo.class.getName());
    }
    // Use CMsgDOTADPCProfileInfo.newBuilder() to construct.
    private CMsgDOTADPCProfileInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTADPCProfileInfo() {
      disabledNotifications_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.Builder.class);
    }

    public interface PredictionInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTADPCProfileInfo.PredictionInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 percent = 1;</code>
       * @return Whether the percent field is set.
       */
      boolean hasPercent();
      /**
       * <code>optional uint32 percent = 1;</code>
       * @return The percent.
       */
      int getPercent();

      /**
       * <code>optional int32 shard_winnings = 2;</code>
       * @return Whether the shardWinnings field is set.
       */
      boolean hasShardWinnings();
      /**
       * <code>optional int32 shard_winnings = 2;</code>
       * @return The shardWinnings.
       */
      int getShardWinnings();
    }
    /**
     * Protobuf type {@code CMsgDOTADPCProfileInfo.PredictionInfo}
     */
    public static final class PredictionInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTADPCProfileInfo.PredictionInfo)
        PredictionInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          PredictionInfo.class.getName());
      }
      // Use PredictionInfo.newBuilder() to construct.
      private PredictionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PredictionInfo() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder.class);
      }

      private int bitField0_;
      public static final int PERCENT_FIELD_NUMBER = 1;
      private int percent_ = 0;
      /**
       * <code>optional uint32 percent = 1;</code>
       * @return Whether the percent field is set.
       */
      @java.lang.Override
      public boolean hasPercent() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 percent = 1;</code>
       * @return The percent.
       */
      @java.lang.Override
      public int getPercent() {
        return percent_;
      }

      public static final int SHARD_WINNINGS_FIELD_NUMBER = 2;
      private int shardWinnings_ = 0;
      /**
       * <code>optional int32 shard_winnings = 2;</code>
       * @return Whether the shardWinnings field is set.
       */
      @java.lang.Override
      public boolean hasShardWinnings() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 shard_winnings = 2;</code>
       * @return The shardWinnings.
       */
      @java.lang.Override
      public int getShardWinnings() {
        return shardWinnings_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, percent_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, shardWinnings_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, percent_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, shardWinnings_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo) obj;

        if (hasPercent() != other.hasPercent()) return false;
        if (hasPercent()) {
          if (getPercent()
              != other.getPercent()) return false;
        }
        if (hasShardWinnings() != other.hasShardWinnings()) return false;
        if (hasShardWinnings()) {
          if (getShardWinnings()
              != other.getShardWinnings()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPercent()) {
          hash = (37 * hash) + PERCENT_FIELD_NUMBER;
          hash = (53 * hash) + getPercent();
        }
        if (hasShardWinnings()) {
          hash = (37 * hash) + SHARD_WINNINGS_FIELD_NUMBER;
          hash = (53 * hash) + getShardWinnings();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTADPCProfileInfo.PredictionInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTADPCProfileInfo.PredictionInfo)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          percent_ = 0;
          shardWinnings_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.percent_ = percent_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.shardWinnings_ = shardWinnings_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance()) return this;
          if (other.hasPercent()) {
            setPercent(other.getPercent());
          }
          if (other.hasShardWinnings()) {
            setShardWinnings(other.getShardWinnings());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  percent_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  shardWinnings_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int percent_ ;
        /**
         * <code>optional uint32 percent = 1;</code>
         * @return Whether the percent field is set.
         */
        @java.lang.Override
        public boolean hasPercent() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 percent = 1;</code>
         * @return The percent.
         */
        @java.lang.Override
        public int getPercent() {
          return percent_;
        }
        /**
         * <code>optional uint32 percent = 1;</code>
         * @param value The percent to set.
         * @return This builder for chaining.
         */
        public Builder setPercent(int value) {

          percent_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 percent = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPercent() {
          bitField0_ = (bitField0_ & ~0x00000001);
          percent_ = 0;
          onChanged();
          return this;
        }

        private int shardWinnings_ ;
        /**
         * <code>optional int32 shard_winnings = 2;</code>
         * @return Whether the shardWinnings field is set.
         */
        @java.lang.Override
        public boolean hasShardWinnings() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 shard_winnings = 2;</code>
         * @return The shardWinnings.
         */
        @java.lang.Override
        public int getShardWinnings() {
          return shardWinnings_;
        }
        /**
         * <code>optional int32 shard_winnings = 2;</code>
         * @param value The shardWinnings to set.
         * @return This builder for chaining.
         */
        public Builder setShardWinnings(int value) {

          shardWinnings_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 shard_winnings = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearShardWinnings() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shardWinnings_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTADPCProfileInfo.PredictionInfo)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTADPCProfileInfo.PredictionInfo)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PredictionInfo>
          PARSER = new com.google.protobuf.AbstractParser<PredictionInfo>() {
        @java.lang.Override
        public PredictionInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PredictionInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PredictionInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FantasyInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTADPCProfileInfo.FantasyInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 top_90_finishes = 1;</code>
       * @return Whether the top90Finishes field is set.
       */
      boolean hasTop90Finishes();
      /**
       * <code>optional uint32 top_90_finishes = 1;</code>
       * @return The top90Finishes.
       */
      int getTop90Finishes();

      /**
       * <code>optional uint32 top_75_finishes = 2;</code>
       * @return Whether the top75Finishes field is set.
       */
      boolean hasTop75Finishes();
      /**
       * <code>optional uint32 top_75_finishes = 2;</code>
       * @return The top75Finishes.
       */
      int getTop75Finishes();

      /**
       * <code>optional uint32 top_50_finishes = 3;</code>
       * @return Whether the top50Finishes field is set.
       */
      boolean hasTop50Finishes();
      /**
       * <code>optional uint32 top_50_finishes = 3;</code>
       * @return The top50Finishes.
       */
      int getTop50Finishes();

      /**
       * <code>optional uint32 shard_winnings = 4;</code>
       * @return Whether the shardWinnings field is set.
       */
      boolean hasShardWinnings();
      /**
       * <code>optional uint32 shard_winnings = 4;</code>
       * @return The shardWinnings.
       */
      int getShardWinnings();
    }
    /**
     * Protobuf type {@code CMsgDOTADPCProfileInfo.FantasyInfo}
     */
    public static final class FantasyInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTADPCProfileInfo.FantasyInfo)
        FantasyInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          FantasyInfo.class.getName());
      }
      // Use FantasyInfo.newBuilder() to construct.
      private FantasyInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private FantasyInfo() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder.class);
      }

      private int bitField0_;
      public static final int TOP_90_FINISHES_FIELD_NUMBER = 1;
      private int top90Finishes_ = 0;
      /**
       * <code>optional uint32 top_90_finishes = 1;</code>
       * @return Whether the top90Finishes field is set.
       */
      @java.lang.Override
      public boolean hasTop90Finishes() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 top_90_finishes = 1;</code>
       * @return The top90Finishes.
       */
      @java.lang.Override
      public int getTop90Finishes() {
        return top90Finishes_;
      }

      public static final int TOP_75_FINISHES_FIELD_NUMBER = 2;
      private int top75Finishes_ = 0;
      /**
       * <code>optional uint32 top_75_finishes = 2;</code>
       * @return Whether the top75Finishes field is set.
       */
      @java.lang.Override
      public boolean hasTop75Finishes() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 top_75_finishes = 2;</code>
       * @return The top75Finishes.
       */
      @java.lang.Override
      public int getTop75Finishes() {
        return top75Finishes_;
      }

      public static final int TOP_50_FINISHES_FIELD_NUMBER = 3;
      private int top50Finishes_ = 0;
      /**
       * <code>optional uint32 top_50_finishes = 3;</code>
       * @return Whether the top50Finishes field is set.
       */
      @java.lang.Override
      public boolean hasTop50Finishes() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 top_50_finishes = 3;</code>
       * @return The top50Finishes.
       */
      @java.lang.Override
      public int getTop50Finishes() {
        return top50Finishes_;
      }

      public static final int SHARD_WINNINGS_FIELD_NUMBER = 4;
      private int shardWinnings_ = 0;
      /**
       * <code>optional uint32 shard_winnings = 4;</code>
       * @return Whether the shardWinnings field is set.
       */
      @java.lang.Override
      public boolean hasShardWinnings() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 shard_winnings = 4;</code>
       * @return The shardWinnings.
       */
      @java.lang.Override
      public int getShardWinnings() {
        return shardWinnings_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, top90Finishes_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, top75Finishes_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, top50Finishes_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, shardWinnings_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, top90Finishes_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, top75Finishes_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, top50Finishes_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, shardWinnings_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo) obj;

        if (hasTop90Finishes() != other.hasTop90Finishes()) return false;
        if (hasTop90Finishes()) {
          if (getTop90Finishes()
              != other.getTop90Finishes()) return false;
        }
        if (hasTop75Finishes() != other.hasTop75Finishes()) return false;
        if (hasTop75Finishes()) {
          if (getTop75Finishes()
              != other.getTop75Finishes()) return false;
        }
        if (hasTop50Finishes() != other.hasTop50Finishes()) return false;
        if (hasTop50Finishes()) {
          if (getTop50Finishes()
              != other.getTop50Finishes()) return false;
        }
        if (hasShardWinnings() != other.hasShardWinnings()) return false;
        if (hasShardWinnings()) {
          if (getShardWinnings()
              != other.getShardWinnings()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTop90Finishes()) {
          hash = (37 * hash) + TOP_90_FINISHES_FIELD_NUMBER;
          hash = (53 * hash) + getTop90Finishes();
        }
        if (hasTop75Finishes()) {
          hash = (37 * hash) + TOP_75_FINISHES_FIELD_NUMBER;
          hash = (53 * hash) + getTop75Finishes();
        }
        if (hasTop50Finishes()) {
          hash = (37 * hash) + TOP_50_FINISHES_FIELD_NUMBER;
          hash = (53 * hash) + getTop50Finishes();
        }
        if (hasShardWinnings()) {
          hash = (37 * hash) + SHARD_WINNINGS_FIELD_NUMBER;
          hash = (53 * hash) + getShardWinnings();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTADPCProfileInfo.FantasyInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTADPCProfileInfo.FantasyInfo)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          top90Finishes_ = 0;
          top75Finishes_ = 0;
          top50Finishes_ = 0;
          shardWinnings_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.top90Finishes_ = top90Finishes_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.top75Finishes_ = top75Finishes_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.top50Finishes_ = top50Finishes_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.shardWinnings_ = shardWinnings_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance()) return this;
          if (other.hasTop90Finishes()) {
            setTop90Finishes(other.getTop90Finishes());
          }
          if (other.hasTop75Finishes()) {
            setTop75Finishes(other.getTop75Finishes());
          }
          if (other.hasTop50Finishes()) {
            setTop50Finishes(other.getTop50Finishes());
          }
          if (other.hasShardWinnings()) {
            setShardWinnings(other.getShardWinnings());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  top90Finishes_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  top75Finishes_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  top50Finishes_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  shardWinnings_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int top90Finishes_ ;
        /**
         * <code>optional uint32 top_90_finishes = 1;</code>
         * @return Whether the top90Finishes field is set.
         */
        @java.lang.Override
        public boolean hasTop90Finishes() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 top_90_finishes = 1;</code>
         * @return The top90Finishes.
         */
        @java.lang.Override
        public int getTop90Finishes() {
          return top90Finishes_;
        }
        /**
         * <code>optional uint32 top_90_finishes = 1;</code>
         * @param value The top90Finishes to set.
         * @return This builder for chaining.
         */
        public Builder setTop90Finishes(int value) {

          top90Finishes_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 top_90_finishes = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTop90Finishes() {
          bitField0_ = (bitField0_ & ~0x00000001);
          top90Finishes_ = 0;
          onChanged();
          return this;
        }

        private int top75Finishes_ ;
        /**
         * <code>optional uint32 top_75_finishes = 2;</code>
         * @return Whether the top75Finishes field is set.
         */
        @java.lang.Override
        public boolean hasTop75Finishes() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 top_75_finishes = 2;</code>
         * @return The top75Finishes.
         */
        @java.lang.Override
        public int getTop75Finishes() {
          return top75Finishes_;
        }
        /**
         * <code>optional uint32 top_75_finishes = 2;</code>
         * @param value The top75Finishes to set.
         * @return This builder for chaining.
         */
        public Builder setTop75Finishes(int value) {

          top75Finishes_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 top_75_finishes = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTop75Finishes() {
          bitField0_ = (bitField0_ & ~0x00000002);
          top75Finishes_ = 0;
          onChanged();
          return this;
        }

        private int top50Finishes_ ;
        /**
         * <code>optional uint32 top_50_finishes = 3;</code>
         * @return Whether the top50Finishes field is set.
         */
        @java.lang.Override
        public boolean hasTop50Finishes() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 top_50_finishes = 3;</code>
         * @return The top50Finishes.
         */
        @java.lang.Override
        public int getTop50Finishes() {
          return top50Finishes_;
        }
        /**
         * <code>optional uint32 top_50_finishes = 3;</code>
         * @param value The top50Finishes to set.
         * @return This builder for chaining.
         */
        public Builder setTop50Finishes(int value) {

          top50Finishes_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 top_50_finishes = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTop50Finishes() {
          bitField0_ = (bitField0_ & ~0x00000004);
          top50Finishes_ = 0;
          onChanged();
          return this;
        }

        private int shardWinnings_ ;
        /**
         * <code>optional uint32 shard_winnings = 4;</code>
         * @return Whether the shardWinnings field is set.
         */
        @java.lang.Override
        public boolean hasShardWinnings() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 shard_winnings = 4;</code>
         * @return The shardWinnings.
         */
        @java.lang.Override
        public int getShardWinnings() {
          return shardWinnings_;
        }
        /**
         * <code>optional uint32 shard_winnings = 4;</code>
         * @param value The shardWinnings to set.
         * @return This builder for chaining.
         */
        public Builder setShardWinnings(int value) {

          shardWinnings_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 shard_winnings = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearShardWinnings() {
          bitField0_ = (bitField0_ & ~0x00000008);
          shardWinnings_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTADPCProfileInfo.FantasyInfo)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTADPCProfileInfo.FantasyInfo)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FantasyInfo>
          PARSER = new com.google.protobuf.AbstractParser<FantasyInfo>() {
        @java.lang.Override
        public FantasyInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<FantasyInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FantasyInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int PLAYER_INFO_FIELD_NUMBER = 1;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo playerInfo_;
    /**
     * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
     * @return Whether the playerInfo field is set.
     */
    @java.lang.Override
    public boolean hasPlayerInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
     * @return The playerInfo.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getPlayerInfo() {
      return playerInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance() : playerInfo_;
    }
    /**
     * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder getPlayerInfoOrBuilder() {
      return playerInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance() : playerInfo_;
    }

    public static final int PREDICTION_INFO_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo predictionInfo_;
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
     * @return Whether the predictionInfo field is set.
     */
    @java.lang.Override
    public boolean hasPredictionInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
     * @return The predictionInfo.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo getPredictionInfo() {
      return predictionInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance() : predictionInfo_;
    }
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder getPredictionInfoOrBuilder() {
      return predictionInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance() : predictionInfo_;
    }

    public static final int FANTASY_INFO_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo fantasyInfo_;
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
     * @return Whether the fantasyInfo field is set.
     */
    @java.lang.Override
    public boolean hasFantasyInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
     * @return The fantasyInfo.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo getFantasyInfo() {
      return fantasyInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance() : fantasyInfo_;
    }
    /**
     * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder getFantasyInfoOrBuilder() {
      return fantasyInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance() : fantasyInfo_;
    }

    public static final int DISABLED_NOTIFICATIONS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList disabledNotifications_ =
        emptyIntList();
    /**
     * <code>repeated uint32 disabled_notifications = 4;</code>
     * @return A list containing the disabledNotifications.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDisabledNotificationsList() {
      return disabledNotifications_;
    }
    /**
     * <code>repeated uint32 disabled_notifications = 4;</code>
     * @return The count of disabledNotifications.
     */
    public int getDisabledNotificationsCount() {
      return disabledNotifications_.size();
    }
    /**
     * <code>repeated uint32 disabled_notifications = 4;</code>
     * @param index The index of the element to return.
     * @return The disabledNotifications at the given index.
     */
    public int getDisabledNotifications(int index) {
      return disabledNotifications_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPlayerInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getPredictionInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getFantasyInfo());
      }
      for (int i = 0; i < disabledNotifications_.size(); i++) {
        output.writeUInt32(4, disabledNotifications_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayerInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPredictionInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFantasyInfo());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < disabledNotifications_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(disabledNotifications_.getInt(i));
        }
        size += dataSize;
        size += 1 * getDisabledNotificationsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo) obj;

      if (hasPlayerInfo() != other.hasPlayerInfo()) return false;
      if (hasPlayerInfo()) {
        if (!getPlayerInfo()
            .equals(other.getPlayerInfo())) return false;
      }
      if (hasPredictionInfo() != other.hasPredictionInfo()) return false;
      if (hasPredictionInfo()) {
        if (!getPredictionInfo()
            .equals(other.getPredictionInfo())) return false;
      }
      if (hasFantasyInfo() != other.hasFantasyInfo()) return false;
      if (hasFantasyInfo()) {
        if (!getFantasyInfo()
            .equals(other.getFantasyInfo())) return false;
      }
      if (!getDisabledNotificationsList()
          .equals(other.getDisabledNotificationsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayerInfo()) {
        hash = (37 * hash) + PLAYER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInfo().hashCode();
      }
      if (hasPredictionInfo()) {
        hash = (37 * hash) + PREDICTION_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getPredictionInfo().hashCode();
      }
      if (hasFantasyInfo()) {
        hash = (37 * hash) + FANTASY_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyInfo().hashCode();
      }
      if (getDisabledNotificationsCount() > 0) {
        hash = (37 * hash) + DISABLED_NOTIFICATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDisabledNotificationsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTADPCProfileInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTADPCProfileInfo)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPlayerInfoFieldBuilder();
          getPredictionInfoFieldBuilder();
          getFantasyInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        playerInfo_ = null;
        if (playerInfoBuilder_ != null) {
          playerInfoBuilder_.dispose();
          playerInfoBuilder_ = null;
        }
        predictionInfo_ = null;
        if (predictionInfoBuilder_ != null) {
          predictionInfoBuilder_.dispose();
          predictionInfoBuilder_ = null;
        }
        fantasyInfo_ = null;
        if (fantasyInfoBuilder_ != null) {
          fantasyInfoBuilder_.dispose();
          fantasyInfoBuilder_ = null;
        }
        disabledNotifications_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCProfileInfo_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.playerInfo_ = playerInfoBuilder_ == null
              ? playerInfo_
              : playerInfoBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.predictionInfo_ = predictionInfoBuilder_ == null
              ? predictionInfo_
              : predictionInfoBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fantasyInfo_ = fantasyInfoBuilder_ == null
              ? fantasyInfo_
              : fantasyInfoBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          disabledNotifications_.makeImmutable();
          result.disabledNotifications_ = disabledNotifications_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.getDefaultInstance()) return this;
        if (other.hasPlayerInfo()) {
          mergePlayerInfo(other.getPlayerInfo());
        }
        if (other.hasPredictionInfo()) {
          mergePredictionInfo(other.getPredictionInfo());
        }
        if (other.hasFantasyInfo()) {
          mergeFantasyInfo(other.getFantasyInfo());
        }
        if (!other.disabledNotifications_.isEmpty()) {
          if (disabledNotifications_.isEmpty()) {
            disabledNotifications_ = other.disabledNotifications_;
            disabledNotifications_.makeImmutable();
            bitField0_ |= 0x00000008;
          } else {
            ensureDisabledNotificationsIsMutable();
            disabledNotifications_.addAll(other.disabledNotifications_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPlayerInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPredictionInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getFantasyInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                int v = input.readUInt32();
                ensureDisabledNotificationsIsMutable();
                disabledNotifications_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDisabledNotificationsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  disabledNotifications_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo playerInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> playerInfoBuilder_;
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       * @return Whether the playerInfo field is set.
       */
      public boolean hasPlayerInfo() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       * @return The playerInfo.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo getPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance() : playerInfo_;
        } else {
          return playerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      public Builder setPlayerInfo(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerInfo_ = value;
        } else {
          playerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      public Builder setPlayerInfo(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = builderForValue.build();
        } else {
          playerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      public Builder mergePlayerInfo(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            playerInfo_ != null &&
            playerInfo_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance()) {
            getPlayerInfoBuilder().mergeFrom(value);
          } else {
            playerInfo_ = value;
          }
        } else {
          playerInfoBuilder_.mergeFrom(value);
        }
        if (playerInfo_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      public Builder clearPlayerInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerInfo_ = null;
        if (playerInfoBuilder_ != null) {
          playerInfoBuilder_.dispose();
          playerInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder getPlayerInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder getPlayerInfoOrBuilder() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilder();
        } else {
          return playerInfo_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.getDefaultInstance() : playerInfo_;
        }
      }
      /**
       * <code>optional .CMsgDOTAPlayerInfo player_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder> 
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPlayerInfoOrBuilder>(
                  getPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo predictionInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder> predictionInfoBuilder_;
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       * @return Whether the predictionInfo field is set.
       */
      public boolean hasPredictionInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       * @return The predictionInfo.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo getPredictionInfo() {
        if (predictionInfoBuilder_ == null) {
          return predictionInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance() : predictionInfo_;
        } else {
          return predictionInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      public Builder setPredictionInfo(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo value) {
        if (predictionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          predictionInfo_ = value;
        } else {
          predictionInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      public Builder setPredictionInfo(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder builderForValue) {
        if (predictionInfoBuilder_ == null) {
          predictionInfo_ = builderForValue.build();
        } else {
          predictionInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      public Builder mergePredictionInfo(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo value) {
        if (predictionInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            predictionInfo_ != null &&
            predictionInfo_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance()) {
            getPredictionInfoBuilder().mergeFrom(value);
          } else {
            predictionInfo_ = value;
          }
        } else {
          predictionInfoBuilder_.mergeFrom(value);
        }
        if (predictionInfo_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      public Builder clearPredictionInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        predictionInfo_ = null;
        if (predictionInfoBuilder_ != null) {
          predictionInfoBuilder_.dispose();
          predictionInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder getPredictionInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPredictionInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder getPredictionInfoOrBuilder() {
        if (predictionInfoBuilder_ != null) {
          return predictionInfoBuilder_.getMessageOrBuilder();
        } else {
          return predictionInfo_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.getDefaultInstance() : predictionInfo_;
        }
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.PredictionInfo prediction_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder> 
          getPredictionInfoFieldBuilder() {
        if (predictionInfoBuilder_ == null) {
          predictionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.PredictionInfoOrBuilder>(
                  getPredictionInfo(),
                  getParentForChildren(),
                  isClean());
          predictionInfo_ = null;
        }
        return predictionInfoBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo fantasyInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder> fantasyInfoBuilder_;
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       * @return Whether the fantasyInfo field is set.
       */
      public boolean hasFantasyInfo() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       * @return The fantasyInfo.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo getFantasyInfo() {
        if (fantasyInfoBuilder_ == null) {
          return fantasyInfo_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance() : fantasyInfo_;
        } else {
          return fantasyInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      public Builder setFantasyInfo(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo value) {
        if (fantasyInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fantasyInfo_ = value;
        } else {
          fantasyInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      public Builder setFantasyInfo(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder builderForValue) {
        if (fantasyInfoBuilder_ == null) {
          fantasyInfo_ = builderForValue.build();
        } else {
          fantasyInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      public Builder mergeFantasyInfo(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo value) {
        if (fantasyInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            fantasyInfo_ != null &&
            fantasyInfo_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance()) {
            getFantasyInfoBuilder().mergeFrom(value);
          } else {
            fantasyInfo_ = value;
          }
        } else {
          fantasyInfoBuilder_.mergeFrom(value);
        }
        if (fantasyInfo_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      public Builder clearFantasyInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyInfo_ = null;
        if (fantasyInfoBuilder_ != null) {
          fantasyInfoBuilder_.dispose();
          fantasyInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder getFantasyInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFantasyInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder getFantasyInfoOrBuilder() {
        if (fantasyInfoBuilder_ != null) {
          return fantasyInfoBuilder_.getMessageOrBuilder();
        } else {
          return fantasyInfo_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.getDefaultInstance() : fantasyInfo_;
        }
      }
      /**
       * <code>optional .CMsgDOTADPCProfileInfo.FantasyInfo fantasy_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder> 
          getFantasyInfoFieldBuilder() {
        if (fantasyInfoBuilder_ == null) {
          fantasyInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo.FantasyInfoOrBuilder>(
                  getFantasyInfo(),
                  getParentForChildren(),
                  isClean());
          fantasyInfo_ = null;
        }
        return fantasyInfoBuilder_;
      }

      private com.google.protobuf.Internal.IntList disabledNotifications_ = emptyIntList();
      private void ensureDisabledNotificationsIsMutable() {
        if (!disabledNotifications_.isModifiable()) {
          disabledNotifications_ = makeMutableCopy(disabledNotifications_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @return A list containing the disabledNotifications.
       */
      public java.util.List<java.lang.Integer>
          getDisabledNotificationsList() {
        disabledNotifications_.makeImmutable();
        return disabledNotifications_;
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @return The count of disabledNotifications.
       */
      public int getDisabledNotificationsCount() {
        return disabledNotifications_.size();
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @param index The index of the element to return.
       * @return The disabledNotifications at the given index.
       */
      public int getDisabledNotifications(int index) {
        return disabledNotifications_.getInt(index);
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @param index The index to set the value at.
       * @param value The disabledNotifications to set.
       * @return This builder for chaining.
       */
      public Builder setDisabledNotifications(
          int index, int value) {

        ensureDisabledNotificationsIsMutable();
        disabledNotifications_.setInt(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @param value The disabledNotifications to add.
       * @return This builder for chaining.
       */
      public Builder addDisabledNotifications(int value) {

        ensureDisabledNotificationsIsMutable();
        disabledNotifications_.addInt(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @param values The disabledNotifications to add.
       * @return This builder for chaining.
       */
      public Builder addAllDisabledNotifications(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDisabledNotificationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, disabledNotifications_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 disabled_notifications = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisabledNotifications() {
        disabledNotifications_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTADPCProfileInfo)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTADPCProfileInfo)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTADPCProfileInfo>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTADPCProfileInfo>() {
      @java.lang.Override
      public CMsgDOTADPCProfileInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTADPCProfileInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTADPCProfileInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCProfileInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTALeaderboardsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTALeaderboards)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard> 
        getLeaderboardsList();
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard getLeaderboards(int index);
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    int getLeaderboardsCount();
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder> 
        getLeaderboardsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTALeaderboards}
   */
  public static final class CMsgDOTALeaderboards extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTALeaderboards)
      CMsgDOTALeaderboardsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTALeaderboards.class.getName());
    }
    // Use CMsgDOTALeaderboards.newBuilder() to construct.
    private CMsgDOTALeaderboards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTALeaderboards() {
      leaderboards_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.Builder.class);
    }

    public interface RegionLeaderboardOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTALeaderboards.RegionLeaderboard)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division = 1;</code>
       * @return Whether the division field is set.
       */
      boolean hasDivision();
      /**
       * <code>optional uint32 division = 1;</code>
       * @return The division.
       */
      int getDivision();

      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return A list containing the accountIds.
       */
      java.util.List<java.lang.Integer> getAccountIdsList();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return The count of accountIds.
       */
      int getAccountIdsCount();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The accountIds at the given index.
       */
      int getAccountIds(int index);
    }
    /**
     * Protobuf type {@code CMsgDOTALeaderboards.RegionLeaderboard}
     */
    public static final class RegionLeaderboard extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTALeaderboards.RegionLeaderboard)
        RegionLeaderboardOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          RegionLeaderboard.class.getName());
      }
      // Use RegionLeaderboard.newBuilder() to construct.
      private RegionLeaderboard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private RegionLeaderboard() {
        accountIds_ = emptyIntList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_RegionLeaderboard_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_RegionLeaderboard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder.class);
      }

      private int bitField0_;
      public static final int DIVISION_FIELD_NUMBER = 1;
      private int division_ = 0;
      /**
       * <code>optional uint32 division = 1;</code>
       * @return Whether the division field is set.
       */
      @java.lang.Override
      public boolean hasDivision() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 division = 1;</code>
       * @return The division.
       */
      @java.lang.Override
      public int getDivision() {
        return division_;
      }

      public static final int ACCOUNT_IDS_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList accountIds_ =
          emptyIntList();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return A list containing the accountIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getAccountIdsList() {
        return accountIds_;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return The count of accountIds.
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The accountIds at the given index.
       */
      public int getAccountIds(int index) {
        return accountIds_.getInt(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, division_);
        }
        for (int i = 0; i < accountIds_.size(); i++) {
          output.writeUInt32(2, accountIds_.getInt(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, division_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < accountIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(accountIds_.getInt(i));
          }
          size += dataSize;
          size += 1 * getAccountIdsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard) obj;

        if (hasDivision() != other.hasDivision()) return false;
        if (hasDivision()) {
          if (getDivision()
              != other.getDivision()) return false;
        }
        if (!getAccountIdsList()
            .equals(other.getAccountIdsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDivision()) {
          hash = (37 * hash) + DIVISION_FIELD_NUMBER;
          hash = (53 * hash) + getDivision();
        }
        if (getAccountIdsCount() > 0) {
          hash = (37 * hash) + ACCOUNT_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getAccountIdsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTALeaderboards.RegionLeaderboard}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTALeaderboards.RegionLeaderboard)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_RegionLeaderboard_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_RegionLeaderboard_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          division_ = 0;
          accountIds_ = emptyIntList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_RegionLeaderboard_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.division_ = division_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            accountIds_.makeImmutable();
            result.accountIds_ = accountIds_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.getDefaultInstance()) return this;
          if (other.hasDivision()) {
            setDivision(other.getDivision());
          }
          if (!other.accountIds_.isEmpty()) {
            if (accountIds_.isEmpty()) {
              accountIds_ = other.accountIds_;
              accountIds_.makeImmutable();
              bitField0_ |= 0x00000002;
            } else {
              ensureAccountIdsIsMutable();
              accountIds_.addAll(other.accountIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  division_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  int v = input.readUInt32();
                  ensureAccountIdsIsMutable();
                  accountIds_.addInt(v);
                  break;
                } // case 16
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureAccountIdsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    accountIds_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int division_ ;
        /**
         * <code>optional uint32 division = 1;</code>
         * @return Whether the division field is set.
         */
        @java.lang.Override
        public boolean hasDivision() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 division = 1;</code>
         * @return The division.
         */
        @java.lang.Override
        public int getDivision() {
          return division_;
        }
        /**
         * <code>optional uint32 division = 1;</code>
         * @param value The division to set.
         * @return This builder for chaining.
         */
        public Builder setDivision(int value) {

          division_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDivision() {
          bitField0_ = (bitField0_ & ~0x00000001);
          division_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList accountIds_ = emptyIntList();
        private void ensureAccountIdsIsMutable() {
          if (!accountIds_.isModifiable()) {
            accountIds_ = makeMutableCopy(accountIds_);
          }
          bitField0_ |= 0x00000002;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @return A list containing the accountIds.
         */
        public java.util.List<java.lang.Integer>
            getAccountIdsList() {
          accountIds_.makeImmutable();
          return accountIds_;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @return The count of accountIds.
         */
        public int getAccountIdsCount() {
          return accountIds_.size();
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @param index The index of the element to return.
         * @return The accountIds at the given index.
         */
        public int getAccountIds(int index) {
          return accountIds_.getInt(index);
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @param index The index to set the value at.
         * @param value The accountIds to set.
         * @return This builder for chaining.
         */
        public Builder setAccountIds(
            int index, int value) {

          ensureAccountIdsIsMutable();
          accountIds_.setInt(index, value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @param value The accountIds to add.
         * @return This builder for chaining.
         */
        public Builder addAccountIds(int value) {

          ensureAccountIdsIsMutable();
          accountIds_.addInt(value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @param values The accountIds to add.
         * @return This builder for chaining.
         */
        public Builder addAllAccountIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureAccountIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accountIds_);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccountIds() {
          accountIds_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTALeaderboards.RegionLeaderboard)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTALeaderboards.RegionLeaderboard)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RegionLeaderboard>
          PARSER = new com.google.protobuf.AbstractParser<RegionLeaderboard>() {
        @java.lang.Override
        public RegionLeaderboard parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RegionLeaderboard> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RegionLeaderboard> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LEADERBOARDS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard> leaderboards_;
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard> getLeaderboardsList() {
      return leaderboards_;
    }
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder> 
        getLeaderboardsOrBuilderList() {
      return leaderboards_;
    }
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    @java.lang.Override
    public int getLeaderboardsCount() {
      return leaderboards_.size();
    }
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard getLeaderboards(int index) {
      return leaderboards_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
        int index) {
      return leaderboards_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < leaderboards_.size(); i++) {
        output.writeMessage(2, leaderboards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < leaderboards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, leaderboards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards) obj;

      if (!getLeaderboardsList()
          .equals(other.getLeaderboardsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLeaderboardsCount() > 0) {
        hash = (37 * hash) + LEADERBOARDS_FIELD_NUMBER;
        hash = (53 * hash) + getLeaderboardsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTALeaderboards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTALeaderboards)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (leaderboardsBuilder_ == null) {
          leaderboards_ = java.util.Collections.emptyList();
        } else {
          leaderboards_ = null;
          leaderboardsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTALeaderboards_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards result) {
        if (leaderboardsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            leaderboards_ = java.util.Collections.unmodifiableList(leaderboards_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.leaderboards_ = leaderboards_;
        } else {
          result.leaderboards_ = leaderboardsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.getDefaultInstance()) return this;
        if (leaderboardsBuilder_ == null) {
          if (!other.leaderboards_.isEmpty()) {
            if (leaderboards_.isEmpty()) {
              leaderboards_ = other.leaderboards_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLeaderboardsIsMutable();
              leaderboards_.addAll(other.leaderboards_);
            }
            onChanged();
          }
        } else {
          if (!other.leaderboards_.isEmpty()) {
            if (leaderboardsBuilder_.isEmpty()) {
              leaderboardsBuilder_.dispose();
              leaderboardsBuilder_ = null;
              leaderboards_ = other.leaderboards_;
              bitField0_ = (bitField0_ & ~0x00000001);
              leaderboardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeaderboardsFieldBuilder() : null;
            } else {
              leaderboardsBuilder_.addAllMessages(other.leaderboards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.parser(),
                        extensionRegistry);
                if (leaderboardsBuilder_ == null) {
                  ensureLeaderboardsIsMutable();
                  leaderboards_.add(m);
                } else {
                  leaderboardsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard> leaderboards_ =
        java.util.Collections.emptyList();
      private void ensureLeaderboardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          leaderboards_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard>(leaderboards_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder> leaderboardsBuilder_;

      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard> getLeaderboardsList() {
        if (leaderboardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leaderboards_);
        } else {
          return leaderboardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public int getLeaderboardsCount() {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.size();
        } else {
          return leaderboardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard getLeaderboards(int index) {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.get(index);
        } else {
          return leaderboardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder setLeaderboards(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.set(index, value);
          onChanged();
        } else {
          leaderboardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder setLeaderboards(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.set(index, builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.add(value);
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.add(index, value);
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.add(builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.add(index, builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addAllLeaderboards(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard> values) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leaderboards_);
          onChanged();
        } else {
          leaderboardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder clearLeaderboards() {
        if (leaderboardsBuilder_ == null) {
          leaderboards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          leaderboardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder removeLeaderboards(int index) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.remove(index);
          onChanged();
        } else {
          leaderboardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder getLeaderboardsBuilder(
          int index) {
        return getLeaderboardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
          int index) {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.get(index);  } else {
          return leaderboardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder> 
           getLeaderboardsOrBuilderList() {
        if (leaderboardsBuilder_ != null) {
          return leaderboardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leaderboards_);
        }
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder addLeaderboardsBuilder() {
        return getLeaderboardsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder addLeaderboardsBuilder(
          int index) {
        return getLeaderboardsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTALeaderboards.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder> 
           getLeaderboardsBuilderList() {
        return getLeaderboardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder> 
          getLeaderboardsFieldBuilder() {
        if (leaderboardsBuilder_ == null) {
          leaderboardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboard.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards.RegionLeaderboardOrBuilder>(
                  leaderboards_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          leaderboards_ = null;
        }
        return leaderboardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTALeaderboards)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTALeaderboards)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTALeaderboards>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTALeaderboards>() {
      @java.lang.Override
      public CMsgDOTALeaderboards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTALeaderboards> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTALeaderboards> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTALeaderboards getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportVoteTeamGuessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVoteTeamGuess)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return Whether the leagueId field is set.
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return The leagueId.
     */
    int getLeagueId();

    /**
     * <code>optional uint32 winner_id = 2;</code>
     * @return Whether the winnerId field is set.
     */
    boolean hasWinnerId();
    /**
     * <code>optional uint32 winner_id = 2;</code>
     * @return The winnerId.
     */
    int getWinnerId();

    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     * @return Whether the runnerupId field is set.
     */
    boolean hasRunnerupId();
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     * @return The runnerupId.
     */
    int getRunnerupId();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVoteTeamGuess}
   */
  public static final class CMsgDOTAPassportVoteTeamGuess extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVoteTeamGuess)
      CMsgDOTAPassportVoteTeamGuessOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPassportVoteTeamGuess.class.getName());
    }
    // Use CMsgDOTAPassportVoteTeamGuess.newBuilder() to construct.
    private CMsgDOTAPassportVoteTeamGuess(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportVoteTeamGuess() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_ = 0;
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return Whether the leagueId field is set.
     */
    @java.lang.Override
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return The leagueId.
     */
    @java.lang.Override
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int WINNER_ID_FIELD_NUMBER = 2;
    private int winnerId_ = 0;
    /**
     * <code>optional uint32 winner_id = 2;</code>
     * @return Whether the winnerId field is set.
     */
    @java.lang.Override
    public boolean hasWinnerId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 winner_id = 2;</code>
     * @return The winnerId.
     */
    @java.lang.Override
    public int getWinnerId() {
      return winnerId_;
    }

    public static final int RUNNERUP_ID_FIELD_NUMBER = 3;
    private int runnerupId_ = 0;
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     * @return Whether the runnerupId field is set.
     */
    @java.lang.Override
    public boolean hasRunnerupId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     * @return The runnerupId.
     */
    @java.lang.Override
    public int getRunnerupId() {
      return runnerupId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, winnerId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, runnerupId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, winnerId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, runnerupId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess) obj;

      if (hasLeagueId() != other.hasLeagueId()) return false;
      if (hasLeagueId()) {
        if (getLeagueId()
            != other.getLeagueId()) return false;
      }
      if (hasWinnerId() != other.hasWinnerId()) return false;
      if (hasWinnerId()) {
        if (getWinnerId()
            != other.getWinnerId()) return false;
      }
      if (hasRunnerupId() != other.hasRunnerupId()) return false;
      if (hasRunnerupId()) {
        if (getRunnerupId()
            != other.getRunnerupId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (hasWinnerId()) {
        hash = (37 * hash) + WINNER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getWinnerId();
      }
      if (hasRunnerupId()) {
        hash = (37 * hash) + RUNNERUP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRunnerupId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVoteTeamGuess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVoteTeamGuess)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        leagueId_ = 0;
        winnerId_ = 0;
        runnerupId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.leagueId_ = leagueId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.winnerId_ = winnerId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.runnerupId_ = runnerupId_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasWinnerId()) {
          setWinnerId(other.getWinnerId());
        }
        if (other.hasRunnerupId()) {
          setRunnerupId(other.getRunnerupId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                leagueId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                winnerId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                runnerupId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @param value The leagueId to set.
       * @return This builder for chaining.
       */
      public Builder setLeagueId(int value) {

        leagueId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int winnerId_ ;
      /**
       * <code>optional uint32 winner_id = 2;</code>
       * @return Whether the winnerId field is set.
       */
      @java.lang.Override
      public boolean hasWinnerId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       * @return The winnerId.
       */
      @java.lang.Override
      public int getWinnerId() {
        return winnerId_;
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       * @param value The winnerId to set.
       * @return This builder for chaining.
       */
      public Builder setWinnerId(int value) {

        winnerId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWinnerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        winnerId_ = 0;
        onChanged();
        return this;
      }

      private int runnerupId_ ;
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       * @return Whether the runnerupId field is set.
       */
      @java.lang.Override
      public boolean hasRunnerupId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       * @return The runnerupId.
       */
      @java.lang.Override
      public int getRunnerupId() {
        return runnerupId_;
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       * @param value The runnerupId to set.
       * @return This builder for chaining.
       */
      public Builder setRunnerupId(int value) {

        runnerupId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRunnerupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        runnerupId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVoteTeamGuess)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVoteTeamGuess)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportVoteTeamGuess>() {
      @java.lang.Override
      public CMsgDOTAPassportVoteTeamGuess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportVoteGenericSelectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVoteGenericSelection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     * @return Whether the selectionIndex field is set.
     */
    boolean hasSelectionIndex();
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     * @return The selectionIndex.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices getSelectionIndex();

    /**
     * <code>optional uint32 selection = 2;</code>
     * @return Whether the selection field is set.
     */
    boolean hasSelection();
    /**
     * <code>optional uint32 selection = 2;</code>
     * @return The selection.
     */
    int getSelection();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVoteGenericSelection}
   */
  public static final class CMsgDOTAPassportVoteGenericSelection extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVoteGenericSelection)
      CMsgDOTAPassportVoteGenericSelectionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPassportVoteGenericSelection.class.getName());
    }
    // Use CMsgDOTAPassportVoteGenericSelection.newBuilder() to construct.
    private CMsgDOTAPassportVoteGenericSelection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportVoteGenericSelection() {
      selectionIndex_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder.class);
    }

    private int bitField0_;
    public static final int SELECTION_INDEX_FIELD_NUMBER = 1;
    private int selectionIndex_ = 0;
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     * @return Whether the selectionIndex field is set.
     */
    @java.lang.Override public boolean hasSelectionIndex() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     * @return The selectionIndex.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices getSelectionIndex() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices.forNumber(selectionIndex_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0 : result;
    }

    public static final int SELECTION_FIELD_NUMBER = 2;
    private int selection_ = 0;
    /**
     * <code>optional uint32 selection = 2;</code>
     * @return Whether the selection field is set.
     */
    @java.lang.Override
    public boolean hasSelection() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 selection = 2;</code>
     * @return The selection.
     */
    @java.lang.Override
    public int getSelection() {
      return selection_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, selectionIndex_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, selection_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, selectionIndex_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, selection_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection) obj;

      if (hasSelectionIndex() != other.hasSelectionIndex()) return false;
      if (hasSelectionIndex()) {
        if (selectionIndex_ != other.selectionIndex_) return false;
      }
      if (hasSelection() != other.hasSelection()) return false;
      if (hasSelection()) {
        if (getSelection()
            != other.getSelection()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSelectionIndex()) {
        hash = (37 * hash) + SELECTION_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + selectionIndex_;
      }
      if (hasSelection()) {
        hash = (37 * hash) + SELECTION_FIELD_NUMBER;
        hash = (53 * hash) + getSelection();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVoteGenericSelection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVoteGenericSelection)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        selectionIndex_ = 0;
        selection_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.selectionIndex_ = selectionIndex_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.selection_ = selection_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance()) return this;
        if (other.hasSelectionIndex()) {
          setSelectionIndex(other.getSelectionIndex());
        }
        if (other.hasSelection()) {
          setSelection(other.getSelection());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  selectionIndex_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                selection_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int selectionIndex_ = 0;
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       * @return Whether the selectionIndex field is set.
       */
      @java.lang.Override public boolean hasSelectionIndex() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       * @return The selectionIndex.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices getSelectionIndex() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices.forNumber(selectionIndex_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0 : result;
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       * @param value The selectionIndex to set.
       * @return This builder for chaining.
       */
      public Builder setSelectionIndex(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.DOTA_2013PassportSelectionIndices value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        selectionIndex_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       * @return This builder for chaining.
       */
      public Builder clearSelectionIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        selectionIndex_ = 0;
        onChanged();
        return this;
      }

      private int selection_ ;
      /**
       * <code>optional uint32 selection = 2;</code>
       * @return Whether the selection field is set.
       */
      @java.lang.Override
      public boolean hasSelection() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       * @return The selection.
       */
      @java.lang.Override
      public int getSelection() {
        return selection_;
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       * @param value The selection to set.
       * @return This builder for chaining.
       */
      public Builder setSelection(int value) {

        selection_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSelection() {
        bitField0_ = (bitField0_ & ~0x00000002);
        selection_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVoteGenericSelection)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVoteGenericSelection)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportVoteGenericSelection>() {
      @java.lang.Override
      public CMsgDOTAPassportVoteGenericSelection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportStampedPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportStampedPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 steam_id = 1;</code>
     * @return Whether the steamId field is set.
     */
    boolean hasSteamId();
    /**
     * <code>optional uint64 steam_id = 1;</code>
     * @return The steamId.
     */
    long getSteamId();

    /**
     * <code>optional uint32 stamp_level = 2;</code>
     * @return Whether the stampLevel field is set.
     */
    boolean hasStampLevel();
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     * @return The stampLevel.
     */
    int getStampLevel();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportStampedPlayer}
   */
  public static final class CMsgDOTAPassportStampedPlayer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportStampedPlayer)
      CMsgDOTAPassportStampedPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPassportStampedPlayer.class.getName());
    }
    // Use CMsgDOTAPassportStampedPlayer.newBuilder() to construct.
    private CMsgDOTAPassportStampedPlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportStampedPlayer() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder.class);
    }

    private int bitField0_;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private long steamId_ = 0L;
    /**
     * <code>optional uint64 steam_id = 1;</code>
     * @return Whether the steamId field is set.
     */
    @java.lang.Override
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 steam_id = 1;</code>
     * @return The steamId.
     */
    @java.lang.Override
    public long getSteamId() {
      return steamId_;
    }

    public static final int STAMP_LEVEL_FIELD_NUMBER = 2;
    private int stampLevel_ = 0;
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     * @return Whether the stampLevel field is set.
     */
    @java.lang.Override
    public boolean hasStampLevel() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     * @return The stampLevel.
     */
    @java.lang.Override
    public int getStampLevel() {
      return stampLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, stampLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stampLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer) obj;

      if (hasSteamId() != other.hasSteamId()) return false;
      if (hasSteamId()) {
        if (getSteamId()
            != other.getSteamId()) return false;
      }
      if (hasStampLevel() != other.hasStampLevel()) return false;
      if (hasStampLevel()) {
        if (getStampLevel()
            != other.getStampLevel()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (hasStampLevel()) {
        hash = (37 * hash) + STAMP_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getStampLevel();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportStampedPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportStampedPlayer)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        steamId_ = 0L;
        stampLevel_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.steamId_ = steamId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stampLevel_ = stampLevel_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasStampLevel()) {
          setStampLevel(other.getStampLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                steamId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                stampLevel_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long steamId_ ;
      /**
       * <code>optional uint64 steam_id = 1;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       * @param value The steamId to set.
       * @return This builder for chaining.
       */
      public Builder setSteamId(long value) {

        steamId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private int stampLevel_ ;
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       * @return Whether the stampLevel field is set.
       */
      @java.lang.Override
      public boolean hasStampLevel() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       * @return The stampLevel.
       */
      @java.lang.Override
      public int getStampLevel() {
        return stampLevel_;
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       * @param value The stampLevel to set.
       * @return This builder for chaining.
       */
      public Builder setStampLevel(int value) {

        stampLevel_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStampLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stampLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportStampedPlayer)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportStampedPlayer)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportStampedPlayer>() {
      @java.lang.Override
      public CMsgDOTAPassportStampedPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportPlayerCardChallengeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportPlayerCardChallenge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 challenge_id = 1;</code>
     * @return Whether the challengeId field is set.
     */
    boolean hasChallengeId();
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     * @return The challengeId.
     */
    int getChallengeId();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportPlayerCardChallenge}
   */
  public static final class CMsgDOTAPassportPlayerCardChallenge extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportPlayerCardChallenge)
      CMsgDOTAPassportPlayerCardChallengeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPassportPlayerCardChallenge.class.getName());
    }
    // Use CMsgDOTAPassportPlayerCardChallenge.newBuilder() to construct.
    private CMsgDOTAPassportPlayerCardChallenge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportPlayerCardChallenge() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder.class);
    }

    private int bitField0_;
    public static final int CHALLENGE_ID_FIELD_NUMBER = 1;
    private int challengeId_ = 0;
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     * @return Whether the challengeId field is set.
     */
    @java.lang.Override
    public boolean hasChallengeId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     * @return The challengeId.
     */
    @java.lang.Override
    public int getChallengeId() {
      return challengeId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, challengeId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, challengeId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge) obj;

      if (hasChallengeId() != other.hasChallengeId()) return false;
      if (hasChallengeId()) {
        if (getChallengeId()
            != other.getChallengeId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChallengeId()) {
        hash = (37 * hash) + CHALLENGE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChallengeId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportPlayerCardChallenge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportPlayerCardChallenge)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        challengeId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.challengeId_ = challengeId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance()) return this;
        if (other.hasChallengeId()) {
          setChallengeId(other.getChallengeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                challengeId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int challengeId_ ;
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       * @return Whether the challengeId field is set.
       */
      @java.lang.Override
      public boolean hasChallengeId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       * @return The challengeId.
       */
      @java.lang.Override
      public int getChallengeId() {
        return challengeId_;
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       * @param value The challengeId to set.
       * @return This builder for chaining.
       */
      public Builder setChallengeId(int value) {

        challengeId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChallengeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        challengeId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportPlayerCardChallenge)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportPlayerCardChallenge)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportPlayerCardChallenge>() {
      @java.lang.Override
      public CMsgDOTAPassportPlayerCardChallenge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportVoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess> 
        getTeamVotesList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index);
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    int getTeamVotesCount();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
        getTeamVotesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection> 
        getGenericSelectionsList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index);
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    int getGenericSelectionsCount();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
        getGenericSelectionsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer> 
        getStampedPlayersList();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index);
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    int getStampedPlayersCount();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
        getStampedPlayersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge> 
        getPlayerCardChallengesList();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index);
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    int getPlayerCardChallengesCount();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
        getPlayerCardChallengesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVote}
   */
  public static final class CMsgDOTAPassportVote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVote)
      CMsgDOTAPassportVoteOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAPassportVote.class.getName());
    }
    // Use CMsgDOTAPassportVote.newBuilder() to construct.
    private CMsgDOTAPassportVote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportVote() {
      teamVotes_ = java.util.Collections.emptyList();
      genericSelections_ = java.util.Collections.emptyList();
      stampedPlayers_ = java.util.Collections.emptyList();
      playerCardChallenges_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVote_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.Builder.class);
    }

    public static final int TEAM_VOTES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess> teamVotes_;
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess> getTeamVotesList() {
      return teamVotes_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
        getTeamVotesOrBuilderList() {
      return teamVotes_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    @java.lang.Override
    public int getTeamVotesCount() {
      return teamVotes_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index) {
      return teamVotes_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
        int index) {
      return teamVotes_.get(index);
    }

    public static final int GENERIC_SELECTIONS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection> genericSelections_;
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection> getGenericSelectionsList() {
      return genericSelections_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
        getGenericSelectionsOrBuilderList() {
      return genericSelections_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    @java.lang.Override
    public int getGenericSelectionsCount() {
      return genericSelections_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index) {
      return genericSelections_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
        int index) {
      return genericSelections_.get(index);
    }

    public static final int STAMPED_PLAYERS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer> stampedPlayers_;
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer> getStampedPlayersList() {
      return stampedPlayers_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
        getStampedPlayersOrBuilderList() {
      return stampedPlayers_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    @java.lang.Override
    public int getStampedPlayersCount() {
      return stampedPlayers_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index) {
      return stampedPlayers_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
        int index) {
      return stampedPlayers_.get(index);
    }

    public static final int PLAYER_CARD_CHALLENGES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge> playerCardChallenges_;
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge> getPlayerCardChallengesList() {
      return playerCardChallenges_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
        getPlayerCardChallengesOrBuilderList() {
      return playerCardChallenges_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    @java.lang.Override
    public int getPlayerCardChallengesCount() {
      return playerCardChallenges_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index) {
      return playerCardChallenges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
        int index) {
      return playerCardChallenges_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < teamVotes_.size(); i++) {
        output.writeMessage(1, teamVotes_.get(i));
      }
      for (int i = 0; i < genericSelections_.size(); i++) {
        output.writeMessage(2, genericSelections_.get(i));
      }
      for (int i = 0; i < stampedPlayers_.size(); i++) {
        output.writeMessage(3, stampedPlayers_.get(i));
      }
      for (int i = 0; i < playerCardChallenges_.size(); i++) {
        output.writeMessage(4, playerCardChallenges_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teamVotes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teamVotes_.get(i));
      }
      for (int i = 0; i < genericSelections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, genericSelections_.get(i));
      }
      for (int i = 0; i < stampedPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, stampedPlayers_.get(i));
      }
      for (int i = 0; i < playerCardChallenges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, playerCardChallenges_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote) obj;

      if (!getTeamVotesList()
          .equals(other.getTeamVotesList())) return false;
      if (!getGenericSelectionsList()
          .equals(other.getGenericSelectionsList())) return false;
      if (!getStampedPlayersList()
          .equals(other.getStampedPlayersList())) return false;
      if (!getPlayerCardChallengesList()
          .equals(other.getPlayerCardChallengesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTeamVotesCount() > 0) {
        hash = (37 * hash) + TEAM_VOTES_FIELD_NUMBER;
        hash = (53 * hash) + getTeamVotesList().hashCode();
      }
      if (getGenericSelectionsCount() > 0) {
        hash = (37 * hash) + GENERIC_SELECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getGenericSelectionsList().hashCode();
      }
      if (getStampedPlayersCount() > 0) {
        hash = (37 * hash) + STAMPED_PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getStampedPlayersList().hashCode();
      }
      if (getPlayerCardChallengesCount() > 0) {
        hash = (37 * hash) + PLAYER_CARD_CHALLENGES_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerCardChallengesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVote)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVote_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (teamVotesBuilder_ == null) {
          teamVotes_ = java.util.Collections.emptyList();
        } else {
          teamVotes_ = null;
          teamVotesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (genericSelectionsBuilder_ == null) {
          genericSelections_ = java.util.Collections.emptyList();
        } else {
          genericSelections_ = null;
          genericSelectionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (stampedPlayersBuilder_ == null) {
          stampedPlayers_ = java.util.Collections.emptyList();
        } else {
          stampedPlayers_ = null;
          stampedPlayersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallenges_ = java.util.Collections.emptyList();
        } else {
          playerCardChallenges_ = null;
          playerCardChallengesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAPassportVote_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote result) {
        if (teamVotesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            teamVotes_ = java.util.Collections.unmodifiableList(teamVotes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teamVotes_ = teamVotes_;
        } else {
          result.teamVotes_ = teamVotesBuilder_.build();
        }
        if (genericSelectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            genericSelections_ = java.util.Collections.unmodifiableList(genericSelections_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.genericSelections_ = genericSelections_;
        } else {
          result.genericSelections_ = genericSelectionsBuilder_.build();
        }
        if (stampedPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            stampedPlayers_ = java.util.Collections.unmodifiableList(stampedPlayers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.stampedPlayers_ = stampedPlayers_;
        } else {
          result.stampedPlayers_ = stampedPlayersBuilder_.build();
        }
        if (playerCardChallengesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            playerCardChallenges_ = java.util.Collections.unmodifiableList(playerCardChallenges_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerCardChallenges_ = playerCardChallenges_;
        } else {
          result.playerCardChallenges_ = playerCardChallengesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote.getDefaultInstance()) return this;
        if (teamVotesBuilder_ == null) {
          if (!other.teamVotes_.isEmpty()) {
            if (teamVotes_.isEmpty()) {
              teamVotes_ = other.teamVotes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamVotesIsMutable();
              teamVotes_.addAll(other.teamVotes_);
            }
            onChanged();
          }
        } else {
          if (!other.teamVotes_.isEmpty()) {
            if (teamVotesBuilder_.isEmpty()) {
              teamVotesBuilder_.dispose();
              teamVotesBuilder_ = null;
              teamVotes_ = other.teamVotes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamVotesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamVotesFieldBuilder() : null;
            } else {
              teamVotesBuilder_.addAllMessages(other.teamVotes_);
            }
          }
        }
        if (genericSelectionsBuilder_ == null) {
          if (!other.genericSelections_.isEmpty()) {
            if (genericSelections_.isEmpty()) {
              genericSelections_ = other.genericSelections_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGenericSelectionsIsMutable();
              genericSelections_.addAll(other.genericSelections_);
            }
            onChanged();
          }
        } else {
          if (!other.genericSelections_.isEmpty()) {
            if (genericSelectionsBuilder_.isEmpty()) {
              genericSelectionsBuilder_.dispose();
              genericSelectionsBuilder_ = null;
              genericSelections_ = other.genericSelections_;
              bitField0_ = (bitField0_ & ~0x00000002);
              genericSelectionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGenericSelectionsFieldBuilder() : null;
            } else {
              genericSelectionsBuilder_.addAllMessages(other.genericSelections_);
            }
          }
        }
        if (stampedPlayersBuilder_ == null) {
          if (!other.stampedPlayers_.isEmpty()) {
            if (stampedPlayers_.isEmpty()) {
              stampedPlayers_ = other.stampedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStampedPlayersIsMutable();
              stampedPlayers_.addAll(other.stampedPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.stampedPlayers_.isEmpty()) {
            if (stampedPlayersBuilder_.isEmpty()) {
              stampedPlayersBuilder_.dispose();
              stampedPlayersBuilder_ = null;
              stampedPlayers_ = other.stampedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              stampedPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStampedPlayersFieldBuilder() : null;
            } else {
              stampedPlayersBuilder_.addAllMessages(other.stampedPlayers_);
            }
          }
        }
        if (playerCardChallengesBuilder_ == null) {
          if (!other.playerCardChallenges_.isEmpty()) {
            if (playerCardChallenges_.isEmpty()) {
              playerCardChallenges_ = other.playerCardChallenges_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerCardChallengesIsMutable();
              playerCardChallenges_.addAll(other.playerCardChallenges_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCardChallenges_.isEmpty()) {
            if (playerCardChallengesBuilder_.isEmpty()) {
              playerCardChallengesBuilder_.dispose();
              playerCardChallengesBuilder_ = null;
              playerCardChallenges_ = other.playerCardChallenges_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerCardChallengesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerCardChallengesFieldBuilder() : null;
            } else {
              playerCardChallengesBuilder_.addAllMessages(other.playerCardChallenges_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.parser(),
                        extensionRegistry);
                if (teamVotesBuilder_ == null) {
                  ensureTeamVotesIsMutable();
                  teamVotes_.add(m);
                } else {
                  teamVotesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.parser(),
                        extensionRegistry);
                if (genericSelectionsBuilder_ == null) {
                  ensureGenericSelectionsIsMutable();
                  genericSelections_.add(m);
                } else {
                  genericSelectionsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.parser(),
                        extensionRegistry);
                if (stampedPlayersBuilder_ == null) {
                  ensureStampedPlayersIsMutable();
                  stampedPlayers_.add(m);
                } else {
                  stampedPlayersBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.parser(),
                        extensionRegistry);
                if (playerCardChallengesBuilder_ == null) {
                  ensurePlayerCardChallengesIsMutable();
                  playerCardChallenges_.add(m);
                } else {
                  playerCardChallengesBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess> teamVotes_ =
        java.util.Collections.emptyList();
      private void ensureTeamVotesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          teamVotes_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess>(teamVotes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> teamVotesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess> getTeamVotesList() {
        if (teamVotesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamVotes_);
        } else {
          return teamVotesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public int getTeamVotesCount() {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.size();
        } else {
          return teamVotesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index) {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.get(index);
        } else {
          return teamVotesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder setTeamVotes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.set(index, value);
          onChanged();
        } else {
          teamVotesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder setTeamVotes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.add(value);
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.add(index, value);
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.add(builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addAllTeamVotes(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess> values) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamVotes_);
          onChanged();
        } else {
          teamVotesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder clearTeamVotes() {
        if (teamVotesBuilder_ == null) {
          teamVotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamVotesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder removeTeamVotes(int index) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.remove(index);
          onChanged();
        } else {
          teamVotesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder getTeamVotesBuilder(
          int index) {
        return getTeamVotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
          int index) {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.get(index);  } else {
          return teamVotesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
           getTeamVotesOrBuilderList() {
        if (teamVotesBuilder_ != null) {
          return teamVotesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamVotes_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder addTeamVotesBuilder() {
        return getTeamVotesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder addTeamVotesBuilder(
          int index) {
        return getTeamVotesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder> 
           getTeamVotesBuilderList() {
        return getTeamVotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
          getTeamVotesFieldBuilder() {
        if (teamVotesBuilder_ == null) {
          teamVotesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder>(
                  teamVotes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          teamVotes_ = null;
        }
        return teamVotesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection> genericSelections_ =
        java.util.Collections.emptyList();
      private void ensureGenericSelectionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          genericSelections_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection>(genericSelections_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> genericSelectionsBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection> getGenericSelectionsList() {
        if (genericSelectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genericSelections_);
        } else {
          return genericSelectionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public int getGenericSelectionsCount() {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.size();
        } else {
          return genericSelectionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index) {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.get(index);
        } else {
          return genericSelectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder setGenericSelections(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.set(index, value);
          onChanged();
        } else {
          genericSelectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder setGenericSelections(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.set(index, builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(value);
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(index, value);
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(index, builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addAllGenericSelections(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection> values) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, genericSelections_);
          onChanged();
        } else {
          genericSelectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder clearGenericSelections() {
        if (genericSelectionsBuilder_ == null) {
          genericSelections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          genericSelectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder removeGenericSelections(int index) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.remove(index);
          onChanged();
        } else {
          genericSelectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder getGenericSelectionsBuilder(
          int index) {
        return getGenericSelectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
          int index) {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.get(index);  } else {
          return genericSelectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
           getGenericSelectionsOrBuilderList() {
        if (genericSelectionsBuilder_ != null) {
          return genericSelectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genericSelections_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder addGenericSelectionsBuilder() {
        return getGenericSelectionsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder addGenericSelectionsBuilder(
          int index) {
        return getGenericSelectionsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder> 
           getGenericSelectionsBuilderList() {
        return getGenericSelectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
          getGenericSelectionsFieldBuilder() {
        if (genericSelectionsBuilder_ == null) {
          genericSelectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder>(
                  genericSelections_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          genericSelections_ = null;
        }
        return genericSelectionsBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer> stampedPlayers_ =
        java.util.Collections.emptyList();
      private void ensureStampedPlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          stampedPlayers_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer>(stampedPlayers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> stampedPlayersBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer> getStampedPlayersList() {
        if (stampedPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stampedPlayers_);
        } else {
          return stampedPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public int getStampedPlayersCount() {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.size();
        } else {
          return stampedPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index) {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.get(index);
        } else {
          return stampedPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder setStampedPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.set(index, value);
          onChanged();
        } else {
          stampedPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder setStampedPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(value);
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(index, value);
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addAllStampedPlayers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer> values) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stampedPlayers_);
          onChanged();
        } else {
          stampedPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder clearStampedPlayers() {
        if (stampedPlayersBuilder_ == null) {
          stampedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          stampedPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder removeStampedPlayers(int index) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.remove(index);
          onChanged();
        } else {
          stampedPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder getStampedPlayersBuilder(
          int index) {
        return getStampedPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
          int index) {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.get(index);  } else {
          return stampedPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
           getStampedPlayersOrBuilderList() {
        if (stampedPlayersBuilder_ != null) {
          return stampedPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stampedPlayers_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder addStampedPlayersBuilder() {
        return getStampedPlayersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder addStampedPlayersBuilder(
          int index) {
        return getStampedPlayersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder> 
           getStampedPlayersBuilderList() {
        return getStampedPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
          getStampedPlayersFieldBuilder() {
        if (stampedPlayersBuilder_ == null) {
          stampedPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayer.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder>(
                  stampedPlayers_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          stampedPlayers_ = null;
        }
        return stampedPlayersBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge> playerCardChallenges_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCardChallengesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          playerCardChallenges_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge>(playerCardChallenges_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> playerCardChallengesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge> getPlayerCardChallengesList() {
        if (playerCardChallengesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCardChallenges_);
        } else {
          return playerCardChallengesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public int getPlayerCardChallengesCount() {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.size();
        } else {
          return playerCardChallengesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index) {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.get(index);
        } else {
          return playerCardChallengesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder setPlayerCardChallenges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.set(index, value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder setPlayerCardChallenges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(index, value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addAllPlayerCardChallenges(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge> values) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerCardChallenges_);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder clearPlayerCardChallenges() {
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallenges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerCardChallengesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder removePlayerCardChallenges(int index) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.remove(index);
          onChanged();
        } else {
          playerCardChallengesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder getPlayerCardChallengesBuilder(
          int index) {
        return getPlayerCardChallengesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
          int index) {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.get(index);  } else {
          return playerCardChallengesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
           getPlayerCardChallengesOrBuilderList() {
        if (playerCardChallengesBuilder_ != null) {
          return playerCardChallengesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCardChallenges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder addPlayerCardChallengesBuilder() {
        return getPlayerCardChallengesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder addPlayerCardChallengesBuilder(
          int index) {
        return getPlayerCardChallengesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder> 
           getPlayerCardChallengesBuilderList() {
        return getPlayerCardChallengesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
          getPlayerCardChallengesFieldBuilder() {
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallengesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder>(
                  playerCardChallenges_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          playerCardChallenges_ = null;
        }
        return playerCardChallengesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVote)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVote)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAPassportVote>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportVote>() {
      @java.lang.Override
      public CMsgDOTAPassportVote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportVote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVote> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAPassportVote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCGetPlayerCardRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCGetPlayerCardRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return Whether the leagueId field is set.
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return The leagueId.
     */
    int getLeagueId();

    /**
     * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    boolean hasFantasyPeriod();
    /**
     * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    int getFantasyPeriod();
  }
  /**
   * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterRequest}
   */
  public static final class CMsgClientToGCGetPlayerCardRosterRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCGetPlayerCardRosterRequest)
      CMsgClientToGCGetPlayerCardRosterRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCGetPlayerCardRosterRequest.class.getName());
    }
    // Use CMsgClientToGCGetPlayerCardRosterRequest.newBuilder() to construct.
    private CMsgClientToGCGetPlayerCardRosterRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCGetPlayerCardRosterRequest() {
      fantasyPeriod_ = -1;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_ = 0;
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return Whether the leagueId field is set.
     */
    @java.lang.Override
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return The leagueId.
     */
    @java.lang.Override
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int FANTASY_PERIOD_FIELD_NUMBER = 3;
    private int fantasyPeriod_ = -1;
    /**
     * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    @java.lang.Override
    public boolean hasFantasyPeriod() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    @java.lang.Override
    public int getFantasyPeriod() {
      return fantasyPeriod_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(3, fantasyPeriod_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyPeriod_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest) obj;

      if (hasLeagueId() != other.hasLeagueId()) return false;
      if (hasLeagueId()) {
        if (getLeagueId()
            != other.getLeagueId()) return false;
      }
      if (hasFantasyPeriod() != other.hasFantasyPeriod()) return false;
      if (hasFantasyPeriod()) {
        if (getFantasyPeriod()
            != other.getFantasyPeriod()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (hasFantasyPeriod()) {
        hash = (37 * hash) + FANTASY_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyPeriod();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCGetPlayerCardRosterRequest)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        leagueId_ = 0;
        fantasyPeriod_ = -1;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.leagueId_ = leagueId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fantasyPeriod_ = fantasyPeriod_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasFantasyPeriod()) {
          setFantasyPeriod(other.getFantasyPeriod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                leagueId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 24: {
                fantasyPeriod_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @param value The leagueId to set.
       * @return This builder for chaining.
       */
      public Builder setLeagueId(int value) {

        leagueId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyPeriod_ = -1;
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      @java.lang.Override
      public boolean hasFantasyPeriod() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      @java.lang.Override
      public int getFantasyPeriod() {
        return fantasyPeriod_;
      }
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @param value The fantasyPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyPeriod(int value) {

        fantasyPeriod_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyPeriod() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyPeriod_ = -1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCGetPlayerCardRosterRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCGetPlayerCardRosterRequest)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCGetPlayerCardRosterRequest>() {
      @java.lang.Override
      public CMsgClientToGCGetPlayerCardRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCGetPlayerCardRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCGetPlayerCardRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result getResult();

    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     * @return A list containing the playerCardItemId.
     */
    java.util.List<java.lang.Long> getPlayerCardItemIdList();
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     * @return The count of playerCardItemId.
     */
    int getPlayerCardItemIdCount();
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     * @param index The index of the element to return.
     * @return The playerCardItemId at the given index.
     */
    long getPlayerCardItemId(int index);

    /**
     * <code>optional float score = 3;</code>
     * @return Whether the score field is set.
     */
    boolean hasScore();
    /**
     * <code>optional float score = 3;</code>
     * @return The score.
     */
    float getScore();

    /**
     * <code>optional bool finalized = 4;</code>
     * @return Whether the finalized field is set.
     */
    boolean hasFinalized();
    /**
     * <code>optional bool finalized = 4;</code>
     * @return The finalized.
     */
    boolean getFinalized();

    /**
     * <code>optional float percentile = 5;</code>
     * @return Whether the percentile field is set.
     */
    boolean hasPercentile();
    /**
     * <code>optional float percentile = 5;</code>
     * @return The percentile.
     */
    float getPercentile();
  }
  /**
   * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterResponse}
   */
  public static final class CMsgClientToGCGetPlayerCardRosterResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCGetPlayerCardRosterResponse)
      CMsgClientToGCGetPlayerCardRosterResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCGetPlayerCardRosterResponse.class.getName());
    }
    // Use CMsgClientToGCGetPlayerCardRosterResponse.newBuilder() to construct.
    private CMsgClientToGCGetPlayerCardRosterResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCGetPlayerCardRosterResponse() {
      result_ = 0;
      playerCardItemId_ = emptyLongList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCGetPlayerCardRosterResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      ERROR_INVALID_LEAGUE_ID(2),
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      ERROR_INVALID_TIMESTAMP(3),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Result.class.getName());
      }
      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_INVALID_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      public static final int ERROR_INVALID_TIMESTAMP_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Result forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_LEAGUE_ID;
          case 3: return ERROR_INVALID_TIMESTAMP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCGetPlayerCardRosterResponse.Result)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result getResult() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.SUCCESS : result;
    }

    public static final int PLAYER_CARD_ITEM_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList playerCardItemId_ =
        emptyLongList();
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     * @return A list containing the playerCardItemId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getPlayerCardItemIdList() {
      return playerCardItemId_;
    }
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     * @return The count of playerCardItemId.
     */
    public int getPlayerCardItemIdCount() {
      return playerCardItemId_.size();
    }
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     * @param index The index of the element to return.
     * @return The playerCardItemId at the given index.
     */
    public long getPlayerCardItemId(int index) {
      return playerCardItemId_.getLong(index);
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private float score_ = 0F;
    /**
     * <code>optional float score = 3;</code>
     * @return Whether the score field is set.
     */
    @java.lang.Override
    public boolean hasScore() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float score = 3;</code>
     * @return The score.
     */
    @java.lang.Override
    public float getScore() {
      return score_;
    }

    public static final int FINALIZED_FIELD_NUMBER = 4;
    private boolean finalized_ = false;
    /**
     * <code>optional bool finalized = 4;</code>
     * @return Whether the finalized field is set.
     */
    @java.lang.Override
    public boolean hasFinalized() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool finalized = 4;</code>
     * @return The finalized.
     */
    @java.lang.Override
    public boolean getFinalized() {
      return finalized_;
    }

    public static final int PERCENTILE_FIELD_NUMBER = 5;
    private float percentile_ = 0F;
    /**
     * <code>optional float percentile = 5;</code>
     * @return Whether the percentile field is set.
     */
    @java.lang.Override
    public boolean hasPercentile() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional float percentile = 5;</code>
     * @return The percentile.
     */
    @java.lang.Override
    public float getPercentile() {
      return percentile_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < playerCardItemId_.size(); i++) {
        output.writeUInt64(2, playerCardItemId_.getLong(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(3, score_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(4, finalized_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(5, percentile_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerCardItemId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(playerCardItemId_.getLong(i));
        }
        size += dataSize;
        size += 1 * getPlayerCardItemIdList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, score_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, finalized_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, percentile_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (!getPlayerCardItemIdList()
          .equals(other.getPlayerCardItemIdList())) return false;
      if (hasScore() != other.hasScore()) return false;
      if (hasScore()) {
        if (java.lang.Float.floatToIntBits(getScore())
            != java.lang.Float.floatToIntBits(
                other.getScore())) return false;
      }
      if (hasFinalized() != other.hasFinalized()) return false;
      if (hasFinalized()) {
        if (getFinalized()
            != other.getFinalized()) return false;
      }
      if (hasPercentile() != other.hasPercentile()) return false;
      if (hasPercentile()) {
        if (java.lang.Float.floatToIntBits(getPercentile())
            != java.lang.Float.floatToIntBits(
                other.getPercentile())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getPlayerCardItemIdCount() > 0) {
        hash = (37 * hash) + PLAYER_CARD_ITEM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerCardItemIdList().hashCode();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScore());
      }
      if (hasFinalized()) {
        hash = (37 * hash) + FINALIZED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFinalized());
      }
      if (hasPercentile()) {
        hash = (37 * hash) + PERCENTILE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPercentile());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCGetPlayerCardRosterResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        playerCardItemId_ = emptyLongList();
        score_ = 0F;
        finalized_ = false;
        percentile_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          playerCardItemId_.makeImmutable();
          result.playerCardItemId_ = playerCardItemId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.score_ = score_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.finalized_ = finalized_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.percentile_ = percentile_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (!other.playerCardItemId_.isEmpty()) {
          if (playerCardItemId_.isEmpty()) {
            playerCardItemId_ = other.playerCardItemId_;
            playerCardItemId_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensurePlayerCardItemIdIsMutable();
            playerCardItemId_.addAll(other.playerCardItemId_);
          }
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasFinalized()) {
          setFinalized(other.getFinalized());
        }
        if (other.hasPercentile()) {
          setPercentile(other.getPercentile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                long v = input.readUInt64();
                ensurePlayerCardItemIdIsMutable();
                playerCardItemId_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePlayerCardItemIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  playerCardItemId_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 29: {
                score_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 32: {
                finalized_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 45: {
                percentile_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result getResult() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList playerCardItemId_ = emptyLongList();
      private void ensurePlayerCardItemIdIsMutable() {
        if (!playerCardItemId_.isModifiable()) {
          playerCardItemId_ = makeMutableCopy(playerCardItemId_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @return A list containing the playerCardItemId.
       */
      public java.util.List<java.lang.Long>
          getPlayerCardItemIdList() {
        playerCardItemId_.makeImmutable();
        return playerCardItemId_;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @return The count of playerCardItemId.
       */
      public int getPlayerCardItemIdCount() {
        return playerCardItemId_.size();
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @param index The index of the element to return.
       * @return The playerCardItemId at the given index.
       */
      public long getPlayerCardItemId(int index) {
        return playerCardItemId_.getLong(index);
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @param index The index to set the value at.
       * @param value The playerCardItemId to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerCardItemId(
          int index, long value) {

        ensurePlayerCardItemIdIsMutable();
        playerCardItemId_.setLong(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @param value The playerCardItemId to add.
       * @return This builder for chaining.
       */
      public Builder addPlayerCardItemId(long value) {

        ensurePlayerCardItemIdIsMutable();
        playerCardItemId_.addLong(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @param values The playerCardItemId to add.
       * @return This builder for chaining.
       */
      public Builder addAllPlayerCardItemId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePlayerCardItemIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerCardItemId_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerCardItemId() {
        playerCardItemId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 3;</code>
       * @return Whether the score field is set.
       */
      @java.lang.Override
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float score = 3;</code>
       * @return The score.
       */
      @java.lang.Override
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 3;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(float value) {

        score_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0F;
        onChanged();
        return this;
      }

      private boolean finalized_ ;
      /**
       * <code>optional bool finalized = 4;</code>
       * @return Whether the finalized field is set.
       */
      @java.lang.Override
      public boolean hasFinalized() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool finalized = 4;</code>
       * @return The finalized.
       */
      @java.lang.Override
      public boolean getFinalized() {
        return finalized_;
      }
      /**
       * <code>optional bool finalized = 4;</code>
       * @param value The finalized to set.
       * @return This builder for chaining.
       */
      public Builder setFinalized(boolean value) {

        finalized_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool finalized = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinalized() {
        bitField0_ = (bitField0_ & ~0x00000008);
        finalized_ = false;
        onChanged();
        return this;
      }

      private float percentile_ ;
      /**
       * <code>optional float percentile = 5;</code>
       * @return Whether the percentile field is set.
       */
      @java.lang.Override
      public boolean hasPercentile() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float percentile = 5;</code>
       * @return The percentile.
       */
      @java.lang.Override
      public float getPercentile() {
        return percentile_;
      }
      /**
       * <code>optional float percentile = 5;</code>
       * @param value The percentile to set.
       * @return This builder for chaining.
       */
      public Builder setPercentile(float value) {

        percentile_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional float percentile = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentile() {
        bitField0_ = (bitField0_ & ~0x00000010);
        percentile_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCGetPlayerCardRosterResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCGetPlayerCardRosterResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCGetPlayerCardRosterResponse>() {
      @java.lang.Override
      public CMsgClientToGCGetPlayerCardRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCBatchGetPlayerCardRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCBatchGetPlayerCardRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp> 
        getLeagueTimestampsList();
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp getLeagueTimestamps(int index);
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    int getLeagueTimestampsCount();
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder> 
        getLeagueTimestampsOrBuilderList();
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder getLeagueTimestampsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterRequest}
   */
  public static final class CMsgClientToGCBatchGetPlayerCardRosterRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCBatchGetPlayerCardRosterRequest)
      CMsgClientToGCBatchGetPlayerCardRosterRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCBatchGetPlayerCardRosterRequest.class.getName());
    }
    // Use CMsgClientToGCBatchGetPlayerCardRosterRequest.newBuilder() to construct.
    private CMsgClientToGCBatchGetPlayerCardRosterRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCBatchGetPlayerCardRosterRequest() {
      leagueTimestamps_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.Builder.class);
    }

    public interface LeagueTimestampOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      boolean hasLeagueId();
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      int getLeagueId();

      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      boolean hasFantasyPeriod();
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      int getFantasyPeriod();
    }
    /**
     * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp}
     */
    public static final class LeagueTimestamp extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)
        LeagueTimestampOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          LeagueTimestamp.class.getName());
      }
      // Use LeagueTimestamp.newBuilder() to construct.
      private LeagueTimestamp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private LeagueTimestamp() {
        fantasyPeriod_ = -1;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder.class);
      }

      private int bitField0_;
      public static final int LEAGUE_ID_FIELD_NUMBER = 1;
      private int leagueId_ = 0;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }

      public static final int FANTASY_PERIOD_FIELD_NUMBER = 3;
      private int fantasyPeriod_ = -1;
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      @java.lang.Override
      public boolean hasFantasyPeriod() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      @java.lang.Override
      public int getFantasyPeriod() {
        return fantasyPeriod_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(3, fantasyPeriod_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, fantasyPeriod_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp) obj;

        if (hasLeagueId() != other.hasLeagueId()) return false;
        if (hasLeagueId()) {
          if (getLeagueId()
              != other.getLeagueId()) return false;
        }
        if (hasFantasyPeriod() != other.hasFantasyPeriod()) return false;
        if (hasFantasyPeriod()) {
          if (getFantasyPeriod()
              != other.getFantasyPeriod()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLeagueId()) {
          hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueId();
        }
        if (hasFantasyPeriod()) {
          hash = (37 * hash) + FANTASY_PERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyPeriod();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          leagueId_ = 0;
          fantasyPeriod_ = -1;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.leagueId_ = leagueId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.fantasyPeriod_ = fantasyPeriod_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.getDefaultInstance()) return this;
          if (other.hasLeagueId()) {
            setLeagueId(other.getLeagueId());
          }
          if (other.hasFantasyPeriod()) {
            setFantasyPeriod(other.getFantasyPeriod());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  leagueId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 24: {
                  fantasyPeriod_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int leagueId_ ;
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return Whether the leagueId field is set.
         */
        @java.lang.Override
        public boolean hasLeagueId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return The leagueId.
         */
        @java.lang.Override
        public int getLeagueId() {
          return leagueId_;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @param value The leagueId to set.
         * @return This builder for chaining.
         */
        public Builder setLeagueId(int value) {

          leagueId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          leagueId_ = 0;
          onChanged();
          return this;
        }

        private int fantasyPeriod_ = -1;
        /**
         * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
         * @return Whether the fantasyPeriod field is set.
         */
        @java.lang.Override
        public boolean hasFantasyPeriod() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
         * @return The fantasyPeriod.
         */
        @java.lang.Override
        public int getFantasyPeriod() {
          return fantasyPeriod_;
        }
        /**
         * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
         * @param value The fantasyPeriod to set.
         * @return This builder for chaining.
         */
        public Builder setFantasyPeriod(int value) {

          fantasyPeriod_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_period = 3 [default = 4294967295];</code>
         * @return This builder for chaining.
         */
        public Builder clearFantasyPeriod() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fantasyPeriod_ = -1;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)
      }

      // @@protoc_insertion_point(class_scope:CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LeagueTimestamp>
          PARSER = new com.google.protobuf.AbstractParser<LeagueTimestamp>() {
        @java.lang.Override
        public LeagueTimestamp parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LeagueTimestamp> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LeagueTimestamp> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LEAGUE_TIMESTAMPS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp> leagueTimestamps_;
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp> getLeagueTimestampsList() {
      return leagueTimestamps_;
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder> 
        getLeagueTimestampsOrBuilderList() {
      return leagueTimestamps_;
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    @java.lang.Override
    public int getLeagueTimestampsCount() {
      return leagueTimestamps_.size();
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp getLeagueTimestamps(int index) {
      return leagueTimestamps_.get(index);
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder getLeagueTimestampsOrBuilder(
        int index) {
      return leagueTimestamps_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < leagueTimestamps_.size(); i++) {
        output.writeMessage(1, leagueTimestamps_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < leagueTimestamps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, leagueTimestamps_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest) obj;

      if (!getLeagueTimestampsList()
          .equals(other.getLeagueTimestampsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLeagueTimestampsCount() > 0) {
        hash = (37 * hash) + LEAGUE_TIMESTAMPS_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueTimestampsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCBatchGetPlayerCardRosterRequest)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (leagueTimestampsBuilder_ == null) {
          leagueTimestamps_ = java.util.Collections.emptyList();
        } else {
          leagueTimestamps_ = null;
          leagueTimestampsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest result) {
        if (leagueTimestampsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            leagueTimestamps_ = java.util.Collections.unmodifiableList(leagueTimestamps_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.leagueTimestamps_ = leagueTimestamps_;
        } else {
          result.leagueTimestamps_ = leagueTimestampsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.getDefaultInstance()) return this;
        if (leagueTimestampsBuilder_ == null) {
          if (!other.leagueTimestamps_.isEmpty()) {
            if (leagueTimestamps_.isEmpty()) {
              leagueTimestamps_ = other.leagueTimestamps_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLeagueTimestampsIsMutable();
              leagueTimestamps_.addAll(other.leagueTimestamps_);
            }
            onChanged();
          }
        } else {
          if (!other.leagueTimestamps_.isEmpty()) {
            if (leagueTimestampsBuilder_.isEmpty()) {
              leagueTimestampsBuilder_.dispose();
              leagueTimestampsBuilder_ = null;
              leagueTimestamps_ = other.leagueTimestamps_;
              bitField0_ = (bitField0_ & ~0x00000001);
              leagueTimestampsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeagueTimestampsFieldBuilder() : null;
            } else {
              leagueTimestampsBuilder_.addAllMessages(other.leagueTimestamps_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.parser(),
                        extensionRegistry);
                if (leagueTimestampsBuilder_ == null) {
                  ensureLeagueTimestampsIsMutable();
                  leagueTimestamps_.add(m);
                } else {
                  leagueTimestampsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp> leagueTimestamps_ =
        java.util.Collections.emptyList();
      private void ensureLeagueTimestampsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          leagueTimestamps_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp>(leagueTimestamps_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder> leagueTimestampsBuilder_;

      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp> getLeagueTimestampsList() {
        if (leagueTimestampsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leagueTimestamps_);
        } else {
          return leagueTimestampsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public int getLeagueTimestampsCount() {
        if (leagueTimestampsBuilder_ == null) {
          return leagueTimestamps_.size();
        } else {
          return leagueTimestampsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp getLeagueTimestamps(int index) {
        if (leagueTimestampsBuilder_ == null) {
          return leagueTimestamps_.get(index);
        } else {
          return leagueTimestampsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder setLeagueTimestamps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp value) {
        if (leagueTimestampsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.set(index, value);
          onChanged();
        } else {
          leagueTimestampsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder setLeagueTimestamps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder builderForValue) {
        if (leagueTimestampsBuilder_ == null) {
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.set(index, builderForValue.build());
          onChanged();
        } else {
          leagueTimestampsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder addLeagueTimestamps(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp value) {
        if (leagueTimestampsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.add(value);
          onChanged();
        } else {
          leagueTimestampsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder addLeagueTimestamps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp value) {
        if (leagueTimestampsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.add(index, value);
          onChanged();
        } else {
          leagueTimestampsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder addLeagueTimestamps(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder builderForValue) {
        if (leagueTimestampsBuilder_ == null) {
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.add(builderForValue.build());
          onChanged();
        } else {
          leagueTimestampsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder addLeagueTimestamps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder builderForValue) {
        if (leagueTimestampsBuilder_ == null) {
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.add(index, builderForValue.build());
          onChanged();
        } else {
          leagueTimestampsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder addAllLeagueTimestamps(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp> values) {
        if (leagueTimestampsBuilder_ == null) {
          ensureLeagueTimestampsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leagueTimestamps_);
          onChanged();
        } else {
          leagueTimestampsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder clearLeagueTimestamps() {
        if (leagueTimestampsBuilder_ == null) {
          leagueTimestamps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          leagueTimestampsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public Builder removeLeagueTimestamps(int index) {
        if (leagueTimestampsBuilder_ == null) {
          ensureLeagueTimestampsIsMutable();
          leagueTimestamps_.remove(index);
          onChanged();
        } else {
          leagueTimestampsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder getLeagueTimestampsBuilder(
          int index) {
        return getLeagueTimestampsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder getLeagueTimestampsOrBuilder(
          int index) {
        if (leagueTimestampsBuilder_ == null) {
          return leagueTimestamps_.get(index);  } else {
          return leagueTimestampsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder> 
           getLeagueTimestampsOrBuilderList() {
        if (leagueTimestampsBuilder_ != null) {
          return leagueTimestampsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leagueTimestamps_);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder addLeagueTimestampsBuilder() {
        return getLeagueTimestampsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder addLeagueTimestampsBuilder(
          int index) {
        return getLeagueTimestampsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp league_timestamps = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder> 
           getLeagueTimestampsBuilderList() {
        return getLeagueTimestampsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder> 
          getLeagueTimestampsFieldBuilder() {
        if (leagueTimestampsBuilder_ == null) {
          leagueTimestampsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestamp.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest.LeagueTimestampOrBuilder>(
                  leagueTimestamps_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          leagueTimestamps_ = null;
        }
        return leagueTimestampsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCBatchGetPlayerCardRosterRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCBatchGetPlayerCardRosterRequest)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCBatchGetPlayerCardRosterRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCBatchGetPlayerCardRosterRequest>() {
      @java.lang.Override
      public CMsgClientToGCBatchGetPlayerCardRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCBatchGetPlayerCardRosterRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCBatchGetPlayerCardRosterRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCBatchGetPlayerCardRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCBatchGetPlayerCardRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse> 
        getResponsesList();
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse getResponses(int index);
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    int getResponsesCount();
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder> 
        getResponsesOrBuilderList();
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder getResponsesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterResponse}
   */
  public static final class CMsgClientToGCBatchGetPlayerCardRosterResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCBatchGetPlayerCardRosterResponse)
      CMsgClientToGCBatchGetPlayerCardRosterResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCBatchGetPlayerCardRosterResponse.class.getName());
    }
    // Use CMsgClientToGCBatchGetPlayerCardRosterResponse.newBuilder() to construct.
    private CMsgClientToGCBatchGetPlayerCardRosterResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCBatchGetPlayerCardRosterResponse() {
      responses_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCBatchGetPlayerCardRosterResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      ERROR_INVALID_LEAGUE_ID(2),
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      ERROR_INVALID_TIMESTAMP(3),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Result.class.getName());
      }
      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_INVALID_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      public static final int ERROR_INVALID_TIMESTAMP_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Result forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_LEAGUE_ID;
          case 3: return ERROR_INVALID_TIMESTAMP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCBatchGetPlayerCardRosterResponse.Result)
    }

    public interface RosterResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      boolean hasLeagueId();
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      int getLeagueId();

      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return Whether the deprecatedTimestamp field is set.
       */
      boolean hasDeprecatedTimestamp();
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return The deprecatedTimestamp.
       */
      int getDeprecatedTimestamp();

      /**
       * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
       * @return Whether the result field is set.
       */
      boolean hasResult();
      /**
       * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
       * @return The result.
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result getResult();

      /**
       * <code>repeated uint64 player_card_item_id = 4;</code>
       * @return A list containing the playerCardItemId.
       */
      java.util.List<java.lang.Long> getPlayerCardItemIdList();
      /**
       * <code>repeated uint64 player_card_item_id = 4;</code>
       * @return The count of playerCardItemId.
       */
      int getPlayerCardItemIdCount();
      /**
       * <code>repeated uint64 player_card_item_id = 4;</code>
       * @param index The index of the element to return.
       * @return The playerCardItemId at the given index.
       */
      long getPlayerCardItemId(int index);

      /**
       * <code>optional float score = 5;</code>
       * @return Whether the score field is set.
       */
      boolean hasScore();
      /**
       * <code>optional float score = 5;</code>
       * @return The score.
       */
      float getScore();

      /**
       * <code>optional bool finalized = 6;</code>
       * @return Whether the finalized field is set.
       */
      boolean hasFinalized();
      /**
       * <code>optional bool finalized = 6;</code>
       * @return The finalized.
       */
      boolean getFinalized();

      /**
       * <code>optional float percentile = 7;</code>
       * @return Whether the percentile field is set.
       */
      boolean hasPercentile();
      /**
       * <code>optional float percentile = 7;</code>
       * @return The percentile.
       */
      float getPercentile();

      /**
       * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      boolean hasFantasyPeriod();
      /**
       * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      int getFantasyPeriod();
    }
    /**
     * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse}
     */
    public static final class RosterResponse extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)
        RosterResponseOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          RosterResponse.class.getName());
      }
      // Use RosterResponse.newBuilder() to construct.
      private RosterResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private RosterResponse() {
        result_ = 0;
        playerCardItemId_ = emptyLongList();
        fantasyPeriod_ = -1;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder.class);
      }

      private int bitField0_;
      public static final int LEAGUE_ID_FIELD_NUMBER = 1;
      private int leagueId_ = 0;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }

      public static final int DEPRECATED_TIMESTAMP_FIELD_NUMBER = 2;
      private int deprecatedTimestamp_ = 0;
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return Whether the deprecatedTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasDeprecatedTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return The deprecatedTimestamp.
       */
      @java.lang.Override
      public int getDeprecatedTimestamp() {
        return deprecatedTimestamp_;
      }

      public static final int RESULT_FIELD_NUMBER = 3;
      private int result_ = 0;
      /**
       * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
       * @return The result.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result getResult() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result.SUCCESS : result;
      }

      public static final int PLAYER_CARD_ITEM_ID_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.LongList playerCardItemId_ =
          emptyLongList();
      /**
       * <code>repeated uint64 player_card_item_id = 4;</code>
       * @return A list containing the playerCardItemId.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getPlayerCardItemIdList() {
        return playerCardItemId_;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 4;</code>
       * @return The count of playerCardItemId.
       */
      public int getPlayerCardItemIdCount() {
        return playerCardItemId_.size();
      }
      /**
       * <code>repeated uint64 player_card_item_id = 4;</code>
       * @param index The index of the element to return.
       * @return The playerCardItemId at the given index.
       */
      public long getPlayerCardItemId(int index) {
        return playerCardItemId_.getLong(index);
      }

      public static final int SCORE_FIELD_NUMBER = 5;
      private float score_ = 0F;
      /**
       * <code>optional float score = 5;</code>
       * @return Whether the score field is set.
       */
      @java.lang.Override
      public boolean hasScore() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional float score = 5;</code>
       * @return The score.
       */
      @java.lang.Override
      public float getScore() {
        return score_;
      }

      public static final int FINALIZED_FIELD_NUMBER = 6;
      private boolean finalized_ = false;
      /**
       * <code>optional bool finalized = 6;</code>
       * @return Whether the finalized field is set.
       */
      @java.lang.Override
      public boolean hasFinalized() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool finalized = 6;</code>
       * @return The finalized.
       */
      @java.lang.Override
      public boolean getFinalized() {
        return finalized_;
      }

      public static final int PERCENTILE_FIELD_NUMBER = 7;
      private float percentile_ = 0F;
      /**
       * <code>optional float percentile = 7;</code>
       * @return Whether the percentile field is set.
       */
      @java.lang.Override
      public boolean hasPercentile() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional float percentile = 7;</code>
       * @return The percentile.
       */
      @java.lang.Override
      public float getPercentile() {
        return percentile_;
      }

      public static final int FANTASY_PERIOD_FIELD_NUMBER = 8;
      private int fantasyPeriod_ = -1;
      /**
       * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      @java.lang.Override
      public boolean hasFantasyPeriod() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      @java.lang.Override
      public int getFantasyPeriod() {
        return fantasyPeriod_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, deprecatedTimestamp_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeEnum(3, result_);
        }
        for (int i = 0; i < playerCardItemId_.size(); i++) {
          output.writeUInt64(4, playerCardItemId_.getLong(i));
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeFloat(5, score_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeBool(6, finalized_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeFloat(7, percentile_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(8, fantasyPeriod_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, deprecatedTimestamp_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, result_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerCardItemId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt64SizeNoTag(playerCardItemId_.getLong(i));
          }
          size += dataSize;
          size += 1 * getPlayerCardItemIdList().size();
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, score_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, finalized_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, percentile_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, fantasyPeriod_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse) obj;

        if (hasLeagueId() != other.hasLeagueId()) return false;
        if (hasLeagueId()) {
          if (getLeagueId()
              != other.getLeagueId()) return false;
        }
        if (hasDeprecatedTimestamp() != other.hasDeprecatedTimestamp()) return false;
        if (hasDeprecatedTimestamp()) {
          if (getDeprecatedTimestamp()
              != other.getDeprecatedTimestamp()) return false;
        }
        if (hasResult() != other.hasResult()) return false;
        if (hasResult()) {
          if (result_ != other.result_) return false;
        }
        if (!getPlayerCardItemIdList()
            .equals(other.getPlayerCardItemIdList())) return false;
        if (hasScore() != other.hasScore()) return false;
        if (hasScore()) {
          if (java.lang.Float.floatToIntBits(getScore())
              != java.lang.Float.floatToIntBits(
                  other.getScore())) return false;
        }
        if (hasFinalized() != other.hasFinalized()) return false;
        if (hasFinalized()) {
          if (getFinalized()
              != other.getFinalized()) return false;
        }
        if (hasPercentile() != other.hasPercentile()) return false;
        if (hasPercentile()) {
          if (java.lang.Float.floatToIntBits(getPercentile())
              != java.lang.Float.floatToIntBits(
                  other.getPercentile())) return false;
        }
        if (hasFantasyPeriod() != other.hasFantasyPeriod()) return false;
        if (hasFantasyPeriod()) {
          if (getFantasyPeriod()
              != other.getFantasyPeriod()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLeagueId()) {
          hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueId();
        }
        if (hasDeprecatedTimestamp()) {
          hash = (37 * hash) + DEPRECATED_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getDeprecatedTimestamp();
        }
        if (hasResult()) {
          hash = (37 * hash) + RESULT_FIELD_NUMBER;
          hash = (53 * hash) + result_;
        }
        if (getPlayerCardItemIdCount() > 0) {
          hash = (37 * hash) + PLAYER_CARD_ITEM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerCardItemIdList().hashCode();
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore());
        }
        if (hasFinalized()) {
          hash = (37 * hash) + FINALIZED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFinalized());
        }
        if (hasPercentile()) {
          hash = (37 * hash) + PERCENTILE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getPercentile());
        }
        if (hasFantasyPeriod()) {
          hash = (37 * hash) + FANTASY_PERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyPeriod();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          leagueId_ = 0;
          deprecatedTimestamp_ = 0;
          result_ = 0;
          playerCardItemId_ = emptyLongList();
          score_ = 0F;
          finalized_ = false;
          percentile_ = 0F;
          fantasyPeriod_ = -1;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.leagueId_ = leagueId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.deprecatedTimestamp_ = deprecatedTimestamp_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.result_ = result_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            playerCardItemId_.makeImmutable();
            result.playerCardItemId_ = playerCardItemId_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.score_ = score_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.finalized_ = finalized_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.percentile_ = percentile_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.fantasyPeriod_ = fantasyPeriod_;
            to_bitField0_ |= 0x00000040;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.getDefaultInstance()) return this;
          if (other.hasLeagueId()) {
            setLeagueId(other.getLeagueId());
          }
          if (other.hasDeprecatedTimestamp()) {
            setDeprecatedTimestamp(other.getDeprecatedTimestamp());
          }
          if (other.hasResult()) {
            setResult(other.getResult());
          }
          if (!other.playerCardItemId_.isEmpty()) {
            if (playerCardItemId_.isEmpty()) {
              playerCardItemId_ = other.playerCardItemId_;
              playerCardItemId_.makeImmutable();
              bitField0_ |= 0x00000008;
            } else {
              ensurePlayerCardItemIdIsMutable();
              playerCardItemId_.addAll(other.playerCardItemId_);
            }
            onChanged();
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          if (other.hasFinalized()) {
            setFinalized(other.getFinalized());
          }
          if (other.hasPercentile()) {
            setPercentile(other.getPercentile());
          }
          if (other.hasFantasyPeriod()) {
            setFantasyPeriod(other.getFantasyPeriod());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  leagueId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  deprecatedTimestamp_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result tmpValue =
                      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(3, tmpRaw);
                  } else {
                    result_ = tmpRaw;
                    bitField0_ |= 0x00000004;
                  }
                  break;
                } // case 24
                case 32: {
                  long v = input.readUInt64();
                  ensurePlayerCardItemIdIsMutable();
                  playerCardItemId_.addLong(v);
                  break;
                } // case 32
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensurePlayerCardItemIdIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    playerCardItemId_.addLong(input.readUInt64());
                  }
                  input.popLimit(limit);
                  break;
                } // case 34
                case 45: {
                  score_ = input.readFloat();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 45
                case 48: {
                  finalized_ = input.readBool();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 61: {
                  percentile_ = input.readFloat();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 61
                case 64: {
                  fantasyPeriod_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int leagueId_ ;
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return Whether the leagueId field is set.
         */
        @java.lang.Override
        public boolean hasLeagueId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return The leagueId.
         */
        @java.lang.Override
        public int getLeagueId() {
          return leagueId_;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @param value The leagueId to set.
         * @return This builder for chaining.
         */
        public Builder setLeagueId(int value) {

          leagueId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          leagueId_ = 0;
          onChanged();
          return this;
        }

        private int deprecatedTimestamp_ ;
        /**
         * <code>optional uint32 deprecated_timestamp = 2;</code>
         * @return Whether the deprecatedTimestamp field is set.
         */
        @java.lang.Override
        public boolean hasDeprecatedTimestamp() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 deprecated_timestamp = 2;</code>
         * @return The deprecatedTimestamp.
         */
        @java.lang.Override
        public int getDeprecatedTimestamp() {
          return deprecatedTimestamp_;
        }
        /**
         * <code>optional uint32 deprecated_timestamp = 2;</code>
         * @param value The deprecatedTimestamp to set.
         * @return This builder for chaining.
         */
        public Builder setDeprecatedTimestamp(int value) {

          deprecatedTimestamp_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 deprecated_timestamp = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDeprecatedTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deprecatedTimestamp_ = 0;
          onChanged();
          return this;
        }

        private int result_ = 0;
        /**
         * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
         * @return Whether the result field is set.
         */
        @java.lang.Override public boolean hasResult() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
         * @return The result.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result getResult() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result.forNumber(result_);
          return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result.SUCCESS : result;
        }
        /**
         * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
         * @param value The result to set.
         * @return This builder for chaining.
         */
        public Builder setResult(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Result value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          result_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgClientToGCBatchGetPlayerCardRosterResponse.Result result = 3 [default = SUCCESS];</code>
         * @return This builder for chaining.
         */
        public Builder clearResult() {
          bitField0_ = (bitField0_ & ~0x00000004);
          result_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.LongList playerCardItemId_ = emptyLongList();
        private void ensurePlayerCardItemIdIsMutable() {
          if (!playerCardItemId_.isModifiable()) {
            playerCardItemId_ = makeMutableCopy(playerCardItemId_);
          }
          bitField0_ |= 0x00000008;
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @return A list containing the playerCardItemId.
         */
        public java.util.List<java.lang.Long>
            getPlayerCardItemIdList() {
          playerCardItemId_.makeImmutable();
          return playerCardItemId_;
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @return The count of playerCardItemId.
         */
        public int getPlayerCardItemIdCount() {
          return playerCardItemId_.size();
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @param index The index of the element to return.
         * @return The playerCardItemId at the given index.
         */
        public long getPlayerCardItemId(int index) {
          return playerCardItemId_.getLong(index);
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @param index The index to set the value at.
         * @param value The playerCardItemId to set.
         * @return This builder for chaining.
         */
        public Builder setPlayerCardItemId(
            int index, long value) {

          ensurePlayerCardItemIdIsMutable();
          playerCardItemId_.setLong(index, value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @param value The playerCardItemId to add.
         * @return This builder for chaining.
         */
        public Builder addPlayerCardItemId(long value) {

          ensurePlayerCardItemIdIsMutable();
          playerCardItemId_.addLong(value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @param values The playerCardItemId to add.
         * @return This builder for chaining.
         */
        public Builder addAllPlayerCardItemId(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensurePlayerCardItemIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerCardItemId_);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint64 player_card_item_id = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayerCardItemId() {
          playerCardItemId_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 5;</code>
         * @return Whether the score field is set.
         */
        @java.lang.Override
        public boolean hasScore() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float score = 5;</code>
         * @return The score.
         */
        @java.lang.Override
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 5;</code>
         * @param value The score to set.
         * @return This builder for chaining.
         */
        public Builder setScore(float value) {

          score_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000010);
          score_ = 0F;
          onChanged();
          return this;
        }

        private boolean finalized_ ;
        /**
         * <code>optional bool finalized = 6;</code>
         * @return Whether the finalized field is set.
         */
        @java.lang.Override
        public boolean hasFinalized() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional bool finalized = 6;</code>
         * @return The finalized.
         */
        @java.lang.Override
        public boolean getFinalized() {
          return finalized_;
        }
        /**
         * <code>optional bool finalized = 6;</code>
         * @param value The finalized to set.
         * @return This builder for chaining.
         */
        public Builder setFinalized(boolean value) {

          finalized_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool finalized = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFinalized() {
          bitField0_ = (bitField0_ & ~0x00000020);
          finalized_ = false;
          onChanged();
          return this;
        }

        private float percentile_ ;
        /**
         * <code>optional float percentile = 7;</code>
         * @return Whether the percentile field is set.
         */
        @java.lang.Override
        public boolean hasPercentile() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional float percentile = 7;</code>
         * @return The percentile.
         */
        @java.lang.Override
        public float getPercentile() {
          return percentile_;
        }
        /**
         * <code>optional float percentile = 7;</code>
         * @param value The percentile to set.
         * @return This builder for chaining.
         */
        public Builder setPercentile(float value) {

          percentile_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional float percentile = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearPercentile() {
          bitField0_ = (bitField0_ & ~0x00000040);
          percentile_ = 0F;
          onChanged();
          return this;
        }

        private int fantasyPeriod_ = -1;
        /**
         * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
         * @return Whether the fantasyPeriod field is set.
         */
        @java.lang.Override
        public boolean hasFantasyPeriod() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
         * @return The fantasyPeriod.
         */
        @java.lang.Override
        public int getFantasyPeriod() {
          return fantasyPeriod_;
        }
        /**
         * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
         * @param value The fantasyPeriod to set.
         * @return This builder for chaining.
         */
        public Builder setFantasyPeriod(int value) {

          fantasyPeriod_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_period = 8 [default = 4294967295];</code>
         * @return This builder for chaining.
         */
        public Builder clearFantasyPeriod() {
          bitField0_ = (bitField0_ & ~0x00000080);
          fantasyPeriod_ = -1;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)
      }

      // @@protoc_insertion_point(class_scope:CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RosterResponse>
          PARSER = new com.google.protobuf.AbstractParser<RosterResponse>() {
        @java.lang.Override
        public RosterResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RosterResponse> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RosterResponse> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int RESPONSES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse> responses_;
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse> getResponsesList() {
      return responses_;
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder> 
        getResponsesOrBuilderList() {
      return responses_;
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    @java.lang.Override
    public int getResponsesCount() {
      return responses_.size();
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse getResponses(int index) {
      return responses_.get(index);
    }
    /**
     * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder getResponsesOrBuilder(
        int index) {
      return responses_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < responses_.size(); i++) {
        output.writeMessage(1, responses_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < responses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, responses_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse) obj;

      if (!getResponsesList()
          .equals(other.getResponsesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResponsesCount() > 0) {
        hash = (37 * hash) + RESPONSES_FIELD_NUMBER;
        hash = (53 * hash) + getResponsesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCBatchGetPlayerCardRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCBatchGetPlayerCardRosterResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (responsesBuilder_ == null) {
          responses_ = java.util.Collections.emptyList();
        } else {
          responses_ = null;
          responsesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse result) {
        if (responsesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            responses_ = java.util.Collections.unmodifiableList(responses_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.responses_ = responses_;
        } else {
          result.responses_ = responsesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.getDefaultInstance()) return this;
        if (responsesBuilder_ == null) {
          if (!other.responses_.isEmpty()) {
            if (responses_.isEmpty()) {
              responses_ = other.responses_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResponsesIsMutable();
              responses_.addAll(other.responses_);
            }
            onChanged();
          }
        } else {
          if (!other.responses_.isEmpty()) {
            if (responsesBuilder_.isEmpty()) {
              responsesBuilder_.dispose();
              responsesBuilder_ = null;
              responses_ = other.responses_;
              bitField0_ = (bitField0_ & ~0x00000001);
              responsesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResponsesFieldBuilder() : null;
            } else {
              responsesBuilder_.addAllMessages(other.responses_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.parser(),
                        extensionRegistry);
                if (responsesBuilder_ == null) {
                  ensureResponsesIsMutable();
                  responses_.add(m);
                } else {
                  responsesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse> responses_ =
        java.util.Collections.emptyList();
      private void ensureResponsesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          responses_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse>(responses_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder> responsesBuilder_;

      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse> getResponsesList() {
        if (responsesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(responses_);
        } else {
          return responsesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public int getResponsesCount() {
        if (responsesBuilder_ == null) {
          return responses_.size();
        } else {
          return responsesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse getResponses(int index) {
        if (responsesBuilder_ == null) {
          return responses_.get(index);
        } else {
          return responsesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder setResponses(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse value) {
        if (responsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResponsesIsMutable();
          responses_.set(index, value);
          onChanged();
        } else {
          responsesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder setResponses(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder builderForValue) {
        if (responsesBuilder_ == null) {
          ensureResponsesIsMutable();
          responses_.set(index, builderForValue.build());
          onChanged();
        } else {
          responsesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder addResponses(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse value) {
        if (responsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResponsesIsMutable();
          responses_.add(value);
          onChanged();
        } else {
          responsesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder addResponses(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse value) {
        if (responsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResponsesIsMutable();
          responses_.add(index, value);
          onChanged();
        } else {
          responsesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder addResponses(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder builderForValue) {
        if (responsesBuilder_ == null) {
          ensureResponsesIsMutable();
          responses_.add(builderForValue.build());
          onChanged();
        } else {
          responsesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder addResponses(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder builderForValue) {
        if (responsesBuilder_ == null) {
          ensureResponsesIsMutable();
          responses_.add(index, builderForValue.build());
          onChanged();
        } else {
          responsesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder addAllResponses(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse> values) {
        if (responsesBuilder_ == null) {
          ensureResponsesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, responses_);
          onChanged();
        } else {
          responsesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder clearResponses() {
        if (responsesBuilder_ == null) {
          responses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          responsesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public Builder removeResponses(int index) {
        if (responsesBuilder_ == null) {
          ensureResponsesIsMutable();
          responses_.remove(index);
          onChanged();
        } else {
          responsesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder getResponsesBuilder(
          int index) {
        return getResponsesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder getResponsesOrBuilder(
          int index) {
        if (responsesBuilder_ == null) {
          return responses_.get(index);  } else {
          return responsesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder> 
           getResponsesOrBuilderList() {
        if (responsesBuilder_ != null) {
          return responsesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(responses_);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder addResponsesBuilder() {
        return getResponsesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder addResponsesBuilder(
          int index) {
        return getResponsesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse responses = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder> 
           getResponsesBuilderList() {
        return getResponsesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder> 
          getResponsesFieldBuilder() {
        if (responsesBuilder_ == null) {
          responsesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponse.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse.RosterResponseOrBuilder>(
                  responses_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          responses_ = null;
        }
        return responsesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCBatchGetPlayerCardRosterResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCBatchGetPlayerCardRosterResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCBatchGetPlayerCardRosterResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCBatchGetPlayerCardRosterResponse>() {
      @java.lang.Override
      public CMsgClientToGCBatchGetPlayerCardRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCBatchGetPlayerCardRosterResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCBatchGetPlayerCardRosterResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCBatchGetPlayerCardRosterResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCSetPlayerCardRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCSetPlayerCardRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return Whether the leagueId field is set.
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return The leagueId.
     */
    int getLeagueId();

    /**
     * <code>optional uint32 deprecated_timestamp = 2;</code>
     * @return Whether the deprecatedTimestamp field is set.
     */
    boolean hasDeprecatedTimestamp();
    /**
     * <code>optional uint32 deprecated_timestamp = 2;</code>
     * @return The deprecatedTimestamp.
     */
    int getDeprecatedTimestamp();

    /**
     * <code>optional uint32 slot = 3;</code>
     * @return Whether the slot field is set.
     */
    boolean hasSlot();
    /**
     * <code>optional uint32 slot = 3;</code>
     * @return The slot.
     */
    int getSlot();

    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     * @return Whether the playerCardItemId field is set.
     */
    boolean hasPlayerCardItemId();
    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     * @return The playerCardItemId.
     */
    long getPlayerCardItemId();

    /**
     * <code>optional uint32 event_id = 5;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 5;</code>
     * @return The eventId.
     */
    int getEventId();

    /**
     * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    boolean hasFantasyPeriod();
    /**
     * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    int getFantasyPeriod();
  }
  /**
   * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterRequest}
   */
  public static final class CMsgClientToGCSetPlayerCardRosterRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCSetPlayerCardRosterRequest)
      CMsgClientToGCSetPlayerCardRosterRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCSetPlayerCardRosterRequest.class.getName());
    }
    // Use CMsgClientToGCSetPlayerCardRosterRequest.newBuilder() to construct.
    private CMsgClientToGCSetPlayerCardRosterRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCSetPlayerCardRosterRequest() {
      fantasyPeriod_ = -1;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_ = 0;
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return Whether the leagueId field is set.
     */
    @java.lang.Override
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     * @return The leagueId.
     */
    @java.lang.Override
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int DEPRECATED_TIMESTAMP_FIELD_NUMBER = 2;
    private int deprecatedTimestamp_ = 0;
    /**
     * <code>optional uint32 deprecated_timestamp = 2;</code>
     * @return Whether the deprecatedTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasDeprecatedTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 deprecated_timestamp = 2;</code>
     * @return The deprecatedTimestamp.
     */
    @java.lang.Override
    public int getDeprecatedTimestamp() {
      return deprecatedTimestamp_;
    }

    public static final int SLOT_FIELD_NUMBER = 3;
    private int slot_ = 0;
    /**
     * <code>optional uint32 slot = 3;</code>
     * @return Whether the slot field is set.
     */
    @java.lang.Override
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 slot = 3;</code>
     * @return The slot.
     */
    @java.lang.Override
    public int getSlot() {
      return slot_;
    }

    public static final int PLAYER_CARD_ITEM_ID_FIELD_NUMBER = 4;
    private long playerCardItemId_ = 0L;
    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     * @return Whether the playerCardItemId field is set.
     */
    @java.lang.Override
    public boolean hasPlayerCardItemId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     * @return The playerCardItemId.
     */
    @java.lang.Override
    public long getPlayerCardItemId() {
      return playerCardItemId_;
    }

    public static final int EVENT_ID_FIELD_NUMBER = 5;
    private int eventId_ = 0;
    /**
     * <code>optional uint32 event_id = 5;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 event_id = 5;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public int getEventId() {
      return eventId_;
    }

    public static final int FANTASY_PERIOD_FIELD_NUMBER = 6;
    private int fantasyPeriod_ = -1;
    /**
     * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    @java.lang.Override
    public boolean hasFantasyPeriod() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    @java.lang.Override
    public int getFantasyPeriod() {
      return fantasyPeriod_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, deprecatedTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, slot_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, playerCardItemId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, eventId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, fantasyPeriod_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, deprecatedTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, slot_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, playerCardItemId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, eventId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, fantasyPeriod_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest) obj;

      if (hasLeagueId() != other.hasLeagueId()) return false;
      if (hasLeagueId()) {
        if (getLeagueId()
            != other.getLeagueId()) return false;
      }
      if (hasDeprecatedTimestamp() != other.hasDeprecatedTimestamp()) return false;
      if (hasDeprecatedTimestamp()) {
        if (getDeprecatedTimestamp()
            != other.getDeprecatedTimestamp()) return false;
      }
      if (hasSlot() != other.hasSlot()) return false;
      if (hasSlot()) {
        if (getSlot()
            != other.getSlot()) return false;
      }
      if (hasPlayerCardItemId() != other.hasPlayerCardItemId()) return false;
      if (hasPlayerCardItemId()) {
        if (getPlayerCardItemId()
            != other.getPlayerCardItemId()) return false;
      }
      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasFantasyPeriod() != other.hasFantasyPeriod()) return false;
      if (hasFantasyPeriod()) {
        if (getFantasyPeriod()
            != other.getFantasyPeriod()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (hasDeprecatedTimestamp()) {
        hash = (37 * hash) + DEPRECATED_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getDeprecatedTimestamp();
      }
      if (hasSlot()) {
        hash = (37 * hash) + SLOT_FIELD_NUMBER;
        hash = (53 * hash) + getSlot();
      }
      if (hasPlayerCardItemId()) {
        hash = (37 * hash) + PLAYER_CARD_ITEM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPlayerCardItemId());
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEventId();
      }
      if (hasFantasyPeriod()) {
        hash = (37 * hash) + FANTASY_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyPeriod();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCSetPlayerCardRosterRequest)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        leagueId_ = 0;
        deprecatedTimestamp_ = 0;
        slot_ = 0;
        playerCardItemId_ = 0L;
        eventId_ = 0;
        fantasyPeriod_ = -1;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.leagueId_ = leagueId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.deprecatedTimestamp_ = deprecatedTimestamp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.slot_ = slot_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.playerCardItemId_ = playerCardItemId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.fantasyPeriod_ = fantasyPeriod_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasDeprecatedTimestamp()) {
          setDeprecatedTimestamp(other.getDeprecatedTimestamp());
        }
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPlayerCardItemId()) {
          setPlayerCardItemId(other.getPlayerCardItemId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasFantasyPeriod()) {
          setFantasyPeriod(other.getFantasyPeriod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                leagueId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                deprecatedTimestamp_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                slot_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                playerCardItemId_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                eventId_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                fantasyPeriod_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @param value The leagueId to set.
       * @return This builder for chaining.
       */
      public Builder setLeagueId(int value) {

        leagueId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int deprecatedTimestamp_ ;
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return Whether the deprecatedTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasDeprecatedTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return The deprecatedTimestamp.
       */
      @java.lang.Override
      public int getDeprecatedTimestamp() {
        return deprecatedTimestamp_;
      }
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @param value The deprecatedTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setDeprecatedTimestamp(int value) {

        deprecatedTimestamp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 deprecated_timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeprecatedTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deprecatedTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int slot_ ;
      /**
       * <code>optional uint32 slot = 3;</code>
       * @return Whether the slot field is set.
       */
      @java.lang.Override
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 slot = 3;</code>
       * @return The slot.
       */
      @java.lang.Override
      public int getSlot() {
        return slot_;
      }
      /**
       * <code>optional uint32 slot = 3;</code>
       * @param value The slot to set.
       * @return This builder for chaining.
       */
      public Builder setSlot(int value) {

        slot_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000004);
        slot_ = 0;
        onChanged();
        return this;
      }

      private long playerCardItemId_ ;
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       * @return Whether the playerCardItemId field is set.
       */
      @java.lang.Override
      public boolean hasPlayerCardItemId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       * @return The playerCardItemId.
       */
      @java.lang.Override
      public long getPlayerCardItemId() {
        return playerCardItemId_;
      }
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       * @param value The playerCardItemId to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerCardItemId(long value) {

        playerCardItemId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerCardItemId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerCardItemId_ = 0L;
        onChanged();
        return this;
      }

      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 5;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 event_id = 5;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 5;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(int value) {

        eventId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyPeriod_ = -1;
      /**
       * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      @java.lang.Override
      public boolean hasFantasyPeriod() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      @java.lang.Override
      public int getFantasyPeriod() {
        return fantasyPeriod_;
      }
      /**
       * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
       * @param value The fantasyPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyPeriod(int value) {

        fantasyPeriod_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_period = 6 [default = 4294967295];</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyPeriod() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fantasyPeriod_ = -1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCSetPlayerCardRosterRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCSetPlayerCardRosterRequest)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCSetPlayerCardRosterRequest>() {
      @java.lang.Override
      public CMsgClientToGCSetPlayerCardRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCSetPlayerCardRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCSetPlayerCardRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result getResult();
  }
  /**
   * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterResponse}
   */
  public static final class CMsgClientToGCSetPlayerCardRosterResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCSetPlayerCardRosterResponse)
      CMsgClientToGCSetPlayerCardRosterResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCSetPlayerCardRosterResponse.class.getName());
    }
    // Use CMsgClientToGCSetPlayerCardRosterResponse.newBuilder() to construct.
    private CMsgClientToGCSetPlayerCardRosterResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCSetPlayerCardRosterResponse() {
      result_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCSetPlayerCardRosterResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      ERROR_INVALID_LEAGUE_ID(2),
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      ERROR_INVALID_TIMESTAMP(3),
      /**
       * <code>ERROR_PLAYER_CARD_NOT_OWNED = 4;</code>
       */
      ERROR_PLAYER_CARD_NOT_OWNED(4),
      /**
       * <code>ERROR_INVALID_SLOT = 5;</code>
       */
      ERROR_INVALID_SLOT(5),
      /**
       * <code>ERROR_FAILED_CARD_INFO = 6;</code>
       */
      ERROR_FAILED_CARD_INFO(6),
      /**
       * <code>ERROR_ACCOUNT_DUPLICATE = 7;</code>
       */
      ERROR_ACCOUNT_DUPLICATE(7),
      /**
       * <code>ERROR_LOCKED_TIMESTAMP = 8;</code>
       */
      ERROR_LOCKED_TIMESTAMP(8),
      /**
       * <code>ERROR_INVALID_LEAGUE_FOR_PERIOD = 9;</code>
       */
      ERROR_INVALID_LEAGUE_FOR_PERIOD(9),
      /**
       * <code>ERROR_INVALID_EVENT = 10;</code>
       */
      ERROR_INVALID_EVENT(10),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Result.class.getName());
      }
      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_INVALID_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      public static final int ERROR_INVALID_TIMESTAMP_VALUE = 3;
      /**
       * <code>ERROR_PLAYER_CARD_NOT_OWNED = 4;</code>
       */
      public static final int ERROR_PLAYER_CARD_NOT_OWNED_VALUE = 4;
      /**
       * <code>ERROR_INVALID_SLOT = 5;</code>
       */
      public static final int ERROR_INVALID_SLOT_VALUE = 5;
      /**
       * <code>ERROR_FAILED_CARD_INFO = 6;</code>
       */
      public static final int ERROR_FAILED_CARD_INFO_VALUE = 6;
      /**
       * <code>ERROR_ACCOUNT_DUPLICATE = 7;</code>
       */
      public static final int ERROR_ACCOUNT_DUPLICATE_VALUE = 7;
      /**
       * <code>ERROR_LOCKED_TIMESTAMP = 8;</code>
       */
      public static final int ERROR_LOCKED_TIMESTAMP_VALUE = 8;
      /**
       * <code>ERROR_INVALID_LEAGUE_FOR_PERIOD = 9;</code>
       */
      public static final int ERROR_INVALID_LEAGUE_FOR_PERIOD_VALUE = 9;
      /**
       * <code>ERROR_INVALID_EVENT = 10;</code>
       */
      public static final int ERROR_INVALID_EVENT_VALUE = 10;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Result forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_LEAGUE_ID;
          case 3: return ERROR_INVALID_TIMESTAMP;
          case 4: return ERROR_PLAYER_CARD_NOT_OWNED;
          case 5: return ERROR_INVALID_SLOT;
          case 6: return ERROR_FAILED_CARD_INFO;
          case 7: return ERROR_ACCOUNT_DUPLICATE;
          case 8: return ERROR_LOCKED_TIMESTAMP;
          case 9: return ERROR_INVALID_LEAGUE_FOR_PERIOD;
          case 10: return ERROR_INVALID_EVENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCSetPlayerCardRosterResponse.Result)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result getResult() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCSetPlayerCardRosterResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result getResult() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCSetPlayerCardRosterResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCSetPlayerCardRosterResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCSetPlayerCardRosterResponse>() {
      @java.lang.Override
      public CMsgClientToGCSetPlayerCardRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyDPCLeagueStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyDPCLeagueStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo> 
        getLeagueInfosList();
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo getLeagueInfos(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    int getLeagueInfosCount();
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder> 
        getLeagueInfosOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder getLeagueInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyDPCLeagueStatus}
   */
  public static final class CMsgDOTAFantasyDPCLeagueStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyDPCLeagueStatus)
      CMsgDOTAFantasyDPCLeagueStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAFantasyDPCLeagueStatus.class.getName());
    }
    // Use CMsgDOTAFantasyDPCLeagueStatus.newBuilder() to construct.
    private CMsgDOTAFantasyDPCLeagueStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyDPCLeagueStatus() {
      leagueInfos_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus}
     */
    public enum ERosterStatus
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <code>PARTIAL = 1;</code>
       */
      PARTIAL(1),
      /**
       * <code>FULL = 2;</code>
       */
      FULL(2),
      /**
       * <code>CONCLUDED = 3;</code>
       */
      CONCLUDED(3),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          ERosterStatus.class.getName());
      }
      /**
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <code>PARTIAL = 1;</code>
       */
      public static final int PARTIAL_VALUE = 1;
      /**
       * <code>FULL = 2;</code>
       */
      public static final int FULL_VALUE = 2;
      /**
       * <code>CONCLUDED = 3;</code>
       */
      public static final int CONCLUDED_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ERosterStatus valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ERosterStatus forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return PARTIAL;
          case 2: return FULL;
          case 3: return CONCLUDED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ERosterStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ERosterStatus> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ERosterStatus>() {
              public ERosterStatus findValueByNumber(int number) {
                return ERosterStatus.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.getDescriptor().getEnumTypes().get(0);
      }

      private static final ERosterStatus[] VALUES = values();

      public static ERosterStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ERosterStatus(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus)
    }

    public interface LeagueInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      boolean hasLeagueId();
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      int getLeagueId();

      /**
       * <code>optional string league_name = 2;</code>
       * @return Whether the leagueName field is set.
       */
      boolean hasLeagueName();
      /**
       * <code>optional string league_name = 2;</code>
       * @return The leagueName.
       */
      java.lang.String getLeagueName();
      /**
       * <code>optional string league_name = 2;</code>
       * @return The bytes for leagueName.
       */
      com.google.protobuf.ByteString
          getLeagueNameBytes();

      /**
       * <code>optional uint32 start_timestamp = 3;</code>
       * @return Whether the startTimestamp field is set.
       */
      boolean hasStartTimestamp();
      /**
       * <code>optional uint32 start_timestamp = 3;</code>
       * @return The startTimestamp.
       */
      int getStartTimestamp();

      /**
       * <code>optional uint32 end_timestamp = 4;</code>
       * @return Whether the endTimestamp field is set.
       */
      boolean hasEndTimestamp();
      /**
       * <code>optional uint32 end_timestamp = 4;</code>
       * @return The endTimestamp.
       */
      int getEndTimestamp();

      /**
       * <code>repeated uint32 day_timestamps = 5;</code>
       * @return A list containing the dayTimestamps.
       */
      java.util.List<java.lang.Integer> getDayTimestampsList();
      /**
       * <code>repeated uint32 day_timestamps = 5;</code>
       * @return The count of dayTimestamps.
       */
      int getDayTimestampsCount();
      /**
       * <code>repeated uint32 day_timestamps = 5;</code>
       * @param index The index of the element to return.
       * @return The dayTimestamps at the given index.
       */
      int getDayTimestamps(int index);

      /**
       * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
       * @return Whether the status field is set.
       */
      boolean hasStatus();
      /**
       * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
       * @return The status.
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus getStatus();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo}
     */
    public static final class LeagueInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)
        LeagueInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          LeagueInfo.class.getName());
      }
      // Use LeagueInfo.newBuilder() to construct.
      private LeagueInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private LeagueInfo() {
        leagueName_ = "";
        dayTimestamps_ = emptyIntList();
        status_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder.class);
      }

      private int bitField0_;
      public static final int LEAGUE_ID_FIELD_NUMBER = 1;
      private int leagueId_ = 0;
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return Whether the leagueId field is set.
       */
      @java.lang.Override
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       * @return The leagueId.
       */
      @java.lang.Override
      public int getLeagueId() {
        return leagueId_;
      }

      public static final int LEAGUE_NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object leagueName_ = "";
      /**
       * <code>optional string league_name = 2;</code>
       * @return Whether the leagueName field is set.
       */
      @java.lang.Override
      public boolean hasLeagueName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string league_name = 2;</code>
       * @return The leagueName.
       */
      @java.lang.Override
      public java.lang.String getLeagueName() {
        java.lang.Object ref = leagueName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            leagueName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string league_name = 2;</code>
       * @return The bytes for leagueName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLeagueNameBytes() {
        java.lang.Object ref = leagueName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          leagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int START_TIMESTAMP_FIELD_NUMBER = 3;
      private int startTimestamp_ = 0;
      /**
       * <code>optional uint32 start_timestamp = 3;</code>
       * @return Whether the startTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 start_timestamp = 3;</code>
       * @return The startTimestamp.
       */
      @java.lang.Override
      public int getStartTimestamp() {
        return startTimestamp_;
      }

      public static final int END_TIMESTAMP_FIELD_NUMBER = 4;
      private int endTimestamp_ = 0;
      /**
       * <code>optional uint32 end_timestamp = 4;</code>
       * @return Whether the endTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 end_timestamp = 4;</code>
       * @return The endTimestamp.
       */
      @java.lang.Override
      public int getEndTimestamp() {
        return endTimestamp_;
      }

      public static final int DAY_TIMESTAMPS_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList dayTimestamps_ =
          emptyIntList();
      /**
       * <code>repeated uint32 day_timestamps = 5;</code>
       * @return A list containing the dayTimestamps.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getDayTimestampsList() {
        return dayTimestamps_;
      }
      /**
       * <code>repeated uint32 day_timestamps = 5;</code>
       * @return The count of dayTimestamps.
       */
      public int getDayTimestampsCount() {
        return dayTimestamps_.size();
      }
      /**
       * <code>repeated uint32 day_timestamps = 5;</code>
       * @param index The index of the element to return.
       * @return The dayTimestamps at the given index.
       */
      public int getDayTimestamps(int index) {
        return dayTimestamps_.getInt(index);
      }

      public static final int STATUS_FIELD_NUMBER = 8;
      private int status_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
       * @return The status.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus getStatus() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus.forNumber(status_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus.UNSET : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, leagueName_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, startTimestamp_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, endTimestamp_);
        }
        for (int i = 0; i < dayTimestamps_.size(); i++) {
          output.writeUInt32(5, dayTimestamps_.getInt(i));
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeEnum(8, status_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, leagueId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, leagueName_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, startTimestamp_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, endTimestamp_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < dayTimestamps_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(dayTimestamps_.getInt(i));
          }
          size += dataSize;
          size += 1 * getDayTimestampsList().size();
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, status_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo) obj;

        if (hasLeagueId() != other.hasLeagueId()) return false;
        if (hasLeagueId()) {
          if (getLeagueId()
              != other.getLeagueId()) return false;
        }
        if (hasLeagueName() != other.hasLeagueName()) return false;
        if (hasLeagueName()) {
          if (!getLeagueName()
              .equals(other.getLeagueName())) return false;
        }
        if (hasStartTimestamp() != other.hasStartTimestamp()) return false;
        if (hasStartTimestamp()) {
          if (getStartTimestamp()
              != other.getStartTimestamp()) return false;
        }
        if (hasEndTimestamp() != other.hasEndTimestamp()) return false;
        if (hasEndTimestamp()) {
          if (getEndTimestamp()
              != other.getEndTimestamp()) return false;
        }
        if (!getDayTimestampsList()
            .equals(other.getDayTimestampsList())) return false;
        if (hasStatus() != other.hasStatus()) return false;
        if (hasStatus()) {
          if (status_ != other.status_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLeagueId()) {
          hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueId();
        }
        if (hasLeagueName()) {
          hash = (37 * hash) + LEAGUE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueName().hashCode();
        }
        if (hasStartTimestamp()) {
          hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getStartTimestamp();
        }
        if (hasEndTimestamp()) {
          hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getEndTimestamp();
        }
        if (getDayTimestampsCount() > 0) {
          hash = (37 * hash) + DAY_TIMESTAMPS_FIELD_NUMBER;
          hash = (53 * hash) + getDayTimestampsList().hashCode();
        }
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + status_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          leagueId_ = 0;
          leagueName_ = "";
          startTimestamp_ = 0;
          endTimestamp_ = 0;
          dayTimestamps_ = emptyIntList();
          status_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.leagueId_ = leagueId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.leagueName_ = leagueName_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.startTimestamp_ = startTimestamp_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.endTimestamp_ = endTimestamp_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            dayTimestamps_.makeImmutable();
            result.dayTimestamps_ = dayTimestamps_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.status_ = status_;
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.getDefaultInstance()) return this;
          if (other.hasLeagueId()) {
            setLeagueId(other.getLeagueId());
          }
          if (other.hasLeagueName()) {
            leagueName_ = other.leagueName_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.hasStartTimestamp()) {
            setStartTimestamp(other.getStartTimestamp());
          }
          if (other.hasEndTimestamp()) {
            setEndTimestamp(other.getEndTimestamp());
          }
          if (!other.dayTimestamps_.isEmpty()) {
            if (dayTimestamps_.isEmpty()) {
              dayTimestamps_ = other.dayTimestamps_;
              dayTimestamps_.makeImmutable();
              bitField0_ |= 0x00000010;
            } else {
              ensureDayTimestampsIsMutable();
              dayTimestamps_.addAll(other.dayTimestamps_);
            }
            onChanged();
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  leagueId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  leagueName_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  startTimestamp_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  endTimestamp_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  int v = input.readUInt32();
                  ensureDayTimestampsIsMutable();
                  dayTimestamps_.addInt(v);
                  break;
                } // case 40
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureDayTimestampsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    dayTimestamps_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 42
                case 64: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus tmpValue =
                      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(8, tmpRaw);
                  } else {
                    status_ = tmpRaw;
                    bitField0_ |= 0x00000020;
                  }
                  break;
                } // case 64
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int leagueId_ ;
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return Whether the leagueId field is set.
         */
        @java.lang.Override
        public boolean hasLeagueId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return The leagueId.
         */
        @java.lang.Override
        public int getLeagueId() {
          return leagueId_;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @param value The leagueId to set.
         * @return This builder for chaining.
         */
        public Builder setLeagueId(int value) {

          leagueId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          leagueId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object leagueName_ = "";
        /**
         * <code>optional string league_name = 2;</code>
         * @return Whether the leagueName field is set.
         */
        public boolean hasLeagueName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string league_name = 2;</code>
         * @return The leagueName.
         */
        public java.lang.String getLeagueName() {
          java.lang.Object ref = leagueName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              leagueName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string league_name = 2;</code>
         * @return The bytes for leagueName.
         */
        public com.google.protobuf.ByteString
            getLeagueNameBytes() {
          java.lang.Object ref = leagueName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            leagueName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string league_name = 2;</code>
         * @param value The leagueName to set.
         * @return This builder for chaining.
         */
        public Builder setLeagueName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          leagueName_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string league_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLeagueName() {
          leagueName_ = getDefaultInstance().getLeagueName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string league_name = 2;</code>
         * @param value The bytes for leagueName to set.
         * @return This builder for chaining.
         */
        public Builder setLeagueNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          leagueName_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private int startTimestamp_ ;
        /**
         * <code>optional uint32 start_timestamp = 3;</code>
         * @return Whether the startTimestamp field is set.
         */
        @java.lang.Override
        public boolean hasStartTimestamp() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 start_timestamp = 3;</code>
         * @return The startTimestamp.
         */
        @java.lang.Override
        public int getStartTimestamp() {
          return startTimestamp_;
        }
        /**
         * <code>optional uint32 start_timestamp = 3;</code>
         * @param value The startTimestamp to set.
         * @return This builder for chaining.
         */
        public Builder setStartTimestamp(int value) {

          startTimestamp_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_timestamp = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000004);
          startTimestamp_ = 0;
          onChanged();
          return this;
        }

        private int endTimestamp_ ;
        /**
         * <code>optional uint32 end_timestamp = 4;</code>
         * @return Whether the endTimestamp field is set.
         */
        @java.lang.Override
        public boolean hasEndTimestamp() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 end_timestamp = 4;</code>
         * @return The endTimestamp.
         */
        @java.lang.Override
        public int getEndTimestamp() {
          return endTimestamp_;
        }
        /**
         * <code>optional uint32 end_timestamp = 4;</code>
         * @param value The endTimestamp to set.
         * @return This builder for chaining.
         */
        public Builder setEndTimestamp(int value) {

          endTimestamp_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 end_timestamp = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearEndTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000008);
          endTimestamp_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList dayTimestamps_ = emptyIntList();
        private void ensureDayTimestampsIsMutable() {
          if (!dayTimestamps_.isModifiable()) {
            dayTimestamps_ = makeMutableCopy(dayTimestamps_);
          }
          bitField0_ |= 0x00000010;
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @return A list containing the dayTimestamps.
         */
        public java.util.List<java.lang.Integer>
            getDayTimestampsList() {
          dayTimestamps_.makeImmutable();
          return dayTimestamps_;
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @return The count of dayTimestamps.
         */
        public int getDayTimestampsCount() {
          return dayTimestamps_.size();
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @param index The index of the element to return.
         * @return The dayTimestamps at the given index.
         */
        public int getDayTimestamps(int index) {
          return dayTimestamps_.getInt(index);
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @param index The index to set the value at.
         * @param value The dayTimestamps to set.
         * @return This builder for chaining.
         */
        public Builder setDayTimestamps(
            int index, int value) {

          ensureDayTimestampsIsMutable();
          dayTimestamps_.setInt(index, value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @param value The dayTimestamps to add.
         * @return This builder for chaining.
         */
        public Builder addDayTimestamps(int value) {

          ensureDayTimestampsIsMutable();
          dayTimestamps_.addInt(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @param values The dayTimestamps to add.
         * @return This builder for chaining.
         */
        public Builder addAllDayTimestamps(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureDayTimestampsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dayTimestamps_);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 day_timestamps = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearDayTimestamps() {
          dayTimestamps_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private int status_ = 0;
        /**
         * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
         * @return Whether the status field is set.
         */
        @java.lang.Override public boolean hasStatus() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
         * @return The status.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus getStatus() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus.forNumber(status_);
          return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus.UNSET : result;
        }
        /**
         * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
         * @param value The status to set.
         * @return This builder for chaining.
         */
        public Builder setStatus(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          status_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyDPCLeagueStatus.ERosterStatus status = 8 [default = UNSET];</code>
         * @return This builder for chaining.
         */
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000020);
          status_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LeagueInfo>
          PARSER = new com.google.protobuf.AbstractParser<LeagueInfo>() {
        @java.lang.Override
        public LeagueInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LeagueInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LeagueInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LEAGUE_INFOS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo> leagueInfos_;
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo> getLeagueInfosList() {
      return leagueInfos_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder> 
        getLeagueInfosOrBuilderList() {
      return leagueInfos_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    @java.lang.Override
    public int getLeagueInfosCount() {
      return leagueInfos_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo getLeagueInfos(int index) {
      return leagueInfos_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder getLeagueInfosOrBuilder(
        int index) {
      return leagueInfos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < leagueInfos_.size(); i++) {
        output.writeMessage(1, leagueInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < leagueInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, leagueInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus) obj;

      if (!getLeagueInfosList()
          .equals(other.getLeagueInfosList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLeagueInfosCount() > 0) {
        hash = (37 * hash) + LEAGUE_INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueInfosList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyDPCLeagueStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyDPCLeagueStatus)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (leagueInfosBuilder_ == null) {
          leagueInfos_ = java.util.Collections.emptyList();
        } else {
          leagueInfos_ = null;
          leagueInfosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus result) {
        if (leagueInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            leagueInfos_ = java.util.Collections.unmodifiableList(leagueInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.leagueInfos_ = leagueInfos_;
        } else {
          result.leagueInfos_ = leagueInfosBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.getDefaultInstance()) return this;
        if (leagueInfosBuilder_ == null) {
          if (!other.leagueInfos_.isEmpty()) {
            if (leagueInfos_.isEmpty()) {
              leagueInfos_ = other.leagueInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLeagueInfosIsMutable();
              leagueInfos_.addAll(other.leagueInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.leagueInfos_.isEmpty()) {
            if (leagueInfosBuilder_.isEmpty()) {
              leagueInfosBuilder_.dispose();
              leagueInfosBuilder_ = null;
              leagueInfos_ = other.leagueInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              leagueInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeagueInfosFieldBuilder() : null;
            } else {
              leagueInfosBuilder_.addAllMessages(other.leagueInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.parser(),
                        extensionRegistry);
                if (leagueInfosBuilder_ == null) {
                  ensureLeagueInfosIsMutable();
                  leagueInfos_.add(m);
                } else {
                  leagueInfosBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo> leagueInfos_ =
        java.util.Collections.emptyList();
      private void ensureLeagueInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          leagueInfos_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo>(leagueInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder> leagueInfosBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo> getLeagueInfosList() {
        if (leagueInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leagueInfos_);
        } else {
          return leagueInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public int getLeagueInfosCount() {
        if (leagueInfosBuilder_ == null) {
          return leagueInfos_.size();
        } else {
          return leagueInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo getLeagueInfos(int index) {
        if (leagueInfosBuilder_ == null) {
          return leagueInfos_.get(index);
        } else {
          return leagueInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder setLeagueInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo value) {
        if (leagueInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeagueInfosIsMutable();
          leagueInfos_.set(index, value);
          onChanged();
        } else {
          leagueInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder setLeagueInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder builderForValue) {
        if (leagueInfosBuilder_ == null) {
          ensureLeagueInfosIsMutable();
          leagueInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          leagueInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder addLeagueInfos(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo value) {
        if (leagueInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeagueInfosIsMutable();
          leagueInfos_.add(value);
          onChanged();
        } else {
          leagueInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder addLeagueInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo value) {
        if (leagueInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeagueInfosIsMutable();
          leagueInfos_.add(index, value);
          onChanged();
        } else {
          leagueInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder addLeagueInfos(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder builderForValue) {
        if (leagueInfosBuilder_ == null) {
          ensureLeagueInfosIsMutable();
          leagueInfos_.add(builderForValue.build());
          onChanged();
        } else {
          leagueInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder addLeagueInfos(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder builderForValue) {
        if (leagueInfosBuilder_ == null) {
          ensureLeagueInfosIsMutable();
          leagueInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          leagueInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder addAllLeagueInfos(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo> values) {
        if (leagueInfosBuilder_ == null) {
          ensureLeagueInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leagueInfos_);
          onChanged();
        } else {
          leagueInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder clearLeagueInfos() {
        if (leagueInfosBuilder_ == null) {
          leagueInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          leagueInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public Builder removeLeagueInfos(int index) {
        if (leagueInfosBuilder_ == null) {
          ensureLeagueInfosIsMutable();
          leagueInfos_.remove(index);
          onChanged();
        } else {
          leagueInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder getLeagueInfosBuilder(
          int index) {
        return getLeagueInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder getLeagueInfosOrBuilder(
          int index) {
        if (leagueInfosBuilder_ == null) {
          return leagueInfos_.get(index);  } else {
          return leagueInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder> 
           getLeagueInfosOrBuilderList() {
        if (leagueInfosBuilder_ != null) {
          return leagueInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leagueInfos_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder addLeagueInfosBuilder() {
        return getLeagueInfosFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder addLeagueInfosBuilder(
          int index) {
        return getLeagueInfosFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo league_infos = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder> 
           getLeagueInfosBuilderList() {
        return getLeagueInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder> 
          getLeagueInfosFieldBuilder() {
        if (leagueInfosBuilder_ == null) {
          leagueInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfo.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus.LeagueInfoOrBuilder>(
                  leagueInfos_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          leagueInfos_ = null;
        }
        return leagueInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyDPCLeagueStatus)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyDPCLeagueStatus)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAFantasyDPCLeagueStatus>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyDPCLeagueStatus>() {
      @java.lang.Override
      public CMsgDOTAFantasyDPCLeagueStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyDPCLeagueStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyDPCLeagueStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTAFantasyDPCLeagueStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTADPCSearchResultsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTADPCSearchResults)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player> 
        getPlayersList();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player getPlayers(int index);
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team> 
        getTeamsList();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team getTeams(int index);
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder getTeamsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League> 
        getLeaguesList();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League getLeagues(int index);
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    int getLeaguesCount();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder> 
        getLeaguesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder getLeaguesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTADPCSearchResults}
   */
  public static final class CMsgDOTADPCSearchResults extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTADPCSearchResults)
      CMsgDOTADPCSearchResultsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTADPCSearchResults.class.getName());
    }
    // Use CMsgDOTADPCSearchResults.newBuilder() to construct.
    private CMsgDOTADPCSearchResults(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTADPCSearchResults() {
      players_ = java.util.Collections.emptyList();
      teams_ = java.util.Collections.emptyList();
      leagues_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTADPCSearchResults.ESearchResultsDesired}
     */
    public enum ESearchResultsDesired
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_ESearchResultsDesired_Players = 1;</code>
       */
      k_ESearchResultsDesired_Players(1),
      /**
       * <code>k_ESearchResultsDesired_Teams = 2;</code>
       */
      k_ESearchResultsDesired_Teams(2),
      /**
       * <code>k_ESearchResultsDesired_Leagues = 4;</code>
       */
      k_ESearchResultsDesired_Leagues(4),
      /**
       * <code>k_ESearchResultsDesired_All = 7;</code>
       */
      k_ESearchResultsDesired_All(7),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          ESearchResultsDesired.class.getName());
      }
      /**
       * <code>k_ESearchResultsDesired_Players = 1;</code>
       */
      public static final int k_ESearchResultsDesired_Players_VALUE = 1;
      /**
       * <code>k_ESearchResultsDesired_Teams = 2;</code>
       */
      public static final int k_ESearchResultsDesired_Teams_VALUE = 2;
      /**
       * <code>k_ESearchResultsDesired_Leagues = 4;</code>
       */
      public static final int k_ESearchResultsDesired_Leagues_VALUE = 4;
      /**
       * <code>k_ESearchResultsDesired_All = 7;</code>
       */
      public static final int k_ESearchResultsDesired_All_VALUE = 7;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ESearchResultsDesired valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ESearchResultsDesired forNumber(int value) {
        switch (value) {
          case 1: return k_ESearchResultsDesired_Players;
          case 2: return k_ESearchResultsDesired_Teams;
          case 4: return k_ESearchResultsDesired_Leagues;
          case 7: return k_ESearchResultsDesired_All;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ESearchResultsDesired>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ESearchResultsDesired> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ESearchResultsDesired>() {
              public ESearchResultsDesired findValueByNumber(int number) {
                return ESearchResultsDesired.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.getDescriptor().getEnumTypes().get(0);
      }

      private static final ESearchResultsDesired[] VALUES = values();

      public static ESearchResultsDesired valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ESearchResultsDesired(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTADPCSearchResults.ESearchResultsDesired)
    }

    public interface PlayerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTADPCSearchResults.Player)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string real_name = 3;</code>
       * @return Whether the realName field is set.
       */
      boolean hasRealName();
      /**
       * <code>optional string real_name = 3;</code>
       * @return The realName.
       */
      java.lang.String getRealName();
      /**
       * <code>optional string real_name = 3;</code>
       * @return The bytes for realName.
       */
      com.google.protobuf.ByteString
          getRealNameBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTADPCSearchResults.Player}
     */
    public static final class Player extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTADPCSearchResults.Player)
        PlayerOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Player.class.getName());
      }
      // Use Player.newBuilder() to construct.
      private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Player() {
        name_ = "";
        realName_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Player_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_ = 0;
      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REAL_NAME_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object realName_ = "";
      /**
       * <code>optional string real_name = 3;</code>
       * @return Whether the realName field is set.
       */
      @java.lang.Override
      public boolean hasRealName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string real_name = 3;</code>
       * @return The realName.
       */
      @java.lang.Override
      public java.lang.String getRealName() {
        java.lang.Object ref = realName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            realName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string real_name = 3;</code>
       * @return The bytes for realName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRealNameBytes() {
        java.lang.Object ref = realName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          realName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 3, realName_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(3, realName_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (getId()
              != other.getId()) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasRealName() != other.hasRealName()) return false;
        if (hasRealName()) {
          if (!getRealName()
              .equals(other.getRealName())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasRealName()) {
          hash = (37 * hash) + REAL_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getRealName().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTADPCSearchResults.Player}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTADPCSearchResults.Player)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Player_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          id_ = 0;
          name_ = "";
          realName_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Player_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.realName_ = realName_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.hasRealName()) {
            realName_ = other.realName_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  realName_ = input.readBytes();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {

          id_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private java.lang.Object realName_ = "";
        /**
         * <code>optional string real_name = 3;</code>
         * @return Whether the realName field is set.
         */
        public boolean hasRealName() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string real_name = 3;</code>
         * @return The realName.
         */
        public java.lang.String getRealName() {
          java.lang.Object ref = realName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              realName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string real_name = 3;</code>
         * @return The bytes for realName.
         */
        public com.google.protobuf.ByteString
            getRealNameBytes() {
          java.lang.Object ref = realName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            realName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string real_name = 3;</code>
         * @param value The realName to set.
         * @return This builder for chaining.
         */
        public Builder setRealName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          realName_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional string real_name = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearRealName() {
          realName_ = getDefaultInstance().getRealName();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>optional string real_name = 3;</code>
         * @param value The bytes for realName to set.
         * @return This builder for chaining.
         */
        public Builder setRealNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          realName_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTADPCSearchResults.Player)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTADPCSearchResults.Player)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Player>
          PARSER = new com.google.protobuf.AbstractParser<Player>() {
        @java.lang.Override
        public Player parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Player> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Player> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTADPCSearchResults.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string url = 3;</code>
       * @return Whether the url field is set.
       */
      boolean hasUrl();
      /**
       * <code>optional string url = 3;</code>
       * @return The url.
       */
      java.lang.String getUrl();
      /**
       * <code>optional string url = 3;</code>
       * @return The bytes for url.
       */
      com.google.protobuf.ByteString
          getUrlBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTADPCSearchResults.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTADPCSearchResults.Team)
        TeamOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Team.class.getName());
      }
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Team() {
        name_ = "";
        url_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Team_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_ = 0;
      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int URL_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object url_ = "";
      /**
       * <code>optional string url = 3;</code>
       * @return Whether the url field is set.
       */
      @java.lang.Override
      public boolean hasUrl() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string url = 3;</code>
       * @return The url.
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        java.lang.Object ref = url_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            url_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string url = 3;</code>
       * @return The bytes for url.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrlBytes() {
        java.lang.Object ref = url_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 3, url_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(3, url_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (getId()
              != other.getId()) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasUrl() != other.hasUrl()) return false;
        if (hasUrl()) {
          if (!getUrl()
              .equals(other.getUrl())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasUrl()) {
          hash = (37 * hash) + URL_FIELD_NUMBER;
          hash = (53 * hash) + getUrl().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTADPCSearchResults.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTADPCSearchResults.Team)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Team_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          id_ = 0;
          name_ = "";
          url_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_Team_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.url_ = url_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.hasUrl()) {
            url_ = other.url_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  url_ = input.readBytes();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {

          id_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private java.lang.Object url_ = "";
        /**
         * <code>optional string url = 3;</code>
         * @return Whether the url field is set.
         */
        public boolean hasUrl() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string url = 3;</code>
         * @return The url.
         */
        public java.lang.String getUrl() {
          java.lang.Object ref = url_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              url_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string url = 3;</code>
         * @return The bytes for url.
         */
        public com.google.protobuf.ByteString
            getUrlBytes() {
          java.lang.Object ref = url_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            url_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string url = 3;</code>
         * @param value The url to set.
         * @return This builder for chaining.
         */
        public Builder setUrl(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          url_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional string url = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearUrl() {
          url_ = getDefaultInstance().getUrl();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>optional string url = 3;</code>
         * @param value The bytes for url to set.
         * @return This builder for chaining.
         */
        public Builder setUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          url_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTADPCSearchResults.Team)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTADPCSearchResults.Team)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Team>
          PARSER = new com.google.protobuf.AbstractParser<Team>() {
        @java.lang.Override
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Team> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LeagueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTADPCSearchResults.League)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTADPCSearchResults.League}
     */
    public static final class League extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTADPCSearchResults.League)
        LeagueOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          League.class.getName());
      }
      // Use League.newBuilder() to construct.
      private League(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private League() {
        name_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_League_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_League_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_ = 0;
      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (getId()
              != other.getId()) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTADPCSearchResults.League}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTADPCSearchResults.League)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_League_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_League_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          id_ = 0;
          name_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_League_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {

          id_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTADPCSearchResults.League)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTADPCSearchResults.League)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<League>
          PARSER = new com.google.protobuf.AbstractParser<League>() {
        @java.lang.Override
        public League parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<League> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<League> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PLAYERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player> players_;
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    @java.lang.Override
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    public static final int TEAMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team> teams_;
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    @java.lang.Override
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    public static final int LEAGUES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League> leagues_;
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League> getLeaguesList() {
      return leagues_;
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder> 
        getLeaguesOrBuilderList() {
      return leagues_;
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    @java.lang.Override
    public int getLeaguesCount() {
      return leagues_.size();
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League getLeagues(int index) {
      return leagues_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder getLeaguesOrBuilder(
        int index) {
      return leagues_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(1, players_.get(i));
      }
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(2, teams_.get(i));
      }
      for (int i = 0; i < leagues_.size(); i++) {
        output.writeMessage(3, leagues_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, players_.get(i));
      }
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, teams_.get(i));
      }
      for (int i = 0; i < leagues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, leagues_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults) obj;

      if (!getPlayersList()
          .equals(other.getPlayersList())) return false;
      if (!getTeamsList()
          .equals(other.getTeamsList())) return false;
      if (!getLeaguesList()
          .equals(other.getLeaguesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPlayersCount() > 0) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayersList().hashCode();
      }
      if (getTeamsCount() > 0) {
        hash = (37 * hash) + TEAMS_FIELD_NUMBER;
        hash = (53 * hash) + getTeamsList().hashCode();
      }
      if (getLeaguesCount() > 0) {
        hash = (37 * hash) + LEAGUES_FIELD_NUMBER;
        hash = (53 * hash) + getLeaguesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTADPCSearchResults}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTADPCSearchResults)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResultsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
        } else {
          players_ = null;
          playersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
        } else {
          teams_ = null;
          teamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (leaguesBuilder_ == null) {
          leagues_ = java.util.Collections.emptyList();
        } else {
          leagues_ = null;
          leaguesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCSearchResults_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults result) {
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        if (leaguesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            leagues_ = java.util.Collections.unmodifiableList(leagues_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.leagues_ = leagues_;
        } else {
          result.leagues_ = leaguesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.getDefaultInstance()) return this;
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000002);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        if (leaguesBuilder_ == null) {
          if (!other.leagues_.isEmpty()) {
            if (leagues_.isEmpty()) {
              leagues_ = other.leagues_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLeaguesIsMutable();
              leagues_.addAll(other.leagues_);
            }
            onChanged();
          }
        } else {
          if (!other.leagues_.isEmpty()) {
            if (leaguesBuilder_.isEmpty()) {
              leaguesBuilder_.dispose();
              leaguesBuilder_ = null;
              leagues_ = other.leagues_;
              bitField0_ = (bitField0_ & ~0x00000004);
              leaguesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeaguesFieldBuilder() : null;
            } else {
              leaguesBuilder_.addAllMessages(other.leagues_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.parser(),
                        extensionRegistry);
                if (playersBuilder_ == null) {
                  ensurePlayersIsMutable();
                  players_.add(m);
                } else {
                  playersBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.parser(),
                        extensionRegistry);
                if (teamsBuilder_ == null) {
                  ensureTeamsIsMutable();
                  teams_.add(m);
                } else {
                  teamsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.parser(),
                        extensionRegistry);
                if (leaguesBuilder_ == null) {
                  ensureLeaguesIsMutable();
                  leagues_.add(m);
                } else {
                  leaguesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          players_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player>(players_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder setPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder setPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder addPlayers(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder addPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder addPlayers(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder addPlayers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Player players = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Player.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          teams_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team>(teams_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder setTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder setTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder addTeams(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder addTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder addTeams(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder addTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.Team teams = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League> leagues_ =
        java.util.Collections.emptyList();
      private void ensureLeaguesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          leagues_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League>(leagues_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder> leaguesBuilder_;

      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League> getLeaguesList() {
        if (leaguesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leagues_);
        } else {
          return leaguesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public int getLeaguesCount() {
        if (leaguesBuilder_ == null) {
          return leagues_.size();
        } else {
          return leaguesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League getLeagues(int index) {
        if (leaguesBuilder_ == null) {
          return leagues_.get(index);
        } else {
          return leaguesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder setLeagues(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League value) {
        if (leaguesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaguesIsMutable();
          leagues_.set(index, value);
          onChanged();
        } else {
          leaguesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder setLeagues(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder builderForValue) {
        if (leaguesBuilder_ == null) {
          ensureLeaguesIsMutable();
          leagues_.set(index, builderForValue.build());
          onChanged();
        } else {
          leaguesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder addLeagues(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League value) {
        if (leaguesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaguesIsMutable();
          leagues_.add(value);
          onChanged();
        } else {
          leaguesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder addLeagues(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League value) {
        if (leaguesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaguesIsMutable();
          leagues_.add(index, value);
          onChanged();
        } else {
          leaguesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder addLeagues(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder builderForValue) {
        if (leaguesBuilder_ == null) {
          ensureLeaguesIsMutable();
          leagues_.add(builderForValue.build());
          onChanged();
        } else {
          leaguesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder addLeagues(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder builderForValue) {
        if (leaguesBuilder_ == null) {
          ensureLeaguesIsMutable();
          leagues_.add(index, builderForValue.build());
          onChanged();
        } else {
          leaguesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder addAllLeagues(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League> values) {
        if (leaguesBuilder_ == null) {
          ensureLeaguesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leagues_);
          onChanged();
        } else {
          leaguesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder clearLeagues() {
        if (leaguesBuilder_ == null) {
          leagues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          leaguesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public Builder removeLeagues(int index) {
        if (leaguesBuilder_ == null) {
          ensureLeaguesIsMutable();
          leagues_.remove(index);
          onChanged();
        } else {
          leaguesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder getLeaguesBuilder(
          int index) {
        return getLeaguesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder getLeaguesOrBuilder(
          int index) {
        if (leaguesBuilder_ == null) {
          return leagues_.get(index);  } else {
          return leaguesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder> 
           getLeaguesOrBuilderList() {
        if (leaguesBuilder_ != null) {
          return leaguesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leagues_);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder addLeaguesBuilder() {
        return getLeaguesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder addLeaguesBuilder(
          int index) {
        return getLeaguesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCSearchResults.League leagues = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder> 
           getLeaguesBuilderList() {
        return getLeaguesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder> 
          getLeaguesFieldBuilder() {
        if (leaguesBuilder_ == null) {
          leaguesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.League.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults.LeagueOrBuilder>(
                  leagues_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          leagues_ = null;
        }
        return leaguesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTADPCSearchResults)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTADPCSearchResults)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTADPCSearchResults>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTADPCSearchResults>() {
      @java.lang.Override
      public CMsgDOTADPCSearchResults parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTADPCSearchResults> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTADPCSearchResults> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCSearchResults getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTADPCTeamFavoriteRankingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTADPCTeamFavoriteRankings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team> 
        getTeamsList();
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team getTeams(int index);
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder getTeamsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTADPCTeamFavoriteRankings}
   */
  public static final class CMsgDOTADPCTeamFavoriteRankings extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTADPCTeamFavoriteRankings)
      CMsgDOTADPCTeamFavoriteRankingsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTADPCTeamFavoriteRankings.class.getName());
    }
    // Use CMsgDOTADPCTeamFavoriteRankings.newBuilder() to construct.
    private CMsgDOTADPCTeamFavoriteRankings(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTADPCTeamFavoriteRankings() {
      teams_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Builder.class);
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTADPCTeamFavoriteRankings.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 team_id = 1;</code>
       * @return Whether the teamId field is set.
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 1;</code>
       * @return The teamId.
       */
      int getTeamId();

      /**
       * <code>optional uint32 favorites = 2;</code>
       * @return Whether the favorites field is set.
       */
      boolean hasFavorites();
      /**
       * <code>optional uint32 favorites = 2;</code>
       * @return The favorites.
       */
      int getFavorites();
    }
    /**
     * Protobuf type {@code CMsgDOTADPCTeamFavoriteRankings.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTADPCTeamFavoriteRankings.Team)
        TeamOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Team.class.getName());
      }
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Team() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_ID_FIELD_NUMBER = 1;
      private int teamId_ = 0;
      /**
       * <code>optional uint32 team_id = 1;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 team_id = 1;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }

      public static final int FAVORITES_FIELD_NUMBER = 2;
      private int favorites_ = 0;
      /**
       * <code>optional uint32 favorites = 2;</code>
       * @return Whether the favorites field is set.
       */
      @java.lang.Override
      public boolean hasFavorites() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 favorites = 2;</code>
       * @return The favorites.
       */
      @java.lang.Override
      public int getFavorites() {
        return favorites_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, teamId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, favorites_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, teamId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, favorites_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team) obj;

        if (hasTeamId() != other.hasTeamId()) return false;
        if (hasTeamId()) {
          if (getTeamId()
              != other.getTeamId()) return false;
        }
        if (hasFavorites() != other.hasFavorites()) return false;
        if (hasFavorites()) {
          if (getFavorites()
              != other.getFavorites()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasFavorites()) {
          hash = (37 * hash) + FAVORITES_FIELD_NUMBER;
          hash = (53 * hash) + getFavorites();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTADPCTeamFavoriteRankings.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTADPCTeamFavoriteRankings.Team)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          teamId_ = 0;
          favorites_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.teamId_ = teamId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.favorites_ = favorites_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.getDefaultInstance()) return this;
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasFavorites()) {
            setFavorites(other.getFavorites());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  teamId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  favorites_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 1;</code>
         * @return Whether the teamId field is set.
         */
        @java.lang.Override
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         * @return The teamId.
         */
        @java.lang.Override
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         * @param value The teamId to set.
         * @return This builder for chaining.
         */
        public Builder setTeamId(int value) {

          teamId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private int favorites_ ;
        /**
         * <code>optional uint32 favorites = 2;</code>
         * @return Whether the favorites field is set.
         */
        @java.lang.Override
        public boolean hasFavorites() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 favorites = 2;</code>
         * @return The favorites.
         */
        @java.lang.Override
        public int getFavorites() {
          return favorites_;
        }
        /**
         * <code>optional uint32 favorites = 2;</code>
         * @param value The favorites to set.
         * @return This builder for chaining.
         */
        public Builder setFavorites(int value) {

          favorites_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 favorites = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFavorites() {
          bitField0_ = (bitField0_ & ~0x00000002);
          favorites_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTADPCTeamFavoriteRankings.Team)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTADPCTeamFavoriteRankings.Team)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Team>
          PARSER = new com.google.protobuf.AbstractParser<Team>() {
        @java.lang.Override
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Team> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TEAMS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team> teams_;
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    @java.lang.Override
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(1, teams_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teams_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings) obj;

      if (!getTeamsList()
          .equals(other.getTeamsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTeamsCount() > 0) {
        hash = (37 * hash) + TEAMS_FIELD_NUMBER;
        hash = (53 * hash) + getTeamsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTADPCTeamFavoriteRankings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTADPCTeamFavoriteRankings)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
        } else {
          teams_ = null;
          teamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings result) {
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.getDefaultInstance()) return this;
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.parser(),
                        extensionRegistry);
                if (teamsBuilder_ == null) {
                  ensureTeamsIsMutable();
                  teams_.add(m);
                } else {
                  teamsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          teams_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team>(teams_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder addTeams(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder addTeams(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTADPCTeamFavoriteRankings.Team teams = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTADPCTeamFavoriteRankings)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTADPCTeamFavoriteRankings)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTADPCTeamFavoriteRankings>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTADPCTeamFavoriteRankings>() {
      @java.lang.Override
      public CMsgDOTADPCTeamFavoriteRankings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTADPCTeamFavoriteRankings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTADPCTeamFavoriteRankings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDOTADPCTeamFavoriteRankings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingTabletPeriodData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    boolean hasFantasyPeriod();
    /**
     * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    int getFantasyPeriod();

    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet> 
        getTabletsList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet getTablets(int index);
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    int getTabletsCount();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder> 
        getTabletsOrBuilderList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder getTabletsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDotaFantasyCraftingTabletPeriodData}
   */
  public static final class CMsgDotaFantasyCraftingTabletPeriodData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingTabletPeriodData)
      CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDotaFantasyCraftingTabletPeriodData.class.getName());
    }
    // Use CMsgDotaFantasyCraftingTabletPeriodData.newBuilder() to construct.
    private CMsgDotaFantasyCraftingTabletPeriodData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDotaFantasyCraftingTabletPeriodData() {
      fantasyPeriod_ = -1;
      tablets_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder.class);
    }

    public interface GemOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingTabletPeriodData.Gem)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
       * @return The type.
       */
      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type getType();

      /**
       * <code>optional uint32 slot = 2;</code>
       * @return Whether the slot field is set.
       */
      boolean hasSlot();
      /**
       * <code>optional uint32 slot = 2;</code>
       * @return The slot.
       */
      int getSlot();

      /**
       * <code>optional uint32 shape = 3;</code>
       * @return Whether the shape field is set.
       */
      boolean hasShape();
      /**
       * <code>optional uint32 shape = 3;</code>
       * @return The shape.
       */
      int getShape();

      /**
       * <code>optional uint32 quality = 4;</code>
       * @return Whether the quality field is set.
       */
      boolean hasQuality();
      /**
       * <code>optional uint32 quality = 4;</code>
       * @return The quality.
       */
      int getQuality();

      /**
       * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
       * @return Whether the stat field is set.
       */
      boolean hasStat();
      /**
       * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
       * @return The stat.
       */
      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring getStat();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingTabletPeriodData.Gem}
     */
    public static final class Gem extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingTabletPeriodData.Gem)
        GemOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Gem.class.getName());
      }
      // Use Gem.newBuilder() to construct.
      private Gem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Gem() {
        type_ = 0;
        stat_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder.class);
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_ = 0;
      /**
       * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
       * @return The type.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type getType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type.forNumber(type_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type.FANTASY_GEM_TYPE_RUBY : result;
      }

      public static final int SLOT_FIELD_NUMBER = 2;
      private int slot_ = 0;
      /**
       * <code>optional uint32 slot = 2;</code>
       * @return Whether the slot field is set.
       */
      @java.lang.Override
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 slot = 2;</code>
       * @return The slot.
       */
      @java.lang.Override
      public int getSlot() {
        return slot_;
      }

      public static final int SHAPE_FIELD_NUMBER = 3;
      private int shape_ = 0;
      /**
       * <code>optional uint32 shape = 3;</code>
       * @return Whether the shape field is set.
       */
      @java.lang.Override
      public boolean hasShape() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 shape = 3;</code>
       * @return The shape.
       */
      @java.lang.Override
      public int getShape() {
        return shape_;
      }

      public static final int QUALITY_FIELD_NUMBER = 4;
      private int quality_ = 0;
      /**
       * <code>optional uint32 quality = 4;</code>
       * @return Whether the quality field is set.
       */
      @java.lang.Override
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 quality = 4;</code>
       * @return The quality.
       */
      @java.lang.Override
      public int getQuality() {
        return quality_;
      }

      public static final int STAT_FIELD_NUMBER = 5;
      private int stat_ = 0;
      /**
       * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
       * @return Whether the stat field is set.
       */
      @java.lang.Override public boolean hasStat() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
       * @return The stat.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring getStat() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring.forNumber(stat_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring.FANTASY_SCORING_KILLS : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, slot_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, shape_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, quality_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeEnum(5, stat_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, slot_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, shape_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, quality_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, stat_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem) obj;

        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (type_ != other.type_) return false;
        }
        if (hasSlot() != other.hasSlot()) return false;
        if (hasSlot()) {
          if (getSlot()
              != other.getSlot()) return false;
        }
        if (hasShape() != other.hasShape()) return false;
        if (hasShape()) {
          if (getShape()
              != other.getShape()) return false;
        }
        if (hasQuality() != other.hasQuality()) return false;
        if (hasQuality()) {
          if (getQuality()
              != other.getQuality()) return false;
        }
        if (hasStat() != other.hasStat()) return false;
        if (hasStat()) {
          if (stat_ != other.stat_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (hasSlot()) {
          hash = (37 * hash) + SLOT_FIELD_NUMBER;
          hash = (53 * hash) + getSlot();
        }
        if (hasShape()) {
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShape();
        }
        if (hasQuality()) {
          hash = (37 * hash) + QUALITY_FIELD_NUMBER;
          hash = (53 * hash) + getQuality();
        }
        if (hasStat()) {
          hash = (37 * hash) + STAT_FIELD_NUMBER;
          hash = (53 * hash) + stat_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingTabletPeriodData.Gem}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingTabletPeriodData.Gem)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          type_ = 0;
          slot_ = 0;
          shape_ = 0;
          quality_ = 0;
          stat_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.type_ = type_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.slot_ = slot_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.shape_ = shape_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.quality_ = quality_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.stat_ = stat_;
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasSlot()) {
            setSlot(other.getSlot());
          }
          if (other.hasShape()) {
            setShape(other.getShape());
          }
          if (other.hasQuality()) {
            setQuality(other.getQuality());
          }
          if (other.hasStat()) {
            setStat(other.getStat());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type tmpValue =
                      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(1, tmpRaw);
                  } else {
                    type_ = tmpRaw;
                    bitField0_ |= 0x00000001;
                  }
                  break;
                } // case 8
                case 16: {
                  slot_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  shape_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  quality_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring tmpValue =
                      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(5, tmpRaw);
                  } else {
                    stat_ = tmpRaw;
                    bitField0_ |= 0x00000010;
                  }
                  break;
                } // case 40
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int type_ = 0;
        /**
         * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
         * @return The type.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type getType() {
          kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type.forNumber(type_);
          return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type.FANTASY_GEM_TYPE_RUBY : result;
        }
        /**
         * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Gem_Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .Fantasy_Gem_Type type = 1 [default = FANTASY_GEM_TYPE_RUBY];</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 0;
          onChanged();
          return this;
        }

        private int slot_ ;
        /**
         * <code>optional uint32 slot = 2;</code>
         * @return Whether the slot field is set.
         */
        @java.lang.Override
        public boolean hasSlot() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 slot = 2;</code>
         * @return The slot.
         */
        @java.lang.Override
        public int getSlot() {
          return slot_;
        }
        /**
         * <code>optional uint32 slot = 2;</code>
         * @param value The slot to set.
         * @return This builder for chaining.
         */
        public Builder setSlot(int value) {

          slot_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 slot = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSlot() {
          bitField0_ = (bitField0_ & ~0x00000002);
          slot_ = 0;
          onChanged();
          return this;
        }

        private int shape_ ;
        /**
         * <code>optional uint32 shape = 3;</code>
         * @return Whether the shape field is set.
         */
        @java.lang.Override
        public boolean hasShape() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 shape = 3;</code>
         * @return The shape.
         */
        @java.lang.Override
        public int getShape() {
          return shape_;
        }
        /**
         * <code>optional uint32 shape = 3;</code>
         * @param value The shape to set.
         * @return This builder for chaining.
         */
        public Builder setShape(int value) {

          shape_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 shape = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearShape() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shape_ = 0;
          onChanged();
          return this;
        }

        private int quality_ ;
        /**
         * <code>optional uint32 quality = 4;</code>
         * @return Whether the quality field is set.
         */
        @java.lang.Override
        public boolean hasQuality() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 quality = 4;</code>
         * @return The quality.
         */
        @java.lang.Override
        public int getQuality() {
          return quality_;
        }
        /**
         * <code>optional uint32 quality = 4;</code>
         * @param value The quality to set.
         * @return This builder for chaining.
         */
        public Builder setQuality(int value) {

          quality_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 quality = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearQuality() {
          bitField0_ = (bitField0_ & ~0x00000008);
          quality_ = 0;
          onChanged();
          return this;
        }

        private int stat_ = 0;
        /**
         * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
         * @return Whether the stat field is set.
         */
        @java.lang.Override public boolean hasStat() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
         * @return The stat.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring getStat() {
          kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring.forNumber(stat_);
          return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring.FANTASY_SCORING_KILLS : result;
        }
        /**
         * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
         * @param value The stat to set.
         * @return This builder for chaining.
         */
        public Builder setStat(kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Scoring value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          stat_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .Fantasy_Scoring stat = 5 [default = FANTASY_SCORING_KILLS];</code>
         * @return This builder for chaining.
         */
        public Builder clearStat() {
          bitField0_ = (bitField0_ & ~0x00000010);
          stat_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingTabletPeriodData.Gem)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingTabletPeriodData.Gem)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Gem>
          PARSER = new com.google.protobuf.AbstractParser<Gem>() {
        @java.lang.Override
        public Gem parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Gem> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Gem> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TabletOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingTabletPeriodData.Tablet)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 tablet_id = 1;</code>
       * @return Whether the tabletId field is set.
       */
      boolean hasTabletId();
      /**
       * <code>optional uint32 tablet_id = 1;</code>
       * @return The tabletId.
       */
      int getTabletId();

      /**
       * <code>optional uint32 tablet_level = 2;</code>
       * @return Whether the tabletLevel field is set.
       */
      boolean hasTabletLevel();
      /**
       * <code>optional uint32 tablet_level = 2;</code>
       * @return The tabletLevel.
       */
      int getTabletLevel();

      /**
       * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return Whether the fantasyRole field is set.
       */
      boolean hasFantasyRole();
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return The fantasyRole.
       */
      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles getFantasyRole();

      /**
       * <code>optional uint32 account_id = 4;</code>
       * @return Whether the accountId field is set.
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 4;</code>
       * @return The accountId.
       */
      int getAccountId();

      /**
       * <code>optional uint32 prefix = 5;</code>
       * @return Whether the prefix field is set.
       */
      boolean hasPrefix();
      /**
       * <code>optional uint32 prefix = 5;</code>
       * @return The prefix.
       */
      int getPrefix();

      /**
       * <code>optional uint32 suffix = 6;</code>
       * @return Whether the suffix field is set.
       */
      boolean hasSuffix();
      /**
       * <code>optional uint32 suffix = 6;</code>
       * @return The suffix.
       */
      int getSuffix();

      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem> 
          getGemsList();
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem getGems(int index);
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      int getGemsCount();
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder> 
          getGemsOrBuilderList();
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder getGemsOrBuilder(
          int index);

      /**
       * <code>optional float score = 8;</code>
       * @return Whether the score field is set.
       */
      boolean hasScore();
      /**
       * <code>optional float score = 8;</code>
       * @return The score.
       */
      float getScore();

      /**
       * <code>optional uint32 best_series = 9;</code>
       * @return Whether the bestSeries field is set.
       */
      boolean hasBestSeries();
      /**
       * <code>optional uint32 best_series = 9;</code>
       * @return The bestSeries.
       */
      int getBestSeries();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingTabletPeriodData.Tablet}
     */
    public static final class Tablet extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingTabletPeriodData.Tablet)
        TabletOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Tablet.class.getName());
      }
      // Use Tablet.newBuilder() to construct.
      private Tablet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Tablet() {
        fantasyRole_ = 0;
        gems_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder.class);
      }

      private int bitField0_;
      public static final int TABLET_ID_FIELD_NUMBER = 1;
      private int tabletId_ = 0;
      /**
       * <code>optional uint32 tablet_id = 1;</code>
       * @return Whether the tabletId field is set.
       */
      @java.lang.Override
      public boolean hasTabletId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 tablet_id = 1;</code>
       * @return The tabletId.
       */
      @java.lang.Override
      public int getTabletId() {
        return tabletId_;
      }

      public static final int TABLET_LEVEL_FIELD_NUMBER = 2;
      private int tabletLevel_ = 0;
      /**
       * <code>optional uint32 tablet_level = 2;</code>
       * @return Whether the tabletLevel field is set.
       */
      @java.lang.Override
      public boolean hasTabletLevel() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 tablet_level = 2;</code>
       * @return The tabletLevel.
       */
      @java.lang.Override
      public int getTabletLevel() {
        return tabletLevel_;
      }

      public static final int FANTASY_ROLE_FIELD_NUMBER = 3;
      private int fantasyRole_ = 0;
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return Whether the fantasyRole field is set.
       */
      @java.lang.Override public boolean hasFantasyRole() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
       * @return The fantasyRole.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles getFantasyRole() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.forNumber(fantasyRole_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.FANTASY_ROLE_UNDEFINED : result;
      }

      public static final int ACCOUNT_ID_FIELD_NUMBER = 4;
      private int accountId_ = 0;
      /**
       * <code>optional uint32 account_id = 4;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 account_id = 4;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }

      public static final int PREFIX_FIELD_NUMBER = 5;
      private int prefix_ = 0;
      /**
       * <code>optional uint32 prefix = 5;</code>
       * @return Whether the prefix field is set.
       */
      @java.lang.Override
      public boolean hasPrefix() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 prefix = 5;</code>
       * @return The prefix.
       */
      @java.lang.Override
      public int getPrefix() {
        return prefix_;
      }

      public static final int SUFFIX_FIELD_NUMBER = 6;
      private int suffix_ = 0;
      /**
       * <code>optional uint32 suffix = 6;</code>
       * @return Whether the suffix field is set.
       */
      @java.lang.Override
      public boolean hasSuffix() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 suffix = 6;</code>
       * @return The suffix.
       */
      @java.lang.Override
      public int getSuffix() {
        return suffix_;
      }

      public static final int GEMS_FIELD_NUMBER = 7;
      @SuppressWarnings("serial")
      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem> gems_;
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      @java.lang.Override
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem> getGemsList() {
        return gems_;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      @java.lang.Override
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder> 
          getGemsOrBuilderList() {
        return gems_;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      @java.lang.Override
      public int getGemsCount() {
        return gems_.size();
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem getGems(int index) {
        return gems_.get(index);
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder getGemsOrBuilder(
          int index) {
        return gems_.get(index);
      }

      public static final int SCORE_FIELD_NUMBER = 8;
      private float score_ = 0F;
      /**
       * <code>optional float score = 8;</code>
       * @return Whether the score field is set.
       */
      @java.lang.Override
      public boolean hasScore() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional float score = 8;</code>
       * @return The score.
       */
      @java.lang.Override
      public float getScore() {
        return score_;
      }

      public static final int BEST_SERIES_FIELD_NUMBER = 9;
      private int bestSeries_ = 0;
      /**
       * <code>optional uint32 best_series = 9;</code>
       * @return Whether the bestSeries field is set.
       */
      @java.lang.Override
      public boolean hasBestSeries() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 best_series = 9;</code>
       * @return The bestSeries.
       */
      @java.lang.Override
      public int getBestSeries() {
        return bestSeries_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, tabletId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, tabletLevel_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeEnum(3, fantasyRole_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, accountId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, prefix_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, suffix_);
        }
        for (int i = 0; i < gems_.size(); i++) {
          output.writeMessage(7, gems_.get(i));
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeFloat(8, score_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(9, bestSeries_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, tabletId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, tabletLevel_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, fantasyRole_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, accountId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, prefix_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, suffix_);
        }
        for (int i = 0; i < gems_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, gems_.get(i));
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, score_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, bestSeries_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet) obj;

        if (hasTabletId() != other.hasTabletId()) return false;
        if (hasTabletId()) {
          if (getTabletId()
              != other.getTabletId()) return false;
        }
        if (hasTabletLevel() != other.hasTabletLevel()) return false;
        if (hasTabletLevel()) {
          if (getTabletLevel()
              != other.getTabletLevel()) return false;
        }
        if (hasFantasyRole() != other.hasFantasyRole()) return false;
        if (hasFantasyRole()) {
          if (fantasyRole_ != other.fantasyRole_) return false;
        }
        if (hasAccountId() != other.hasAccountId()) return false;
        if (hasAccountId()) {
          if (getAccountId()
              != other.getAccountId()) return false;
        }
        if (hasPrefix() != other.hasPrefix()) return false;
        if (hasPrefix()) {
          if (getPrefix()
              != other.getPrefix()) return false;
        }
        if (hasSuffix() != other.hasSuffix()) return false;
        if (hasSuffix()) {
          if (getSuffix()
              != other.getSuffix()) return false;
        }
        if (!getGemsList()
            .equals(other.getGemsList())) return false;
        if (hasScore() != other.hasScore()) return false;
        if (hasScore()) {
          if (java.lang.Float.floatToIntBits(getScore())
              != java.lang.Float.floatToIntBits(
                  other.getScore())) return false;
        }
        if (hasBestSeries() != other.hasBestSeries()) return false;
        if (hasBestSeries()) {
          if (getBestSeries()
              != other.getBestSeries()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTabletId()) {
          hash = (37 * hash) + TABLET_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTabletId();
        }
        if (hasTabletLevel()) {
          hash = (37 * hash) + TABLET_LEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getTabletLevel();
        }
        if (hasFantasyRole()) {
          hash = (37 * hash) + FANTASY_ROLE_FIELD_NUMBER;
          hash = (53 * hash) + fantasyRole_;
        }
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasPrefix()) {
          hash = (37 * hash) + PREFIX_FIELD_NUMBER;
          hash = (53 * hash) + getPrefix();
        }
        if (hasSuffix()) {
          hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
          hash = (53 * hash) + getSuffix();
        }
        if (getGemsCount() > 0) {
          hash = (37 * hash) + GEMS_FIELD_NUMBER;
          hash = (53 * hash) + getGemsList().hashCode();
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore());
        }
        if (hasBestSeries()) {
          hash = (37 * hash) + BEST_SERIES_FIELD_NUMBER;
          hash = (53 * hash) + getBestSeries();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingTabletPeriodData.Tablet}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingTabletPeriodData.Tablet)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          tabletId_ = 0;
          tabletLevel_ = 0;
          fantasyRole_ = 0;
          accountId_ = 0;
          prefix_ = 0;
          suffix_ = 0;
          if (gemsBuilder_ == null) {
            gems_ = java.util.Collections.emptyList();
          } else {
            gems_ = null;
            gemsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          score_ = 0F;
          bestSeries_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet result) {
          if (gemsBuilder_ == null) {
            if (((bitField0_ & 0x00000040) != 0)) {
              gems_ = java.util.Collections.unmodifiableList(gems_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.gems_ = gems_;
          } else {
            result.gems_ = gemsBuilder_.build();
          }
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.tabletId_ = tabletId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.tabletLevel_ = tabletLevel_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.fantasyRole_ = fantasyRole_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.accountId_ = accountId_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.prefix_ = prefix_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.suffix_ = suffix_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.score_ = score_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.bestSeries_ = bestSeries_;
            to_bitField0_ |= 0x00000080;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.getDefaultInstance()) return this;
          if (other.hasTabletId()) {
            setTabletId(other.getTabletId());
          }
          if (other.hasTabletLevel()) {
            setTabletLevel(other.getTabletLevel());
          }
          if (other.hasFantasyRole()) {
            setFantasyRole(other.getFantasyRole());
          }
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasPrefix()) {
            setPrefix(other.getPrefix());
          }
          if (other.hasSuffix()) {
            setSuffix(other.getSuffix());
          }
          if (gemsBuilder_ == null) {
            if (!other.gems_.isEmpty()) {
              if (gems_.isEmpty()) {
                gems_ = other.gems_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureGemsIsMutable();
                gems_.addAll(other.gems_);
              }
              onChanged();
            }
          } else {
            if (!other.gems_.isEmpty()) {
              if (gemsBuilder_.isEmpty()) {
                gemsBuilder_.dispose();
                gemsBuilder_ = null;
                gems_ = other.gems_;
                bitField0_ = (bitField0_ & ~0x00000040);
                gemsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getGemsFieldBuilder() : null;
              } else {
                gemsBuilder_.addAllMessages(other.gems_);
              }
            }
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          if (other.hasBestSeries()) {
            setBestSeries(other.getBestSeries());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  tabletId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  tabletLevel_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles tmpValue =
                      kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(3, tmpRaw);
                  } else {
                    fantasyRole_ = tmpRaw;
                    bitField0_ |= 0x00000004;
                  }
                  break;
                } // case 24
                case 32: {
                  accountId_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  prefix_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  suffix_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 58: {
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem m =
                      input.readMessage(
                          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.parser(),
                          extensionRegistry);
                  if (gemsBuilder_ == null) {
                    ensureGemsIsMutable();
                    gems_.add(m);
                  } else {
                    gemsBuilder_.addMessage(m);
                  }
                  break;
                } // case 58
                case 69: {
                  score_ = input.readFloat();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 69
                case 72: {
                  bestSeries_ = input.readUInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int tabletId_ ;
        /**
         * <code>optional uint32 tablet_id = 1;</code>
         * @return Whether the tabletId field is set.
         */
        @java.lang.Override
        public boolean hasTabletId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 tablet_id = 1;</code>
         * @return The tabletId.
         */
        @java.lang.Override
        public int getTabletId() {
          return tabletId_;
        }
        /**
         * <code>optional uint32 tablet_id = 1;</code>
         * @param value The tabletId to set.
         * @return This builder for chaining.
         */
        public Builder setTabletId(int value) {

          tabletId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tablet_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTabletId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tabletId_ = 0;
          onChanged();
          return this;
        }

        private int tabletLevel_ ;
        /**
         * <code>optional uint32 tablet_level = 2;</code>
         * @return Whether the tabletLevel field is set.
         */
        @java.lang.Override
        public boolean hasTabletLevel() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 tablet_level = 2;</code>
         * @return The tabletLevel.
         */
        @java.lang.Override
        public int getTabletLevel() {
          return tabletLevel_;
        }
        /**
         * <code>optional uint32 tablet_level = 2;</code>
         * @param value The tabletLevel to set.
         * @return This builder for chaining.
         */
        public Builder setTabletLevel(int value) {

          tabletLevel_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tablet_level = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTabletLevel() {
          bitField0_ = (bitField0_ & ~0x00000002);
          tabletLevel_ = 0;
          onChanged();
          return this;
        }

        private int fantasyRole_ = 0;
        /**
         * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
         * @return Whether the fantasyRole field is set.
         */
        @java.lang.Override public boolean hasFantasyRole() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
         * @return The fantasyRole.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles getFantasyRole() {
          kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles result = kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.forNumber(fantasyRole_);
          return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles.FANTASY_ROLE_UNDEFINED : result;
        }
        /**
         * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
         * @param value The fantasyRole to set.
         * @return This builder for chaining.
         */
        public Builder setFantasyRole(kz.moltenhaze.proto.dota.DotaSharedEnums.Fantasy_Roles value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          fantasyRole_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .Fantasy_Roles fantasy_role = 3 [default = FANTASY_ROLE_UNDEFINED];</code>
         * @return This builder for chaining.
         */
        public Builder clearFantasyRole() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyRole_ = 0;
          onChanged();
          return this;
        }

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 4;</code>
         * @return Whether the accountId field is set.
         */
        @java.lang.Override
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 account_id = 4;</code>
         * @return The accountId.
         */
        @java.lang.Override
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 4;</code>
         * @param value The accountId to set.
         * @return This builder for chaining.
         */
        public Builder setAccountId(int value) {

          accountId_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private int prefix_ ;
        /**
         * <code>optional uint32 prefix = 5;</code>
         * @return Whether the prefix field is set.
         */
        @java.lang.Override
        public boolean hasPrefix() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 prefix = 5;</code>
         * @return The prefix.
         */
        @java.lang.Override
        public int getPrefix() {
          return prefix_;
        }
        /**
         * <code>optional uint32 prefix = 5;</code>
         * @param value The prefix to set.
         * @return This builder for chaining.
         */
        public Builder setPrefix(int value) {

          prefix_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 prefix = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearPrefix() {
          bitField0_ = (bitField0_ & ~0x00000010);
          prefix_ = 0;
          onChanged();
          return this;
        }

        private int suffix_ ;
        /**
         * <code>optional uint32 suffix = 6;</code>
         * @return Whether the suffix field is set.
         */
        @java.lang.Override
        public boolean hasSuffix() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 suffix = 6;</code>
         * @return The suffix.
         */
        @java.lang.Override
        public int getSuffix() {
          return suffix_;
        }
        /**
         * <code>optional uint32 suffix = 6;</code>
         * @param value The suffix to set.
         * @return This builder for chaining.
         */
        public Builder setSuffix(int value) {

          suffix_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 suffix = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearSuffix() {
          bitField0_ = (bitField0_ & ~0x00000020);
          suffix_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem> gems_ =
          java.util.Collections.emptyList();
        private void ensureGemsIsMutable() {
          if (!((bitField0_ & 0x00000040) != 0)) {
            gems_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem>(gems_);
            bitField0_ |= 0x00000040;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder> gemsBuilder_;

        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem> getGemsList() {
          if (gemsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(gems_);
          } else {
            return gemsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public int getGemsCount() {
          if (gemsBuilder_ == null) {
            return gems_.size();
          } else {
            return gemsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem getGems(int index) {
          if (gemsBuilder_ == null) {
            return gems_.get(index);
          } else {
            return gemsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder setGems(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem value) {
          if (gemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGemsIsMutable();
            gems_.set(index, value);
            onChanged();
          } else {
            gemsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder setGems(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder builderForValue) {
          if (gemsBuilder_ == null) {
            ensureGemsIsMutable();
            gems_.set(index, builderForValue.build());
            onChanged();
          } else {
            gemsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder addGems(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem value) {
          if (gemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGemsIsMutable();
            gems_.add(value);
            onChanged();
          } else {
            gemsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder addGems(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem value) {
          if (gemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGemsIsMutable();
            gems_.add(index, value);
            onChanged();
          } else {
            gemsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder addGems(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder builderForValue) {
          if (gemsBuilder_ == null) {
            ensureGemsIsMutable();
            gems_.add(builderForValue.build());
            onChanged();
          } else {
            gemsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder addGems(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder builderForValue) {
          if (gemsBuilder_ == null) {
            ensureGemsIsMutable();
            gems_.add(index, builderForValue.build());
            onChanged();
          } else {
            gemsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder addAllGems(
            java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem> values) {
          if (gemsBuilder_ == null) {
            ensureGemsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gems_);
            onChanged();
          } else {
            gemsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder clearGems() {
          if (gemsBuilder_ == null) {
            gems_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            gemsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public Builder removeGems(int index) {
          if (gemsBuilder_ == null) {
            ensureGemsIsMutable();
            gems_.remove(index);
            onChanged();
          } else {
            gemsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder getGemsBuilder(
            int index) {
          return getGemsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder getGemsOrBuilder(
            int index) {
          if (gemsBuilder_ == null) {
            return gems_.get(index);  } else {
            return gemsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder> 
             getGemsOrBuilderList() {
          if (gemsBuilder_ != null) {
            return gemsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(gems_);
          }
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder addGemsBuilder() {
          return getGemsFieldBuilder().addBuilder(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder addGemsBuilder(
            int index) {
          return getGemsFieldBuilder().addBuilder(
              index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Gem gems = 7;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder> 
             getGemsBuilderList() {
          return getGemsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder> 
            getGemsFieldBuilder() {
          if (gemsBuilder_ == null) {
            gemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Gem.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.GemOrBuilder>(
                    gems_,
                    ((bitField0_ & 0x00000040) != 0),
                    getParentForChildren(),
                    isClean());
            gems_ = null;
          }
          return gemsBuilder_;
        }

        private float score_ ;
        /**
         * <code>optional float score = 8;</code>
         * @return Whether the score field is set.
         */
        @java.lang.Override
        public boolean hasScore() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional float score = 8;</code>
         * @return The score.
         */
        @java.lang.Override
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 8;</code>
         * @param value The score to set.
         * @return This builder for chaining.
         */
        public Builder setScore(float value) {

          score_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000080);
          score_ = 0F;
          onChanged();
          return this;
        }

        private int bestSeries_ ;
        /**
         * <code>optional uint32 best_series = 9;</code>
         * @return Whether the bestSeries field is set.
         */
        @java.lang.Override
        public boolean hasBestSeries() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional uint32 best_series = 9;</code>
         * @return The bestSeries.
         */
        @java.lang.Override
        public int getBestSeries() {
          return bestSeries_;
        }
        /**
         * <code>optional uint32 best_series = 9;</code>
         * @param value The bestSeries to set.
         * @return This builder for chaining.
         */
        public Builder setBestSeries(int value) {

          bestSeries_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 best_series = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearBestSeries() {
          bitField0_ = (bitField0_ & ~0x00000100);
          bestSeries_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingTabletPeriodData.Tablet)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingTabletPeriodData.Tablet)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Tablet>
          PARSER = new com.google.protobuf.AbstractParser<Tablet>() {
        @java.lang.Override
        public Tablet parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Tablet> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Tablet> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FANTASY_PERIOD_FIELD_NUMBER = 1;
    private int fantasyPeriod_ = -1;
    /**
     * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    @java.lang.Override
    public boolean hasFantasyPeriod() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    @java.lang.Override
    public int getFantasyPeriod() {
      return fantasyPeriod_;
    }

    public static final int TABLETS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet> tablets_;
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet> getTabletsList() {
      return tablets_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder> 
        getTabletsOrBuilderList() {
      return tablets_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    @java.lang.Override
    public int getTabletsCount() {
      return tablets_.size();
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet getTablets(int index) {
      return tablets_.get(index);
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder getTabletsOrBuilder(
        int index) {
      return tablets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyPeriod_);
      }
      for (int i = 0; i < tablets_.size(); i++) {
        output.writeMessage(2, tablets_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyPeriod_);
      }
      for (int i = 0; i < tablets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tablets_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData) obj;

      if (hasFantasyPeriod() != other.hasFantasyPeriod()) return false;
      if (hasFantasyPeriod()) {
        if (getFantasyPeriod()
            != other.getFantasyPeriod()) return false;
      }
      if (!getTabletsList()
          .equals(other.getTabletsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyPeriod()) {
        hash = (37 * hash) + FANTASY_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyPeriod();
      }
      if (getTabletsCount() > 0) {
        hash = (37 * hash) + TABLETS_FIELD_NUMBER;
        hash = (53 * hash) + getTabletsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingTabletPeriodData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingTabletPeriodData)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyPeriod_ = -1;
        if (tabletsBuilder_ == null) {
          tablets_ = java.util.Collections.emptyList();
        } else {
          tablets_ = null;
          tabletsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData result) {
        if (tabletsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            tablets_ = java.util.Collections.unmodifiableList(tablets_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tablets_ = tablets_;
        } else {
          result.tablets_ = tabletsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyPeriod_ = fantasyPeriod_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance()) return this;
        if (other.hasFantasyPeriod()) {
          setFantasyPeriod(other.getFantasyPeriod());
        }
        if (tabletsBuilder_ == null) {
          if (!other.tablets_.isEmpty()) {
            if (tablets_.isEmpty()) {
              tablets_ = other.tablets_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTabletsIsMutable();
              tablets_.addAll(other.tablets_);
            }
            onChanged();
          }
        } else {
          if (!other.tablets_.isEmpty()) {
            if (tabletsBuilder_.isEmpty()) {
              tabletsBuilder_.dispose();
              tabletsBuilder_ = null;
              tablets_ = other.tablets_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tabletsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTabletsFieldBuilder() : null;
            } else {
              tabletsBuilder_.addAllMessages(other.tablets_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyPeriod_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.parser(),
                        extensionRegistry);
                if (tabletsBuilder_ == null) {
                  ensureTabletsIsMutable();
                  tablets_.add(m);
                } else {
                  tabletsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyPeriod_ = -1;
      /**
       * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      @java.lang.Override
      public boolean hasFantasyPeriod() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      @java.lang.Override
      public int getFantasyPeriod() {
        return fantasyPeriod_;
      }
      /**
       * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
       * @param value The fantasyPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyPeriod(int value) {

        fantasyPeriod_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_period = 1 [default = 4294967295];</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyPeriod() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyPeriod_ = -1;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet> tablets_ =
        java.util.Collections.emptyList();
      private void ensureTabletsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          tablets_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet>(tablets_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder> tabletsBuilder_;

      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet> getTabletsList() {
        if (tabletsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tablets_);
        } else {
          return tabletsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public int getTabletsCount() {
        if (tabletsBuilder_ == null) {
          return tablets_.size();
        } else {
          return tabletsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet getTablets(int index) {
        if (tabletsBuilder_ == null) {
          return tablets_.get(index);
        } else {
          return tabletsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder setTablets(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet value) {
        if (tabletsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTabletsIsMutable();
          tablets_.set(index, value);
          onChanged();
        } else {
          tabletsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder setTablets(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder builderForValue) {
        if (tabletsBuilder_ == null) {
          ensureTabletsIsMutable();
          tablets_.set(index, builderForValue.build());
          onChanged();
        } else {
          tabletsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder addTablets(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet value) {
        if (tabletsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTabletsIsMutable();
          tablets_.add(value);
          onChanged();
        } else {
          tabletsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder addTablets(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet value) {
        if (tabletsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTabletsIsMutable();
          tablets_.add(index, value);
          onChanged();
        } else {
          tabletsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder addTablets(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder builderForValue) {
        if (tabletsBuilder_ == null) {
          ensureTabletsIsMutable();
          tablets_.add(builderForValue.build());
          onChanged();
        } else {
          tabletsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder addTablets(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder builderForValue) {
        if (tabletsBuilder_ == null) {
          ensureTabletsIsMutable();
          tablets_.add(index, builderForValue.build());
          onChanged();
        } else {
          tabletsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder addAllTablets(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet> values) {
        if (tabletsBuilder_ == null) {
          ensureTabletsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tablets_);
          onChanged();
        } else {
          tabletsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder clearTablets() {
        if (tabletsBuilder_ == null) {
          tablets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tabletsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public Builder removeTablets(int index) {
        if (tabletsBuilder_ == null) {
          ensureTabletsIsMutable();
          tablets_.remove(index);
          onChanged();
        } else {
          tabletsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder getTabletsBuilder(
          int index) {
        return getTabletsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder getTabletsOrBuilder(
          int index) {
        if (tabletsBuilder_ == null) {
          return tablets_.get(index);  } else {
          return tabletsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder> 
           getTabletsOrBuilderList() {
        if (tabletsBuilder_ != null) {
          return tabletsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tablets_);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder addTabletsBuilder() {
        return getTabletsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder addTabletsBuilder(
          int index) {
        return getTabletsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletPeriodData.Tablet tablets = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder> 
           getTabletsBuilderList() {
        return getTabletsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder> 
          getTabletsFieldBuilder() {
        if (tabletsBuilder_ == null) {
          tabletsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Tablet.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.TabletOrBuilder>(
                  tablets_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          tablets_ = null;
        }
        return tabletsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingTabletPeriodData)
    }

    // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingTabletPeriodData)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDotaFantasyCraftingTabletPeriodData>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDotaFantasyCraftingTabletPeriodData>() {
      @java.lang.Override
      public CMsgDotaFantasyCraftingTabletPeriodData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDotaFantasyCraftingTabletPeriodData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDotaFantasyCraftingTabletPeriodData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDotaFantasyCraftingTabletDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingTabletData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry> 
        getTabletPeriodDataList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry getTabletPeriodData(int index);
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    int getTabletPeriodDataCount();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder> 
        getTabletPeriodDataOrBuilderList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder getTabletPeriodDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDotaFantasyCraftingTabletData}
   */
  public static final class CMsgDotaFantasyCraftingTabletData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingTabletData)
      CMsgDotaFantasyCraftingTabletDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDotaFantasyCraftingTabletData.class.getName());
    }
    // Use CMsgDotaFantasyCraftingTabletData.newBuilder() to construct.
    private CMsgDotaFantasyCraftingTabletData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDotaFantasyCraftingTabletData() {
      tabletPeriodData_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder.class);
    }

    public interface TabletPeriodDataEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 key = 1;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <code>optional uint32 key = 1;</code>
       * @return The key.
       */
      int getKey();

      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
       * @return The value.
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData getValue();
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder getValueOrBuilder();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry}
     */
    public static final class TabletPeriodDataEntry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)
        TabletPeriodDataEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          TabletPeriodDataEntry.class.getName());
      }
      // Use TabletPeriodDataEntry.newBuilder() to construct.
      private TabletPeriodDataEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private TabletPeriodDataEntry() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder.class);
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private int key_ = 0;
      /**
       * <code>optional uint32 key = 1;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public int getKey() {
        return key_;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData value_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData getValue() {
        return value_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder getValueOrBuilder() {
        return value_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance() : value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, key_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, key_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry) obj;

        if (hasKey() != other.hasKey()) return false;
        if (hasKey()) {
          if (getKey()
              != other.getKey()) return false;
        }
        if (hasValue() != other.hasValue()) return false;
        if (hasValue()) {
          if (!getValue()
              .equals(other.getValue())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKey()) {
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey();
        }
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getValueFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = 0;
          value_ = null;
          if (valueBuilder_ != null) {
            valueBuilder_.dispose();
            valueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = key_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.value_ = valueBuilder_ == null
                ? value_
                : valueBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  key_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  input.readMessage(
                      getValueFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int key_ ;
        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public int getKey() {
          return key_;
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(int value) {

          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = 0;
          onChanged();
          return this;
        }

        private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData value_;
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder> valueBuilder_;
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         * @return Whether the value field is set.
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         * @return The value.
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        public Builder setValue(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
          } else {
            valueBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        public Builder setValue(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        public Builder mergeValue(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData value) {
          if (valueBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              value_ != null &&
              value_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance()) {
              getValueBuilder().mergeFrom(value);
            } else {
              value_ = value;
            }
          } else {
            valueBuilder_.mergeFrom(value);
          }
          if (value_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = null;
          if (valueBuilder_ != null) {
            valueBuilder_.dispose();
            valueBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder getValueBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingTabletPeriodData value = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletPeriodDataOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TabletPeriodDataEntry>
          PARSER = new com.google.protobuf.AbstractParser<TabletPeriodDataEntry>() {
        @java.lang.Override
        public TabletPeriodDataEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TabletPeriodDataEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TabletPeriodDataEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TABLET_PERIOD_DATA_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry> tabletPeriodData_;
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry> getTabletPeriodDataList() {
      return tabletPeriodData_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder> 
        getTabletPeriodDataOrBuilderList() {
      return tabletPeriodData_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    @java.lang.Override
    public int getTabletPeriodDataCount() {
      return tabletPeriodData_.size();
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry getTabletPeriodData(int index) {
      return tabletPeriodData_.get(index);
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder getTabletPeriodDataOrBuilder(
        int index) {
      return tabletPeriodData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tabletPeriodData_.size(); i++) {
        output.writeMessage(1, tabletPeriodData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tabletPeriodData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tabletPeriodData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData) obj;

      if (!getTabletPeriodDataList()
          .equals(other.getTabletPeriodDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTabletPeriodDataCount() > 0) {
        hash = (37 * hash) + TABLET_PERIOD_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletPeriodDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingTabletData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingTabletData)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (tabletPeriodDataBuilder_ == null) {
          tabletPeriodData_ = java.util.Collections.emptyList();
        } else {
          tabletPeriodData_ = null;
          tabletPeriodDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingTabletData_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData result) {
        if (tabletPeriodDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tabletPeriodData_ = java.util.Collections.unmodifiableList(tabletPeriodData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tabletPeriodData_ = tabletPeriodData_;
        } else {
          result.tabletPeriodData_ = tabletPeriodDataBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) return this;
        if (tabletPeriodDataBuilder_ == null) {
          if (!other.tabletPeriodData_.isEmpty()) {
            if (tabletPeriodData_.isEmpty()) {
              tabletPeriodData_ = other.tabletPeriodData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTabletPeriodDataIsMutable();
              tabletPeriodData_.addAll(other.tabletPeriodData_);
            }
            onChanged();
          }
        } else {
          if (!other.tabletPeriodData_.isEmpty()) {
            if (tabletPeriodDataBuilder_.isEmpty()) {
              tabletPeriodDataBuilder_.dispose();
              tabletPeriodDataBuilder_ = null;
              tabletPeriodData_ = other.tabletPeriodData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tabletPeriodDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTabletPeriodDataFieldBuilder() : null;
            } else {
              tabletPeriodDataBuilder_.addAllMessages(other.tabletPeriodData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.parser(),
                        extensionRegistry);
                if (tabletPeriodDataBuilder_ == null) {
                  ensureTabletPeriodDataIsMutable();
                  tabletPeriodData_.add(m);
                } else {
                  tabletPeriodDataBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry> tabletPeriodData_ =
        java.util.Collections.emptyList();
      private void ensureTabletPeriodDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tabletPeriodData_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry>(tabletPeriodData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder> tabletPeriodDataBuilder_;

      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry> getTabletPeriodDataList() {
        if (tabletPeriodDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tabletPeriodData_);
        } else {
          return tabletPeriodDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public int getTabletPeriodDataCount() {
        if (tabletPeriodDataBuilder_ == null) {
          return tabletPeriodData_.size();
        } else {
          return tabletPeriodDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry getTabletPeriodData(int index) {
        if (tabletPeriodDataBuilder_ == null) {
          return tabletPeriodData_.get(index);
        } else {
          return tabletPeriodDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder setTabletPeriodData(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry value) {
        if (tabletPeriodDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.set(index, value);
          onChanged();
        } else {
          tabletPeriodDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder setTabletPeriodData(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder builderForValue) {
        if (tabletPeriodDataBuilder_ == null) {
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.set(index, builderForValue.build());
          onChanged();
        } else {
          tabletPeriodDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder addTabletPeriodData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry value) {
        if (tabletPeriodDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.add(value);
          onChanged();
        } else {
          tabletPeriodDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder addTabletPeriodData(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry value) {
        if (tabletPeriodDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.add(index, value);
          onChanged();
        } else {
          tabletPeriodDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder addTabletPeriodData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder builderForValue) {
        if (tabletPeriodDataBuilder_ == null) {
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.add(builderForValue.build());
          onChanged();
        } else {
          tabletPeriodDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder addTabletPeriodData(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder builderForValue) {
        if (tabletPeriodDataBuilder_ == null) {
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.add(index, builderForValue.build());
          onChanged();
        } else {
          tabletPeriodDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder addAllTabletPeriodData(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry> values) {
        if (tabletPeriodDataBuilder_ == null) {
          ensureTabletPeriodDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tabletPeriodData_);
          onChanged();
        } else {
          tabletPeriodDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder clearTabletPeriodData() {
        if (tabletPeriodDataBuilder_ == null) {
          tabletPeriodData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tabletPeriodDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public Builder removeTabletPeriodData(int index) {
        if (tabletPeriodDataBuilder_ == null) {
          ensureTabletPeriodDataIsMutable();
          tabletPeriodData_.remove(index);
          onChanged();
        } else {
          tabletPeriodDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder getTabletPeriodDataBuilder(
          int index) {
        return getTabletPeriodDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder getTabletPeriodDataOrBuilder(
          int index) {
        if (tabletPeriodDataBuilder_ == null) {
          return tabletPeriodData_.get(index);  } else {
          return tabletPeriodDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder> 
           getTabletPeriodDataOrBuilderList() {
        if (tabletPeriodDataBuilder_ != null) {
          return tabletPeriodDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tabletPeriodData_);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder addTabletPeriodDataBuilder() {
        return getTabletPeriodDataFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder addTabletPeriodDataBuilder(
          int index) {
        return getTabletPeriodDataFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry tablet_period_data = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder> 
           getTabletPeriodDataBuilderList() {
        return getTabletPeriodDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder> 
          getTabletPeriodDataFieldBuilder() {
        if (tabletPeriodDataBuilder_ == null) {
          tabletPeriodDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.TabletPeriodDataEntryOrBuilder>(
                  tabletPeriodData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tabletPeriodData_ = null;
        }
        return tabletPeriodDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingTabletData)
    }

    // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingTabletData)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDotaFantasyCraftingTabletData>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDotaFantasyCraftingTabletData>() {
      @java.lang.Override
      public CMsgDotaFantasyCraftingTabletData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDotaFantasyCraftingTabletData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDotaFantasyCraftingTabletData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDotaFantasyCraftingUserDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingUserData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 available_rolls = 1;</code>
     * @return A list containing the availableRolls.
     */
    java.util.List<java.lang.Integer> getAvailableRollsList();
    /**
     * <code>repeated uint32 available_rolls = 1;</code>
     * @return The count of availableRolls.
     */
    int getAvailableRollsCount();
    /**
     * <code>repeated uint32 available_rolls = 1;</code>
     * @param index The index of the element to return.
     * @return The availableRolls at the given index.
     */
    int getAvailableRolls(int index);

    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry> 
        getPeriodRollTokensList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry getPeriodRollTokens(int index);
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    int getPeriodRollTokensCount();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder> 
        getPeriodRollTokensOrBuilderList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder getPeriodRollTokensOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry> 
        getPeriodScoresList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry getPeriodScores(int index);
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    int getPeriodScoresCount();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder> 
        getPeriodScoresOrBuilderList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder getPeriodScoresOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDotaFantasyCraftingUserData}
   */
  public static final class CMsgDotaFantasyCraftingUserData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingUserData)
      CMsgDotaFantasyCraftingUserDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDotaFantasyCraftingUserData.class.getName());
    }
    // Use CMsgDotaFantasyCraftingUserData.newBuilder() to construct.
    private CMsgDotaFantasyCraftingUserData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDotaFantasyCraftingUserData() {
      availableRolls_ = emptyIntList();
      periodRollTokens_ = java.util.Collections.emptyList();
      periodScores_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder.class);
    }

    public interface PeriodScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingUserData.PeriodScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float total_score = 1;</code>
       * @return Whether the totalScore field is set.
       */
      boolean hasTotalScore();
      /**
       * <code>optional float total_score = 1;</code>
       * @return The totalScore.
       */
      float getTotalScore();

      /**
       * <code>optional float percentile = 2;</code>
       * @return Whether the percentile field is set.
       */
      boolean hasPercentile();
      /**
       * <code>optional float percentile = 2;</code>
       * @return The percentile.
       */
      float getPercentile();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingUserData.PeriodScore}
     */
    public static final class PeriodScore extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingUserData.PeriodScore)
        PeriodScoreOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          PeriodScore.class.getName());
      }
      // Use PeriodScore.newBuilder() to construct.
      private PeriodScore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PeriodScore() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder.class);
      }

      private int bitField0_;
      public static final int TOTAL_SCORE_FIELD_NUMBER = 1;
      private float totalScore_ = 0F;
      /**
       * <code>optional float total_score = 1;</code>
       * @return Whether the totalScore field is set.
       */
      @java.lang.Override
      public boolean hasTotalScore() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float total_score = 1;</code>
       * @return The totalScore.
       */
      @java.lang.Override
      public float getTotalScore() {
        return totalScore_;
      }

      public static final int PERCENTILE_FIELD_NUMBER = 2;
      private float percentile_ = 0F;
      /**
       * <code>optional float percentile = 2;</code>
       * @return Whether the percentile field is set.
       */
      @java.lang.Override
      public boolean hasPercentile() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float percentile = 2;</code>
       * @return The percentile.
       */
      @java.lang.Override
      public float getPercentile() {
        return percentile_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFloat(1, totalScore_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFloat(2, percentile_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, totalScore_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, percentile_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore) obj;

        if (hasTotalScore() != other.hasTotalScore()) return false;
        if (hasTotalScore()) {
          if (java.lang.Float.floatToIntBits(getTotalScore())
              != java.lang.Float.floatToIntBits(
                  other.getTotalScore())) return false;
        }
        if (hasPercentile() != other.hasPercentile()) return false;
        if (hasPercentile()) {
          if (java.lang.Float.floatToIntBits(getPercentile())
              != java.lang.Float.floatToIntBits(
                  other.getPercentile())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTotalScore()) {
          hash = (37 * hash) + TOTAL_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getTotalScore());
        }
        if (hasPercentile()) {
          hash = (37 * hash) + PERCENTILE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getPercentile());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingUserData.PeriodScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingUserData.PeriodScore)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          totalScore_ = 0F;
          percentile_ = 0F;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.totalScore_ = totalScore_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.percentile_ = percentile_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance()) return this;
          if (other.hasTotalScore()) {
            setTotalScore(other.getTotalScore());
          }
          if (other.hasPercentile()) {
            setPercentile(other.getPercentile());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  totalScore_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                case 21: {
                  percentile_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float totalScore_ ;
        /**
         * <code>optional float total_score = 1;</code>
         * @return Whether the totalScore field is set.
         */
        @java.lang.Override
        public boolean hasTotalScore() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float total_score = 1;</code>
         * @return The totalScore.
         */
        @java.lang.Override
        public float getTotalScore() {
          return totalScore_;
        }
        /**
         * <code>optional float total_score = 1;</code>
         * @param value The totalScore to set.
         * @return This builder for chaining.
         */
        public Builder setTotalScore(float value) {

          totalScore_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional float total_score = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalScore() {
          bitField0_ = (bitField0_ & ~0x00000001);
          totalScore_ = 0F;
          onChanged();
          return this;
        }

        private float percentile_ ;
        /**
         * <code>optional float percentile = 2;</code>
         * @return Whether the percentile field is set.
         */
        @java.lang.Override
        public boolean hasPercentile() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float percentile = 2;</code>
         * @return The percentile.
         */
        @java.lang.Override
        public float getPercentile() {
          return percentile_;
        }
        /**
         * <code>optional float percentile = 2;</code>
         * @param value The percentile to set.
         * @return This builder for chaining.
         */
        public Builder setPercentile(float value) {

          percentile_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional float percentile = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPercentile() {
          bitField0_ = (bitField0_ & ~0x00000002);
          percentile_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingUserData.PeriodScore)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingUserData.PeriodScore)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PeriodScore>
          PARSER = new com.google.protobuf.AbstractParser<PeriodScore>() {
        @java.lang.Override
        public PeriodScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PeriodScore> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PeriodScore> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PeriodRollTokensEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 key = 1;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <code>optional uint32 key = 1;</code>
       * @return The key.
       */
      int getKey();

      /**
       * <code>optional uint32 value = 2;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>optional uint32 value = 2;</code>
       * @return The value.
       */
      int getValue();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry}
     */
    public static final class PeriodRollTokensEntry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)
        PeriodRollTokensEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          PeriodRollTokensEntry.class.getName());
      }
      // Use PeriodRollTokensEntry.newBuilder() to construct.
      private PeriodRollTokensEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PeriodRollTokensEntry() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder.class);
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private int key_ = 0;
      /**
       * <code>optional uint32 key = 1;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public int getKey() {
        return key_;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private int value_ = 0;
      /**
       * <code>optional uint32 value = 2;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, key_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, key_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry) obj;

        if (hasKey() != other.hasKey()) return false;
        if (hasKey()) {
          if (getKey()
              != other.getKey()) return false;
        }
        if (hasValue() != other.hasValue()) return false;
        if (hasValue()) {
          if (getValue()
              != other.getValue()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKey()) {
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey();
        }
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = 0;
          value_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = key_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.value_ = value_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  key_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  value_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int key_ ;
        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public int getKey() {
          return key_;
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(int value) {

          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = 0;
          onChanged();
          return this;
        }

        private int value_ ;
        /**
         * <code>optional uint32 value = 2;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public int getValue() {
          return value_;
        }
        /**
         * <code>optional uint32 value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(int value) {

          value_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PeriodRollTokensEntry>
          PARSER = new com.google.protobuf.AbstractParser<PeriodRollTokensEntry>() {
        @java.lang.Override
        public PeriodRollTokensEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PeriodRollTokensEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PeriodRollTokensEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PeriodScoresEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 key = 1;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <code>optional uint32 key = 1;</code>
       * @return The key.
       */
      int getKey();

      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
       * @return The value.
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore getValue();
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder getValueOrBuilder();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingUserData.PeriodScoresEntry}
     */
    public static final class PeriodScoresEntry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)
        PeriodScoresEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          PeriodScoresEntry.class.getName());
      }
      // Use PeriodScoresEntry.newBuilder() to construct.
      private PeriodScoresEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PeriodScoresEntry() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder.class);
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private int key_ = 0;
      /**
       * <code>optional uint32 key = 1;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public int getKey() {
        return key_;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore value_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore getValue() {
        return value_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder getValueOrBuilder() {
        return value_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance() : value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, key_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, key_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry) obj;

        if (hasKey() != other.hasKey()) return false;
        if (hasKey()) {
          if (getKey()
              != other.getKey()) return false;
        }
        if (hasValue() != other.hasValue()) return false;
        if (hasValue()) {
          if (!getValue()
              .equals(other.getValue())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKey()) {
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey();
        }
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingUserData.PeriodScoresEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getValueFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = 0;
          value_ = null;
          if (valueBuilder_ != null) {
            valueBuilder_.dispose();
            valueBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = key_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.value_ = valueBuilder_ == null
                ? value_
                : valueBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  key_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  input.readMessage(
                      getValueFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int key_ ;
        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public int getKey() {
          return key_;
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(int value) {

          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = 0;
          onChanged();
          return this;
        }

        private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore value_;
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder> valueBuilder_;
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         * @return Whether the value field is set.
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         * @return The value.
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        public Builder setValue(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
          } else {
            valueBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        public Builder setValue(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        public Builder mergeValue(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore value) {
          if (valueBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              value_ != null &&
              value_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance()) {
              getValueBuilder().mergeFrom(value);
            } else {
              value_ = value;
            }
          } else {
            valueBuilder_.mergeFrom(value);
          }
          if (value_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = null;
          if (valueBuilder_ != null) {
            valueBuilder_.dispose();
            valueBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder getValueBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .CMsgDotaFantasyCraftingUserData.PeriodScore value = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScore.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoreOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingUserData.PeriodScoresEntry)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PeriodScoresEntry>
          PARSER = new com.google.protobuf.AbstractParser<PeriodScoresEntry>() {
        @java.lang.Override
        public PeriodScoresEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PeriodScoresEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PeriodScoresEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int AVAILABLE_ROLLS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList availableRolls_ =
        emptyIntList();
    /**
     * <code>repeated uint32 available_rolls = 1;</code>
     * @return A list containing the availableRolls.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAvailableRollsList() {
      return availableRolls_;
    }
    /**
     * <code>repeated uint32 available_rolls = 1;</code>
     * @return The count of availableRolls.
     */
    public int getAvailableRollsCount() {
      return availableRolls_.size();
    }
    /**
     * <code>repeated uint32 available_rolls = 1;</code>
     * @param index The index of the element to return.
     * @return The availableRolls at the given index.
     */
    public int getAvailableRolls(int index) {
      return availableRolls_.getInt(index);
    }

    public static final int PERIOD_ROLL_TOKENS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry> periodRollTokens_;
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry> getPeriodRollTokensList() {
      return periodRollTokens_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder> 
        getPeriodRollTokensOrBuilderList() {
      return periodRollTokens_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    @java.lang.Override
    public int getPeriodRollTokensCount() {
      return periodRollTokens_.size();
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry getPeriodRollTokens(int index) {
      return periodRollTokens_.get(index);
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder getPeriodRollTokensOrBuilder(
        int index) {
      return periodRollTokens_.get(index);
    }

    public static final int PERIOD_SCORES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry> periodScores_;
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry> getPeriodScoresList() {
      return periodScores_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder> 
        getPeriodScoresOrBuilderList() {
      return periodScores_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    @java.lang.Override
    public int getPeriodScoresCount() {
      return periodScores_.size();
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry getPeriodScores(int index) {
      return periodScores_.get(index);
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder getPeriodScoresOrBuilder(
        int index) {
      return periodScores_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < availableRolls_.size(); i++) {
        output.writeUInt32(1, availableRolls_.getInt(i));
      }
      for (int i = 0; i < periodRollTokens_.size(); i++) {
        output.writeMessage(2, periodRollTokens_.get(i));
      }
      for (int i = 0; i < periodScores_.size(); i++) {
        output.writeMessage(3, periodScores_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < availableRolls_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(availableRolls_.getInt(i));
        }
        size += dataSize;
        size += 1 * getAvailableRollsList().size();
      }
      for (int i = 0; i < periodRollTokens_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, periodRollTokens_.get(i));
      }
      for (int i = 0; i < periodScores_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, periodScores_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData) obj;

      if (!getAvailableRollsList()
          .equals(other.getAvailableRollsList())) return false;
      if (!getPeriodRollTokensList()
          .equals(other.getPeriodRollTokensList())) return false;
      if (!getPeriodScoresList()
          .equals(other.getPeriodScoresList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAvailableRollsCount() > 0) {
        hash = (37 * hash) + AVAILABLE_ROLLS_FIELD_NUMBER;
        hash = (53 * hash) + getAvailableRollsList().hashCode();
      }
      if (getPeriodRollTokensCount() > 0) {
        hash = (37 * hash) + PERIOD_ROLL_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodRollTokensList().hashCode();
      }
      if (getPeriodScoresCount() > 0) {
        hash = (37 * hash) + PERIOD_SCORES_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodScoresList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingUserData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingUserData)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        availableRolls_ = emptyIntList();
        if (periodRollTokensBuilder_ == null) {
          periodRollTokens_ = java.util.Collections.emptyList();
        } else {
          periodRollTokens_ = null;
          periodRollTokensBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (periodScoresBuilder_ == null) {
          periodScores_ = java.util.Collections.emptyList();
        } else {
          periodScores_ = null;
          periodScoresBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingUserData_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData result) {
        if (periodRollTokensBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            periodRollTokens_ = java.util.Collections.unmodifiableList(periodRollTokens_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.periodRollTokens_ = periodRollTokens_;
        } else {
          result.periodRollTokens_ = periodRollTokensBuilder_.build();
        }
        if (periodScoresBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            periodScores_ = java.util.Collections.unmodifiableList(periodScores_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.periodScores_ = periodScores_;
        } else {
          result.periodScores_ = periodScoresBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          availableRolls_.makeImmutable();
          result.availableRolls_ = availableRolls_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) return this;
        if (!other.availableRolls_.isEmpty()) {
          if (availableRolls_.isEmpty()) {
            availableRolls_ = other.availableRolls_;
            availableRolls_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureAvailableRollsIsMutable();
            availableRolls_.addAll(other.availableRolls_);
          }
          onChanged();
        }
        if (periodRollTokensBuilder_ == null) {
          if (!other.periodRollTokens_.isEmpty()) {
            if (periodRollTokens_.isEmpty()) {
              periodRollTokens_ = other.periodRollTokens_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePeriodRollTokensIsMutable();
              periodRollTokens_.addAll(other.periodRollTokens_);
            }
            onChanged();
          }
        } else {
          if (!other.periodRollTokens_.isEmpty()) {
            if (periodRollTokensBuilder_.isEmpty()) {
              periodRollTokensBuilder_.dispose();
              periodRollTokensBuilder_ = null;
              periodRollTokens_ = other.periodRollTokens_;
              bitField0_ = (bitField0_ & ~0x00000002);
              periodRollTokensBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPeriodRollTokensFieldBuilder() : null;
            } else {
              periodRollTokensBuilder_.addAllMessages(other.periodRollTokens_);
            }
          }
        }
        if (periodScoresBuilder_ == null) {
          if (!other.periodScores_.isEmpty()) {
            if (periodScores_.isEmpty()) {
              periodScores_ = other.periodScores_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePeriodScoresIsMutable();
              periodScores_.addAll(other.periodScores_);
            }
            onChanged();
          }
        } else {
          if (!other.periodScores_.isEmpty()) {
            if (periodScoresBuilder_.isEmpty()) {
              periodScoresBuilder_.dispose();
              periodScoresBuilder_ = null;
              periodScores_ = other.periodScores_;
              bitField0_ = (bitField0_ & ~0x00000004);
              periodScoresBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPeriodScoresFieldBuilder() : null;
            } else {
              periodScoresBuilder_.addAllMessages(other.periodScores_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readUInt32();
                ensureAvailableRollsIsMutable();
                availableRolls_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAvailableRollsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  availableRolls_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 18: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.parser(),
                        extensionRegistry);
                if (periodRollTokensBuilder_ == null) {
                  ensurePeriodRollTokensIsMutable();
                  periodRollTokens_.add(m);
                } else {
                  periodRollTokensBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.parser(),
                        extensionRegistry);
                if (periodScoresBuilder_ == null) {
                  ensurePeriodScoresIsMutable();
                  periodScores_.add(m);
                } else {
                  periodScoresBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList availableRolls_ = emptyIntList();
      private void ensureAvailableRollsIsMutable() {
        if (!availableRolls_.isModifiable()) {
          availableRolls_ = makeMutableCopy(availableRolls_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @return A list containing the availableRolls.
       */
      public java.util.List<java.lang.Integer>
          getAvailableRollsList() {
        availableRolls_.makeImmutable();
        return availableRolls_;
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @return The count of availableRolls.
       */
      public int getAvailableRollsCount() {
        return availableRolls_.size();
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @param index The index of the element to return.
       * @return The availableRolls at the given index.
       */
      public int getAvailableRolls(int index) {
        return availableRolls_.getInt(index);
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @param index The index to set the value at.
       * @param value The availableRolls to set.
       * @return This builder for chaining.
       */
      public Builder setAvailableRolls(
          int index, int value) {

        ensureAvailableRollsIsMutable();
        availableRolls_.setInt(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @param value The availableRolls to add.
       * @return This builder for chaining.
       */
      public Builder addAvailableRolls(int value) {

        ensureAvailableRollsIsMutable();
        availableRolls_.addInt(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @param values The availableRolls to add.
       * @return This builder for chaining.
       */
      public Builder addAllAvailableRolls(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAvailableRollsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, availableRolls_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_rolls = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvailableRolls() {
        availableRolls_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry> periodRollTokens_ =
        java.util.Collections.emptyList();
      private void ensurePeriodRollTokensIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          periodRollTokens_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry>(periodRollTokens_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder> periodRollTokensBuilder_;

      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry> getPeriodRollTokensList() {
        if (periodRollTokensBuilder_ == null) {
          return java.util.Collections.unmodifiableList(periodRollTokens_);
        } else {
          return periodRollTokensBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public int getPeriodRollTokensCount() {
        if (periodRollTokensBuilder_ == null) {
          return periodRollTokens_.size();
        } else {
          return periodRollTokensBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry getPeriodRollTokens(int index) {
        if (periodRollTokensBuilder_ == null) {
          return periodRollTokens_.get(index);
        } else {
          return periodRollTokensBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder setPeriodRollTokens(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry value) {
        if (periodRollTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.set(index, value);
          onChanged();
        } else {
          periodRollTokensBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder setPeriodRollTokens(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder builderForValue) {
        if (periodRollTokensBuilder_ == null) {
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.set(index, builderForValue.build());
          onChanged();
        } else {
          periodRollTokensBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder addPeriodRollTokens(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry value) {
        if (periodRollTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.add(value);
          onChanged();
        } else {
          periodRollTokensBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder addPeriodRollTokens(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry value) {
        if (periodRollTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.add(index, value);
          onChanged();
        } else {
          periodRollTokensBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder addPeriodRollTokens(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder builderForValue) {
        if (periodRollTokensBuilder_ == null) {
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.add(builderForValue.build());
          onChanged();
        } else {
          periodRollTokensBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder addPeriodRollTokens(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder builderForValue) {
        if (periodRollTokensBuilder_ == null) {
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.add(index, builderForValue.build());
          onChanged();
        } else {
          periodRollTokensBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder addAllPeriodRollTokens(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry> values) {
        if (periodRollTokensBuilder_ == null) {
          ensurePeriodRollTokensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, periodRollTokens_);
          onChanged();
        } else {
          periodRollTokensBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder clearPeriodRollTokens() {
        if (periodRollTokensBuilder_ == null) {
          periodRollTokens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          periodRollTokensBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public Builder removePeriodRollTokens(int index) {
        if (periodRollTokensBuilder_ == null) {
          ensurePeriodRollTokensIsMutable();
          periodRollTokens_.remove(index);
          onChanged();
        } else {
          periodRollTokensBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder getPeriodRollTokensBuilder(
          int index) {
        return getPeriodRollTokensFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder getPeriodRollTokensOrBuilder(
          int index) {
        if (periodRollTokensBuilder_ == null) {
          return periodRollTokens_.get(index);  } else {
          return periodRollTokensBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder> 
           getPeriodRollTokensOrBuilderList() {
        if (periodRollTokensBuilder_ != null) {
          return periodRollTokensBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(periodRollTokens_);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder addPeriodRollTokensBuilder() {
        return getPeriodRollTokensFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder addPeriodRollTokensBuilder(
          int index) {
        return getPeriodRollTokensFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry period_roll_tokens = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder> 
           getPeriodRollTokensBuilderList() {
        return getPeriodRollTokensFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder> 
          getPeriodRollTokensFieldBuilder() {
        if (periodRollTokensBuilder_ == null) {
          periodRollTokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodRollTokensEntryOrBuilder>(
                  periodRollTokens_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          periodRollTokens_ = null;
        }
        return periodRollTokensBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry> periodScores_ =
        java.util.Collections.emptyList();
      private void ensurePeriodScoresIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          periodScores_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry>(periodScores_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder> periodScoresBuilder_;

      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry> getPeriodScoresList() {
        if (periodScoresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(periodScores_);
        } else {
          return periodScoresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public int getPeriodScoresCount() {
        if (periodScoresBuilder_ == null) {
          return periodScores_.size();
        } else {
          return periodScoresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry getPeriodScores(int index) {
        if (periodScoresBuilder_ == null) {
          return periodScores_.get(index);
        } else {
          return periodScoresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder setPeriodScores(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry value) {
        if (periodScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodScoresIsMutable();
          periodScores_.set(index, value);
          onChanged();
        } else {
          periodScoresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder setPeriodScores(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder builderForValue) {
        if (periodScoresBuilder_ == null) {
          ensurePeriodScoresIsMutable();
          periodScores_.set(index, builderForValue.build());
          onChanged();
        } else {
          periodScoresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder addPeriodScores(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry value) {
        if (periodScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodScoresIsMutable();
          periodScores_.add(value);
          onChanged();
        } else {
          periodScoresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder addPeriodScores(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry value) {
        if (periodScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodScoresIsMutable();
          periodScores_.add(index, value);
          onChanged();
        } else {
          periodScoresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder addPeriodScores(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder builderForValue) {
        if (periodScoresBuilder_ == null) {
          ensurePeriodScoresIsMutable();
          periodScores_.add(builderForValue.build());
          onChanged();
        } else {
          periodScoresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder addPeriodScores(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder builderForValue) {
        if (periodScoresBuilder_ == null) {
          ensurePeriodScoresIsMutable();
          periodScores_.add(index, builderForValue.build());
          onChanged();
        } else {
          periodScoresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder addAllPeriodScores(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry> values) {
        if (periodScoresBuilder_ == null) {
          ensurePeriodScoresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, periodScores_);
          onChanged();
        } else {
          periodScoresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder clearPeriodScores() {
        if (periodScoresBuilder_ == null) {
          periodScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          periodScoresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public Builder removePeriodScores(int index) {
        if (periodScoresBuilder_ == null) {
          ensurePeriodScoresIsMutable();
          periodScores_.remove(index);
          onChanged();
        } else {
          periodScoresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder getPeriodScoresBuilder(
          int index) {
        return getPeriodScoresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder getPeriodScoresOrBuilder(
          int index) {
        if (periodScoresBuilder_ == null) {
          return periodScores_.get(index);  } else {
          return periodScoresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder> 
           getPeriodScoresOrBuilderList() {
        if (periodScoresBuilder_ != null) {
          return periodScoresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(periodScores_);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder addPeriodScoresBuilder() {
        return getPeriodScoresFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder addPeriodScoresBuilder(
          int index) {
        return getPeriodScoresFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingUserData.PeriodScoresEntry period_scores = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder> 
           getPeriodScoresBuilderList() {
        return getPeriodScoresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder> 
          getPeriodScoresFieldBuilder() {
        if (periodScoresBuilder_ == null) {
          periodScoresBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.PeriodScoresEntryOrBuilder>(
                  periodScores_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          periodScores_ = null;
        }
        return periodScoresBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingUserData)
    }

    // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingUserData)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDotaFantasyCraftingUserData>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDotaFantasyCraftingUserData>() {
      @java.lang.Override
      public CMsgDotaFantasyCraftingUserData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDotaFantasyCraftingUserData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDotaFantasyCraftingUserData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDotaFantasyCraftingDataCacheOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingDataCache)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry> 
        getCacheEntriesList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry getCacheEntries(int index);
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    int getCacheEntriesCount();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder> 
        getCacheEntriesOrBuilderList();
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder getCacheEntriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDotaFantasyCraftingDataCache}
   */
  public static final class CMsgDotaFantasyCraftingDataCache extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingDataCache)
      CMsgDotaFantasyCraftingDataCacheOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDotaFantasyCraftingDataCache.class.getName());
    }
    // Use CMsgDotaFantasyCraftingDataCache.newBuilder() to construct.
    private CMsgDotaFantasyCraftingDataCache(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDotaFantasyCraftingDataCache() {
      cacheEntries_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.Builder.class);
    }

    public interface CacheEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDotaFantasyCraftingDataCache.CacheEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      int getAccountId();

      /**
       * <code>optional uint32 fantasy_league = 2;</code>
       * @return Whether the fantasyLeague field is set.
       */
      boolean hasFantasyLeague();
      /**
       * <code>optional uint32 fantasy_league = 2;</code>
       * @return The fantasyLeague.
       */
      int getFantasyLeague();

      /**
       * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
       * @return Whether the cacheData field is set.
       */
      boolean hasCacheData();
      /**
       * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
       * @return The cacheData.
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated getCacheData();
      /**
       * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder getCacheDataOrBuilder();
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingDataCache.CacheEntry}
     */
    public static final class CacheEntry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDotaFantasyCraftingDataCache.CacheEntry)
        CacheEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          CacheEntry.class.getName());
      }
      // Use CacheEntry.newBuilder() to construct.
      private CacheEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private CacheEntry() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder.class);
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_ = 0;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }

      public static final int FANTASY_LEAGUE_FIELD_NUMBER = 2;
      private int fantasyLeague_ = 0;
      /**
       * <code>optional uint32 fantasy_league = 2;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 2;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }

      public static final int CACHE_DATA_FIELD_NUMBER = 3;
      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated cacheData_;
      /**
       * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
       * @return Whether the cacheData field is set.
       */
      @java.lang.Override
      public boolean hasCacheData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
       * @return The cacheData.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated getCacheData() {
        return cacheData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance() : cacheData_;
      }
      /**
       * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder getCacheDataOrBuilder() {
        return cacheData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance() : cacheData_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, fantasyLeague_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(3, getCacheData());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, fantasyLeague_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getCacheData());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry) obj;

        if (hasAccountId() != other.hasAccountId()) return false;
        if (hasAccountId()) {
          if (getAccountId()
              != other.getAccountId()) return false;
        }
        if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
        if (hasFantasyLeague()) {
          if (getFantasyLeague()
              != other.getFantasyLeague()) return false;
        }
        if (hasCacheData() != other.hasCacheData()) return false;
        if (hasCacheData()) {
          if (!getCacheData()
              .equals(other.getCacheData())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasFantasyLeague()) {
          hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyLeague();
        }
        if (hasCacheData()) {
          hash = (37 * hash) + CACHE_DATA_FIELD_NUMBER;
          hash = (53 * hash) + getCacheData().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDotaFantasyCraftingDataCache.CacheEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingDataCache.CacheEntry)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getCacheDataFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          accountId_ = 0;
          fantasyLeague_ = 0;
          cacheData_ = null;
          if (cacheDataBuilder_ != null) {
            cacheDataBuilder_.dispose();
            cacheDataBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.accountId_ = accountId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.fantasyLeague_ = fantasyLeague_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.cacheData_ = cacheDataBuilder_ == null
                ? cacheData_
                : cacheDataBuilder_.build();
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasFantasyLeague()) {
            setFantasyLeague(other.getFantasyLeague());
          }
          if (other.hasCacheData()) {
            mergeCacheData(other.getCacheData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  accountId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  fantasyLeague_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  input.readMessage(
                      getCacheDataFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @return Whether the accountId field is set.
         */
        @java.lang.Override
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @return The accountId.
         */
        @java.lang.Override
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @param value The accountId to set.
         * @return This builder for chaining.
         */
        public Builder setAccountId(int value) {

          accountId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private int fantasyLeague_ ;
        /**
         * <code>optional uint32 fantasy_league = 2;</code>
         * @return Whether the fantasyLeague field is set.
         */
        @java.lang.Override
        public boolean hasFantasyLeague() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 fantasy_league = 2;</code>
         * @return The fantasyLeague.
         */
        @java.lang.Override
        public int getFantasyLeague() {
          return fantasyLeague_;
        }
        /**
         * <code>optional uint32 fantasy_league = 2;</code>
         * @param value The fantasyLeague to set.
         * @return This builder for chaining.
         */
        public Builder setFantasyLeague(int value) {

          fantasyLeague_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_league = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFantasyLeague() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fantasyLeague_ = 0;
          onChanged();
          return this;
        }

        private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated cacheData_;
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder> cacheDataBuilder_;
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         * @return Whether the cacheData field is set.
         */
        public boolean hasCacheData() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         * @return The cacheData.
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated getCacheData() {
          if (cacheDataBuilder_ == null) {
            return cacheData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance() : cacheData_;
          } else {
            return cacheDataBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        public Builder setCacheData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated value) {
          if (cacheDataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cacheData_ = value;
          } else {
            cacheDataBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        public Builder setCacheData(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder builderForValue) {
          if (cacheDataBuilder_ == null) {
            cacheData_ = builderForValue.build();
          } else {
            cacheDataBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        public Builder mergeCacheData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated value) {
          if (cacheDataBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              cacheData_ != null &&
              cacheData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance()) {
              getCacheDataBuilder().mergeFrom(value);
            } else {
              cacheData_ = value;
            }
          } else {
            cacheDataBuilder_.mergeFrom(value);
          }
          if (cacheData_ != null) {
            bitField0_ |= 0x00000004;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        public Builder clearCacheData() {
          bitField0_ = (bitField0_ & ~0x00000004);
          cacheData_ = null;
          if (cacheDataBuilder_ != null) {
            cacheDataBuilder_.dispose();
            cacheDataBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder getCacheDataBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getCacheDataFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder getCacheDataOrBuilder() {
          if (cacheDataBuilder_ != null) {
            return cacheDataBuilder_.getMessageOrBuilder();
          } else {
            return cacheData_ == null ?
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance() : cacheData_;
          }
        }
        /**
         * <code>optional .CMsgGCToClientFantasyCraftingDataUpdated cache_data = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder> 
            getCacheDataFieldBuilder() {
          if (cacheDataBuilder_ == null) {
            cacheDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder>(
                    getCacheData(),
                    getParentForChildren(),
                    isClean());
            cacheData_ = null;
          }
          return cacheDataBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingDataCache.CacheEntry)
      }

      // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingDataCache.CacheEntry)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CacheEntry>
          PARSER = new com.google.protobuf.AbstractParser<CacheEntry>() {
        @java.lang.Override
        public CacheEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<CacheEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CacheEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CACHE_ENTRIES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry> cacheEntries_;
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry> getCacheEntriesList() {
      return cacheEntries_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder> 
        getCacheEntriesOrBuilderList() {
      return cacheEntries_;
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    @java.lang.Override
    public int getCacheEntriesCount() {
      return cacheEntries_.size();
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry getCacheEntries(int index) {
      return cacheEntries_.get(index);
    }
    /**
     * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder getCacheEntriesOrBuilder(
        int index) {
      return cacheEntries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cacheEntries_.size(); i++) {
        output.writeMessage(1, cacheEntries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cacheEntries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cacheEntries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache) obj;

      if (!getCacheEntriesList()
          .equals(other.getCacheEntriesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCacheEntriesCount() > 0) {
        hash = (37 * hash) + CACHE_ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getCacheEntriesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDotaFantasyCraftingDataCache}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDotaFantasyCraftingDataCache)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCacheOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (cacheEntriesBuilder_ == null) {
          cacheEntries_ = java.util.Collections.emptyList();
        } else {
          cacheEntries_ = null;
          cacheEntriesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgDotaFantasyCraftingDataCache_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache result) {
        if (cacheEntriesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cacheEntries_ = java.util.Collections.unmodifiableList(cacheEntries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cacheEntries_ = cacheEntries_;
        } else {
          result.cacheEntries_ = cacheEntriesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.getDefaultInstance()) return this;
        if (cacheEntriesBuilder_ == null) {
          if (!other.cacheEntries_.isEmpty()) {
            if (cacheEntries_.isEmpty()) {
              cacheEntries_ = other.cacheEntries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCacheEntriesIsMutable();
              cacheEntries_.addAll(other.cacheEntries_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheEntries_.isEmpty()) {
            if (cacheEntriesBuilder_.isEmpty()) {
              cacheEntriesBuilder_.dispose();
              cacheEntriesBuilder_ = null;
              cacheEntries_ = other.cacheEntries_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cacheEntriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheEntriesFieldBuilder() : null;
            } else {
              cacheEntriesBuilder_.addAllMessages(other.cacheEntries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.parser(),
                        extensionRegistry);
                if (cacheEntriesBuilder_ == null) {
                  ensureCacheEntriesIsMutable();
                  cacheEntries_.add(m);
                } else {
                  cacheEntriesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry> cacheEntries_ =
        java.util.Collections.emptyList();
      private void ensureCacheEntriesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cacheEntries_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry>(cacheEntries_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder> cacheEntriesBuilder_;

      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry> getCacheEntriesList() {
        if (cacheEntriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheEntries_);
        } else {
          return cacheEntriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public int getCacheEntriesCount() {
        if (cacheEntriesBuilder_ == null) {
          return cacheEntries_.size();
        } else {
          return cacheEntriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry getCacheEntries(int index) {
        if (cacheEntriesBuilder_ == null) {
          return cacheEntries_.get(index);
        } else {
          return cacheEntriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder setCacheEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry value) {
        if (cacheEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheEntriesIsMutable();
          cacheEntries_.set(index, value);
          onChanged();
        } else {
          cacheEntriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder setCacheEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder builderForValue) {
        if (cacheEntriesBuilder_ == null) {
          ensureCacheEntriesIsMutable();
          cacheEntries_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheEntriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder addCacheEntries(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry value) {
        if (cacheEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheEntriesIsMutable();
          cacheEntries_.add(value);
          onChanged();
        } else {
          cacheEntriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder addCacheEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry value) {
        if (cacheEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheEntriesIsMutable();
          cacheEntries_.add(index, value);
          onChanged();
        } else {
          cacheEntriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder addCacheEntries(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder builderForValue) {
        if (cacheEntriesBuilder_ == null) {
          ensureCacheEntriesIsMutable();
          cacheEntries_.add(builderForValue.build());
          onChanged();
        } else {
          cacheEntriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder addCacheEntries(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder builderForValue) {
        if (cacheEntriesBuilder_ == null) {
          ensureCacheEntriesIsMutable();
          cacheEntries_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheEntriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder addAllCacheEntries(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry> values) {
        if (cacheEntriesBuilder_ == null) {
          ensureCacheEntriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheEntries_);
          onChanged();
        } else {
          cacheEntriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder clearCacheEntries() {
        if (cacheEntriesBuilder_ == null) {
          cacheEntries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cacheEntriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public Builder removeCacheEntries(int index) {
        if (cacheEntriesBuilder_ == null) {
          ensureCacheEntriesIsMutable();
          cacheEntries_.remove(index);
          onChanged();
        } else {
          cacheEntriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder getCacheEntriesBuilder(
          int index) {
        return getCacheEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder getCacheEntriesOrBuilder(
          int index) {
        if (cacheEntriesBuilder_ == null) {
          return cacheEntries_.get(index);  } else {
          return cacheEntriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder> 
           getCacheEntriesOrBuilderList() {
        if (cacheEntriesBuilder_ != null) {
          return cacheEntriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheEntries_);
        }
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder addCacheEntriesBuilder() {
        return getCacheEntriesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder addCacheEntriesBuilder(
          int index) {
        return getCacheEntriesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDotaFantasyCraftingDataCache.CacheEntry cache_entries = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder> 
           getCacheEntriesBuilderList() {
        return getCacheEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder> 
          getCacheEntriesFieldBuilder() {
        if (cacheEntriesBuilder_ == null) {
          cacheEntriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntry.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache.CacheEntryOrBuilder>(
                  cacheEntries_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cacheEntries_ = null;
        }
        return cacheEntriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDotaFantasyCraftingDataCache)
    }

    // @@protoc_insertion_point(class_scope:CMsgDotaFantasyCraftingDataCache)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDotaFantasyCraftingDataCache>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDotaFantasyCraftingDataCache>() {
      @java.lang.Override
      public CMsgDotaFantasyCraftingDataCache parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDotaFantasyCraftingDataCache> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDotaFantasyCraftingDataCache> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingDataCache getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingGetDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingGetData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();

    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return The accountId.
     */
    int getAccountId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingGetData}
   */
  public static final class CMsgClientToGCFantasyCraftingGetData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingGetData)
      CMsgClientToGCFantasyCraftingGetDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingGetData.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingGetData.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingGetData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingGetData() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingGetData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingGetData)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        accountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetData_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingGetData)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingGetData)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGetData>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingGetData>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingGetData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGetData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGetData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingGetDataResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingGetDataResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse getResponse();

    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    boolean hasUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingGetDataResponse}
   */
  public static final class CMsgClientToGCFantasyCraftingGetDataResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingGetDataResponse)
      CMsgClientToGCFantasyCraftingGetDataResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingGetDataResponse.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingGetDataResponse.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingGetDataResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingGetDataResponse() {
      response_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCFantasyCraftingGetDataResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCFantasyCraftingGetDataResponse.EResponse)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse.k_eInternalError : result;
    }

    public static final int USER_DATA_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    @java.lang.Override
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 4;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasUserData()) {
        hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingGetDataResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingGetDataResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
          getTabletDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.userData_ = userDataBuilder_ == null
              ? userData_
              : userDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getUserDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 34: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGetDataResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> userDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return Whether the userData field is set.
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return The userData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder mergeUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            userData_ != null &&
            userData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) {
            getUserDataBuilder().mergeFrom(value);
          } else {
            userData_ = value;
          }
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        if (userData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingGetDataResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingGetDataResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGetDataResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingGetDataResponse>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingGetDataResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGetDataResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGetDataResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGetDataResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingPerformOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingPerformOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();

    /**
     * <code>optional uint32 tablet_id = 2;</code>
     * @return Whether the tabletId field is set.
     */
    boolean hasTabletId();
    /**
     * <code>optional uint32 tablet_id = 2;</code>
     * @return The tabletId.
     */
    int getTabletId();

    /**
     * <code>optional uint32 operation_id = 3;</code>
     * @return Whether the operationId field is set.
     */
    boolean hasOperationId();
    /**
     * <code>optional uint32 operation_id = 3;</code>
     * @return The operationId.
     */
    int getOperationId();

    /**
     * <code>optional uint64 extra_data = 4;</code>
     * @return Whether the extraData field is set.
     */
    boolean hasExtraData();
    /**
     * <code>optional uint64 extra_data = 4;</code>
     * @return The extraData.
     */
    long getExtraData();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingPerformOperation}
   */
  public static final class CMsgClientToGCFantasyCraftingPerformOperation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingPerformOperation)
      CMsgClientToGCFantasyCraftingPerformOperationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingPerformOperation.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingPerformOperation.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingPerformOperation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingPerformOperation() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    public static final int TABLET_ID_FIELD_NUMBER = 2;
    private int tabletId_ = 0;
    /**
     * <code>optional uint32 tablet_id = 2;</code>
     * @return Whether the tabletId field is set.
     */
    @java.lang.Override
    public boolean hasTabletId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 tablet_id = 2;</code>
     * @return The tabletId.
     */
    @java.lang.Override
    public int getTabletId() {
      return tabletId_;
    }

    public static final int OPERATION_ID_FIELD_NUMBER = 3;
    private int operationId_ = 0;
    /**
     * <code>optional uint32 operation_id = 3;</code>
     * @return Whether the operationId field is set.
     */
    @java.lang.Override
    public boolean hasOperationId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 operation_id = 3;</code>
     * @return The operationId.
     */
    @java.lang.Override
    public int getOperationId() {
      return operationId_;
    }

    public static final int EXTRA_DATA_FIELD_NUMBER = 4;
    private long extraData_ = 0L;
    /**
     * <code>optional uint64 extra_data = 4;</code>
     * @return Whether the extraData field is set.
     */
    @java.lang.Override
    public boolean hasExtraData() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 extra_data = 4;</code>
     * @return The extraData.
     */
    @java.lang.Override
    public long getExtraData() {
      return extraData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, tabletId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, operationId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, extraData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tabletId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, operationId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, extraData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (hasTabletId() != other.hasTabletId()) return false;
      if (hasTabletId()) {
        if (getTabletId()
            != other.getTabletId()) return false;
      }
      if (hasOperationId() != other.hasOperationId()) return false;
      if (hasOperationId()) {
        if (getOperationId()
            != other.getOperationId()) return false;
      }
      if (hasExtraData() != other.hasExtraData()) return false;
      if (hasExtraData()) {
        if (getExtraData()
            != other.getExtraData()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      if (hasTabletId()) {
        hash = (37 * hash) + TABLET_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTabletId();
      }
      if (hasOperationId()) {
        hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOperationId();
      }
      if (hasExtraData()) {
        hash = (37 * hash) + EXTRA_DATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getExtraData());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingPerformOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingPerformOperation)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        tabletId_ = 0;
        operationId_ = 0;
        extraData_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperation_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tabletId_ = tabletId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.operationId_ = operationId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.extraData_ = extraData_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        if (other.hasTabletId()) {
          setTabletId(other.getTabletId());
        }
        if (other.hasOperationId()) {
          setOperationId(other.getOperationId());
        }
        if (other.hasExtraData()) {
          setExtraData(other.getExtraData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                tabletId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                operationId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                extraData_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      private int tabletId_ ;
      /**
       * <code>optional uint32 tablet_id = 2;</code>
       * @return Whether the tabletId field is set.
       */
      @java.lang.Override
      public boolean hasTabletId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 tablet_id = 2;</code>
       * @return The tabletId.
       */
      @java.lang.Override
      public int getTabletId() {
        return tabletId_;
      }
      /**
       * <code>optional uint32 tablet_id = 2;</code>
       * @param value The tabletId to set.
       * @return This builder for chaining.
       */
      public Builder setTabletId(int value) {

        tabletId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tablet_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTabletId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tabletId_ = 0;
        onChanged();
        return this;
      }

      private int operationId_ ;
      /**
       * <code>optional uint32 operation_id = 3;</code>
       * @return Whether the operationId field is set.
       */
      @java.lang.Override
      public boolean hasOperationId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 operation_id = 3;</code>
       * @return The operationId.
       */
      @java.lang.Override
      public int getOperationId() {
        return operationId_;
      }
      /**
       * <code>optional uint32 operation_id = 3;</code>
       * @param value The operationId to set.
       * @return This builder for chaining.
       */
      public Builder setOperationId(int value) {

        operationId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 operation_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperationId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operationId_ = 0;
        onChanged();
        return this;
      }

      private long extraData_ ;
      /**
       * <code>optional uint64 extra_data = 4;</code>
       * @return Whether the extraData field is set.
       */
      @java.lang.Override
      public boolean hasExtraData() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint64 extra_data = 4;</code>
       * @return The extraData.
       */
      @java.lang.Override
      public long getExtraData() {
        return extraData_;
      }
      /**
       * <code>optional uint64 extra_data = 4;</code>
       * @param value The extraData to set.
       * @return This builder for chaining.
       */
      public Builder setExtraData(long value) {

        extraData_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 extra_data = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearExtraData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        extraData_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingPerformOperation)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingPerformOperation)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingPerformOperation>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingPerformOperation>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingPerformOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingPerformOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingPerformOperation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingPerformOperationResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingPerformOperationResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse getResponse();

    /**
     * <code>optional uint32 operation_id = 2;</code>
     * @return Whether the operationId field is set.
     */
    boolean hasOperationId();
    /**
     * <code>optional uint32 operation_id = 2;</code>
     * @return The operationId.
     */
    int getOperationId();

    /**
     * <code>optional uint32 tablet_id = 7;</code>
     * @return Whether the tabletId field is set.
     */
    boolean hasTabletId();
    /**
     * <code>optional uint32 tablet_id = 7;</code>
     * @return The tabletId.
     */
    int getTabletId();

    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
     * @return Whether the userData field is set.
     */
    boolean hasUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
     * @return The userData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();

    /**
     * <code>repeated uint32 player_choices = 3;</code>
     * @return A list containing the playerChoices.
     */
    java.util.List<java.lang.Integer> getPlayerChoicesList();
    /**
     * <code>repeated uint32 player_choices = 3;</code>
     * @return The count of playerChoices.
     */
    int getPlayerChoicesCount();
    /**
     * <code>repeated uint32 player_choices = 3;</code>
     * @param index The index of the element to return.
     * @return The playerChoices at the given index.
     */
    int getPlayerChoices(int index);

    /**
     * <code>repeated uint32 prefix_choices = 4;</code>
     * @return A list containing the prefixChoices.
     */
    java.util.List<java.lang.Integer> getPrefixChoicesList();
    /**
     * <code>repeated uint32 prefix_choices = 4;</code>
     * @return The count of prefixChoices.
     */
    int getPrefixChoicesCount();
    /**
     * <code>repeated uint32 prefix_choices = 4;</code>
     * @param index The index of the element to return.
     * @return The prefixChoices at the given index.
     */
    int getPrefixChoices(int index);

    /**
     * <code>repeated uint32 suffix_choices = 5;</code>
     * @return A list containing the suffixChoices.
     */
    java.util.List<java.lang.Integer> getSuffixChoicesList();
    /**
     * <code>repeated uint32 suffix_choices = 5;</code>
     * @return The count of suffixChoices.
     */
    int getSuffixChoicesCount();
    /**
     * <code>repeated uint32 suffix_choices = 5;</code>
     * @param index The index of the element to return.
     * @return The suffixChoices at the given index.
     */
    int getSuffixChoices(int index);

    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice> 
        getTitleChoicesList();
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice getTitleChoices(int index);
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    int getTitleChoicesCount();
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder> 
        getTitleChoicesOrBuilderList();
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder getTitleChoicesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingPerformOperationResponse}
   */
  public static final class CMsgClientToGCFantasyCraftingPerformOperationResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingPerformOperationResponse)
      CMsgClientToGCFantasyCraftingPerformOperationResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingPerformOperationResponse.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingPerformOperationResponse.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingPerformOperationResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingPerformOperationResponse() {
      response_ = 0;
      playerChoices_ = emptyIntList();
      prefixChoices_ = emptyIntList();
      suffixChoices_ = emptyIntList();
      titleChoices_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      /**
       * <code>k_eNoTokens = 6;</code>
       */
      k_eNoTokens(6),
      /**
       * <code>k_eMoreInfo = 7;</code>
       */
      k_eMoreInfo(7),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;
      /**
       * <code>k_eNoTokens = 6;</code>
       */
      public static final int k_eNoTokens_VALUE = 6;
      /**
       * <code>k_eMoreInfo = 7;</code>
       */
      public static final int k_eMoreInfo_VALUE = 7;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          case 6: return k_eNoTokens;
          case 7: return k_eMoreInfo;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse)
    }

    public interface TitleChoiceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 prefix_choice = 1;</code>
       * @return Whether the prefixChoice field is set.
       */
      boolean hasPrefixChoice();
      /**
       * <code>optional uint32 prefix_choice = 1;</code>
       * @return The prefixChoice.
       */
      int getPrefixChoice();

      /**
       * <code>optional uint32 suffix_choice = 2;</code>
       * @return Whether the suffixChoice field is set.
       */
      boolean hasSuffixChoice();
      /**
       * <code>optional uint32 suffix_choice = 2;</code>
       * @return The suffixChoice.
       */
      int getSuffixChoice();
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice}
     */
    public static final class TitleChoice extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)
        TitleChoiceOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          TitleChoice.class.getName());
      }
      // Use TitleChoice.newBuilder() to construct.
      private TitleChoice(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private TitleChoice() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder.class);
      }

      private int bitField0_;
      public static final int PREFIX_CHOICE_FIELD_NUMBER = 1;
      private int prefixChoice_ = 0;
      /**
       * <code>optional uint32 prefix_choice = 1;</code>
       * @return Whether the prefixChoice field is set.
       */
      @java.lang.Override
      public boolean hasPrefixChoice() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 prefix_choice = 1;</code>
       * @return The prefixChoice.
       */
      @java.lang.Override
      public int getPrefixChoice() {
        return prefixChoice_;
      }

      public static final int SUFFIX_CHOICE_FIELD_NUMBER = 2;
      private int suffixChoice_ = 0;
      /**
       * <code>optional uint32 suffix_choice = 2;</code>
       * @return Whether the suffixChoice field is set.
       */
      @java.lang.Override
      public boolean hasSuffixChoice() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 suffix_choice = 2;</code>
       * @return The suffixChoice.
       */
      @java.lang.Override
      public int getSuffixChoice() {
        return suffixChoice_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, prefixChoice_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, suffixChoice_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, prefixChoice_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, suffixChoice_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice) obj;

        if (hasPrefixChoice() != other.hasPrefixChoice()) return false;
        if (hasPrefixChoice()) {
          if (getPrefixChoice()
              != other.getPrefixChoice()) return false;
        }
        if (hasSuffixChoice() != other.hasSuffixChoice()) return false;
        if (hasSuffixChoice()) {
          if (getSuffixChoice()
              != other.getSuffixChoice()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPrefixChoice()) {
          hash = (37 * hash) + PREFIX_CHOICE_FIELD_NUMBER;
          hash = (53 * hash) + getPrefixChoice();
        }
        if (hasSuffixChoice()) {
          hash = (37 * hash) + SUFFIX_CHOICE_FIELD_NUMBER;
          hash = (53 * hash) + getSuffixChoice();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          prefixChoice_ = 0;
          suffixChoice_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.prefixChoice_ = prefixChoice_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.suffixChoice_ = suffixChoice_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.getDefaultInstance()) return this;
          if (other.hasPrefixChoice()) {
            setPrefixChoice(other.getPrefixChoice());
          }
          if (other.hasSuffixChoice()) {
            setSuffixChoice(other.getSuffixChoice());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  prefixChoice_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  suffixChoice_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int prefixChoice_ ;
        /**
         * <code>optional uint32 prefix_choice = 1;</code>
         * @return Whether the prefixChoice field is set.
         */
        @java.lang.Override
        public boolean hasPrefixChoice() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 prefix_choice = 1;</code>
         * @return The prefixChoice.
         */
        @java.lang.Override
        public int getPrefixChoice() {
          return prefixChoice_;
        }
        /**
         * <code>optional uint32 prefix_choice = 1;</code>
         * @param value The prefixChoice to set.
         * @return This builder for chaining.
         */
        public Builder setPrefixChoice(int value) {

          prefixChoice_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 prefix_choice = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPrefixChoice() {
          bitField0_ = (bitField0_ & ~0x00000001);
          prefixChoice_ = 0;
          onChanged();
          return this;
        }

        private int suffixChoice_ ;
        /**
         * <code>optional uint32 suffix_choice = 2;</code>
         * @return Whether the suffixChoice field is set.
         */
        @java.lang.Override
        public boolean hasSuffixChoice() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 suffix_choice = 2;</code>
         * @return The suffixChoice.
         */
        @java.lang.Override
        public int getSuffixChoice() {
          return suffixChoice_;
        }
        /**
         * <code>optional uint32 suffix_choice = 2;</code>
         * @param value The suffixChoice to set.
         * @return This builder for chaining.
         */
        public Builder setSuffixChoice(int value) {

          suffixChoice_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 suffix_choice = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSuffixChoice() {
          bitField0_ = (bitField0_ & ~0x00000002);
          suffixChoice_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)
      }

      // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TitleChoice>
          PARSER = new com.google.protobuf.AbstractParser<TitleChoice>() {
        @java.lang.Override
        public TitleChoice parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TitleChoice> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TitleChoice> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse.k_eInternalError : result;
    }

    public static final int OPERATION_ID_FIELD_NUMBER = 2;
    private int operationId_ = 0;
    /**
     * <code>optional uint32 operation_id = 2;</code>
     * @return Whether the operationId field is set.
     */
    @java.lang.Override
    public boolean hasOperationId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 operation_id = 2;</code>
     * @return The operationId.
     */
    @java.lang.Override
    public int getOperationId() {
      return operationId_;
    }

    public static final int TABLET_ID_FIELD_NUMBER = 7;
    private int tabletId_ = 0;
    /**
     * <code>optional uint32 tablet_id = 7;</code>
     * @return Whether the tabletId field is set.
     */
    @java.lang.Override
    public boolean hasTabletId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 tablet_id = 7;</code>
     * @return The tabletId.
     */
    @java.lang.Override
    public int getTabletId() {
      return tabletId_;
    }

    public static final int USER_DATA_FIELD_NUMBER = 8;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
     * @return Whether the userData field is set.
     */
    @java.lang.Override
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
     * @return The userData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 9;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    public static final int PLAYER_CHOICES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList playerChoices_ =
        emptyIntList();
    /**
     * <code>repeated uint32 player_choices = 3;</code>
     * @return A list containing the playerChoices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getPlayerChoicesList() {
      return playerChoices_;
    }
    /**
     * <code>repeated uint32 player_choices = 3;</code>
     * @return The count of playerChoices.
     */
    public int getPlayerChoicesCount() {
      return playerChoices_.size();
    }
    /**
     * <code>repeated uint32 player_choices = 3;</code>
     * @param index The index of the element to return.
     * @return The playerChoices at the given index.
     */
    public int getPlayerChoices(int index) {
      return playerChoices_.getInt(index);
    }

    public static final int PREFIX_CHOICES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList prefixChoices_ =
        emptyIntList();
    /**
     * <code>repeated uint32 prefix_choices = 4;</code>
     * @return A list containing the prefixChoices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getPrefixChoicesList() {
      return prefixChoices_;
    }
    /**
     * <code>repeated uint32 prefix_choices = 4;</code>
     * @return The count of prefixChoices.
     */
    public int getPrefixChoicesCount() {
      return prefixChoices_.size();
    }
    /**
     * <code>repeated uint32 prefix_choices = 4;</code>
     * @param index The index of the element to return.
     * @return The prefixChoices at the given index.
     */
    public int getPrefixChoices(int index) {
      return prefixChoices_.getInt(index);
    }

    public static final int SUFFIX_CHOICES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList suffixChoices_ =
        emptyIntList();
    /**
     * <code>repeated uint32 suffix_choices = 5;</code>
     * @return A list containing the suffixChoices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSuffixChoicesList() {
      return suffixChoices_;
    }
    /**
     * <code>repeated uint32 suffix_choices = 5;</code>
     * @return The count of suffixChoices.
     */
    public int getSuffixChoicesCount() {
      return suffixChoices_.size();
    }
    /**
     * <code>repeated uint32 suffix_choices = 5;</code>
     * @param index The index of the element to return.
     * @return The suffixChoices at the given index.
     */
    public int getSuffixChoices(int index) {
      return suffixChoices_.getInt(index);
    }

    public static final int TITLE_CHOICES_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice> titleChoices_;
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice> getTitleChoicesList() {
      return titleChoices_;
    }
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder> 
        getTitleChoicesOrBuilderList() {
      return titleChoices_;
    }
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    @java.lang.Override
    public int getTitleChoicesCount() {
      return titleChoices_.size();
    }
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice getTitleChoices(int index) {
      return titleChoices_.get(index);
    }
    /**
     * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder getTitleChoicesOrBuilder(
        int index) {
      return titleChoices_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, operationId_);
      }
      for (int i = 0; i < playerChoices_.size(); i++) {
        output.writeUInt32(3, playerChoices_.getInt(i));
      }
      for (int i = 0; i < prefixChoices_.size(); i++) {
        output.writeUInt32(4, prefixChoices_.getInt(i));
      }
      for (int i = 0; i < suffixChoices_.size(); i++) {
        output.writeUInt32(5, suffixChoices_.getInt(i));
      }
      for (int i = 0; i < titleChoices_.size(); i++) {
        output.writeMessage(6, titleChoices_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(7, tabletId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(8, getUserData());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(9, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, operationId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerChoices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerChoices_.getInt(i));
        }
        size += dataSize;
        size += 1 * getPlayerChoicesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prefixChoices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(prefixChoices_.getInt(i));
        }
        size += dataSize;
        size += 1 * getPrefixChoicesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < suffixChoices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(suffixChoices_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSuffixChoicesList().size();
      }
      for (int i = 0; i < titleChoices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, titleChoices_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, tabletId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getUserData());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasOperationId() != other.hasOperationId()) return false;
      if (hasOperationId()) {
        if (getOperationId()
            != other.getOperationId()) return false;
      }
      if (hasTabletId() != other.hasTabletId()) return false;
      if (hasTabletId()) {
        if (getTabletId()
            != other.getTabletId()) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getPlayerChoicesList()
          .equals(other.getPlayerChoicesList())) return false;
      if (!getPrefixChoicesList()
          .equals(other.getPrefixChoicesList())) return false;
      if (!getSuffixChoicesList()
          .equals(other.getSuffixChoicesList())) return false;
      if (!getTitleChoicesList()
          .equals(other.getTitleChoicesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasOperationId()) {
        hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOperationId();
      }
      if (hasTabletId()) {
        hash = (37 * hash) + TABLET_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTabletId();
      }
      if (hasUserData()) {
        hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      if (getPlayerChoicesCount() > 0) {
        hash = (37 * hash) + PLAYER_CHOICES_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerChoicesList().hashCode();
      }
      if (getPrefixChoicesCount() > 0) {
        hash = (37 * hash) + PREFIX_CHOICES_FIELD_NUMBER;
        hash = (53 * hash) + getPrefixChoicesList().hashCode();
      }
      if (getSuffixChoicesCount() > 0) {
        hash = (37 * hash) + SUFFIX_CHOICES_FIELD_NUMBER;
        hash = (53 * hash) + getSuffixChoicesList().hashCode();
      }
      if (getTitleChoicesCount() > 0) {
        hash = (37 * hash) + TITLE_CHOICES_FIELD_NUMBER;
        hash = (53 * hash) + getTitleChoicesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingPerformOperationResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingPerformOperationResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
          getTabletDataFieldBuilder();
          getTitleChoicesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        operationId_ = 0;
        tabletId_ = 0;
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        playerChoices_ = emptyIntList();
        prefixChoices_ = emptyIntList();
        suffixChoices_ = emptyIntList();
        if (titleChoicesBuilder_ == null) {
          titleChoices_ = java.util.Collections.emptyList();
        } else {
          titleChoices_ = null;
          titleChoicesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse result) {
        if (titleChoicesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            titleChoices_ = java.util.Collections.unmodifiableList(titleChoices_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.titleChoices_ = titleChoices_;
        } else {
          result.titleChoices_ = titleChoicesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.operationId_ = operationId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tabletId_ = tabletId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.userData_ = userDataBuilder_ == null
              ? userData_
              : userDataBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          playerChoices_.makeImmutable();
          result.playerChoices_ = playerChoices_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          prefixChoices_.makeImmutable();
          result.prefixChoices_ = prefixChoices_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          suffixChoices_.makeImmutable();
          result.suffixChoices_ = suffixChoices_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasOperationId()) {
          setOperationId(other.getOperationId());
        }
        if (other.hasTabletId()) {
          setTabletId(other.getTabletId());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        if (!other.playerChoices_.isEmpty()) {
          if (playerChoices_.isEmpty()) {
            playerChoices_ = other.playerChoices_;
            playerChoices_.makeImmutable();
            bitField0_ |= 0x00000020;
          } else {
            ensurePlayerChoicesIsMutable();
            playerChoices_.addAll(other.playerChoices_);
          }
          onChanged();
        }
        if (!other.prefixChoices_.isEmpty()) {
          if (prefixChoices_.isEmpty()) {
            prefixChoices_ = other.prefixChoices_;
            prefixChoices_.makeImmutable();
            bitField0_ |= 0x00000040;
          } else {
            ensurePrefixChoicesIsMutable();
            prefixChoices_.addAll(other.prefixChoices_);
          }
          onChanged();
        }
        if (!other.suffixChoices_.isEmpty()) {
          if (suffixChoices_.isEmpty()) {
            suffixChoices_ = other.suffixChoices_;
            suffixChoices_.makeImmutable();
            bitField0_ |= 0x00000080;
          } else {
            ensureSuffixChoicesIsMutable();
            suffixChoices_.addAll(other.suffixChoices_);
          }
          onChanged();
        }
        if (titleChoicesBuilder_ == null) {
          if (!other.titleChoices_.isEmpty()) {
            if (titleChoices_.isEmpty()) {
              titleChoices_ = other.titleChoices_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTitleChoicesIsMutable();
              titleChoices_.addAll(other.titleChoices_);
            }
            onChanged();
          }
        } else {
          if (!other.titleChoices_.isEmpty()) {
            if (titleChoicesBuilder_.isEmpty()) {
              titleChoicesBuilder_.dispose();
              titleChoicesBuilder_ = null;
              titleChoices_ = other.titleChoices_;
              bitField0_ = (bitField0_ & ~0x00000100);
              titleChoicesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTitleChoicesFieldBuilder() : null;
            } else {
              titleChoicesBuilder_.addAllMessages(other.titleChoices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                operationId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int v = input.readUInt32();
                ensurePlayerChoicesIsMutable();
                playerChoices_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePlayerChoicesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  playerChoices_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                int v = input.readUInt32();
                ensurePrefixChoicesIsMutable();
                prefixChoices_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePrefixChoicesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  prefixChoices_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                int v = input.readUInt32();
                ensureSuffixChoicesIsMutable();
                suffixChoices_.addInt(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSuffixChoicesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  suffixChoices_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 50: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.parser(),
                        extensionRegistry);
                if (titleChoicesBuilder_ == null) {
                  ensureTitleChoicesIsMutable();
                  titleChoices_.add(m);
                } else {
                  titleChoicesBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 56: {
                tabletId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 56
              case 66: {
                input.readMessage(
                    getUserDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 74
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingPerformOperationResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private int operationId_ ;
      /**
       * <code>optional uint32 operation_id = 2;</code>
       * @return Whether the operationId field is set.
       */
      @java.lang.Override
      public boolean hasOperationId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 operation_id = 2;</code>
       * @return The operationId.
       */
      @java.lang.Override
      public int getOperationId() {
        return operationId_;
      }
      /**
       * <code>optional uint32 operation_id = 2;</code>
       * @param value The operationId to set.
       * @return This builder for chaining.
       */
      public Builder setOperationId(int value) {

        operationId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 operation_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperationId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operationId_ = 0;
        onChanged();
        return this;
      }

      private int tabletId_ ;
      /**
       * <code>optional uint32 tablet_id = 7;</code>
       * @return Whether the tabletId field is set.
       */
      @java.lang.Override
      public boolean hasTabletId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 tablet_id = 7;</code>
       * @return The tabletId.
       */
      @java.lang.Override
      public int getTabletId() {
        return tabletId_;
      }
      /**
       * <code>optional uint32 tablet_id = 7;</code>
       * @param value The tabletId to set.
       * @return This builder for chaining.
       */
      public Builder setTabletId(int value) {

        tabletId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tablet_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTabletId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tabletId_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> userDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       * @return Whether the userData field is set.
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       * @return The userData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      public Builder setUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      public Builder setUserData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      public Builder mergeUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            userData_ != null &&
            userData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) {
            getUserDataBuilder().mergeFrom(value);
          } else {
            userData_ = value;
          }
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        if (userData_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      private com.google.protobuf.Internal.IntList playerChoices_ = emptyIntList();
      private void ensurePlayerChoicesIsMutable() {
        if (!playerChoices_.isModifiable()) {
          playerChoices_ = makeMutableCopy(playerChoices_);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @return A list containing the playerChoices.
       */
      public java.util.List<java.lang.Integer>
          getPlayerChoicesList() {
        playerChoices_.makeImmutable();
        return playerChoices_;
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @return The count of playerChoices.
       */
      public int getPlayerChoicesCount() {
        return playerChoices_.size();
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @param index The index of the element to return.
       * @return The playerChoices at the given index.
       */
      public int getPlayerChoices(int index) {
        return playerChoices_.getInt(index);
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @param index The index to set the value at.
       * @param value The playerChoices to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerChoices(
          int index, int value) {

        ensurePlayerChoicesIsMutable();
        playerChoices_.setInt(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @param value The playerChoices to add.
       * @return This builder for chaining.
       */
      public Builder addPlayerChoices(int value) {

        ensurePlayerChoicesIsMutable();
        playerChoices_.addInt(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @param values The playerChoices to add.
       * @return This builder for chaining.
       */
      public Builder addAllPlayerChoices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerChoicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerChoices_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_choices = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerChoices() {
        playerChoices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList prefixChoices_ = emptyIntList();
      private void ensurePrefixChoicesIsMutable() {
        if (!prefixChoices_.isModifiable()) {
          prefixChoices_ = makeMutableCopy(prefixChoices_);
        }
        bitField0_ |= 0x00000040;
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @return A list containing the prefixChoices.
       */
      public java.util.List<java.lang.Integer>
          getPrefixChoicesList() {
        prefixChoices_.makeImmutable();
        return prefixChoices_;
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @return The count of prefixChoices.
       */
      public int getPrefixChoicesCount() {
        return prefixChoices_.size();
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @param index The index of the element to return.
       * @return The prefixChoices at the given index.
       */
      public int getPrefixChoices(int index) {
        return prefixChoices_.getInt(index);
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @param index The index to set the value at.
       * @param value The prefixChoices to set.
       * @return This builder for chaining.
       */
      public Builder setPrefixChoices(
          int index, int value) {

        ensurePrefixChoicesIsMutable();
        prefixChoices_.setInt(index, value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @param value The prefixChoices to add.
       * @return This builder for chaining.
       */
      public Builder addPrefixChoices(int value) {

        ensurePrefixChoicesIsMutable();
        prefixChoices_.addInt(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @param values The prefixChoices to add.
       * @return This builder for chaining.
       */
      public Builder addAllPrefixChoices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrefixChoicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, prefixChoices_);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 prefix_choices = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrefixChoices() {
        prefixChoices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList suffixChoices_ = emptyIntList();
      private void ensureSuffixChoicesIsMutable() {
        if (!suffixChoices_.isModifiable()) {
          suffixChoices_ = makeMutableCopy(suffixChoices_);
        }
        bitField0_ |= 0x00000080;
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @return A list containing the suffixChoices.
       */
      public java.util.List<java.lang.Integer>
          getSuffixChoicesList() {
        suffixChoices_.makeImmutable();
        return suffixChoices_;
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @return The count of suffixChoices.
       */
      public int getSuffixChoicesCount() {
        return suffixChoices_.size();
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @param index The index of the element to return.
       * @return The suffixChoices at the given index.
       */
      public int getSuffixChoices(int index) {
        return suffixChoices_.getInt(index);
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @param index The index to set the value at.
       * @param value The suffixChoices to set.
       * @return This builder for chaining.
       */
      public Builder setSuffixChoices(
          int index, int value) {

        ensureSuffixChoicesIsMutable();
        suffixChoices_.setInt(index, value);
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @param value The suffixChoices to add.
       * @return This builder for chaining.
       */
      public Builder addSuffixChoices(int value) {

        ensureSuffixChoicesIsMutable();
        suffixChoices_.addInt(value);
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @param values The suffixChoices to add.
       * @return This builder for chaining.
       */
      public Builder addAllSuffixChoices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSuffixChoicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, suffixChoices_);
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 suffix_choices = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuffixChoices() {
        suffixChoices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice> titleChoices_ =
        java.util.Collections.emptyList();
      private void ensureTitleChoicesIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          titleChoices_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice>(titleChoices_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder> titleChoicesBuilder_;

      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice> getTitleChoicesList() {
        if (titleChoicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(titleChoices_);
        } else {
          return titleChoicesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public int getTitleChoicesCount() {
        if (titleChoicesBuilder_ == null) {
          return titleChoices_.size();
        } else {
          return titleChoicesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice getTitleChoices(int index) {
        if (titleChoicesBuilder_ == null) {
          return titleChoices_.get(index);
        } else {
          return titleChoicesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder setTitleChoices(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice value) {
        if (titleChoicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTitleChoicesIsMutable();
          titleChoices_.set(index, value);
          onChanged();
        } else {
          titleChoicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder setTitleChoices(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder builderForValue) {
        if (titleChoicesBuilder_ == null) {
          ensureTitleChoicesIsMutable();
          titleChoices_.set(index, builderForValue.build());
          onChanged();
        } else {
          titleChoicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder addTitleChoices(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice value) {
        if (titleChoicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTitleChoicesIsMutable();
          titleChoices_.add(value);
          onChanged();
        } else {
          titleChoicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder addTitleChoices(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice value) {
        if (titleChoicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTitleChoicesIsMutable();
          titleChoices_.add(index, value);
          onChanged();
        } else {
          titleChoicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder addTitleChoices(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder builderForValue) {
        if (titleChoicesBuilder_ == null) {
          ensureTitleChoicesIsMutable();
          titleChoices_.add(builderForValue.build());
          onChanged();
        } else {
          titleChoicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder addTitleChoices(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder builderForValue) {
        if (titleChoicesBuilder_ == null) {
          ensureTitleChoicesIsMutable();
          titleChoices_.add(index, builderForValue.build());
          onChanged();
        } else {
          titleChoicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder addAllTitleChoices(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice> values) {
        if (titleChoicesBuilder_ == null) {
          ensureTitleChoicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, titleChoices_);
          onChanged();
        } else {
          titleChoicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder clearTitleChoices() {
        if (titleChoicesBuilder_ == null) {
          titleChoices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          titleChoicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public Builder removeTitleChoices(int index) {
        if (titleChoicesBuilder_ == null) {
          ensureTitleChoicesIsMutable();
          titleChoices_.remove(index);
          onChanged();
        } else {
          titleChoicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder getTitleChoicesBuilder(
          int index) {
        return getTitleChoicesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder getTitleChoicesOrBuilder(
          int index) {
        if (titleChoicesBuilder_ == null) {
          return titleChoices_.get(index);  } else {
          return titleChoicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder> 
           getTitleChoicesOrBuilderList() {
        if (titleChoicesBuilder_ != null) {
          return titleChoicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(titleChoices_);
        }
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder addTitleChoicesBuilder() {
        return getTitleChoicesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder addTitleChoicesBuilder(
          int index) {
        return getTitleChoicesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice title_choices = 6;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder> 
           getTitleChoicesBuilderList() {
        return getTitleChoicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder> 
          getTitleChoicesFieldBuilder() {
        if (titleChoicesBuilder_ == null) {
          titleChoicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoice.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse.TitleChoiceOrBuilder>(
                  titleChoices_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          titleChoices_ = null;
        }
        return titleChoicesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingPerformOperationResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingPerformOperationResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingPerformOperationResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingPerformOperationResponse>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingPerformOperationResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingPerformOperationResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingPerformOperationResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingPerformOperationResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCToClientFantasyCraftingDataUpdated)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();

    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    boolean hasUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgGCToClientFantasyCraftingDataUpdated}
   */
  public static final class CMsgGCToClientFantasyCraftingDataUpdated extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCToClientFantasyCraftingDataUpdated)
      CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgGCToClientFantasyCraftingDataUpdated.class.getName());
    }
    // Use CMsgGCToClientFantasyCraftingDataUpdated.newBuilder() to construct.
    private CMsgGCToClientFantasyCraftingDataUpdated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgGCToClientFantasyCraftingDataUpdated() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgGCToClientFantasyCraftingDataUpdated_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgGCToClientFantasyCraftingDataUpdated_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    public static final int USER_DATA_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    @java.lang.Override
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 4;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      if (hasUserData()) {
        hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCToClientFantasyCraftingDataUpdated}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCToClientFantasyCraftingDataUpdated)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdatedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgGCToClientFantasyCraftingDataUpdated_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgGCToClientFantasyCraftingDataUpdated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
          getTabletDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgGCToClientFantasyCraftingDataUpdated_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.userData_ = userDataBuilder_ == null
              ? userData_
              : userDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getUserDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 34: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> userDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return Whether the userData field is set.
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return The userData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder mergeUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            userData_ != null &&
            userData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) {
            getUserDataBuilder().mergeFrom(value);
          } else {
            userData_ = value;
          }
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        if (userData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCToClientFantasyCraftingDataUpdated)
    }

    // @@protoc_insertion_point(class_scope:CMsgGCToClientFantasyCraftingDataUpdated)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgGCToClientFantasyCraftingDataUpdated>
        PARSER = new com.google.protobuf.AbstractParser<CMsgGCToClientFantasyCraftingDataUpdated>() {
      @java.lang.Override
      public CMsgGCToClientFantasyCraftingDataUpdated parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgGCToClientFantasyCraftingDataUpdated> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCToClientFantasyCraftingDataUpdated> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgGCToClientFantasyCraftingDataUpdated getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingDevModifyTabletOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingDevModifyTablet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();

    /**
     * <code>optional bool reset_tablet = 2;</code>
     * @return Whether the resetTablet field is set.
     */
    boolean hasResetTablet();
    /**
     * <code>optional bool reset_tablet = 2;</code>
     * @return The resetTablet.
     */
    boolean getResetTablet();

    /**
     * <code>optional uint32 modify_tokens = 3;</code>
     * @return Whether the modifyTokens field is set.
     */
    boolean hasModifyTokens();
    /**
     * <code>optional uint32 modify_tokens = 3;</code>
     * @return The modifyTokens.
     */
    int getModifyTokens();

    /**
     * <code>optional bool upgrade_tablets = 6;</code>
     * @return Whether the upgradeTablets field is set.
     */
    boolean hasUpgradeTablets();
    /**
     * <code>optional bool upgrade_tablets = 6;</code>
     * @return The upgradeTablets.
     */
    boolean getUpgradeTablets();

    /**
     * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    boolean hasFantasyPeriod();
    /**
     * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    int getFantasyPeriod();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingDevModifyTablet}
   */
  public static final class CMsgClientToGCFantasyCraftingDevModifyTablet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingDevModifyTablet)
      CMsgClientToGCFantasyCraftingDevModifyTabletOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingDevModifyTablet.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingDevModifyTablet.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingDevModifyTablet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingDevModifyTablet() {
      fantasyPeriod_ = -1;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    public static final int RESET_TABLET_FIELD_NUMBER = 2;
    private boolean resetTablet_ = false;
    /**
     * <code>optional bool reset_tablet = 2;</code>
     * @return Whether the resetTablet field is set.
     */
    @java.lang.Override
    public boolean hasResetTablet() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool reset_tablet = 2;</code>
     * @return The resetTablet.
     */
    @java.lang.Override
    public boolean getResetTablet() {
      return resetTablet_;
    }

    public static final int MODIFY_TOKENS_FIELD_NUMBER = 3;
    private int modifyTokens_ = 0;
    /**
     * <code>optional uint32 modify_tokens = 3;</code>
     * @return Whether the modifyTokens field is set.
     */
    @java.lang.Override
    public boolean hasModifyTokens() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 modify_tokens = 3;</code>
     * @return The modifyTokens.
     */
    @java.lang.Override
    public int getModifyTokens() {
      return modifyTokens_;
    }

    public static final int UPGRADE_TABLETS_FIELD_NUMBER = 6;
    private boolean upgradeTablets_ = false;
    /**
     * <code>optional bool upgrade_tablets = 6;</code>
     * @return Whether the upgradeTablets field is set.
     */
    @java.lang.Override
    public boolean hasUpgradeTablets() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool upgrade_tablets = 6;</code>
     * @return The upgradeTablets.
     */
    @java.lang.Override
    public boolean getUpgradeTablets() {
      return upgradeTablets_;
    }

    public static final int FANTASY_PERIOD_FIELD_NUMBER = 5;
    private int fantasyPeriod_ = -1;
    /**
     * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
     * @return Whether the fantasyPeriod field is set.
     */
    @java.lang.Override
    public boolean hasFantasyPeriod() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
     * @return The fantasyPeriod.
     */
    @java.lang.Override
    public int getFantasyPeriod() {
      return fantasyPeriod_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, resetTablet_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, modifyTokens_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, fantasyPeriod_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(6, upgradeTablets_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, resetTablet_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, modifyTokens_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, fantasyPeriod_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, upgradeTablets_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (hasResetTablet() != other.hasResetTablet()) return false;
      if (hasResetTablet()) {
        if (getResetTablet()
            != other.getResetTablet()) return false;
      }
      if (hasModifyTokens() != other.hasModifyTokens()) return false;
      if (hasModifyTokens()) {
        if (getModifyTokens()
            != other.getModifyTokens()) return false;
      }
      if (hasUpgradeTablets() != other.hasUpgradeTablets()) return false;
      if (hasUpgradeTablets()) {
        if (getUpgradeTablets()
            != other.getUpgradeTablets()) return false;
      }
      if (hasFantasyPeriod() != other.hasFantasyPeriod()) return false;
      if (hasFantasyPeriod()) {
        if (getFantasyPeriod()
            != other.getFantasyPeriod()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      if (hasResetTablet()) {
        hash = (37 * hash) + RESET_TABLET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getResetTablet());
      }
      if (hasModifyTokens()) {
        hash = (37 * hash) + MODIFY_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getModifyTokens();
      }
      if (hasUpgradeTablets()) {
        hash = (37 * hash) + UPGRADE_TABLETS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUpgradeTablets());
      }
      if (hasFantasyPeriod()) {
        hash = (37 * hash) + FANTASY_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyPeriod();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingDevModifyTablet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingDevModifyTablet)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        resetTablet_ = false;
        modifyTokens_ = 0;
        upgradeTablets_ = false;
        fantasyPeriod_ = -1;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.resetTablet_ = resetTablet_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.modifyTokens_ = modifyTokens_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.upgradeTablets_ = upgradeTablets_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.fantasyPeriod_ = fantasyPeriod_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        if (other.hasResetTablet()) {
          setResetTablet(other.getResetTablet());
        }
        if (other.hasModifyTokens()) {
          setModifyTokens(other.getModifyTokens());
        }
        if (other.hasUpgradeTablets()) {
          setUpgradeTablets(other.getUpgradeTablets());
        }
        if (other.hasFantasyPeriod()) {
          setFantasyPeriod(other.getFantasyPeriod());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                resetTablet_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                modifyTokens_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 40: {
                fantasyPeriod_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                upgradeTablets_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      private boolean resetTablet_ ;
      /**
       * <code>optional bool reset_tablet = 2;</code>
       * @return Whether the resetTablet field is set.
       */
      @java.lang.Override
      public boolean hasResetTablet() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool reset_tablet = 2;</code>
       * @return The resetTablet.
       */
      @java.lang.Override
      public boolean getResetTablet() {
        return resetTablet_;
      }
      /**
       * <code>optional bool reset_tablet = 2;</code>
       * @param value The resetTablet to set.
       * @return This builder for chaining.
       */
      public Builder setResetTablet(boolean value) {

        resetTablet_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reset_tablet = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearResetTablet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resetTablet_ = false;
        onChanged();
        return this;
      }

      private int modifyTokens_ ;
      /**
       * <code>optional uint32 modify_tokens = 3;</code>
       * @return Whether the modifyTokens field is set.
       */
      @java.lang.Override
      public boolean hasModifyTokens() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 modify_tokens = 3;</code>
       * @return The modifyTokens.
       */
      @java.lang.Override
      public int getModifyTokens() {
        return modifyTokens_;
      }
      /**
       * <code>optional uint32 modify_tokens = 3;</code>
       * @param value The modifyTokens to set.
       * @return This builder for chaining.
       */
      public Builder setModifyTokens(int value) {

        modifyTokens_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 modify_tokens = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifyTokens() {
        bitField0_ = (bitField0_ & ~0x00000004);
        modifyTokens_ = 0;
        onChanged();
        return this;
      }

      private boolean upgradeTablets_ ;
      /**
       * <code>optional bool upgrade_tablets = 6;</code>
       * @return Whether the upgradeTablets field is set.
       */
      @java.lang.Override
      public boolean hasUpgradeTablets() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool upgrade_tablets = 6;</code>
       * @return The upgradeTablets.
       */
      @java.lang.Override
      public boolean getUpgradeTablets() {
        return upgradeTablets_;
      }
      /**
       * <code>optional bool upgrade_tablets = 6;</code>
       * @param value The upgradeTablets to set.
       * @return This builder for chaining.
       */
      public Builder setUpgradeTablets(boolean value) {

        upgradeTablets_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool upgrade_tablets = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpgradeTablets() {
        bitField0_ = (bitField0_ & ~0x00000008);
        upgradeTablets_ = false;
        onChanged();
        return this;
      }

      private int fantasyPeriod_ = -1;
      /**
       * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
       * @return Whether the fantasyPeriod field is set.
       */
      @java.lang.Override
      public boolean hasFantasyPeriod() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
       * @return The fantasyPeriod.
       */
      @java.lang.Override
      public int getFantasyPeriod() {
        return fantasyPeriod_;
      }
      /**
       * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
       * @param value The fantasyPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyPeriod(int value) {

        fantasyPeriod_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_period = 5 [default = 4294967295];</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyPeriod() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fantasyPeriod_ = -1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingDevModifyTablet)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingDevModifyTablet)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingDevModifyTablet>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingDevModifyTablet>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingDevModifyTablet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingDevModifyTablet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingDevModifyTablet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTablet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingDevModifyTabletResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingDevModifyTabletResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse getResponse();

    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    boolean hasUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingDevModifyTabletResponse}
   */
  public static final class CMsgClientToGCFantasyCraftingDevModifyTabletResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingDevModifyTabletResponse)
      CMsgClientToGCFantasyCraftingDevModifyTabletResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingDevModifyTabletResponse.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingDevModifyTabletResponse.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingDevModifyTabletResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingDevModifyTabletResponse() {
      response_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse.k_eInternalError : result;
    }

    public static final int USER_DATA_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    @java.lang.Override
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasUserData()) {
        hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingDevModifyTabletResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingDevModifyTabletResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
          getTabletDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.userData_ = userDataBuilder_ == null
              ? userData_
              : userDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getUserDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingDevModifyTabletResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> userDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return Whether the userData field is set.
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return The userData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder mergeUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            userData_ != null &&
            userData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) {
            getUserDataBuilder().mergeFrom(value);
          } else {
            userData_ = value;
          }
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        if (userData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingDevModifyTabletResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingDevModifyTabletResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingDevModifyTabletResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingDevModifyTabletResponse>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingDevModifyTabletResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingDevModifyTabletResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingDevModifyTabletResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingDevModifyTabletResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingSelectPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingSelectPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();

    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return The accountId.
     */
    int getAccountId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingSelectPlayer}
   */
  public static final class CMsgClientToGCFantasyCraftingSelectPlayer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingSelectPlayer)
      CMsgClientToGCFantasyCraftingSelectPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingSelectPlayer.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingSelectPlayer.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingSelectPlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingSelectPlayer() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 account_id = 2;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingSelectPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingSelectPlayer)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        accountId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingSelectPlayer)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingSelectPlayer)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingSelectPlayer>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingSelectPlayer>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingSelectPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingSelectPlayer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingSelectPlayer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingSelectPlayerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingSelectPlayerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse getResponse();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingSelectPlayerResponse}
   */
  public static final class CMsgClientToGCFantasyCraftingSelectPlayerResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingSelectPlayerResponse)
      CMsgClientToGCFantasyCraftingSelectPlayerResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingSelectPlayerResponse.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingSelectPlayerResponse.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingSelectPlayerResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingSelectPlayerResponse() {
      response_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      /**
       * <code>k_eInvalidPlayer = 6;</code>
       */
      k_eInvalidPlayer(6),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;
      /**
       * <code>k_eInvalidPlayer = 6;</code>
       */
      public static final int k_eInvalidPlayer_VALUE = 6;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          case 6: return k_eInvalidPlayer;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse.k_eInternalError : result;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingSelectPlayerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingSelectPlayerResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getTabletDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingSelectPlayerResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingSelectPlayerResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingSelectPlayerResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingSelectPlayerResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingSelectPlayerResponse>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingSelectPlayerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingSelectPlayerResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingSelectPlayerResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingSelectPlayerResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingGenerateTabletsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingGenerateTablets)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();

    /**
     * <code>repeated uint32 account_ids = 2;</code>
     * @return A list containing the accountIds.
     */
    java.util.List<java.lang.Integer> getAccountIdsList();
    /**
     * <code>repeated uint32 account_ids = 2;</code>
     * @return The count of accountIds.
     */
    int getAccountIdsCount();
    /**
     * <code>repeated uint32 account_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The accountIds at the given index.
     */
    int getAccountIds(int index);
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingGenerateTablets}
   */
  public static final class CMsgClientToGCFantasyCraftingGenerateTablets extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingGenerateTablets)
      CMsgClientToGCFantasyCraftingGenerateTabletsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingGenerateTablets.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingGenerateTablets.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingGenerateTablets(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingGenerateTablets() {
      accountIds_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    public static final int ACCOUNT_IDS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList accountIds_ =
        emptyIntList();
    /**
     * <code>repeated uint32 account_ids = 2;</code>
     * @return A list containing the accountIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated uint32 account_ids = 2;</code>
     * @return The count of accountIds.
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated uint32 account_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The accountIds at the given index.
     */
    public int getAccountIds(int index) {
      return accountIds_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeUInt32(2, accountIds_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(accountIds_.getInt(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (!getAccountIdsList()
          .equals(other.getAccountIdsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      if (getAccountIdsCount() > 0) {
        hash = (37 * hash) + ACCOUNT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getAccountIdsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingGenerateTablets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingGenerateTablets)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        accountIds_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          accountIds_.makeImmutable();
          result.accountIds_ = accountIds_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            accountIds_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int v = input.readUInt32();
                ensureAccountIdsIsMutable();
                accountIds_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAccountIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  accountIds_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList accountIds_ = emptyIntList();
      private void ensureAccountIdsIsMutable() {
        if (!accountIds_.isModifiable()) {
          accountIds_ = makeMutableCopy(accountIds_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return A list containing the accountIds.
       */
      public java.util.List<java.lang.Integer>
          getAccountIdsList() {
        accountIds_.makeImmutable();
        return accountIds_;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return The count of accountIds.
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The accountIds at the given index.
       */
      public int getAccountIds(int index) {
        return accountIds_.getInt(index);
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The accountIds to set.
       * @return This builder for chaining.
       */
      public Builder setAccountIds(
          int index, int value) {

        ensureAccountIdsIsMutable();
        accountIds_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @param value The accountIds to add.
       * @return This builder for chaining.
       */
      public Builder addAccountIds(int value) {

        ensureAccountIdsIsMutable();
        accountIds_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @param values The accountIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAccountIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accountIds_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountIds() {
        accountIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingGenerateTablets)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingGenerateTablets)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGenerateTablets>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingGenerateTablets>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingGenerateTablets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGenerateTablets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGenerateTablets> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTablets getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingGenerateTabletsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingGenerateTabletsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse getResponse();

    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    boolean hasUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingGenerateTabletsResponse}
   */
  public static final class CMsgClientToGCFantasyCraftingGenerateTabletsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingGenerateTabletsResponse)
      CMsgClientToGCFantasyCraftingGenerateTabletsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingGenerateTabletsResponse.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingGenerateTabletsResponse.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingGenerateTabletsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingGenerateTabletsResponse() {
      response_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      /**
       * <code>k_eInvalidPlayer = 6;</code>
       */
      k_eInvalidPlayer(6),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;
      /**
       * <code>k_eInvalidPlayer = 6;</code>
       */
      public static final int k_eInvalidPlayer_VALUE = 6;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          case 6: return k_eInvalidPlayer;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse.k_eInternalError : result;
    }

    public static final int USER_DATA_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    @java.lang.Override
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserData());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasUserData()) {
        hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingGenerateTabletsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingGenerateTabletsResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
          getTabletDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.userData_ = userDataBuilder_ == null
              ? userData_
              : userDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getUserDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingGenerateTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> userDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return Whether the userData field is set.
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return The userData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder mergeUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            userData_ != null &&
            userData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) {
            getUserDataBuilder().mergeFrom(value);
          } else {
            userData_ = value;
          }
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        if (userData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingGenerateTabletsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingGenerateTabletsResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGenerateTabletsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingGenerateTabletsResponse>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingGenerateTabletsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGenerateTabletsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingGenerateTabletsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingGenerateTabletsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGcFantasyCraftingUpgradeTabletsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGcFantasyCraftingUpgradeTablets)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();
  }
  /**
   * Protobuf type {@code CMsgClientToGcFantasyCraftingUpgradeTablets}
   */
  public static final class CMsgClientToGcFantasyCraftingUpgradeTablets extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGcFantasyCraftingUpgradeTablets)
      CMsgClientToGcFantasyCraftingUpgradeTabletsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGcFantasyCraftingUpgradeTablets.class.getName());
    }
    // Use CMsgClientToGcFantasyCraftingUpgradeTablets.newBuilder() to construct.
    private CMsgClientToGcFantasyCraftingUpgradeTablets(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGcFantasyCraftingUpgradeTablets() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGcFantasyCraftingUpgradeTablets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGcFantasyCraftingUpgradeTablets)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGcFantasyCraftingUpgradeTablets)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGcFantasyCraftingUpgradeTablets)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGcFantasyCraftingUpgradeTablets>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGcFantasyCraftingUpgradeTablets>() {
      @java.lang.Override
      public CMsgClientToGcFantasyCraftingUpgradeTablets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGcFantasyCraftingUpgradeTablets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGcFantasyCraftingUpgradeTablets> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTablets getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGcFantasyCraftingUpgradeTabletsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse getResponse();

    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return Whether the tabletData field is set.
     */
    boolean hasTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return The tabletData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgClientToGcFantasyCraftingUpgradeTabletsResponse}
   */
  public static final class CMsgClientToGcFantasyCraftingUpgradeTabletsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)
      CMsgClientToGcFantasyCraftingUpgradeTabletsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.class.getName());
    }
    // Use CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.newBuilder() to construct.
    private CMsgClientToGcFantasyCraftingUpgradeTabletsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGcFantasyCraftingUpgradeTabletsResponse() {
      response_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse.k_eInternalError : result;
    }

    public static final int TABLET_DATA_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return Whether the tabletData field is set.
     */
    @java.lang.Override
    public boolean hasTabletData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     * @return The tabletData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
      return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getTabletData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTabletData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasTabletData() != other.hasTabletData()) return false;
      if (hasTabletData()) {
        if (!getTabletData()
            .equals(other.getTabletData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasTabletData()) {
        hash = (37 * hash) + TABLET_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTabletData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGcFantasyCraftingUpgradeTabletsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getTabletDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tabletData_ = tabletDataBuilder_ == null
              ? tabletData_
              : tabletDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasTabletData()) {
          mergeTabletData(other.getTabletData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 26: {
                input.readMessage(
                    getTabletDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGcFantasyCraftingUpgradeTabletsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData tabletData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> tabletDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       * @return Whether the tabletData field is set.
       */
      public boolean hasTabletData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       * @return The tabletData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData getTabletData() {
        if (tabletDataBuilder_ == null) {
          return tabletData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        } else {
          return tabletDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder setTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tabletData_ = value;
        } else {
          tabletDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder setTabletData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder builderForValue) {
        if (tabletDataBuilder_ == null) {
          tabletData_ = builderForValue.build();
        } else {
          tabletDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder mergeTabletData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData value) {
        if (tabletDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tabletData_ != null &&
            tabletData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance()) {
            getTabletDataBuilder().mergeFrom(value);
          } else {
            tabletData_ = value;
          }
        } else {
          tabletDataBuilder_.mergeFrom(value);
        }
        if (tabletData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public Builder clearTabletData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tabletData_ = null;
        if (tabletDataBuilder_ != null) {
          tabletDataBuilder_.dispose();
          tabletDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder getTabletDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTabletDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder getTabletDataOrBuilder() {
        if (tabletDataBuilder_ != null) {
          return tabletDataBuilder_.getMessageOrBuilder();
        } else {
          return tabletData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.getDefaultInstance() : tabletData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingTabletData tablet_data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder> 
          getTabletDataFieldBuilder() {
        if (tabletDataBuilder_ == null) {
          tabletDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingTabletDataOrBuilder>(
                  getTabletData(),
                  getParentForChildren(),
                  isClean());
          tabletData_ = null;
        }
        return tabletDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGcFantasyCraftingUpgradeTabletsResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGcFantasyCraftingUpgradeTabletsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGcFantasyCraftingUpgradeTabletsResponse>() {
      @java.lang.Override
      public CMsgClientToGcFantasyCraftingUpgradeTabletsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGcFantasyCraftingUpgradeTabletsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGcFantasyCraftingUpgradeTabletsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGcFantasyCraftingUpgradeTabletsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingRerollOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingRerollOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    boolean hasFantasyLeague();
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    int getFantasyLeague();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingRerollOptions}
   */
  public static final class CMsgClientToGCFantasyCraftingRerollOptions extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingRerollOptions)
      CMsgClientToGCFantasyCraftingRerollOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingRerollOptions.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingRerollOptions.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingRerollOptions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingRerollOptions() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_FIELD_NUMBER = 1;
    private int fantasyLeague_ = 0;
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return Whether the fantasyLeague field is set.
     */
    @java.lang.Override
    public boolean hasFantasyLeague() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 fantasy_league = 1;</code>
     * @return The fantasyLeague.
     */
    @java.lang.Override
    public int getFantasyLeague() {
      return fantasyLeague_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, fantasyLeague_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeague_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions) obj;

      if (hasFantasyLeague() != other.hasFantasyLeague()) return false;
      if (hasFantasyLeague()) {
        if (getFantasyLeague()
            != other.getFantasyLeague()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeague()) {
        hash = (37 * hash) + FANTASY_LEAGUE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeague();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingRerollOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingRerollOptions)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fantasyLeague_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptions_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fantasyLeague_ = fantasyLeague_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions.getDefaultInstance()) return this;
        if (other.hasFantasyLeague()) {
          setFantasyLeague(other.getFantasyLeague());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fantasyLeague_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fantasyLeague_ ;
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return Whether the fantasyLeague field is set.
       */
      @java.lang.Override
      public boolean hasFantasyLeague() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return The fantasyLeague.
       */
      @java.lang.Override
      public int getFantasyLeague() {
        return fantasyLeague_;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @param value The fantasyLeague to set.
       * @return This builder for chaining.
       */
      public Builder setFantasyLeague(int value) {

        fantasyLeague_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFantasyLeague() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeague_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingRerollOptions)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingRerollOptions)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingRerollOptions>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingRerollOptions>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingRerollOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingRerollOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingRerollOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCFantasyCraftingRerollOptionsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCFantasyCraftingRerollOptionsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    boolean hasResponse();
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse getResponse();

    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    boolean hasUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData();
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgClientToGCFantasyCraftingRerollOptionsResponse}
   */
  public static final class CMsgClientToGCFantasyCraftingRerollOptionsResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCFantasyCraftingRerollOptionsResponse)
      CMsgClientToGCFantasyCraftingRerollOptionsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgClientToGCFantasyCraftingRerollOptionsResponse.class.getName());
    }
    // Use CMsgClientToGCFantasyCraftingRerollOptionsResponse.newBuilder() to construct.
    private CMsgClientToGCFantasyCraftingRerollOptionsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCFantasyCraftingRerollOptionsResponse() {
      response_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse}
     */
    public enum EResponse
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eInternalError = 0;</code>
       */
      k_eInternalError(0),
      /**
       * <code>k_eSuccess = 1;</code>
       */
      k_eSuccess(1),
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      k_eTooBusy(2),
      /**
       * <code>k_eDisabled = 3;</code>
       */
      k_eDisabled(3),
      /**
       * <code>k_eTimeout = 4;</code>
       */
      k_eTimeout(4),
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      k_eInvalidLeague(5),
      /**
       * <code>k_eInsufficientTokens = 6;</code>
       */
      k_eInsufficientTokens(6),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          EResponse.class.getName());
      }
      /**
       * <code>k_eInternalError = 0;</code>
       */
      public static final int k_eInternalError_VALUE = 0;
      /**
       * <code>k_eSuccess = 1;</code>
       */
      public static final int k_eSuccess_VALUE = 1;
      /**
       * <code>k_eTooBusy = 2;</code>
       */
      public static final int k_eTooBusy_VALUE = 2;
      /**
       * <code>k_eDisabled = 3;</code>
       */
      public static final int k_eDisabled_VALUE = 3;
      /**
       * <code>k_eTimeout = 4;</code>
       */
      public static final int k_eTimeout_VALUE = 4;
      /**
       * <code>k_eInvalidLeague = 5;</code>
       */
      public static final int k_eInvalidLeague_VALUE = 5;
      /**
       * <code>k_eInsufficientTokens = 6;</code>
       */
      public static final int k_eInsufficientTokens_VALUE = 6;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResponse valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EResponse forNumber(int value) {
        switch (value) {
          case 0: return k_eInternalError;
          case 1: return k_eSuccess;
          case 2: return k_eTooBusy;
          case 3: return k_eDisabled;
          case 4: return k_eTimeout;
          case 5: return k_eInvalidLeague;
          case 6: return k_eInsufficientTokens;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResponse>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResponse> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResponse>() {
              public EResponse findValueByNumber(int number) {
                return EResponse.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResponse[] VALUES = values();

      public static EResponse valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResponse(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse)
    }

    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private int response_ = 0;
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return Whether the response field is set.
     */
    @java.lang.Override public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
     * @return The response.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse getResponse() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse.forNumber(response_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse.k_eInternalError : result;
    }

    public static final int USER_DATA_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return Whether the userData field is set.
     */
    @java.lang.Override
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     * @return The userData.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }
    /**
     * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getUserData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, response_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse) obj;

      if (hasResponse() != other.hasResponse()) return false;
      if (hasResponse()) {
        if (response_ != other.response_) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + response_;
      }
      if (hasUserData()) {
        hash = (37 * hash) + USER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCFantasyCraftingRerollOptionsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCFantasyCraftingRerollOptionsResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        response_ = 0;
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.response_ = response_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.userData_ = userDataBuilder_ == null
              ? userData_
              : userDataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  response_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getUserDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int response_ = 0;
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return Whether the response field is set.
       */
      @java.lang.Override public boolean hasResponse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return The response.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse getResponse() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse result = kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse.forNumber(response_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse.k_eInternalError : result;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @param value The response to set.
       * @return This builder for chaining.
       */
      public Builder setResponse(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        response_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCFantasyCraftingRerollOptionsResponse.EResponse response = 1 [default = k_eInternalError];</code>
       * @return This builder for chaining.
       */
      public Builder clearResponse() {
        bitField0_ = (bitField0_ & ~0x00000001);
        response_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData userData_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> userDataBuilder_;
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return Whether the userData field is set.
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       * @return The userData.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder setUserData(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder mergeUserData(kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            userData_ != null &&
            userData_ != kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance()) {
            getUserDataBuilder().mergeFrom(value);
          } else {
            userData_ = value;
          }
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        if (userData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public Builder clearUserData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userData_ = null;
        if (userDataBuilder_ != null) {
          userDataBuilder_.dispose();
          userDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <code>optional .CMsgDotaFantasyCraftingUserData user_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserData.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgDotaFantasyCraftingUserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCFantasyCraftingRerollOptionsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCFantasyCraftingRerollOptionsResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingRerollOptionsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCFantasyCraftingRerollOptionsResponse>() {
      @java.lang.Override
      public CMsgClientToGCFantasyCraftingRerollOptionsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingRerollOptionsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCFantasyCraftingRerollOptionsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientFantasy.CMsgClientToGCFantasyCraftingRerollOptionsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPlayerInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPlayerInfo_Results_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPlayerInfo_Results_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPlayerInfo_AuditEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPlayerInfo_AuditEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPlayerInfoList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPlayerInfoList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATeamRoster_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATeamRoster_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCProfileInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCProfileInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTALeaderboards_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTALeaderboards_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTALeaderboards_RegionLeaderboard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTALeaderboards_RegionLeaderboard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPassportVote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyDPCLeagueStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCSearchResults_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCSearchResults_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCSearchResults_Player_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCSearchResults_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCSearchResults_Team_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCSearchResults_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCSearchResults_League_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCSearchResults_League_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCTeamFavoriteRankings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingTabletPeriodData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingTabletData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingTabletData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingUserData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingUserData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingDataCache_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingDataCache_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingGetData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingGetData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingPerformOperation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingPerformOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCToClientFantasyCraftingDataUpdated_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCToClientFantasyCraftingDataUpdated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingRerollOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingRerollOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$dota_gcmessages_client_fantasy.proto\032\027" +
      "dota_shared_enums.proto\"\205\005\n\022CMsgDOTAPlay" +
      "erInfo\022\022\n\naccount_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t" +
      "\022\024\n\014country_code\030\003 \001(\t\022<\n\014fantasy_role\030\004" +
      " \001(\0162\016.Fantasy_Roles:\026FANTASY_ROLE_UNDEF" +
      "INED\022\017\n\007team_id\030\005 \001(\r\022\021\n\tteam_name\030\006 \001(\t" +
      "\022\020\n\010team_tag\030\007 \001(\t\022\017\n\007sponsor\030\010 \001(\t\022\021\n\ti" +
      "s_locked\030\t \001(\010\022\016\n\006is_pro\030\n \001(\010\022\021\n\treal_n" +
      "ame\030\013 \001(\t\022\026\n\016total_earnings\030\r \001(\r\022,\n\007res" +
      "ults\030\016 \003(\0132\033.CMsgDOTAPlayerInfo.Results\022" +
      "\025\n\rteam_url_logo\030\017 \001(\t\0225\n\raudit_entries\030" +
      "\020 \003(\0132\036.CMsgDOTAPlayerInfo.AuditEntry\022\031\n" +
      "\021team_abbreviation\030\021 \001(\t\032A\n\007Results\022\021\n\tl" +
      "eague_id\030\001 \001(\r\022\021\n\tplacement\030\002 \001(\r\022\020\n\010ear" +
      "nings\030\003 \001(\r\032\211\001\n\nAuditEntry\022\027\n\017start_time" +
      "stamp\030\001 \001(\r\022\025\n\rend_timestamp\030\002 \001(\r\022\017\n\007te" +
      "am_id\030\003 \001(\r\022\021\n\tteam_name\030\004 \001(\t\022\020\n\010team_t" +
      "ag\030\005 \001(\t\022\025\n\rteam_url_logo\030\006 \001(\t\"C\n\026CMsgD" +
      "OTAPlayerInfoList\022)\n\014player_infos\030\001 \003(\0132" +
      "\023.CMsgDOTAPlayerInfo\"n\n\022CMsgDOTATeamRost" +
      "er\022\021\n\ttimestamp\030\001 \001(\r\022\017\n\007team_id\030\002 \001(\r\022\032" +
      "\n\022member_account_ids\030\003 \003(\r\022\030\n\020coach_acco" +
      "unt_id\030\004 \001(\r\"\213\003\n\026CMsgDOTADPCProfileInfo\022" +
      "(\n\013player_info\030\001 \001(\0132\023.CMsgDOTAPlayerInf" +
      "o\022?\n\017prediction_info\030\002 \001(\0132&.CMsgDOTADPC" +
      "ProfileInfo.PredictionInfo\0229\n\014fantasy_in" +
      "fo\030\003 \001(\0132#.CMsgDOTADPCProfileInfo.Fantas" +
      "yInfo\022\036\n\026disabled_notifications\030\004 \003(\r\0329\n" +
      "\016PredictionInfo\022\017\n\007percent\030\001 \001(\r\022\026\n\016shar" +
      "d_winnings\030\002 \001(\005\032p\n\013FantasyInfo\022\027\n\017top_9" +
      "0_finishes\030\001 \001(\r\022\027\n\017top_75_finishes\030\002 \001(" +
      "\r\022\027\n\017top_50_finishes\030\003 \001(\r\022\026\n\016shard_winn" +
      "ings\030\004 \001(\r\"\221\001\n\024CMsgDOTALeaderboards\022=\n\014l" +
      "eaderboards\030\002 \003(\0132\'.CMsgDOTALeaderboards" +
      ".RegionLeaderboard\032:\n\021RegionLeaderboard\022" +
      "\020\n\010division\030\001 \001(\r\022\023\n\013account_ids\030\002 \003(\r\"Z" +
      "\n\035CMsgDOTAPassportVoteTeamGuess\022\021\n\tleagu" +
      "e_id\030\001 \001(\r\022\021\n\twinner_id\030\002 \001(\r\022\023\n\013runneru" +
      "p_id\030\003 \001(\r\"\221\001\n$CMsgDOTAPassportVoteGener" +
      "icSelection\022V\n\017selection_index\030\001 \001(\0162\".D" +
      "OTA_2013PassportSelectionIndices:\031PP13_S" +
      "EL_ALLSTAR_PLAYER_0\022\021\n\tselection\030\002 \001(\r\"F" +
      "\n\035CMsgDOTAPassportStampedPlayer\022\020\n\010steam" +
      "_id\030\001 \001(\004\022\023\n\013stamp_level\030\002 \001(\r\";\n#CMsgDO" +
      "TAPassportPlayerCardChallenge\022\024\n\014challen" +
      "ge_id\030\001 \001(\r\"\214\002\n\024CMsgDOTAPassportVote\0222\n\n" +
      "team_votes\030\001 \003(\0132\036.CMsgDOTAPassportVoteT" +
      "eamGuess\022A\n\022generic_selections\030\002 \003(\0132%.C" +
      "MsgDOTAPassportVoteGenericSelection\0227\n\017s" +
      "tamped_players\030\003 \003(\0132\036.CMsgDOTAPassportS" +
      "tampedPlayer\022D\n\026player_card_challenges\030\004" +
      " \003(\0132$.CMsgDOTAPassportPlayerCardChallen" +
      "ge\"a\n(CMsgClientToGCGetPlayerCardRosterR" +
      "equest\022\021\n\tleague_id\030\001 \001(\r\022\"\n\016fantasy_per" +
      "iod\030\003 \001(\r:\n4294967295\"\262\002\n)CMsgClientToGC" +
      "GetPlayerCardRosterResponse\022J\n\006result\030\001 " +
      "\001(\01621.CMsgClientToGCGetPlayerCardRosterR" +
      "esponse.Result:\007SUCCESS\022\033\n\023player_card_i" +
      "tem_id\030\002 \003(\004\022\r\n\005score\030\003 \001(\002\022\021\n\tfinalized" +
      "\030\004 \001(\010\022\022\n\npercentile\030\005 \001(\002\"f\n\006Result\022\013\n\007" +
      "SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\033\n\027ERRO" +
      "R_INVALID_LEAGUE_ID\020\002\022\033\n\027ERROR_INVALID_T" +
      "IMESTAMP\020\003\"\324\001\n-CMsgClientToGCBatchGetPla" +
      "yerCardRosterRequest\022Y\n\021league_timestamp" +
      "s\030\001 \003(\0132>.CMsgClientToGCBatchGetPlayerCa" +
      "rdRosterRequest.LeagueTimestamp\032H\n\017Leagu" +
      "eTimestamp\022\021\n\tleague_id\030\001 \001(\r\022\"\n\016fantasy" +
      "_period\030\003 \001(\r:\n4294967295\"\367\003\n.CMsgClient" +
      "ToGCBatchGetPlayerCardRosterResponse\022Q\n\t" +
      "responses\030\001 \003(\0132>.CMsgClientToGCBatchGet" +
      "PlayerCardRosterResponse.RosterResponse\032" +
      "\211\002\n\016RosterResponse\022\021\n\tleague_id\030\001 \001(\r\022\034\n" +
      "\024deprecated_timestamp\030\002 \001(\r\022O\n\006result\030\003 " +
      "\001(\01626.CMsgClientToGCBatchGetPlayerCardRo" +
      "sterResponse.Result:\007SUCCESS\022\033\n\023player_c" +
      "ard_item_id\030\004 \003(\004\022\r\n\005score\030\005 \001(\002\022\021\n\tfina" +
      "lized\030\006 \001(\010\022\022\n\npercentile\030\007 \001(\002\022\"\n\016fanta" +
      "sy_period\030\010 \001(\r:\n4294967295\"f\n\006Result\022\013\n" +
      "\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\033\n\027ERR" +
      "OR_INVALID_LEAGUE_ID\020\002\022\033\n\027ERROR_INVALID_" +
      "TIMESTAMP\020\003\"\274\001\n(CMsgClientToGCSetPlayerC" +
      "ardRosterRequest\022\021\n\tleague_id\030\001 \001(\r\022\034\n\024d" +
      "eprecated_timestamp\030\002 \001(\r\022\014\n\004slot\030\003 \001(\r\022" +
      "\033\n\023player_card_item_id\030\004 \001(\004\022\020\n\010event_id" +
      "\030\005 \001(\r\022\"\n\016fantasy_period\030\006 \001(\r:\n42949672" +
      "95\"\254\003\n)CMsgClientToGCSetPlayerCardRoster" +
      "Response\022J\n\006result\030\001 \001(\01621.CMsgClientToG" +
      "CSetPlayerCardRosterResponse.Result:\007SUC" +
      "CESS\"\262\002\n\006Result\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UN" +
      "SPECIFIED\020\001\022\033\n\027ERROR_INVALID_LEAGUE_ID\020\002" +
      "\022\033\n\027ERROR_INVALID_TIMESTAMP\020\003\022\037\n\033ERROR_P" +
      "LAYER_CARD_NOT_OWNED\020\004\022\026\n\022ERROR_INVALID_" +
      "SLOT\020\005\022\032\n\026ERROR_FAILED_CARD_INFO\020\006\022\033\n\027ER" +
      "ROR_ACCOUNT_DUPLICATE\020\007\022\032\n\026ERROR_LOCKED_" +
      "TIMESTAMP\020\010\022#\n\037ERROR_INVALID_LEAGUE_FOR_" +
      "PERIOD\020\t\022\027\n\023ERROR_INVALID_EVENT\020\n\"\351\002\n\036CM" +
      "sgDOTAFantasyDPCLeagueStatus\022@\n\014league_i" +
      "nfos\030\001 \003(\0132*.CMsgDOTAFantasyDPCLeagueSta" +
      "tus.LeagueInfo\032\302\001\n\nLeagueInfo\022\021\n\tleague_" +
      "id\030\001 \001(\r\022\023\n\013league_name\030\002 \001(\t\022\027\n\017start_t" +
      "imestamp\030\003 \001(\r\022\025\n\rend_timestamp\030\004 \001(\r\022\026\n" +
      "\016day_timestamps\030\005 \003(\r\022D\n\006status\030\010 \001(\0162-." +
      "CMsgDOTAFantasyDPCLeagueStatus.ERosterSt" +
      "atus:\005UNSET\"@\n\rERosterStatus\022\t\n\005UNSET\020\000\022" +
      "\013\n\007PARTIAL\020\001\022\010\n\004FULL\020\002\022\r\n\tCONCLUDED\020\003\"\341\003" +
      "\n\030CMsgDOTADPCSearchResults\0221\n\007players\030\001 " +
      "\003(\0132 .CMsgDOTADPCSearchResults.Player\022-\n" +
      "\005teams\030\002 \003(\0132\036.CMsgDOTADPCSearchResults." +
      "Team\0221\n\007leagues\030\003 \003(\0132 .CMsgDOTADPCSearc" +
      "hResults.League\0325\n\006Player\022\n\n\002id\030\001 \001(\r\022\014\n" +
      "\004name\030\002 \001(\t\022\021\n\treal_name\030\003 \001(\t\032-\n\004Team\022\n" +
      "\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\013\n\003url\030\003 \001(\t\032\"\n" +
      "\006League\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\"\245\001\n\025ES" +
      "earchResultsDesired\022#\n\037k_ESearchResultsD" +
      "esired_Players\020\001\022!\n\035k_ESearchResultsDesi" +
      "red_Teams\020\002\022#\n\037k_ESearchResultsDesired_L" +
      "eagues\020\004\022\037\n\033k_ESearchResultsDesired_All\020" +
      "\007\"\203\001\n\037CMsgDOTADPCTeamFavoriteRankings\0224\n" +
      "\005teams\030\001 \003(\0132%.CMsgDOTADPCTeamFavoriteRa" +
      "nkings.Team\032*\n\004Team\022\017\n\007team_id\030\001 \001(\r\022\021\n\t" +
      "favorites\030\002 \001(\r\"\272\004\n\'CMsgDotaFantasyCraft" +
      "ingTabletPeriodData\022\"\n\016fantasy_period\030\001 " +
      "\001(\r:\n4294967295\022@\n\007tablets\030\002 \003(\0132/.CMsgD" +
      "otaFantasyCraftingTabletPeriodData.Table" +
      "t\032\242\001\n\003Gem\0226\n\004type\030\001 \001(\0162\021.Fantasy_Gem_Ty" +
      "pe:\025FANTASY_GEM_TYPE_RUBY\022\014\n\004slot\030\002 \001(\r\022" +
      "\r\n\005shape\030\003 \001(\r\022\017\n\007quality\030\004 \001(\r\0225\n\004stat\030" +
      "\005 \001(\0162\020.Fantasy_Scoring:\025FANTASY_SCORING" +
      "_KILLS\032\203\002\n\006Tablet\022\021\n\ttablet_id\030\001 \001(\r\022\024\n\014" +
      "tablet_level\030\002 \001(\r\022<\n\014fantasy_role\030\003 \001(\016" +
      "2\016.Fantasy_Roles:\026FANTASY_ROLE_UNDEFINED" +
      "\022\022\n\naccount_id\030\004 \001(\r\022\016\n\006prefix\030\005 \001(\r\022\016\n\006" +
      "suffix\030\006 \001(\r\022:\n\004gems\030\007 \003(\0132,.CMsgDotaFan" +
      "tasyCraftingTabletPeriodData.Gem\022\r\n\005scor" +
      "e\030\010 \001(\002\022\023\n\013best_series\030\t \001(\r\"\330\001\n!CMsgDot" +
      "aFantasyCraftingTabletData\022T\n\022tablet_per" +
      "iod_data\030\001 \003(\01328.CMsgDotaFantasyCrafting" +
      "TabletData.TabletPeriodDataEntry\032]\n\025Tabl" +
      "etPeriodDataEntry\022\013\n\003key\030\001 \001(\r\0227\n\005value\030" +
      "\002 \001(\0132(.CMsgDotaFantasyCraftingTabletPer" +
      "iodData\"\245\003\n\037CMsgDotaFantasyCraftingUserD" +
      "ata\022\027\n\017available_rolls\030\001 \003(\r\022R\n\022period_r" +
      "oll_tokens\030\002 \003(\01326.CMsgDotaFantasyCrafti" +
      "ngUserData.PeriodRollTokensEntry\022I\n\rperi" +
      "od_scores\030\003 \003(\01322.CMsgDotaFantasyCraftin" +
      "gUserData.PeriodScoresEntry\0326\n\013PeriodSco" +
      "re\022\023\n\013total_score\030\001 \001(\002\022\022\n\npercentile\030\002 " +
      "\001(\002\0323\n\025PeriodRollTokensEntry\022\013\n\003key\030\001 \001(" +
      "\r\022\r\n\005value\030\002 \001(\r\032]\n\021PeriodScoresEntry\022\013\n" +
      "\003key\030\001 \001(\r\022;\n\005value\030\002 \001(\0132,.CMsgDotaFant" +
      "asyCraftingUserData.PeriodScore\"\340\001\n CMsg" +
      "DotaFantasyCraftingDataCache\022C\n\rcache_en" +
      "tries\030\001 \003(\0132,.CMsgDotaFantasyCraftingDat" +
      "aCache.CacheEntry\032w\n\nCacheEntry\022\022\n\naccou" +
      "nt_id\030\001 \001(\r\022\026\n\016fantasy_league\030\002 \001(\r\022=\n\nc" +
      "ache_data\030\003 \001(\0132).CMsgGCToClientFantasyC" +
      "raftingDataUpdated\"R\n$CMsgClientToGCFant" +
      "asyCraftingGetData\022\026\n\016fantasy_league\030\001 \001" +
      "(\r\022\022\n\naccount_id\030\002 \001(\r\"\363\002\n,CMsgClientToG" +
      "CFantasyCraftingGetDataResponse\022[\n\010respo" +
      "nse\030\001 \001(\01627.CMsgClientToGCFantasyCraftin" +
      "gGetDataResponse.EResponse:\020k_eInternalE" +
      "rror\0223\n\tuser_data\030\002 \001(\0132 .CMsgDotaFantas" +
      "yCraftingUserData\0227\n\013tablet_data\030\004 \001(\0132\"" +
      ".CMsgDotaFantasyCraftingTabletData\"x\n\tER" +
      "esponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucc" +
      "ess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016" +
      "\n\nk_eTimeout\020\004\022\024\n\020k_eInvalidLeague\020\005\"\204\001\n" +
      "-CMsgClientToGCFantasyCraftingPerformOpe" +
      "ration\022\026\n\016fantasy_league\030\001 \001(\r\022\021\n\ttablet" +
      "_id\030\002 \001(\r\022\024\n\014operation_id\030\003 \001(\r\022\022\n\nextra" +
      "_data\030\004 \001(\004\"\261\005\n5CMsgClientToGCFantasyCra" +
      "ftingPerformOperationResponse\022d\n\010respons" +
      "e\030\001 \001(\0162@.CMsgClientToGCFantasyCraftingP" +
      "erformOperationResponse.EResponse:\020k_eIn" +
      "ternalError\022\024\n\014operation_id\030\002 \001(\r\022\021\n\ttab" +
      "let_id\030\007 \001(\r\0223\n\tuser_data\030\010 \001(\0132 .CMsgDo" +
      "taFantasyCraftingUserData\0227\n\013tablet_data" +
      "\030\t \001(\0132\".CMsgDotaFantasyCraftingTabletDa" +
      "ta\022\026\n\016player_choices\030\003 \003(\r\022\026\n\016prefix_cho" +
      "ices\030\004 \003(\r\022\026\n\016suffix_choices\030\005 \003(\r\022Y\n\rti" +
      "tle_choices\030\006 \003(\0132B.CMsgClientToGCFantas" +
      "yCraftingPerformOperationResponse.TitleC" +
      "hoice\032;\n\013TitleChoice\022\025\n\rprefix_choice\030\001 " +
      "\001(\r\022\025\n\rsuffix_choice\030\002 \001(\r\"\232\001\n\tEResponse" +
      "\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016" +
      "\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTi" +
      "meout\020\004\022\024\n\020k_eInvalidLeague\020\005\022\017\n\013k_eNoTo" +
      "kens\020\006\022\017\n\013k_eMoreInfo\020\007\"\260\001\n(CMsgGCToClie" +
      "ntFantasyCraftingDataUpdated\022\026\n\016fantasy_" +
      "league\030\001 \001(\r\0223\n\tuser_data\030\002 \001(\0132 .CMsgDo" +
      "taFantasyCraftingUserData\0227\n\013tablet_data" +
      "\030\004 \001(\0132\".CMsgDotaFantasyCraftingTabletDa" +
      "ta\"\260\001\n,CMsgClientToGCFantasyCraftingDevM" +
      "odifyTablet\022\026\n\016fantasy_league\030\001 \001(\r\022\024\n\014r" +
      "eset_tablet\030\002 \001(\010\022\025\n\rmodify_tokens\030\003 \001(\r" +
      "\022\027\n\017upgrade_tablets\030\006 \001(\010\022\"\n\016fantasy_per" +
      "iod\030\005 \001(\r:\n4294967295\"\203\003\n4CMsgClientToGC" +
      "FantasyCraftingDevModifyTabletResponse\022c" +
      "\n\010response\030\001 \001(\0162?.CMsgClientToGCFantasy" +
      "CraftingDevModifyTabletResponse.ERespons" +
      "e:\020k_eInternalError\0223\n\tuser_data\030\002 \001(\0132 " +
      ".CMsgDotaFantasyCraftingUserData\0227\n\013tabl" +
      "et_data\030\003 \001(\0132\".CMsgDotaFantasyCraftingT" +
      "abletData\"x\n\tEResponse\022\024\n\020k_eInternalErr" +
      "or\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013" +
      "k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\024\n\020k_eInva" +
      "lidLeague\020\005\"W\n)CMsgClientToGCFantasyCraf" +
      "tingSelectPlayer\022\026\n\016fantasy_league\030\001 \001(\r" +
      "\022\022\n\naccount_id\030\002 \001(\r\"\337\002\n1CMsgClientToGCF" +
      "antasyCraftingSelectPlayerResponse\022`\n\010re" +
      "sponse\030\001 \001(\0162<.CMsgClientToGCFantasyCraf" +
      "tingSelectPlayerResponse.EResponse:\020k_eI" +
      "nternalError\0227\n\013tablet_data\030\002 \001(\0132\".CMsg" +
      "DotaFantasyCraftingTabletData\"\216\001\n\tERespo" +
      "nse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020" +
      "\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_" +
      "eTimeout\020\004\022\024\n\020k_eInvalidLeague\020\005\022\024\n\020k_eI" +
      "nvalidPlayer\020\006\"[\n,CMsgClientToGCFantasyC" +
      "raftingGenerateTablets\022\026\n\016fantasy_league" +
      "\030\001 \001(\r\022\023\n\013account_ids\030\002 \003(\r\"\232\003\n4CMsgClie" +
      "ntToGCFantasyCraftingGenerateTabletsResp" +
      "onse\022c\n\010response\030\001 \001(\0162?.CMsgClientToGCF" +
      "antasyCraftingGenerateTabletsResponse.ER" +
      "esponse:\020k_eInternalError\0223\n\tuser_data\030\002" +
      " \001(\0132 .CMsgDotaFantasyCraftingUserData\0227" +
      "\n\013tablet_data\030\003 \001(\0132\".CMsgDotaFantasyCra" +
      "ftingTabletData\"\216\001\n\tEResponse\022\024\n\020k_eInte" +
      "rnalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBus" +
      "y\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\024\n\020" +
      "k_eInvalidLeague\020\005\022\024\n\020k_eInvalidPlayer\020\006" +
      "\"E\n+CMsgClientToGcFantasyCraftingUpgrade" +
      "Tablets\022\026\n\016fantasy_league\030\001 \001(\r\"\314\002\n3CMsg" +
      "ClientToGcFantasyCraftingUpgradeTabletsR" +
      "esponse\022b\n\010response\030\001 \001(\0162>.CMsgClientTo" +
      "GcFantasyCraftingUpgradeTabletsResponse." +
      "EResponse:\020k_eInternalError\0227\n\013tablet_da" +
      "ta\030\003 \001(\0132\".CMsgDotaFantasyCraftingTablet" +
      "Data\"x\n\tEResponse\022\024\n\020k_eInternalError\020\000\022" +
      "\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDi" +
      "sabled\020\003\022\016\n\nk_eTimeout\020\004\022\024\n\020k_eInvalidLe" +
      "ague\020\005\"D\n*CMsgClientToGCFantasyCraftingR" +
      "erollOptions\022\026\n\016fantasy_league\030\001 \001(\r\"\342\002\n" +
      "2CMsgClientToGCFantasyCraftingRerollOpti" +
      "onsResponse\022a\n\010response\030\001 \001(\0162=.CMsgClie" +
      "ntToGCFantasyCraftingRerollOptionsRespon" +
      "se.EResponse:\020k_eInternalError\0223\n\tuser_d" +
      "ata\030\002 \001(\0132 .CMsgDotaFantasyCraftingUserD" +
      "ata\"\223\001\n\tEResponse\022\024\n\020k_eInternalError\020\000\022" +
      "\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDi" +
      "sabled\020\003\022\016\n\nk_eTimeout\020\004\022\024\n\020k_eInvalidLe" +
      "ague\020\005\022\031\n\025k_eInsufficientTokens\020\006*\243\025\n!DO" +
      "TA_2013PassportSelectionIndices\022\035\n\031PP13_" +
      "SEL_ALLSTAR_PLAYER_0\020\000\022\035\n\031PP13_SEL_ALLST" +
      "AR_PLAYER_1\020\001\022\035\n\031PP13_SEL_ALLSTAR_PLAYER" +
      "_2\020\002\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_3\020\003\022\035\n\031P" +
      "P13_SEL_ALLSTAR_PLAYER_4\020\004\022\035\n\031PP13_SEL_A" +
      "LLSTAR_PLAYER_5\020\005\022\035\n\031PP13_SEL_ALLSTAR_PL" +
      "AYER_6\020\006\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_7\020\007\022" +
      "\035\n\031PP13_SEL_ALLSTAR_PLAYER_8\020\010\022\035\n\031PP13_S" +
      "EL_ALLSTAR_PLAYER_9\020\t\022\034\n\030PP13_SEL_QUALPR" +
      "ED_WEST_0\020\n\022\034\n\030PP13_SEL_QUALPRED_WEST_1\020" +
      "\013\022\034\n\030PP13_SEL_QUALPRED_WEST_2\020\014\022\034\n\030PP13_" +
      "SEL_QUALPRED_WEST_3\020\r\022\034\n\030PP13_SEL_QUALPR" +
      "ED_WEST_4\020\016\022\034\n\030PP13_SEL_QUALPRED_WEST_5\020" +
      "\017\022\034\n\030PP13_SEL_QUALPRED_WEST_6\020\020\022\034\n\030PP13_" +
      "SEL_QUALPRED_WEST_7\020\021\022\034\n\030PP13_SEL_QUALPR" +
      "ED_WEST_8\020\022\022\034\n\030PP13_SEL_QUALPRED_WEST_9\020" +
      "\023\022\035\n\031PP13_SEL_QUALPRED_WEST_10\020\024\022\035\n\031PP13" +
      "_SEL_QUALPRED_WEST_11\020\025\022\035\n\031PP13_SEL_QUAL" +
      "PRED_WEST_12\020\026\022\035\n\031PP13_SEL_QUALPRED_WEST" +
      "_13\020\027\022\035\n\031PP13_SEL_QUALPRED_WEST_14\020\030\022\034\n\030" +
      "PP13_SEL_QUALPRED_EAST_0\020\031\022\034\n\030PP13_SEL_Q" +
      "UALPRED_EAST_1\020\032\022\034\n\030PP13_SEL_QUALPRED_EA" +
      "ST_2\020\033\022\034\n\030PP13_SEL_QUALPRED_EAST_3\020\034\022\034\n\030" +
      "PP13_SEL_QUALPRED_EAST_4\020\035\022\034\n\030PP13_SEL_Q" +
      "UALPRED_EAST_5\020\036\022\034\n\030PP13_SEL_QUALPRED_EA" +
      "ST_6\020\037\022\034\n\030PP13_SEL_QUALPRED_EAST_7\020 \022\034\n\030" +
      "PP13_SEL_QUALPRED_EAST_8\020!\022\034\n\030PP13_SEL_Q" +
      "UALPRED_EAST_9\020\"\022\035\n\031PP13_SEL_QUALPRED_EA" +
      "ST_10\020#\022\035\n\031PP13_SEL_QUALPRED_EAST_11\020$\022\035" +
      "\n\031PP13_SEL_QUALPRED_EAST_12\020%\022\035\n\031PP13_SE" +
      "L_QUALPRED_EAST_13\020&\022\035\n\031PP13_SEL_QUALPRE" +
      "D_EAST_14\020\'\022\031\n\025PP13_SEL_TEAMCUP_TEAM\020(\022\033" +
      "\n\027PP13_SEL_TEAMCUP_PLAYER\020)\022\036\n\032PP13_SEL_" +
      "TEAMCUP_TEAM_LOCK\020*\022 \n\034PP13_SEL_TEAMCUP_" +
      "PLAYER_LOCK\020+\022\030\n\024PP13_SEL_EVENTPRED_0\020,\022" +
      "\030\n\024PP13_SEL_EVENTPRED_1\020-\022\030\n\024PP13_SEL_EV" +
      "ENTPRED_2\020.\022\030\n\024PP13_SEL_EVENTPRED_3\020/\022\030\n" +
      "\024PP13_SEL_EVENTPRED_4\0200\022\030\n\024PP13_SEL_EVEN" +
      "TPRED_5\0201\022\030\n\024PP13_SEL_EVENTPRED_6\0202\022\030\n\024P" +
      "P13_SEL_EVENTPRED_7\0203\022\030\n\024PP13_SEL_EVENTP" +
      "RED_8\0204\022\030\n\024PP13_SEL_EVENTPRED_9\0205\022\031\n\025PP1" +
      "3_SEL_EVENTPRED_10\0206\022\031\n\025PP13_SEL_EVENTPR" +
      "ED_11\0207\022\031\n\025PP13_SEL_EVENTPRED_12\0208\022\031\n\025PP" +
      "13_SEL_EVENTPRED_13\0209\022\031\n\025PP13_SEL_EVENTP" +
      "RED_14\020:\022\031\n\025PP13_SEL_EVENTPRED_15\020;\022\031\n\025P" +
      "P13_SEL_EVENTPRED_16\020<\022\031\n\025PP13_SEL_EVENT" +
      "PRED_17\020=\022\031\n\025PP13_SEL_EVENTPRED_18\020>\022\031\n\025" +
      "PP13_SEL_EVENTPRED_19\020?\022\031\n\025PP13_SEL_EVEN" +
      "TPRED_20\020@\022\031\n\025PP13_SEL_EVENTPRED_21\020A\022\031\n" +
      "\025PP13_SEL_EVENTPRED_22\020B\022\031\n\025PP13_SEL_EVE" +
      "NTPRED_23\020C\022\031\n\025PP13_SEL_EVENTPRED_24\020D\022\031" +
      "\n\025PP13_SEL_EVENTPRED_25\020E\022\031\n\025PP13_SEL_EV" +
      "ENTPRED_26\020F\022\031\n\025PP13_SEL_EVENTPRED_27\020G\022" +
      "\031\n\025PP13_SEL_EVENTPRED_28\020H\022\031\n\025PP13_SEL_E" +
      "VENTPRED_29\020I\022\031\n\025PP13_SEL_EVENTPRED_30\020J" +
      "\022\031\n\025PP13_SEL_EVENTPRED_31\020K\022\031\n\025PP13_SEL_" +
      "EVENTPRED_32\020L\022\031\n\025PP13_SEL_EVENTPRED_33\020" +
      "M\022\031\n\025PP13_SEL_EVENTPRED_34\020N\022\031\n\025PP13_SEL" +
      "_EVENTPRED_35\020O\022\031\n\025PP13_SEL_EVENTPRED_36" +
      "\020P\022\031\n\025PP13_SEL_EVENTPRED_37\020Q\022\031\n\025PP13_SE" +
      "L_EVENTPRED_38\020R\022\031\n\025PP13_SEL_EVENTPRED_3" +
      "9\020S\022\031\n\025PP13_SEL_EVENTPRED_40\020T\022\031\n\025PP13_S" +
      "EL_EVENTPRED_41\020U\022\031\n\025PP13_SEL_EVENTPRED_" +
      "42\020V\022\031\n\025PP13_SEL_EVENTPRED_43\020W\022\023\n\017PP13_" +
      "SEL_SOLO_0\020X\022\023\n\017PP13_SEL_SOLO_1\020Y\022\023\n\017PP1" +
      "3_SEL_SOLO_2\020Z\022\023\n\017PP13_SEL_SOLO_3\020[\022\023\n\017P" +
      "P13_SEL_SOLO_4\020\\\022\023\n\017PP13_SEL_SOLO_5\020]\022\023\n" +
      "\017PP13_SEL_SOLO_6\020^\022\023\n\017PP13_SEL_SOLO_7\020_B" +
      "\032\n\030kz.moltenhaze.proto.dota"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.moltenhaze.proto.dota.DotaSharedEnums.getDescriptor(),
        });
    internal_static_CMsgDOTAPlayerInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgDOTAPlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPlayerInfo_descriptor,
        new java.lang.String[] { "AccountId", "Name", "CountryCode", "FantasyRole", "TeamId", "TeamName", "TeamTag", "Sponsor", "IsLocked", "IsPro", "RealName", "TotalEarnings", "Results", "TeamUrlLogo", "AuditEntries", "TeamAbbreviation", });
    internal_static_CMsgDOTAPlayerInfo_Results_descriptor =
      internal_static_CMsgDOTAPlayerInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAPlayerInfo_Results_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPlayerInfo_Results_descriptor,
        new java.lang.String[] { "LeagueId", "Placement", "Earnings", });
    internal_static_CMsgDOTAPlayerInfo_AuditEntry_descriptor =
      internal_static_CMsgDOTAPlayerInfo_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAPlayerInfo_AuditEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPlayerInfo_AuditEntry_descriptor,
        new java.lang.String[] { "StartTimestamp", "EndTimestamp", "TeamId", "TeamName", "TeamTag", "TeamUrlLogo", });
    internal_static_CMsgDOTAPlayerInfoList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgDOTAPlayerInfoList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPlayerInfoList_descriptor,
        new java.lang.String[] { "PlayerInfos", });
    internal_static_CMsgDOTATeamRoster_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgDOTATeamRoster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATeamRoster_descriptor,
        new java.lang.String[] { "Timestamp", "TeamId", "MemberAccountIds", "CoachAccountId", });
    internal_static_CMsgDOTADPCProfileInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgDOTADPCProfileInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCProfileInfo_descriptor,
        new java.lang.String[] { "PlayerInfo", "PredictionInfo", "FantasyInfo", "DisabledNotifications", });
    internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_descriptor =
      internal_static_CMsgDOTADPCProfileInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCProfileInfo_PredictionInfo_descriptor,
        new java.lang.String[] { "Percent", "ShardWinnings", });
    internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_descriptor =
      internal_static_CMsgDOTADPCProfileInfo_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCProfileInfo_FantasyInfo_descriptor,
        new java.lang.String[] { "Top90Finishes", "Top75Finishes", "Top50Finishes", "ShardWinnings", });
    internal_static_CMsgDOTALeaderboards_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgDOTALeaderboards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTALeaderboards_descriptor,
        new java.lang.String[] { "Leaderboards", });
    internal_static_CMsgDOTALeaderboards_RegionLeaderboard_descriptor =
      internal_static_CMsgDOTALeaderboards_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTALeaderboards_RegionLeaderboard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTALeaderboards_RegionLeaderboard_descriptor,
        new java.lang.String[] { "Division", "AccountIds", });
    internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor,
        new java.lang.String[] { "LeagueId", "WinnerId", "RunnerupId", });
    internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor,
        new java.lang.String[] { "SelectionIndex", "Selection", });
    internal_static_CMsgDOTAPassportStampedPlayer_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportStampedPlayer_descriptor,
        new java.lang.String[] { "SteamId", "StampLevel", });
    internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor,
        new java.lang.String[] { "ChallengeId", });
    internal_static_CMsgDOTAPassportVote_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgDOTAPassportVote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVote_descriptor,
        new java.lang.String[] { "TeamVotes", "GenericSelections", "StampedPlayers", "PlayerCardChallenges", });
    internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor,
        new java.lang.String[] { "LeagueId", "FantasyPeriod", });
    internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor,
        new java.lang.String[] { "Result", "PlayerCardItemId", "Score", "Finalized", "Percentile", });
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor,
        new java.lang.String[] { "LeagueTimestamps", });
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_descriptor =
      internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_descriptor.getNestedTypes().get(0);
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCBatchGetPlayerCardRosterRequest_LeagueTimestamp_descriptor,
        new java.lang.String[] { "LeagueId", "FantasyPeriod", });
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor,
        new java.lang.String[] { "Responses", });
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_descriptor =
      internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCBatchGetPlayerCardRosterResponse_RosterResponse_descriptor,
        new java.lang.String[] { "LeagueId", "DeprecatedTimestamp", "Result", "PlayerCardItemId", "Score", "Finalized", "Percentile", "FantasyPeriod", });
    internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor,
        new java.lang.String[] { "LeagueId", "DeprecatedTimestamp", "Slot", "PlayerCardItemId", "EventId", "FantasyPeriod", });
    internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CMsgDOTAFantasyDPCLeagueStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor,
        new java.lang.String[] { "LeagueInfos", });
    internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_descriptor =
      internal_static_CMsgDOTAFantasyDPCLeagueStatus_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyDPCLeagueStatus_LeagueInfo_descriptor,
        new java.lang.String[] { "LeagueId", "LeagueName", "StartTimestamp", "EndTimestamp", "DayTimestamps", "Status", });
    internal_static_CMsgDOTADPCSearchResults_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CMsgDOTADPCSearchResults_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCSearchResults_descriptor,
        new java.lang.String[] { "Players", "Teams", "Leagues", });
    internal_static_CMsgDOTADPCSearchResults_Player_descriptor =
      internal_static_CMsgDOTADPCSearchResults_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTADPCSearchResults_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCSearchResults_Player_descriptor,
        new java.lang.String[] { "Id", "Name", "RealName", });
    internal_static_CMsgDOTADPCSearchResults_Team_descriptor =
      internal_static_CMsgDOTADPCSearchResults_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTADPCSearchResults_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCSearchResults_Team_descriptor,
        new java.lang.String[] { "Id", "Name", "Url", });
    internal_static_CMsgDOTADPCSearchResults_League_descriptor =
      internal_static_CMsgDOTADPCSearchResults_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTADPCSearchResults_League_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCSearchResults_League_descriptor,
        new java.lang.String[] { "Id", "Name", });
    internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CMsgDOTADPCTeamFavoriteRankings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor,
        new java.lang.String[] { "Teams", });
    internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_descriptor =
      internal_static_CMsgDOTADPCTeamFavoriteRankings_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTADPCTeamFavoriteRankings_Team_descriptor,
        new java.lang.String[] { "TeamId", "Favorites", });
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor,
        new java.lang.String[] { "FantasyPeriod", "Tablets", });
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_descriptor =
      internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Gem_descriptor,
        new java.lang.String[] { "Type", "Slot", "Shape", "Quality", "Stat", });
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_descriptor =
      internal_static_CMsgDotaFantasyCraftingTabletPeriodData_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingTabletPeriodData_Tablet_descriptor,
        new java.lang.String[] { "TabletId", "TabletLevel", "FantasyRole", "AccountId", "Prefix", "Suffix", "Gems", "Score", "BestSeries", });
    internal_static_CMsgDotaFantasyCraftingTabletData_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_CMsgDotaFantasyCraftingTabletData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingTabletData_descriptor,
        new java.lang.String[] { "TabletPeriodData", });
    internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_descriptor =
      internal_static_CMsgDotaFantasyCraftingTabletData_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingTabletData_TabletPeriodDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CMsgDotaFantasyCraftingUserData_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_CMsgDotaFantasyCraftingUserData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingUserData_descriptor,
        new java.lang.String[] { "AvailableRolls", "PeriodRollTokens", "PeriodScores", });
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_descriptor =
      internal_static_CMsgDotaFantasyCraftingUserData_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingUserData_PeriodScore_descriptor,
        new java.lang.String[] { "TotalScore", "Percentile", });
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_descriptor =
      internal_static_CMsgDotaFantasyCraftingUserData_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingUserData_PeriodRollTokensEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_descriptor =
      internal_static_CMsgDotaFantasyCraftingUserData_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingUserData_PeriodScoresEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CMsgDotaFantasyCraftingDataCache_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_CMsgDotaFantasyCraftingDataCache_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingDataCache_descriptor,
        new java.lang.String[] { "CacheEntries", });
    internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_descriptor =
      internal_static_CMsgDotaFantasyCraftingDataCache_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDotaFantasyCraftingDataCache_CacheEntry_descriptor,
        new java.lang.String[] { "AccountId", "FantasyLeague", "CacheData", });
    internal_static_CMsgClientToGCFantasyCraftingGetData_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_CMsgClientToGCFantasyCraftingGetData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingGetData_descriptor,
        new java.lang.String[] { "FantasyLeague", "AccountId", });
    internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingGetDataResponse_descriptor,
        new java.lang.String[] { "Response", "UserData", "TabletData", });
    internal_static_CMsgClientToGCFantasyCraftingPerformOperation_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_CMsgClientToGCFantasyCraftingPerformOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingPerformOperation_descriptor,
        new java.lang.String[] { "FantasyLeague", "TabletId", "OperationId", "ExtraData", });
    internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor,
        new java.lang.String[] { "Response", "OperationId", "TabletId", "UserData", "TabletData", "PlayerChoices", "PrefixChoices", "SuffixChoices", "TitleChoices", });
    internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_descriptor =
      internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingPerformOperationResponse_TitleChoice_descriptor,
        new java.lang.String[] { "PrefixChoice", "SuffixChoice", });
    internal_static_CMsgGCToClientFantasyCraftingDataUpdated_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_CMsgGCToClientFantasyCraftingDataUpdated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCToClientFantasyCraftingDataUpdated_descriptor,
        new java.lang.String[] { "FantasyLeague", "UserData", "TabletData", });
    internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingDevModifyTablet_descriptor,
        new java.lang.String[] { "FantasyLeague", "ResetTablet", "ModifyTokens", "UpgradeTablets", "FantasyPeriod", });
    internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingDevModifyTabletResponse_descriptor,
        new java.lang.String[] { "Response", "UserData", "TabletData", });
    internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingSelectPlayer_descriptor,
        new java.lang.String[] { "FantasyLeague", "AccountId", });
    internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingSelectPlayerResponse_descriptor,
        new java.lang.String[] { "Response", "TabletData", });
    internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingGenerateTablets_descriptor,
        new java.lang.String[] { "FantasyLeague", "AccountIds", });
    internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingGenerateTabletsResponse_descriptor,
        new java.lang.String[] { "Response", "UserData", "TabletData", });
    internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGcFantasyCraftingUpgradeTablets_descriptor,
        new java.lang.String[] { "FantasyLeague", });
    internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGcFantasyCraftingUpgradeTabletsResponse_descriptor,
        new java.lang.String[] { "Response", "TabletData", });
    internal_static_CMsgClientToGCFantasyCraftingRerollOptions_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_CMsgClientToGCFantasyCraftingRerollOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingRerollOptions_descriptor,
        new java.lang.String[] { "FantasyLeague", });
    internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgClientToGCFantasyCraftingRerollOptionsResponse_descriptor,
        new java.lang.String[] { "Response", "UserData", });
    descriptor.resolveAllFeaturesImmutable();
    kz.moltenhaze.proto.dota.DotaSharedEnums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
