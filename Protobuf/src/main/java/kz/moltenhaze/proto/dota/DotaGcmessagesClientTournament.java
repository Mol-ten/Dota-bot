// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dota_gcmessages_client_tournament.proto
// Protobuf Java Version: 4.28.0

package kz.moltenhaze.proto.dota;

public final class DotaGcmessagesClientTournament {
  private DotaGcmessagesClientTournament() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 0,
      /* suffix= */ "",
      DotaGcmessagesClientTournament.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ETournamentEvent}
   */
  public enum ETournamentEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentEvent_None = 0;</code>
     */
    k_ETournamentEvent_None(0),
    /**
     * <code>k_ETournamentEvent_TournamentCreated = 1;</code>
     */
    k_ETournamentEvent_TournamentCreated(1),
    /**
     * <code>k_ETournamentEvent_TournamentsMerged = 2;</code>
     */
    k_ETournamentEvent_TournamentsMerged(2),
    /**
     * <code>k_ETournamentEvent_GameOutcome = 3;</code>
     */
    k_ETournamentEvent_GameOutcome(3),
    /**
     * <code>k_ETournamentEvent_TeamGivenBye = 4;</code>
     */
    k_ETournamentEvent_TeamGivenBye(4),
    /**
     * <code>k_ETournamentEvent_TournamentCanceledByAdmin = 5;</code>
     */
    k_ETournamentEvent_TournamentCanceledByAdmin(5),
    /**
     * <code>k_ETournamentEvent_TeamAbandoned = 6;</code>
     */
    k_ETournamentEvent_TeamAbandoned(6),
    /**
     * <code>k_ETournamentEvent_ScheduledGameStarted = 7;</code>
     */
    k_ETournamentEvent_ScheduledGameStarted(7),
    /**
     * <code>k_ETournamentEvent_Canceled = 8;</code>
     */
    k_ETournamentEvent_Canceled(8),
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund = 9;</code>
     */
    k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund(9),
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit = 10;</code>
     */
    k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit(10),
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory = 11;</code>
     */
    k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory(11),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ETournamentEvent.class.getName());
    }
    /**
     * <code>k_ETournamentEvent_None = 0;</code>
     */
    public static final int k_ETournamentEvent_None_VALUE = 0;
    /**
     * <code>k_ETournamentEvent_TournamentCreated = 1;</code>
     */
    public static final int k_ETournamentEvent_TournamentCreated_VALUE = 1;
    /**
     * <code>k_ETournamentEvent_TournamentsMerged = 2;</code>
     */
    public static final int k_ETournamentEvent_TournamentsMerged_VALUE = 2;
    /**
     * <code>k_ETournamentEvent_GameOutcome = 3;</code>
     */
    public static final int k_ETournamentEvent_GameOutcome_VALUE = 3;
    /**
     * <code>k_ETournamentEvent_TeamGivenBye = 4;</code>
     */
    public static final int k_ETournamentEvent_TeamGivenBye_VALUE = 4;
    /**
     * <code>k_ETournamentEvent_TournamentCanceledByAdmin = 5;</code>
     */
    public static final int k_ETournamentEvent_TournamentCanceledByAdmin_VALUE = 5;
    /**
     * <code>k_ETournamentEvent_TeamAbandoned = 6;</code>
     */
    public static final int k_ETournamentEvent_TeamAbandoned_VALUE = 6;
    /**
     * <code>k_ETournamentEvent_ScheduledGameStarted = 7;</code>
     */
    public static final int k_ETournamentEvent_ScheduledGameStarted_VALUE = 7;
    /**
     * <code>k_ETournamentEvent_Canceled = 8;</code>
     */
    public static final int k_ETournamentEvent_Canceled_VALUE = 8;
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund = 9;</code>
     */
    public static final int k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund_VALUE = 9;
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit = 10;</code>
     */
    public static final int k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit_VALUE = 10;
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory = 11;</code>
     */
    public static final int k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ETournamentEvent valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ETournamentEvent forNumber(int value) {
      switch (value) {
        case 0: return k_ETournamentEvent_None;
        case 1: return k_ETournamentEvent_TournamentCreated;
        case 2: return k_ETournamentEvent_TournamentsMerged;
        case 3: return k_ETournamentEvent_GameOutcome;
        case 4: return k_ETournamentEvent_TeamGivenBye;
        case 5: return k_ETournamentEvent_TournamentCanceledByAdmin;
        case 6: return k_ETournamentEvent_TeamAbandoned;
        case 7: return k_ETournamentEvent_ScheduledGameStarted;
        case 8: return k_ETournamentEvent_Canceled;
        case 9: return k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund;
        case 10: return k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit;
        case 11: return k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ETournamentEvent> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentEvent>() {
            public ETournamentEvent findValueByNumber(int number) {
              return ETournamentEvent.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.getDescriptor().getEnumTypes().get(0);
    }

    private static final ETournamentEvent[] VALUES = values();

    public static ETournamentEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ETournamentEvent(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentEvent)
  }

  public interface CMsgRequestWeekendTourneyScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgRequestWeekendTourneySchedule)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgRequestWeekendTourneySchedule}
   */
  public static final class CMsgRequestWeekendTourneySchedule extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgRequestWeekendTourneySchedule)
      CMsgRequestWeekendTourneyScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgRequestWeekendTourneySchedule.class.getName());
    }
    // Use CMsgRequestWeekendTourneySchedule.newBuilder() to construct.
    private CMsgRequestWeekendTourneySchedule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgRequestWeekendTourneySchedule() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgRequestWeekendTourneySchedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgRequestWeekendTourneySchedule)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneyScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgRequestWeekendTourneySchedule)
    }

    // @@protoc_insertion_point(class_scope:CMsgRequestWeekendTourneySchedule)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgRequestWeekendTourneySchedule>
        PARSER = new com.google.protobuf.AbstractParser<CMsgRequestWeekendTourneySchedule>() {
      @java.lang.Override
      public CMsgRequestWeekendTourneySchedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgRequestWeekendTourneySchedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgRequestWeekendTourneySchedule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgRequestWeekendTourneySchedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgWeekendTourneyScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneySchedule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division> 
        getDivisionsList();
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division getDivisions(int index);
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    int getDivisionsCount();
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder> 
        getDivisionsOrBuilderList();
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder getDivisionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgWeekendTourneySchedule}
   */
  public static final class CMsgWeekendTourneySchedule extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgWeekendTourneySchedule)
      CMsgWeekendTourneyScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgWeekendTourneySchedule.class.getName());
    }
    // Use CMsgWeekendTourneySchedule.newBuilder() to construct.
    private CMsgWeekendTourneySchedule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgWeekendTourneySchedule() {
      divisions_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Builder.class);
    }

    public interface DivisionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneySchedule.Division)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division_code = 1;</code>
       * @return Whether the divisionCode field is set.
       */
      boolean hasDivisionCode();
      /**
       * <code>optional uint32 division_code = 1;</code>
       * @return The divisionCode.
       */
      int getDivisionCode();

      /**
       * <code>optional uint32 time_window_open = 2;</code>
       * @return Whether the timeWindowOpen field is set.
       */
      boolean hasTimeWindowOpen();
      /**
       * <code>optional uint32 time_window_open = 2;</code>
       * @return The timeWindowOpen.
       */
      int getTimeWindowOpen();

      /**
       * <code>optional uint32 time_window_close = 3;</code>
       * @return Whether the timeWindowClose field is set.
       */
      boolean hasTimeWindowClose();
      /**
       * <code>optional uint32 time_window_close = 3;</code>
       * @return The timeWindowClose.
       */
      int getTimeWindowClose();

      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       * @return Whether the timeWindowOpenNext field is set.
       */
      boolean hasTimeWindowOpenNext();
      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       * @return The timeWindowOpenNext.
       */
      int getTimeWindowOpenNext();

      /**
       * <code>optional uint32 trophy_id = 5;</code>
       * @return Whether the trophyId field is set.
       */
      boolean hasTrophyId();
      /**
       * <code>optional uint32 trophy_id = 5;</code>
       * @return The trophyId.
       */
      int getTrophyId();

      /**
       * <code>optional bool free_weekend = 6;</code>
       * @return Whether the freeWeekend field is set.
       */
      boolean hasFreeWeekend();
      /**
       * <code>optional bool free_weekend = 6;</code>
       * @return The freeWeekend.
       */
      boolean getFreeWeekend();
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneySchedule.Division}
     */
    public static final class Division extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgWeekendTourneySchedule.Division)
        DivisionOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Division.class.getName());
      }
      // Use Division.newBuilder() to construct.
      private Division(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Division() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder.class);
      }

      private int bitField0_;
      public static final int DIVISION_CODE_FIELD_NUMBER = 1;
      private int divisionCode_ = 0;
      /**
       * <code>optional uint32 division_code = 1;</code>
       * @return Whether the divisionCode field is set.
       */
      @java.lang.Override
      public boolean hasDivisionCode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 division_code = 1;</code>
       * @return The divisionCode.
       */
      @java.lang.Override
      public int getDivisionCode() {
        return divisionCode_;
      }

      public static final int TIME_WINDOW_OPEN_FIELD_NUMBER = 2;
      private int timeWindowOpen_ = 0;
      /**
       * <code>optional uint32 time_window_open = 2;</code>
       * @return Whether the timeWindowOpen field is set.
       */
      @java.lang.Override
      public boolean hasTimeWindowOpen() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 time_window_open = 2;</code>
       * @return The timeWindowOpen.
       */
      @java.lang.Override
      public int getTimeWindowOpen() {
        return timeWindowOpen_;
      }

      public static final int TIME_WINDOW_CLOSE_FIELD_NUMBER = 3;
      private int timeWindowClose_ = 0;
      /**
       * <code>optional uint32 time_window_close = 3;</code>
       * @return Whether the timeWindowClose field is set.
       */
      @java.lang.Override
      public boolean hasTimeWindowClose() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 time_window_close = 3;</code>
       * @return The timeWindowClose.
       */
      @java.lang.Override
      public int getTimeWindowClose() {
        return timeWindowClose_;
      }

      public static final int TIME_WINDOW_OPEN_NEXT_FIELD_NUMBER = 4;
      private int timeWindowOpenNext_ = 0;
      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       * @return Whether the timeWindowOpenNext field is set.
       */
      @java.lang.Override
      public boolean hasTimeWindowOpenNext() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       * @return The timeWindowOpenNext.
       */
      @java.lang.Override
      public int getTimeWindowOpenNext() {
        return timeWindowOpenNext_;
      }

      public static final int TROPHY_ID_FIELD_NUMBER = 5;
      private int trophyId_ = 0;
      /**
       * <code>optional uint32 trophy_id = 5;</code>
       * @return Whether the trophyId field is set.
       */
      @java.lang.Override
      public boolean hasTrophyId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 trophy_id = 5;</code>
       * @return The trophyId.
       */
      @java.lang.Override
      public int getTrophyId() {
        return trophyId_;
      }

      public static final int FREE_WEEKEND_FIELD_NUMBER = 6;
      private boolean freeWeekend_ = false;
      /**
       * <code>optional bool free_weekend = 6;</code>
       * @return Whether the freeWeekend field is set.
       */
      @java.lang.Override
      public boolean hasFreeWeekend() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool free_weekend = 6;</code>
       * @return The freeWeekend.
       */
      @java.lang.Override
      public boolean getFreeWeekend() {
        return freeWeekend_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, divisionCode_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, timeWindowOpen_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, timeWindowClose_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, timeWindowOpenNext_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, trophyId_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeBool(6, freeWeekend_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, divisionCode_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, timeWindowOpen_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, timeWindowClose_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, timeWindowOpenNext_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, trophyId_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, freeWeekend_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division) obj;

        if (hasDivisionCode() != other.hasDivisionCode()) return false;
        if (hasDivisionCode()) {
          if (getDivisionCode()
              != other.getDivisionCode()) return false;
        }
        if (hasTimeWindowOpen() != other.hasTimeWindowOpen()) return false;
        if (hasTimeWindowOpen()) {
          if (getTimeWindowOpen()
              != other.getTimeWindowOpen()) return false;
        }
        if (hasTimeWindowClose() != other.hasTimeWindowClose()) return false;
        if (hasTimeWindowClose()) {
          if (getTimeWindowClose()
              != other.getTimeWindowClose()) return false;
        }
        if (hasTimeWindowOpenNext() != other.hasTimeWindowOpenNext()) return false;
        if (hasTimeWindowOpenNext()) {
          if (getTimeWindowOpenNext()
              != other.getTimeWindowOpenNext()) return false;
        }
        if (hasTrophyId() != other.hasTrophyId()) return false;
        if (hasTrophyId()) {
          if (getTrophyId()
              != other.getTrophyId()) return false;
        }
        if (hasFreeWeekend() != other.hasFreeWeekend()) return false;
        if (hasFreeWeekend()) {
          if (getFreeWeekend()
              != other.getFreeWeekend()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDivisionCode()) {
          hash = (37 * hash) + DIVISION_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getDivisionCode();
        }
        if (hasTimeWindowOpen()) {
          hash = (37 * hash) + TIME_WINDOW_OPEN_FIELD_NUMBER;
          hash = (53 * hash) + getTimeWindowOpen();
        }
        if (hasTimeWindowClose()) {
          hash = (37 * hash) + TIME_WINDOW_CLOSE_FIELD_NUMBER;
          hash = (53 * hash) + getTimeWindowClose();
        }
        if (hasTimeWindowOpenNext()) {
          hash = (37 * hash) + TIME_WINDOW_OPEN_NEXT_FIELD_NUMBER;
          hash = (53 * hash) + getTimeWindowOpenNext();
        }
        if (hasTrophyId()) {
          hash = (37 * hash) + TROPHY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTrophyId();
        }
        if (hasFreeWeekend()) {
          hash = (37 * hash) + FREE_WEEKEND_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFreeWeekend());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgWeekendTourneySchedule.Division}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneySchedule.Division)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          divisionCode_ = 0;
          timeWindowOpen_ = 0;
          timeWindowClose_ = 0;
          timeWindowOpenNext_ = 0;
          trophyId_ = 0;
          freeWeekend_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.divisionCode_ = divisionCode_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.timeWindowOpen_ = timeWindowOpen_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.timeWindowClose_ = timeWindowClose_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.timeWindowOpenNext_ = timeWindowOpenNext_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.trophyId_ = trophyId_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.freeWeekend_ = freeWeekend_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance()) return this;
          if (other.hasDivisionCode()) {
            setDivisionCode(other.getDivisionCode());
          }
          if (other.hasTimeWindowOpen()) {
            setTimeWindowOpen(other.getTimeWindowOpen());
          }
          if (other.hasTimeWindowClose()) {
            setTimeWindowClose(other.getTimeWindowClose());
          }
          if (other.hasTimeWindowOpenNext()) {
            setTimeWindowOpenNext(other.getTimeWindowOpenNext());
          }
          if (other.hasTrophyId()) {
            setTrophyId(other.getTrophyId());
          }
          if (other.hasFreeWeekend()) {
            setFreeWeekend(other.getFreeWeekend());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  divisionCode_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  timeWindowOpen_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  timeWindowClose_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  timeWindowOpenNext_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  trophyId_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  freeWeekend_ = input.readBool();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int divisionCode_ ;
        /**
         * <code>optional uint32 division_code = 1;</code>
         * @return Whether the divisionCode field is set.
         */
        @java.lang.Override
        public boolean hasDivisionCode() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 division_code = 1;</code>
         * @return The divisionCode.
         */
        @java.lang.Override
        public int getDivisionCode() {
          return divisionCode_;
        }
        /**
         * <code>optional uint32 division_code = 1;</code>
         * @param value The divisionCode to set.
         * @return This builder for chaining.
         */
        public Builder setDivisionCode(int value) {

          divisionCode_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division_code = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDivisionCode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          divisionCode_ = 0;
          onChanged();
          return this;
        }

        private int timeWindowOpen_ ;
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         * @return Whether the timeWindowOpen field is set.
         */
        @java.lang.Override
        public boolean hasTimeWindowOpen() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         * @return The timeWindowOpen.
         */
        @java.lang.Override
        public int getTimeWindowOpen() {
          return timeWindowOpen_;
        }
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         * @param value The timeWindowOpen to set.
         * @return This builder for chaining.
         */
        public Builder setTimeWindowOpen(int value) {

          timeWindowOpen_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeWindowOpen() {
          bitField0_ = (bitField0_ & ~0x00000002);
          timeWindowOpen_ = 0;
          onChanged();
          return this;
        }

        private int timeWindowClose_ ;
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         * @return Whether the timeWindowClose field is set.
         */
        @java.lang.Override
        public boolean hasTimeWindowClose() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         * @return The timeWindowClose.
         */
        @java.lang.Override
        public int getTimeWindowClose() {
          return timeWindowClose_;
        }
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         * @param value The timeWindowClose to set.
         * @return This builder for chaining.
         */
        public Builder setTimeWindowClose(int value) {

          timeWindowClose_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeWindowClose() {
          bitField0_ = (bitField0_ & ~0x00000004);
          timeWindowClose_ = 0;
          onChanged();
          return this;
        }

        private int timeWindowOpenNext_ ;
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         * @return Whether the timeWindowOpenNext field is set.
         */
        @java.lang.Override
        public boolean hasTimeWindowOpenNext() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         * @return The timeWindowOpenNext.
         */
        @java.lang.Override
        public int getTimeWindowOpenNext() {
          return timeWindowOpenNext_;
        }
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         * @param value The timeWindowOpenNext to set.
         * @return This builder for chaining.
         */
        public Builder setTimeWindowOpenNext(int value) {

          timeWindowOpenNext_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeWindowOpenNext() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timeWindowOpenNext_ = 0;
          onChanged();
          return this;
        }

        private int trophyId_ ;
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         * @return Whether the trophyId field is set.
         */
        @java.lang.Override
        public boolean hasTrophyId() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         * @return The trophyId.
         */
        @java.lang.Override
        public int getTrophyId() {
          return trophyId_;
        }
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         * @param value The trophyId to set.
         * @return This builder for chaining.
         */
        public Builder setTrophyId(int value) {

          trophyId_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTrophyId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          trophyId_ = 0;
          onChanged();
          return this;
        }

        private boolean freeWeekend_ ;
        /**
         * <code>optional bool free_weekend = 6;</code>
         * @return Whether the freeWeekend field is set.
         */
        @java.lang.Override
        public boolean hasFreeWeekend() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional bool free_weekend = 6;</code>
         * @return The freeWeekend.
         */
        @java.lang.Override
        public boolean getFreeWeekend() {
          return freeWeekend_;
        }
        /**
         * <code>optional bool free_weekend = 6;</code>
         * @param value The freeWeekend to set.
         * @return This builder for chaining.
         */
        public Builder setFreeWeekend(boolean value) {

          freeWeekend_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool free_weekend = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFreeWeekend() {
          bitField0_ = (bitField0_ & ~0x00000020);
          freeWeekend_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneySchedule.Division)
      }

      // @@protoc_insertion_point(class_scope:CMsgWeekendTourneySchedule.Division)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Division>
          PARSER = new com.google.protobuf.AbstractParser<Division>() {
        @java.lang.Override
        public Division parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Division> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Division> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIVISIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division> divisions_;
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division> getDivisionsList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder> 
        getDivisionsOrBuilderList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    @java.lang.Override
    public int getDivisionsCount() {
      return divisions_.size();
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division getDivisions(int index) {
      return divisions_.get(index);
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder getDivisionsOrBuilder(
        int index) {
      return divisions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < divisions_.size(); i++) {
        output.writeMessage(1, divisions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < divisions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, divisions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule) obj;

      if (!getDivisionsList()
          .equals(other.getDivisionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDivisionsCount() > 0) {
        hash = (37 * hash) + DIVISIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneySchedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneySchedule)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
        } else {
          divisions_ = null;
          divisionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneySchedule_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule result) {
        if (divisionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            divisions_ = java.util.Collections.unmodifiableList(divisions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.divisions_ = divisions_;
        } else {
          result.divisions_ = divisionsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.getDefaultInstance()) return this;
        if (divisionsBuilder_ == null) {
          if (!other.divisions_.isEmpty()) {
            if (divisions_.isEmpty()) {
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDivisionsIsMutable();
              divisions_.addAll(other.divisions_);
            }
            onChanged();
          }
        } else {
          if (!other.divisions_.isEmpty()) {
            if (divisionsBuilder_.isEmpty()) {
              divisionsBuilder_.dispose();
              divisionsBuilder_ = null;
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              divisionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDivisionsFieldBuilder() : null;
            } else {
              divisionsBuilder_.addAllMessages(other.divisions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.parser(),
                        extensionRegistry);
                if (divisionsBuilder_ == null) {
                  ensureDivisionsIsMutable();
                  divisions_.add(m);
                } else {
                  divisionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division> divisions_ =
        java.util.Collections.emptyList();
      private void ensureDivisionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          divisions_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division>(divisions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder> divisionsBuilder_;

      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division> getDivisionsList() {
        if (divisionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(divisions_);
        } else {
          return divisionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public int getDivisionsCount() {
        if (divisionsBuilder_ == null) {
          return divisions_.size();
        } else {
          return divisionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division getDivisions(int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);
        } else {
          return divisionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.set(index, value);
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.set(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(index, value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addAllDivisions(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division> values) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, divisions_);
          onChanged();
        } else {
          divisionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder clearDivisions() {
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          divisionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder removeDivisions(int index) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.remove(index);
          onChanged();
        } else {
          divisionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder getDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder getDivisionsOrBuilder(
          int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);  } else {
          return divisionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder> 
           getDivisionsOrBuilderList() {
        if (divisionsBuilder_ != null) {
          return divisionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(divisions_);
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder addDivisionsBuilder() {
        return getDivisionsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder addDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder> 
           getDivisionsBuilderList() {
        return getDivisionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder> 
          getDivisionsFieldBuilder() {
        if (divisionsBuilder_ == null) {
          divisionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.Division.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder>(
                  divisions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          divisions_ = null;
        }
        return divisionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneySchedule)
    }

    // @@protoc_insertion_point(class_scope:CMsgWeekendTourneySchedule)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgWeekendTourneySchedule>
        PARSER = new com.google.protobuf.AbstractParser<CMsgWeekendTourneySchedule>() {
      @java.lang.Override
      public CMsgWeekendTourneySchedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgWeekendTourneySchedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgWeekendTourneySchedule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneySchedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgWeekendTourneyOptsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneyOpts)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool participating = 1;</code>
     * @return Whether the participating field is set.
     */
    boolean hasParticipating();
    /**
     * <code>optional bool participating = 1;</code>
     * @return The participating.
     */
    boolean getParticipating();

    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return Whether the divisionId field is set.
     */
    boolean hasDivisionId();
    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return The divisionId.
     */
    int getDivisionId();

    /**
     * <code>optional uint32 buyin = 3;</code>
     * @return Whether the buyin field is set.
     */
    boolean hasBuyin();
    /**
     * <code>optional uint32 buyin = 3;</code>
     * @return The buyin.
     */
    int getBuyin();

    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return Whether the skillLevel field is set.
     */
    boolean hasSkillLevel();
    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return The skillLevel.
     */
    int getSkillLevel();

    /**
     * <code>optional uint32 match_groups = 5;</code>
     * @return Whether the matchGroups field is set.
     */
    boolean hasMatchGroups();
    /**
     * <code>optional uint32 match_groups = 5;</code>
     * @return The matchGroups.
     */
    int getMatchGroups();

    /**
     * <code>optional uint32 team_id = 6;</code>
     * @return Whether the teamId field is set.
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 6;</code>
     * @return The teamId.
     */
    int getTeamId();

    /**
     * <code>optional string pickup_team_name = 7;</code>
     * @return Whether the pickupTeamName field is set.
     */
    boolean hasPickupTeamName();
    /**
     * <code>optional string pickup_team_name = 7;</code>
     * @return The pickupTeamName.
     */
    java.lang.String getPickupTeamName();
    /**
     * <code>optional string pickup_team_name = 7;</code>
     * @return The bytes for pickupTeamName.
     */
    com.google.protobuf.ByteString
        getPickupTeamNameBytes();

    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     * @return Whether the pickupTeamLogo field is set.
     */
    boolean hasPickupTeamLogo();
    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     * @return The pickupTeamLogo.
     */
    long getPickupTeamLogo();
  }
  /**
   * Protobuf type {@code CMsgWeekendTourneyOpts}
   */
  public static final class CMsgWeekendTourneyOpts extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgWeekendTourneyOpts)
      CMsgWeekendTourneyOptsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgWeekendTourneyOpts.class.getName());
    }
    // Use CMsgWeekendTourneyOpts.newBuilder() to construct.
    private CMsgWeekendTourneyOpts(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgWeekendTourneyOpts() {
      pickupTeamName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyOpts_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.Builder.class);
    }

    private int bitField0_;
    public static final int PARTICIPATING_FIELD_NUMBER = 1;
    private boolean participating_ = false;
    /**
     * <code>optional bool participating = 1;</code>
     * @return Whether the participating field is set.
     */
    @java.lang.Override
    public boolean hasParticipating() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool participating = 1;</code>
     * @return The participating.
     */
    @java.lang.Override
    public boolean getParticipating() {
      return participating_;
    }

    public static final int DIVISION_ID_FIELD_NUMBER = 2;
    private int divisionId_ = 0;
    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return Whether the divisionId field is set.
     */
    @java.lang.Override
    public boolean hasDivisionId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return The divisionId.
     */
    @java.lang.Override
    public int getDivisionId() {
      return divisionId_;
    }

    public static final int BUYIN_FIELD_NUMBER = 3;
    private int buyin_ = 0;
    /**
     * <code>optional uint32 buyin = 3;</code>
     * @return Whether the buyin field is set.
     */
    @java.lang.Override
    public boolean hasBuyin() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 buyin = 3;</code>
     * @return The buyin.
     */
    @java.lang.Override
    public int getBuyin() {
      return buyin_;
    }

    public static final int SKILL_LEVEL_FIELD_NUMBER = 4;
    private int skillLevel_ = 0;
    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return Whether the skillLevel field is set.
     */
    @java.lang.Override
    public boolean hasSkillLevel() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return The skillLevel.
     */
    @java.lang.Override
    public int getSkillLevel() {
      return skillLevel_;
    }

    public static final int MATCH_GROUPS_FIELD_NUMBER = 5;
    private int matchGroups_ = 0;
    /**
     * <code>optional uint32 match_groups = 5;</code>
     * @return Whether the matchGroups field is set.
     */
    @java.lang.Override
    public boolean hasMatchGroups() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 match_groups = 5;</code>
     * @return The matchGroups.
     */
    @java.lang.Override
    public int getMatchGroups() {
      return matchGroups_;
    }

    public static final int TEAM_ID_FIELD_NUMBER = 6;
    private int teamId_ = 0;
    /**
     * <code>optional uint32 team_id = 6;</code>
     * @return Whether the teamId field is set.
     */
    @java.lang.Override
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 team_id = 6;</code>
     * @return The teamId.
     */
    @java.lang.Override
    public int getTeamId() {
      return teamId_;
    }

    public static final int PICKUP_TEAM_NAME_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object pickupTeamName_ = "";
    /**
     * <code>optional string pickup_team_name = 7;</code>
     * @return Whether the pickupTeamName field is set.
     */
    @java.lang.Override
    public boolean hasPickupTeamName() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional string pickup_team_name = 7;</code>
     * @return The pickupTeamName.
     */
    @java.lang.Override
    public java.lang.String getPickupTeamName() {
      java.lang.Object ref = pickupTeamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pickupTeamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pickup_team_name = 7;</code>
     * @return The bytes for pickupTeamName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPickupTeamNameBytes() {
      java.lang.Object ref = pickupTeamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pickupTeamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PICKUP_TEAM_LOGO_FIELD_NUMBER = 8;
    private long pickupTeamLogo_ = 0L;
    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     * @return Whether the pickupTeamLogo field is set.
     */
    @java.lang.Override
    public boolean hasPickupTeamLogo() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     * @return The pickupTeamLogo.
     */
    @java.lang.Override
    public long getPickupTeamLogo() {
      return pickupTeamLogo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, participating_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, buyin_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, matchGroups_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, teamId_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, pickupTeamName_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt64(8, pickupTeamLogo_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, participating_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, buyin_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, matchGroups_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, teamId_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, pickupTeamName_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, pickupTeamLogo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts) obj;

      if (hasParticipating() != other.hasParticipating()) return false;
      if (hasParticipating()) {
        if (getParticipating()
            != other.getParticipating()) return false;
      }
      if (hasDivisionId() != other.hasDivisionId()) return false;
      if (hasDivisionId()) {
        if (getDivisionId()
            != other.getDivisionId()) return false;
      }
      if (hasBuyin() != other.hasBuyin()) return false;
      if (hasBuyin()) {
        if (getBuyin()
            != other.getBuyin()) return false;
      }
      if (hasSkillLevel() != other.hasSkillLevel()) return false;
      if (hasSkillLevel()) {
        if (getSkillLevel()
            != other.getSkillLevel()) return false;
      }
      if (hasMatchGroups() != other.hasMatchGroups()) return false;
      if (hasMatchGroups()) {
        if (getMatchGroups()
            != other.getMatchGroups()) return false;
      }
      if (hasTeamId() != other.hasTeamId()) return false;
      if (hasTeamId()) {
        if (getTeamId()
            != other.getTeamId()) return false;
      }
      if (hasPickupTeamName() != other.hasPickupTeamName()) return false;
      if (hasPickupTeamName()) {
        if (!getPickupTeamName()
            .equals(other.getPickupTeamName())) return false;
      }
      if (hasPickupTeamLogo() != other.hasPickupTeamLogo()) return false;
      if (hasPickupTeamLogo()) {
        if (getPickupTeamLogo()
            != other.getPickupTeamLogo()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasParticipating()) {
        hash = (37 * hash) + PARTICIPATING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getParticipating());
      }
      if (hasDivisionId()) {
        hash = (37 * hash) + DIVISION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionId();
      }
      if (hasBuyin()) {
        hash = (37 * hash) + BUYIN_FIELD_NUMBER;
        hash = (53 * hash) + getBuyin();
      }
      if (hasSkillLevel()) {
        hash = (37 * hash) + SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevel();
      }
      if (hasMatchGroups()) {
        hash = (37 * hash) + MATCH_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getMatchGroups();
      }
      if (hasTeamId()) {
        hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTeamId();
      }
      if (hasPickupTeamName()) {
        hash = (37 * hash) + PICKUP_TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPickupTeamName().hashCode();
      }
      if (hasPickupTeamLogo()) {
        hash = (37 * hash) + PICKUP_TEAM_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPickupTeamLogo());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneyOpts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneyOpts)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOptsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyOpts_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        participating_ = false;
        divisionId_ = 0;
        buyin_ = 0;
        skillLevel_ = 0;
        matchGroups_ = 0;
        teamId_ = 0;
        pickupTeamName_ = "";
        pickupTeamLogo_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyOpts_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.participating_ = participating_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.divisionId_ = divisionId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.buyin_ = buyin_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.skillLevel_ = skillLevel_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.matchGroups_ = matchGroups_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.teamId_ = teamId_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.pickupTeamName_ = pickupTeamName_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.pickupTeamLogo_ = pickupTeamLogo_;
          to_bitField0_ |= 0x00000080;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts.getDefaultInstance()) return this;
        if (other.hasParticipating()) {
          setParticipating(other.getParticipating());
        }
        if (other.hasDivisionId()) {
          setDivisionId(other.getDivisionId());
        }
        if (other.hasBuyin()) {
          setBuyin(other.getBuyin());
        }
        if (other.hasSkillLevel()) {
          setSkillLevel(other.getSkillLevel());
        }
        if (other.hasMatchGroups()) {
          setMatchGroups(other.getMatchGroups());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasPickupTeamName()) {
          pickupTeamName_ = other.pickupTeamName_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.hasPickupTeamLogo()) {
          setPickupTeamLogo(other.getPickupTeamLogo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                participating_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                divisionId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                buyin_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                skillLevel_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                matchGroups_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                teamId_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                pickupTeamName_ = input.readBytes();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 64: {
                pickupTeamLogo_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean participating_ ;
      /**
       * <code>optional bool participating = 1;</code>
       * @return Whether the participating field is set.
       */
      @java.lang.Override
      public boolean hasParticipating() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool participating = 1;</code>
       * @return The participating.
       */
      @java.lang.Override
      public boolean getParticipating() {
        return participating_;
      }
      /**
       * <code>optional bool participating = 1;</code>
       * @param value The participating to set.
       * @return This builder for chaining.
       */
      public Builder setParticipating(boolean value) {

        participating_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool participating = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearParticipating() {
        bitField0_ = (bitField0_ & ~0x00000001);
        participating_ = false;
        onChanged();
        return this;
      }

      private int divisionId_ ;
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @return Whether the divisionId field is set.
       */
      @java.lang.Override
      public boolean hasDivisionId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @return The divisionId.
       */
      @java.lang.Override
      public int getDivisionId() {
        return divisionId_;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @param value The divisionId to set.
       * @return This builder for chaining.
       */
      public Builder setDivisionId(int value) {

        divisionId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDivisionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        divisionId_ = 0;
        onChanged();
        return this;
      }

      private int buyin_ ;
      /**
       * <code>optional uint32 buyin = 3;</code>
       * @return Whether the buyin field is set.
       */
      @java.lang.Override
      public boolean hasBuyin() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 buyin = 3;</code>
       * @return The buyin.
       */
      @java.lang.Override
      public int getBuyin() {
        return buyin_;
      }
      /**
       * <code>optional uint32 buyin = 3;</code>
       * @param value The buyin to set.
       * @return This builder for chaining.
       */
      public Builder setBuyin(int value) {

        buyin_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 buyin = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuyin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        buyin_ = 0;
        onChanged();
        return this;
      }

      private int skillLevel_ ;
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @return Whether the skillLevel field is set.
       */
      @java.lang.Override
      public boolean hasSkillLevel() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @return The skillLevel.
       */
      @java.lang.Override
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @param value The skillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setSkillLevel(int value) {

        skillLevel_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        skillLevel_ = 0;
        onChanged();
        return this;
      }

      private int matchGroups_ ;
      /**
       * <code>optional uint32 match_groups = 5;</code>
       * @return Whether the matchGroups field is set.
       */
      @java.lang.Override
      public boolean hasMatchGroups() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 match_groups = 5;</code>
       * @return The matchGroups.
       */
      @java.lang.Override
      public int getMatchGroups() {
        return matchGroups_;
      }
      /**
       * <code>optional uint32 match_groups = 5;</code>
       * @param value The matchGroups to set.
       * @return This builder for chaining.
       */
      public Builder setMatchGroups(int value) {

        matchGroups_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_groups = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchGroups() {
        bitField0_ = (bitField0_ & ~0x00000010);
        matchGroups_ = 0;
        onChanged();
        return this;
      }

      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 6;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 team_id = 6;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 6;</code>
       * @param value The teamId to set.
       * @return This builder for chaining.
       */
      public Builder setTeamId(int value) {

        teamId_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pickupTeamName_ = "";
      /**
       * <code>optional string pickup_team_name = 7;</code>
       * @return Whether the pickupTeamName field is set.
       */
      public boolean hasPickupTeamName() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       * @return The pickupTeamName.
       */
      public java.lang.String getPickupTeamName() {
        java.lang.Object ref = pickupTeamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pickupTeamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       * @return The bytes for pickupTeamName.
       */
      public com.google.protobuf.ByteString
          getPickupTeamNameBytes() {
        java.lang.Object ref = pickupTeamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pickupTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       * @param value The pickupTeamName to set.
       * @return This builder for chaining.
       */
      public Builder setPickupTeamName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        pickupTeamName_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPickupTeamName() {
        pickupTeamName_ = getDefaultInstance().getPickupTeamName();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       * @param value The bytes for pickupTeamName to set.
       * @return This builder for chaining.
       */
      public Builder setPickupTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        pickupTeamName_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private long pickupTeamLogo_ ;
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       * @return Whether the pickupTeamLogo field is set.
       */
      @java.lang.Override
      public boolean hasPickupTeamLogo() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       * @return The pickupTeamLogo.
       */
      @java.lang.Override
      public long getPickupTeamLogo() {
        return pickupTeamLogo_;
      }
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       * @param value The pickupTeamLogo to set.
       * @return This builder for chaining.
       */
      public Builder setPickupTeamLogo(long value) {

        pickupTeamLogo_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPickupTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pickupTeamLogo_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneyOpts)
    }

    // @@protoc_insertion_point(class_scope:CMsgWeekendTourneyOpts)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgWeekendTourneyOpts>
        PARSER = new com.google.protobuf.AbstractParser<CMsgWeekendTourneyOpts>() {
      @java.lang.Override
      public CMsgWeekendTourneyOpts parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgWeekendTourneyOpts> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgWeekendTourneyOpts> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyOpts getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgWeekendTourneyLeaveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneyLeave)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgWeekendTourneyLeave}
   */
  public static final class CMsgWeekendTourneyLeave extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgWeekendTourneyLeave)
      CMsgWeekendTourneyLeaveOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgWeekendTourneyLeave.class.getName());
    }
    // Use CMsgWeekendTourneyLeave.newBuilder() to construct.
    private CMsgWeekendTourneyLeave(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgWeekendTourneyLeave() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyLeave_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneyLeave}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneyLeave)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeaveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyLeave_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgWeekendTourneyLeave_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneyLeave)
    }

    // @@protoc_insertion_point(class_scope:CMsgWeekendTourneyLeave)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgWeekendTourneyLeave>
        PARSER = new com.google.protobuf.AbstractParser<CMsgWeekendTourneyLeave>() {
      @java.lang.Override
      public CMsgWeekendTourneyLeave parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgWeekendTourneyLeave> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgWeekendTourneyLeave> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgWeekendTourneyLeave getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATournamentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournament)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tournament_id = 1;</code>
     * @return Whether the tournamentId field is set.
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     * @return The tournamentId.
     */
    int getTournamentId();

    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return Whether the divisionId field is set.
     */
    boolean hasDivisionId();
    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return The divisionId.
     */
    int getDivisionId();

    /**
     * <code>optional uint32 schedule_time = 3;</code>
     * @return Whether the scheduleTime field is set.
     */
    boolean hasScheduleTime();
    /**
     * <code>optional uint32 schedule_time = 3;</code>
     * @return The scheduleTime.
     */
    int getScheduleTime();

    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return Whether the skillLevel field is set.
     */
    boolean hasSkillLevel();
    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return The skillLevel.
     */
    int getSkillLevel();

    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     * @return Whether the tournamentTemplate field is set.
     */
    boolean hasTournamentTemplate();
    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     * @return The tournamentTemplate.
     */
    kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate getTournamentTemplate();

    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     * @return Whether the state field is set.
     */
    boolean hasState();
    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     * @return The state.
     */
    kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState getState();

    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     * @return Whether the stateSeqNum field is set.
     */
    boolean hasStateSeqNum();
    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     * @return The stateSeqNum.
     */
    int getStateSeqNum();

    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     * @return Whether the seasonTrophyId field is set.
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     * @return The seasonTrophyId.
     */
    int getSeasonTrophyId();

    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team> 
        getTeamsList();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team getTeams(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game> 
        getGamesList();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game getGames(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    int getGamesCount();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder> 
        getGamesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node> 
        getNodesList();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node getNodes(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTATournament}
   */
  public static final class CMsgDOTATournament extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournament)
      CMsgDOTATournamentOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTATournament.class.getName());
    }
    // Use CMsgDOTATournament.newBuilder() to construct.
    private CMsgDOTATournament(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournament() {
      tournamentTemplate_ = 0;
      state_ = 0;
      teams_ = java.util.Collections.emptyList();
      games_ = java.util.Collections.emptyList();
      nodes_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Builder.class);
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 team_gid = 1;</code>
       * @return Whether the teamGid field is set.
       */
      boolean hasTeamGid();
      /**
       * <code>optional fixed64 team_gid = 1;</code>
       * @return The teamGid.
       */
      long getTeamGid();

      /**
       * <code>optional uint32 node_or_state = 2;</code>
       * @return Whether the nodeOrState field is set.
       */
      boolean hasNodeOrState();
      /**
       * <code>optional uint32 node_or_state = 2;</code>
       * @return The nodeOrState.
       */
      int getNodeOrState();

      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       * @return A list containing the players.
       */
      java.util.List<java.lang.Integer> getPlayersList();
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       * @return The count of players.
       */
      int getPlayersCount();
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The players at the given index.
       */
      int getPlayers(int index);

      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       * @return A list containing the playerBuyin.
       */
      java.util.List<java.lang.Integer> getPlayerBuyinList();
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       * @return The count of playerBuyin.
       */
      int getPlayerBuyinCount();
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The playerBuyin at the given index.
       */
      int getPlayerBuyin(int index);

      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       * @return A list containing the playerSkillLevel.
       */
      java.util.List<java.lang.Integer> getPlayerSkillLevelList();
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       * @return The count of playerSkillLevel.
       */
      int getPlayerSkillLevelCount();
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The playerSkillLevel at the given index.
       */
      int getPlayerSkillLevel(int index);

      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       * @return Whether the matchGroupMask field is set.
       */
      boolean hasMatchGroupMask();
      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       * @return The matchGroupMask.
       */
      int getMatchGroupMask();

      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return Whether the teamId field is set.
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return The teamId.
       */
      int getTeamId();

      /**
       * <code>optional string team_name = 5;</code>
       * @return Whether the teamName field is set.
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 5;</code>
       * @return The teamName.
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 5;</code>
       * @return The bytes for teamName.
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       * @return Whether the teamBaseLogo field is set.
       */
      boolean hasTeamBaseLogo();
      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       * @return The teamBaseLogo.
       */
      long getTeamBaseLogo();

      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       * @return Whether the teamUiLogo field is set.
       */
      boolean hasTeamUiLogo();
      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       * @return The teamUiLogo.
       */
      long getTeamUiLogo();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Team)
        TeamOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Team.class.getName());
      }
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Team() {
        players_ = emptyIntList();
        playerBuyin_ = emptyIntList();
        playerSkillLevel_ = emptyIntList();
        teamName_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Team_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_GID_FIELD_NUMBER = 1;
      private long teamGid_ = 0L;
      /**
       * <code>optional fixed64 team_gid = 1;</code>
       * @return Whether the teamGid field is set.
       */
      @java.lang.Override
      public boolean hasTeamGid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 team_gid = 1;</code>
       * @return The teamGid.
       */
      @java.lang.Override
      public long getTeamGid() {
        return teamGid_;
      }

      public static final int NODE_OR_STATE_FIELD_NUMBER = 2;
      private int nodeOrState_ = 0;
      /**
       * <code>optional uint32 node_or_state = 2;</code>
       * @return Whether the nodeOrState field is set.
       */
      @java.lang.Override
      public boolean hasNodeOrState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 node_or_state = 2;</code>
       * @return The nodeOrState.
       */
      @java.lang.Override
      public int getNodeOrState() {
        return nodeOrState_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList players_ =
          emptyIntList();
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       * @return A list containing the players.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return players_;
      }
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       * @return The count of players.
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The players at the given index.
       */
      public int getPlayers(int index) {
        return players_.getInt(index);
      }
      private int playersMemoizedSerializedSize = -1;

      public static final int PLAYER_BUYIN_FIELD_NUMBER = 9;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList playerBuyin_ =
          emptyIntList();
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       * @return A list containing the playerBuyin.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getPlayerBuyinList() {
        return playerBuyin_;
      }
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       * @return The count of playerBuyin.
       */
      public int getPlayerBuyinCount() {
        return playerBuyin_.size();
      }
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The playerBuyin at the given index.
       */
      public int getPlayerBuyin(int index) {
        return playerBuyin_.getInt(index);
      }
      private int playerBuyinMemoizedSerializedSize = -1;

      public static final int PLAYER_SKILL_LEVEL_FIELD_NUMBER = 10;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList playerSkillLevel_ =
          emptyIntList();
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       * @return A list containing the playerSkillLevel.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getPlayerSkillLevelList() {
        return playerSkillLevel_;
      }
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       * @return The count of playerSkillLevel.
       */
      public int getPlayerSkillLevelCount() {
        return playerSkillLevel_.size();
      }
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The playerSkillLevel at the given index.
       */
      public int getPlayerSkillLevel(int index) {
        return playerSkillLevel_.getInt(index);
      }
      private int playerSkillLevelMemoizedSerializedSize = -1;

      public static final int MATCH_GROUP_MASK_FIELD_NUMBER = 12;
      private int matchGroupMask_ = 0;
      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       * @return Whether the matchGroupMask field is set.
       */
      @java.lang.Override
      public boolean hasMatchGroupMask() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       * @return The matchGroupMask.
       */
      @java.lang.Override
      public int getMatchGroupMask() {
        return matchGroupMask_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 4;
      private int teamId_ = 0;
      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private volatile java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 5;</code>
       * @return Whether the teamName field is set.
       */
      @java.lang.Override
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string team_name = 5;</code>
       * @return The teamName.
       */
      @java.lang.Override
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 5;</code>
       * @return The bytes for teamName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_BASE_LOGO_FIELD_NUMBER = 7;
      private long teamBaseLogo_ = 0L;
      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       * @return Whether the teamBaseLogo field is set.
       */
      @java.lang.Override
      public boolean hasTeamBaseLogo() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       * @return The teamBaseLogo.
       */
      @java.lang.Override
      public long getTeamBaseLogo() {
        return teamBaseLogo_;
      }

      public static final int TEAM_UI_LOGO_FIELD_NUMBER = 8;
      private long teamUiLogo_ = 0L;
      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       * @return Whether the teamUiLogo field is set.
       */
      @java.lang.Override
      public boolean hasTeamUiLogo() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       * @return The teamUiLogo.
       */
      @java.lang.Override
      public long getTeamUiLogo() {
        return teamUiLogo_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFixed64(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, nodeOrState_);
        }
        if (getPlayersList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(playersMemoizedSerializedSize);
        }
        for (int i = 0; i < players_.size(); i++) {
          output.writeUInt32NoTag(players_.getInt(i));
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 5, teamName_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt64(7, teamBaseLogo_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt64(8, teamUiLogo_);
        }
        if (getPlayerBuyinList().size() > 0) {
          output.writeUInt32NoTag(74);
          output.writeUInt32NoTag(playerBuyinMemoizedSerializedSize);
        }
        for (int i = 0; i < playerBuyin_.size(); i++) {
          output.writeUInt32NoTag(playerBuyin_.getInt(i));
        }
        if (getPlayerSkillLevelList().size() > 0) {
          output.writeUInt32NoTag(82);
          output.writeUInt32NoTag(playerSkillLevelMemoizedSerializedSize);
        }
        for (int i = 0; i < playerSkillLevel_.size(); i++) {
          output.writeUInt32NoTag(playerSkillLevel_.getInt(i));
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(12, matchGroupMask_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, nodeOrState_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < players_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(players_.getInt(i));
          }
          size += dataSize;
          if (!getPlayersList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playersMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(5, teamName_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(7, teamBaseLogo_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(8, teamUiLogo_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerBuyin_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(playerBuyin_.getInt(i));
          }
          size += dataSize;
          if (!getPlayerBuyinList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playerBuyinMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerSkillLevel_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(playerSkillLevel_.getInt(i));
          }
          size += dataSize;
          if (!getPlayerSkillLevelList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playerSkillLevelMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, matchGroupMask_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team) obj;

        if (hasTeamGid() != other.hasTeamGid()) return false;
        if (hasTeamGid()) {
          if (getTeamGid()
              != other.getTeamGid()) return false;
        }
        if (hasNodeOrState() != other.hasNodeOrState()) return false;
        if (hasNodeOrState()) {
          if (getNodeOrState()
              != other.getNodeOrState()) return false;
        }
        if (!getPlayersList()
            .equals(other.getPlayersList())) return false;
        if (!getPlayerBuyinList()
            .equals(other.getPlayerBuyinList())) return false;
        if (!getPlayerSkillLevelList()
            .equals(other.getPlayerSkillLevelList())) return false;
        if (hasMatchGroupMask() != other.hasMatchGroupMask()) return false;
        if (hasMatchGroupMask()) {
          if (getMatchGroupMask()
              != other.getMatchGroupMask()) return false;
        }
        if (hasTeamId() != other.hasTeamId()) return false;
        if (hasTeamId()) {
          if (getTeamId()
              != other.getTeamId()) return false;
        }
        if (hasTeamName() != other.hasTeamName()) return false;
        if (hasTeamName()) {
          if (!getTeamName()
              .equals(other.getTeamName())) return false;
        }
        if (hasTeamBaseLogo() != other.hasTeamBaseLogo()) return false;
        if (hasTeamBaseLogo()) {
          if (getTeamBaseLogo()
              != other.getTeamBaseLogo()) return false;
        }
        if (hasTeamUiLogo() != other.hasTeamUiLogo()) return false;
        if (hasTeamUiLogo()) {
          if (getTeamUiLogo()
              != other.getTeamUiLogo()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeamGid()) {
          hash = (37 * hash) + TEAM_GID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamGid());
        }
        if (hasNodeOrState()) {
          hash = (37 * hash) + NODE_OR_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getNodeOrState();
        }
        if (getPlayersCount() > 0) {
          hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersList().hashCode();
        }
        if (getPlayerBuyinCount() > 0) {
          hash = (37 * hash) + PLAYER_BUYIN_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerBuyinList().hashCode();
        }
        if (getPlayerSkillLevelCount() > 0) {
          hash = (37 * hash) + PLAYER_SKILL_LEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerSkillLevelList().hashCode();
        }
        if (hasMatchGroupMask()) {
          hash = (37 * hash) + MATCH_GROUP_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getMatchGroupMask();
        }
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasTeamName()) {
          hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTeamName().hashCode();
        }
        if (hasTeamBaseLogo()) {
          hash = (37 * hash) + TEAM_BASE_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamBaseLogo());
        }
        if (hasTeamUiLogo()) {
          hash = (37 * hash) + TEAM_UI_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamUiLogo());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Team)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Team_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          teamGid_ = 0L;
          nodeOrState_ = 0;
          players_ = emptyIntList();
          playerBuyin_ = emptyIntList();
          playerSkillLevel_ = emptyIntList();
          matchGroupMask_ = 0;
          teamId_ = 0;
          teamName_ = "";
          teamBaseLogo_ = 0L;
          teamUiLogo_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Team_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.teamGid_ = teamGid_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.nodeOrState_ = nodeOrState_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            players_.makeImmutable();
            result.players_ = players_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            playerBuyin_.makeImmutable();
            result.playerBuyin_ = playerBuyin_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            playerSkillLevel_.makeImmutable();
            result.playerSkillLevel_ = playerSkillLevel_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.matchGroupMask_ = matchGroupMask_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.teamId_ = teamId_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.teamName_ = teamName_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.teamBaseLogo_ = teamBaseLogo_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.teamUiLogo_ = teamUiLogo_;
            to_bitField0_ |= 0x00000040;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.getDefaultInstance()) return this;
          if (other.hasTeamGid()) {
            setTeamGid(other.getTeamGid());
          }
          if (other.hasNodeOrState()) {
            setNodeOrState(other.getNodeOrState());
          }
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              players_.makeImmutable();
              bitField0_ |= 0x00000004;
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
          if (!other.playerBuyin_.isEmpty()) {
            if (playerBuyin_.isEmpty()) {
              playerBuyin_ = other.playerBuyin_;
              playerBuyin_.makeImmutable();
              bitField0_ |= 0x00000008;
            } else {
              ensurePlayerBuyinIsMutable();
              playerBuyin_.addAll(other.playerBuyin_);
            }
            onChanged();
          }
          if (!other.playerSkillLevel_.isEmpty()) {
            if (playerSkillLevel_.isEmpty()) {
              playerSkillLevel_ = other.playerSkillLevel_;
              playerSkillLevel_.makeImmutable();
              bitField0_ |= 0x00000010;
            } else {
              ensurePlayerSkillLevelIsMutable();
              playerSkillLevel_.addAll(other.playerSkillLevel_);
            }
            onChanged();
          }
          if (other.hasMatchGroupMask()) {
            setMatchGroupMask(other.getMatchGroupMask());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamName()) {
            teamName_ = other.teamName_;
            bitField0_ |= 0x00000080;
            onChanged();
          }
          if (other.hasTeamBaseLogo()) {
            setTeamBaseLogo(other.getTeamBaseLogo());
          }
          if (other.hasTeamUiLogo()) {
            setTeamUiLogo(other.getTeamUiLogo());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  teamGid_ = input.readFixed64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 16: {
                  nodeOrState_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  int v = input.readUInt32();
                  ensurePlayersIsMutable();
                  players_.addInt(v);
                  break;
                } // case 24
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensurePlayersIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    players_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 26
                case 32: {
                  teamId_ = input.readUInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 32
                case 42: {
                  teamName_ = input.readBytes();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 42
                case 56: {
                  teamBaseLogo_ = input.readUInt64();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 56
                case 64: {
                  teamUiLogo_ = input.readUInt64();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 64
                case 72: {
                  int v = input.readUInt32();
                  ensurePlayerBuyinIsMutable();
                  playerBuyin_.addInt(v);
                  break;
                } // case 72
                case 74: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensurePlayerBuyinIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    playerBuyin_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 74
                case 80: {
                  int v = input.readUInt32();
                  ensurePlayerSkillLevelIsMutable();
                  playerSkillLevel_.addInt(v);
                  break;
                } // case 80
                case 82: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensurePlayerSkillLevelIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    playerSkillLevel_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 82
                case 96: {
                  matchGroupMask_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 96
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long teamGid_ ;
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         * @return Whether the teamGid field is set.
         */
        @java.lang.Override
        public boolean hasTeamGid() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         * @return The teamGid.
         */
        @java.lang.Override
        public long getTeamGid() {
          return teamGid_;
        }
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         * @param value The teamGid to set.
         * @return This builder for chaining.
         */
        public Builder setTeamGid(long value) {

          teamGid_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamGid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamGid_ = 0L;
          onChanged();
          return this;
        }

        private int nodeOrState_ ;
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         * @return Whether the nodeOrState field is set.
         */
        @java.lang.Override
        public boolean hasNodeOrState() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         * @return The nodeOrState.
         */
        @java.lang.Override
        public int getNodeOrState() {
          return nodeOrState_;
        }
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         * @param value The nodeOrState to set.
         * @return This builder for chaining.
         */
        public Builder setNodeOrState(int value) {

          nodeOrState_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000002);
          nodeOrState_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList players_ = emptyIntList();
        private void ensurePlayersIsMutable() {
          if (!players_.isModifiable()) {
            players_ = makeMutableCopy(players_);
          }
          bitField0_ |= 0x00000004;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @return A list containing the players.
         */
        public java.util.List<java.lang.Integer>
            getPlayersList() {
          players_.makeImmutable();
          return players_;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @return The count of players.
         */
        public int getPlayersCount() {
          return players_.size();
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The players at the given index.
         */
        public int getPlayers(int index) {
          return players_.getInt(index);
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The players to set.
         * @return This builder for chaining.
         */
        public Builder setPlayers(
            int index, int value) {

          ensurePlayersIsMutable();
          players_.setInt(index, value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @param value The players to add.
         * @return This builder for chaining.
         */
        public Builder addPlayers(int value) {

          ensurePlayersIsMutable();
          players_.addInt(value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @param values The players to add.
         * @return This builder for chaining.
         */
        public Builder addAllPlayers(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayers() {
          players_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList playerBuyin_ = emptyIntList();
        private void ensurePlayerBuyinIsMutable() {
          if (!playerBuyin_.isModifiable()) {
            playerBuyin_ = makeMutableCopy(playerBuyin_);
          }
          bitField0_ |= 0x00000008;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @return A list containing the playerBuyin.
         */
        public java.util.List<java.lang.Integer>
            getPlayerBuyinList() {
          playerBuyin_.makeImmutable();
          return playerBuyin_;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @return The count of playerBuyin.
         */
        public int getPlayerBuyinCount() {
          return playerBuyin_.size();
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The playerBuyin at the given index.
         */
        public int getPlayerBuyin(int index) {
          return playerBuyin_.getInt(index);
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The playerBuyin to set.
         * @return This builder for chaining.
         */
        public Builder setPlayerBuyin(
            int index, int value) {

          ensurePlayerBuyinIsMutable();
          playerBuyin_.setInt(index, value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @param value The playerBuyin to add.
         * @return This builder for chaining.
         */
        public Builder addPlayerBuyin(int value) {

          ensurePlayerBuyinIsMutable();
          playerBuyin_.addInt(value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @param values The playerBuyin to add.
         * @return This builder for chaining.
         */
        public Builder addAllPlayerBuyin(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayerBuyinIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerBuyin_);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayerBuyin() {
          playerBuyin_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList playerSkillLevel_ = emptyIntList();
        private void ensurePlayerSkillLevelIsMutable() {
          if (!playerSkillLevel_.isModifiable()) {
            playerSkillLevel_ = makeMutableCopy(playerSkillLevel_);
          }
          bitField0_ |= 0x00000010;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @return A list containing the playerSkillLevel.
         */
        public java.util.List<java.lang.Integer>
            getPlayerSkillLevelList() {
          playerSkillLevel_.makeImmutable();
          return playerSkillLevel_;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @return The count of playerSkillLevel.
         */
        public int getPlayerSkillLevelCount() {
          return playerSkillLevel_.size();
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The playerSkillLevel at the given index.
         */
        public int getPlayerSkillLevel(int index) {
          return playerSkillLevel_.getInt(index);
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The playerSkillLevel to set.
         * @return This builder for chaining.
         */
        public Builder setPlayerSkillLevel(
            int index, int value) {

          ensurePlayerSkillLevelIsMutable();
          playerSkillLevel_.setInt(index, value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @param value The playerSkillLevel to add.
         * @return This builder for chaining.
         */
        public Builder addPlayerSkillLevel(int value) {

          ensurePlayerSkillLevelIsMutable();
          playerSkillLevel_.addInt(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @param values The playerSkillLevel to add.
         * @return This builder for chaining.
         */
        public Builder addAllPlayerSkillLevel(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayerSkillLevelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerSkillLevel_);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayerSkillLevel() {
          playerSkillLevel_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private int matchGroupMask_ ;
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         * @return Whether the matchGroupMask field is set.
         */
        @java.lang.Override
        public boolean hasMatchGroupMask() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         * @return The matchGroupMask.
         */
        @java.lang.Override
        public int getMatchGroupMask() {
          return matchGroupMask_;
        }
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         * @param value The matchGroupMask to set.
         * @return This builder for chaining.
         */
        public Builder setMatchGroupMask(int value) {

          matchGroupMask_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearMatchGroupMask() {
          bitField0_ = (bitField0_ & ~0x00000020);
          matchGroupMask_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @return Whether the teamId field is set.
         */
        @java.lang.Override
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @return The teamId.
         */
        @java.lang.Override
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @param value The teamId to set.
         * @return This builder for chaining.
         */
        public Builder setTeamId(int value) {

          teamId_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 5;</code>
         * @return Whether the teamName field is set.
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional string team_name = 5;</code>
         * @return The teamName.
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 5;</code>
         * @return The bytes for teamName.
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 5;</code>
         * @param value The teamName to set.
         * @return This builder for chaining.
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          teamName_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamName() {
          teamName_ = getDefaultInstance().getTeamName();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 5;</code>
         * @param value The bytes for teamName to set.
         * @return This builder for chaining.
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          teamName_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }

        private long teamBaseLogo_ ;
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         * @return Whether the teamBaseLogo field is set.
         */
        @java.lang.Override
        public boolean hasTeamBaseLogo() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         * @return The teamBaseLogo.
         */
        @java.lang.Override
        public long getTeamBaseLogo() {
          return teamBaseLogo_;
        }
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         * @param value The teamBaseLogo to set.
         * @return This builder for chaining.
         */
        public Builder setTeamBaseLogo(long value) {

          teamBaseLogo_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamBaseLogo() {
          bitField0_ = (bitField0_ & ~0x00000100);
          teamBaseLogo_ = 0L;
          onChanged();
          return this;
        }

        private long teamUiLogo_ ;
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         * @return Whether the teamUiLogo field is set.
         */
        @java.lang.Override
        public boolean hasTeamUiLogo() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         * @return The teamUiLogo.
         */
        @java.lang.Override
        public long getTeamUiLogo() {
          return teamUiLogo_;
        }
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         * @param value The teamUiLogo to set.
         * @return This builder for chaining.
         */
        public Builder setTeamUiLogo(long value) {

          teamUiLogo_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamUiLogo() {
          bitField0_ = (bitField0_ & ~0x00000200);
          teamUiLogo_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Team)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Team)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Team>
          PARSER = new com.google.protobuf.AbstractParser<Team>() {
        @java.lang.Override
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Team> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GameOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Game)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 node_idx = 1;</code>
       * @return Whether the nodeIdx field is set.
       */
      boolean hasNodeIdx();
      /**
       * <code>optional uint32 node_idx = 1;</code>
       * @return The nodeIdx.
       */
      int getNodeIdx();

      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       * @return Whether the lobbyId field is set.
       */
      boolean hasLobbyId();
      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       * @return The lobbyId.
       */
      long getLobbyId();

      /**
       * <code>optional uint64 match_id = 3;</code>
       * @return Whether the matchId field is set.
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 3;</code>
       * @return The matchId.
       */
      long getMatchId();

      /**
       * <code>optional bool team_a_good = 4;</code>
       * @return Whether the teamAGood field is set.
       */
      boolean hasTeamAGood();
      /**
       * <code>optional bool team_a_good = 4;</code>
       * @return The teamAGood.
       */
      boolean getTeamAGood();

      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       * @return Whether the state field is set.
       */
      boolean hasState();
      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       * @return The state.
       */
      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState getState();

      /**
       * <code>optional uint32 start_time = 6;</code>
       * @return Whether the startTime field is set.
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 6;</code>
       * @return The startTime.
       */
      int getStartTime();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Game}
     */
    public static final class Game extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Game)
        GameOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Game.class.getName());
      }
      // Use Game.newBuilder() to construct.
      private Game(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Game() {
        state_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Game_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Game_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder.class);
      }

      private int bitField0_;
      public static final int NODE_IDX_FIELD_NUMBER = 1;
      private int nodeIdx_ = 0;
      /**
       * <code>optional uint32 node_idx = 1;</code>
       * @return Whether the nodeIdx field is set.
       */
      @java.lang.Override
      public boolean hasNodeIdx() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 node_idx = 1;</code>
       * @return The nodeIdx.
       */
      @java.lang.Override
      public int getNodeIdx() {
        return nodeIdx_;
      }

      public static final int LOBBY_ID_FIELD_NUMBER = 2;
      private long lobbyId_ = 0L;
      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       * @return Whether the lobbyId field is set.
       */
      @java.lang.Override
      public boolean hasLobbyId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       * @return The lobbyId.
       */
      @java.lang.Override
      public long getLobbyId() {
        return lobbyId_;
      }

      public static final int MATCH_ID_FIELD_NUMBER = 3;
      private long matchId_ = 0L;
      /**
       * <code>optional uint64 match_id = 3;</code>
       * @return Whether the matchId field is set.
       */
      @java.lang.Override
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint64 match_id = 3;</code>
       * @return The matchId.
       */
      @java.lang.Override
      public long getMatchId() {
        return matchId_;
      }

      public static final int TEAM_A_GOOD_FIELD_NUMBER = 4;
      private boolean teamAGood_ = false;
      /**
       * <code>optional bool team_a_good = 4;</code>
       * @return Whether the teamAGood field is set.
       */
      @java.lang.Override
      public boolean hasTeamAGood() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool team_a_good = 4;</code>
       * @return The teamAGood.
       */
      @java.lang.Override
      public boolean getTeamAGood() {
        return teamAGood_;
      }

      public static final int STATE_FIELD_NUMBER = 5;
      private int state_ = 0;
      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       * @return Whether the state field is set.
       */
      @java.lang.Override public boolean hasState() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       * @return The state.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState getState() {
        kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.forNumber(state_);
        return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
      }

      public static final int START_TIME_FIELD_NUMBER = 6;
      private int startTime_ = 0;
      /**
       * <code>optional uint32 start_time = 6;</code>
       * @return Whether the startTime field is set.
       */
      @java.lang.Override
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 start_time = 6;</code>
       * @return The startTime.
       */
      @java.lang.Override
      public int getStartTime() {
        return startTime_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, nodeIdx_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFixed64(2, lobbyId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt64(3, matchId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeBool(4, teamAGood_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeEnum(5, state_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, startTime_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, nodeIdx_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, lobbyId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, matchId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, teamAGood_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, state_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, startTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game) obj;

        if (hasNodeIdx() != other.hasNodeIdx()) return false;
        if (hasNodeIdx()) {
          if (getNodeIdx()
              != other.getNodeIdx()) return false;
        }
        if (hasLobbyId() != other.hasLobbyId()) return false;
        if (hasLobbyId()) {
          if (getLobbyId()
              != other.getLobbyId()) return false;
        }
        if (hasMatchId() != other.hasMatchId()) return false;
        if (hasMatchId()) {
          if (getMatchId()
              != other.getMatchId()) return false;
        }
        if (hasTeamAGood() != other.hasTeamAGood()) return false;
        if (hasTeamAGood()) {
          if (getTeamAGood()
              != other.getTeamAGood()) return false;
        }
        if (hasState() != other.hasState()) return false;
        if (hasState()) {
          if (state_ != other.state_) return false;
        }
        if (hasStartTime() != other.hasStartTime()) return false;
        if (hasStartTime()) {
          if (getStartTime()
              != other.getStartTime()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNodeIdx()) {
          hash = (37 * hash) + NODE_IDX_FIELD_NUMBER;
          hash = (53 * hash) + getNodeIdx();
        }
        if (hasLobbyId()) {
          hash = (37 * hash) + LOBBY_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLobbyId());
        }
        if (hasMatchId()) {
          hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMatchId());
        }
        if (hasTeamAGood()) {
          hash = (37 * hash) + TEAM_A_GOOD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getTeamAGood());
        }
        if (hasState()) {
          hash = (37 * hash) + STATE_FIELD_NUMBER;
          hash = (53 * hash) + state_;
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getStartTime();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Game}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Game)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Game_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Game_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          nodeIdx_ = 0;
          lobbyId_ = 0L;
          matchId_ = 0L;
          teamAGood_ = false;
          state_ = 0;
          startTime_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Game_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.nodeIdx_ = nodeIdx_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.lobbyId_ = lobbyId_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.matchId_ = matchId_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.teamAGood_ = teamAGood_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.state_ = state_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.startTime_ = startTime_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.getDefaultInstance()) return this;
          if (other.hasNodeIdx()) {
            setNodeIdx(other.getNodeIdx());
          }
          if (other.hasLobbyId()) {
            setLobbyId(other.getLobbyId());
          }
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasTeamAGood()) {
            setTeamAGood(other.getTeamAGood());
          }
          if (other.hasState()) {
            setState(other.getState());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  nodeIdx_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 17: {
                  lobbyId_ = input.readFixed64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 24: {
                  matchId_ = input.readUInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  teamAGood_ = input.readBool();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState tmpValue =
                      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(5, tmpRaw);
                  } else {
                    state_ = tmpRaw;
                    bitField0_ |= 0x00000010;
                  }
                  break;
                } // case 40
                case 48: {
                  startTime_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int nodeIdx_ ;
        /**
         * <code>optional uint32 node_idx = 1;</code>
         * @return Whether the nodeIdx field is set.
         */
        @java.lang.Override
        public boolean hasNodeIdx() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 node_idx = 1;</code>
         * @return The nodeIdx.
         */
        @java.lang.Override
        public int getNodeIdx() {
          return nodeIdx_;
        }
        /**
         * <code>optional uint32 node_idx = 1;</code>
         * @param value The nodeIdx to set.
         * @return This builder for chaining.
         */
        public Builder setNodeIdx(int value) {

          nodeIdx_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_idx = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNodeIdx() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeIdx_ = 0;
          onChanged();
          return this;
        }

        private long lobbyId_ ;
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         * @return Whether the lobbyId field is set.
         */
        @java.lang.Override
        public boolean hasLobbyId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         * @return The lobbyId.
         */
        @java.lang.Override
        public long getLobbyId() {
          return lobbyId_;
        }
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         * @param value The lobbyId to set.
         * @return This builder for chaining.
         */
        public Builder setLobbyId(long value) {

          lobbyId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLobbyId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lobbyId_ = 0L;
          onChanged();
          return this;
        }

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 3;</code>
         * @return Whether the matchId field is set.
         */
        @java.lang.Override
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint64 match_id = 3;</code>
         * @return The matchId.
         */
        @java.lang.Override
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 3;</code>
         * @param value The matchId to set.
         * @return This builder for chaining.
         */
        public Builder setMatchId(long value) {

          matchId_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private boolean teamAGood_ ;
        /**
         * <code>optional bool team_a_good = 4;</code>
         * @return Whether the teamAGood field is set.
         */
        @java.lang.Override
        public boolean hasTeamAGood() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional bool team_a_good = 4;</code>
         * @return The teamAGood.
         */
        @java.lang.Override
        public boolean getTeamAGood() {
          return teamAGood_;
        }
        /**
         * <code>optional bool team_a_good = 4;</code>
         * @param value The teamAGood to set.
         * @return This builder for chaining.
         */
        public Builder setTeamAGood(boolean value) {

          teamAGood_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool team_a_good = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamAGood() {
          bitField0_ = (bitField0_ & ~0x00000008);
          teamAGood_ = false;
          onChanged();
          return this;
        }

        private int state_ = 0;
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         * @return Whether the state field is set.
         */
        @java.lang.Override public boolean hasState() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         * @return The state.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState getState() {
          kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.forNumber(state_);
          return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
        }
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         * @param value The state to set.
         * @return This builder for chaining.
         */
        public Builder setState(kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          state_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         * @return This builder for chaining.
         */
        public Builder clearState() {
          bitField0_ = (bitField0_ & ~0x00000010);
          state_ = 0;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 6;</code>
         * @return Whether the startTime field is set.
         */
        @java.lang.Override
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         * @return The startTime.
         */
        @java.lang.Override
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         * @param value The startTime to set.
         * @return This builder for chaining.
         */
        public Builder setStartTime(int value) {

          startTime_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          startTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Game)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Game)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Game>
          PARSER = new com.google.protobuf.AbstractParser<Game>() {
        @java.lang.Override
        public Game parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Game> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Game> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Node)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 node_id = 1;</code>
       * @return Whether the nodeId field is set.
       */
      boolean hasNodeId();
      /**
       * <code>optional uint32 node_id = 1;</code>
       * @return The nodeId.
       */
      int getNodeId();

      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       * @return Whether the teamIdxA field is set.
       */
      boolean hasTeamIdxA();
      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       * @return The teamIdxA.
       */
      int getTeamIdxA();

      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       * @return Whether the teamIdxB field is set.
       */
      boolean hasTeamIdxB();
      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       * @return The teamIdxB.
       */
      int getTeamIdxB();

      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       * @return Whether the nodeState field is set.
       */
      boolean hasNodeState();
      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       * @return The nodeState.
       */
      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState getNodeState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Node}
     */
    public static final class Node extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Node)
        NodeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Node.class.getName());
      }
      // Use Node.newBuilder() to construct.
      private Node(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Node() {
        nodeState_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Node_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder.class);
      }

      private int bitField0_;
      public static final int NODE_ID_FIELD_NUMBER = 1;
      private int nodeId_ = 0;
      /**
       * <code>optional uint32 node_id = 1;</code>
       * @return Whether the nodeId field is set.
       */
      @java.lang.Override
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 node_id = 1;</code>
       * @return The nodeId.
       */
      @java.lang.Override
      public int getNodeId() {
        return nodeId_;
      }

      public static final int TEAM_IDX_A_FIELD_NUMBER = 2;
      private int teamIdxA_ = 0;
      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       * @return Whether the teamIdxA field is set.
       */
      @java.lang.Override
      public boolean hasTeamIdxA() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       * @return The teamIdxA.
       */
      @java.lang.Override
      public int getTeamIdxA() {
        return teamIdxA_;
      }

      public static final int TEAM_IDX_B_FIELD_NUMBER = 3;
      private int teamIdxB_ = 0;
      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       * @return Whether the teamIdxB field is set.
       */
      @java.lang.Override
      public boolean hasTeamIdxB() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       * @return The teamIdxB.
       */
      @java.lang.Override
      public int getTeamIdxB() {
        return teamIdxB_;
      }

      public static final int NODE_STATE_FIELD_NUMBER = 4;
      private int nodeState_ = 0;
      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       * @return Whether the nodeState field is set.
       */
      @java.lang.Override public boolean hasNodeState() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       * @return The nodeState.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState getNodeState() {
        kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState.forNumber(nodeState_);
        return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState.k_ETournamentNodeState_Unknown : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, teamIdxA_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, teamIdxB_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeEnum(4, nodeState_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, teamIdxA_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, teamIdxB_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, nodeState_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node) obj;

        if (hasNodeId() != other.hasNodeId()) return false;
        if (hasNodeId()) {
          if (getNodeId()
              != other.getNodeId()) return false;
        }
        if (hasTeamIdxA() != other.hasTeamIdxA()) return false;
        if (hasTeamIdxA()) {
          if (getTeamIdxA()
              != other.getTeamIdxA()) return false;
        }
        if (hasTeamIdxB() != other.hasTeamIdxB()) return false;
        if (hasTeamIdxB()) {
          if (getTeamIdxB()
              != other.getTeamIdxB()) return false;
        }
        if (hasNodeState() != other.hasNodeState()) return false;
        if (hasNodeState()) {
          if (nodeState_ != other.nodeState_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId();
        }
        if (hasTeamIdxA()) {
          hash = (37 * hash) + TEAM_IDX_A_FIELD_NUMBER;
          hash = (53 * hash) + getTeamIdxA();
        }
        if (hasTeamIdxB()) {
          hash = (37 * hash) + TEAM_IDX_B_FIELD_NUMBER;
          hash = (53 * hash) + getTeamIdxB();
        }
        if (hasNodeState()) {
          hash = (37 * hash) + NODE_STATE_FIELD_NUMBER;
          hash = (53 * hash) + nodeState_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Node}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Node)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Node_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Node_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          nodeId_ = 0;
          teamIdxA_ = 0;
          teamIdxB_ = 0;
          nodeState_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_Node_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.nodeId_ = nodeId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.teamIdxA_ = teamIdxA_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.teamIdxB_ = teamIdxB_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.nodeState_ = nodeState_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.getDefaultInstance()) return this;
          if (other.hasNodeId()) {
            setNodeId(other.getNodeId());
          }
          if (other.hasTeamIdxA()) {
            setTeamIdxA(other.getTeamIdxA());
          }
          if (other.hasTeamIdxB()) {
            setTeamIdxB(other.getTeamIdxB());
          }
          if (other.hasNodeState()) {
            setNodeState(other.getNodeState());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  nodeId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  teamIdxA_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  teamIdxB_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState tmpValue =
                      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(4, tmpRaw);
                  } else {
                    nodeState_ = tmpRaw;
                    bitField0_ |= 0x00000008;
                  }
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int nodeId_ ;
        /**
         * <code>optional uint32 node_id = 1;</code>
         * @return Whether the nodeId field is set.
         */
        @java.lang.Override
        public boolean hasNodeId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         * @return The nodeId.
         */
        @java.lang.Override
        public int getNodeId() {
          return nodeId_;
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         * @param value The nodeId to set.
         * @return This builder for chaining.
         */
        public Builder setNodeId(int value) {

          nodeId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNodeId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeId_ = 0;
          onChanged();
          return this;
        }

        private int teamIdxA_ ;
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         * @return Whether the teamIdxA field is set.
         */
        @java.lang.Override
        public boolean hasTeamIdxA() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         * @return The teamIdxA.
         */
        @java.lang.Override
        public int getTeamIdxA() {
          return teamIdxA_;
        }
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         * @param value The teamIdxA to set.
         * @return This builder for chaining.
         */
        public Builder setTeamIdxA(int value) {

          teamIdxA_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamIdxA() {
          bitField0_ = (bitField0_ & ~0x00000002);
          teamIdxA_ = 0;
          onChanged();
          return this;
        }

        private int teamIdxB_ ;
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         * @return Whether the teamIdxB field is set.
         */
        @java.lang.Override
        public boolean hasTeamIdxB() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         * @return The teamIdxB.
         */
        @java.lang.Override
        public int getTeamIdxB() {
          return teamIdxB_;
        }
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         * @param value The teamIdxB to set.
         * @return This builder for chaining.
         */
        public Builder setTeamIdxB(int value) {

          teamIdxB_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamIdxB() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teamIdxB_ = 0;
          onChanged();
          return this;
        }

        private int nodeState_ = 0;
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         * @return Whether the nodeState field is set.
         */
        @java.lang.Override public boolean hasNodeState() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         * @return The nodeState.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState getNodeState() {
          kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState.forNumber(nodeState_);
          return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState.k_ETournamentNodeState_Unknown : result;
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         * @param value The nodeState to set.
         * @return This builder for chaining.
         */
        public Builder setNodeState(kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentNodeState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          nodeState_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         * @return This builder for chaining.
         */
        public Builder clearNodeState() {
          bitField0_ = (bitField0_ & ~0x00000008);
          nodeState_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Node)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Node)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Node>
          PARSER = new com.google.protobuf.AbstractParser<Node>() {
        @java.lang.Override
        public Node parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Node> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Node> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int tournamentId_ = 0;
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     * @return Whether the tournamentId field is set.
     */
    @java.lang.Override
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     * @return The tournamentId.
     */
    @java.lang.Override
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int DIVISION_ID_FIELD_NUMBER = 2;
    private int divisionId_ = 0;
    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return Whether the divisionId field is set.
     */
    @java.lang.Override
    public boolean hasDivisionId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 division_id = 2;</code>
     * @return The divisionId.
     */
    @java.lang.Override
    public int getDivisionId() {
      return divisionId_;
    }

    public static final int SCHEDULE_TIME_FIELD_NUMBER = 3;
    private int scheduleTime_ = 0;
    /**
     * <code>optional uint32 schedule_time = 3;</code>
     * @return Whether the scheduleTime field is set.
     */
    @java.lang.Override
    public boolean hasScheduleTime() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 schedule_time = 3;</code>
     * @return The scheduleTime.
     */
    @java.lang.Override
    public int getScheduleTime() {
      return scheduleTime_;
    }

    public static final int SKILL_LEVEL_FIELD_NUMBER = 4;
    private int skillLevel_ = 0;
    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return Whether the skillLevel field is set.
     */
    @java.lang.Override
    public boolean hasSkillLevel() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 skill_level = 4;</code>
     * @return The skillLevel.
     */
    @java.lang.Override
    public int getSkillLevel() {
      return skillLevel_;
    }

    public static final int TOURNAMENT_TEMPLATE_FIELD_NUMBER = 5;
    private int tournamentTemplate_ = 0;
    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     * @return Whether the tournamentTemplate field is set.
     */
    @java.lang.Override public boolean hasTournamentTemplate() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     * @return The tournamentTemplate.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate getTournamentTemplate() {
      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate.forNumber(tournamentTemplate_);
      return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate.k_ETournamentTemplate_None : result;
    }

    public static final int STATE_FIELD_NUMBER = 6;
    private int state_ = 0;
    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override public boolean hasState() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     * @return The state.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState getState() {
      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.forNumber(state_);
      return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
    }

    public static final int STATE_SEQ_NUM_FIELD_NUMBER = 10;
    private int stateSeqNum_ = 0;
    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     * @return Whether the stateSeqNum field is set.
     */
    @java.lang.Override
    public boolean hasStateSeqNum() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     * @return The stateSeqNum.
     */
    @java.lang.Override
    public int getStateSeqNum() {
      return stateSeqNum_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 11;
    private int seasonTrophyId_ = 0;
    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     * @return Whether the seasonTrophyId field is set.
     */
    @java.lang.Override
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     * @return The seasonTrophyId.
     */
    @java.lang.Override
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    public static final int TEAMS_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team> teams_;
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    @java.lang.Override
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    public static final int GAMES_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game> games_;
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game> getGamesList() {
      return games_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder> 
        getGamesOrBuilderList() {
      return games_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    @java.lang.Override
    public int getGamesCount() {
      return games_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game getGames(int index) {
      return games_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
        int index) {
      return games_.get(index);
    }

    public static final int NODES_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node> nodes_;
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    @java.lang.Override
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, scheduleTime_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeEnum(5, tournamentTemplate_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeEnum(6, state_);
      }
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(7, teams_.get(i));
      }
      for (int i = 0; i < games_.size(); i++) {
        output.writeMessage(8, games_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(9, nodes_.get(i));
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(10, stateSeqNum_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(11, seasonTrophyId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, scheduleTime_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, tournamentTemplate_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, state_);
      }
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, teams_.get(i));
      }
      for (int i = 0; i < games_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, games_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, nodes_.get(i));
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stateSeqNum_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, seasonTrophyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament) obj;

      if (hasTournamentId() != other.hasTournamentId()) return false;
      if (hasTournamentId()) {
        if (getTournamentId()
            != other.getTournamentId()) return false;
      }
      if (hasDivisionId() != other.hasDivisionId()) return false;
      if (hasDivisionId()) {
        if (getDivisionId()
            != other.getDivisionId()) return false;
      }
      if (hasScheduleTime() != other.hasScheduleTime()) return false;
      if (hasScheduleTime()) {
        if (getScheduleTime()
            != other.getScheduleTime()) return false;
      }
      if (hasSkillLevel() != other.hasSkillLevel()) return false;
      if (hasSkillLevel()) {
        if (getSkillLevel()
            != other.getSkillLevel()) return false;
      }
      if (hasTournamentTemplate() != other.hasTournamentTemplate()) return false;
      if (hasTournamentTemplate()) {
        if (tournamentTemplate_ != other.tournamentTemplate_) return false;
      }
      if (hasState() != other.hasState()) return false;
      if (hasState()) {
        if (state_ != other.state_) return false;
      }
      if (hasStateSeqNum() != other.hasStateSeqNum()) return false;
      if (hasStateSeqNum()) {
        if (getStateSeqNum()
            != other.getStateSeqNum()) return false;
      }
      if (hasSeasonTrophyId() != other.hasSeasonTrophyId()) return false;
      if (hasSeasonTrophyId()) {
        if (getSeasonTrophyId()
            != other.getSeasonTrophyId()) return false;
      }
      if (!getTeamsList()
          .equals(other.getTeamsList())) return false;
      if (!getGamesList()
          .equals(other.getGamesList())) return false;
      if (!getNodesList()
          .equals(other.getNodesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTournamentId()) {
        hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTournamentId();
      }
      if (hasDivisionId()) {
        hash = (37 * hash) + DIVISION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionId();
      }
      if (hasScheduleTime()) {
        hash = (37 * hash) + SCHEDULE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getScheduleTime();
      }
      if (hasSkillLevel()) {
        hash = (37 * hash) + SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevel();
      }
      if (hasTournamentTemplate()) {
        hash = (37 * hash) + TOURNAMENT_TEMPLATE_FIELD_NUMBER;
        hash = (53 * hash) + tournamentTemplate_;
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + state_;
      }
      if (hasStateSeqNum()) {
        hash = (37 * hash) + STATE_SEQ_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getStateSeqNum();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      if (getTeamsCount() > 0) {
        hash = (37 * hash) + TEAMS_FIELD_NUMBER;
        hash = (53 * hash) + getTeamsList().hashCode();
      }
      if (getGamesCount() > 0) {
        hash = (37 * hash) + GAMES_FIELD_NUMBER;
        hash = (53 * hash) + getGamesList().hashCode();
      }
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournament}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournament)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tournamentId_ = 0;
        divisionId_ = 0;
        scheduleTime_ = 0;
        skillLevel_ = 0;
        tournamentTemplate_ = 0;
        state_ = 0;
        stateSeqNum_ = 0;
        seasonTrophyId_ = 0;
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
        } else {
          teams_ = null;
          teamsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
        } else {
          games_ = null;
          gamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
        } else {
          nodes_ = null;
          nodesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournament_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament result) {
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        if (gamesBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            games_ = java.util.Collections.unmodifiableList(games_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.games_ = games_;
        } else {
          result.games_ = gamesBuilder_.build();
        }
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tournamentId_ = tournamentId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.divisionId_ = divisionId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.scheduleTime_ = scheduleTime_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.skillLevel_ = skillLevel_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.tournamentTemplate_ = tournamentTemplate_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.state_ = state_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.stateSeqNum_ = stateSeqNum_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.seasonTrophyId_ = seasonTrophyId_;
          to_bitField0_ |= 0x00000080;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.getDefaultInstance()) return this;
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasDivisionId()) {
          setDivisionId(other.getDivisionId());
        }
        if (other.hasScheduleTime()) {
          setScheduleTime(other.getScheduleTime());
        }
        if (other.hasSkillLevel()) {
          setSkillLevel(other.getSkillLevel());
        }
        if (other.hasTournamentTemplate()) {
          setTournamentTemplate(other.getTournamentTemplate());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasStateSeqNum()) {
          setStateSeqNum(other.getStateSeqNum());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000100);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        if (gamesBuilder_ == null) {
          if (!other.games_.isEmpty()) {
            if (games_.isEmpty()) {
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureGamesIsMutable();
              games_.addAll(other.games_);
            }
            onChanged();
          }
        } else {
          if (!other.games_.isEmpty()) {
            if (gamesBuilder_.isEmpty()) {
              gamesBuilder_.dispose();
              gamesBuilder_ = null;
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000200);
              gamesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGamesFieldBuilder() : null;
            } else {
              gamesBuilder_.addAllMessages(other.games_);
            }
          }
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000400);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                tournamentId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                divisionId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                scheduleTime_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                skillLevel_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate tmpValue =
                    kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(5, tmpRaw);
                } else {
                  tournamentTemplate_ = tmpRaw;
                  bitField0_ |= 0x00000010;
                }
                break;
              } // case 40
              case 48: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState tmpValue =
                    kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(6, tmpRaw);
                } else {
                  state_ = tmpRaw;
                  bitField0_ |= 0x00000020;
                }
                break;
              } // case 48
              case 58: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.parser(),
                        extensionRegistry);
                if (teamsBuilder_ == null) {
                  ensureTeamsIsMutable();
                  teams_.add(m);
                } else {
                  teamsBuilder_.addMessage(m);
                }
                break;
              } // case 58
              case 66: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.parser(),
                        extensionRegistry);
                if (gamesBuilder_ == null) {
                  ensureGamesIsMutable();
                  games_.add(m);
                } else {
                  gamesBuilder_.addMessage(m);
                }
                break;
              } // case 66
              case 74: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.parser(),
                        extensionRegistry);
                if (nodesBuilder_ == null) {
                  ensureNodesIsMutable();
                  nodes_.add(m);
                } else {
                  nodesBuilder_.addMessage(m);
                }
                break;
              } // case 74
              case 80: {
                stateSeqNum_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 80
              case 88: {
                seasonTrophyId_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 88
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return Whether the tournamentId field is set.
       */
      @java.lang.Override
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return The tournamentId.
       */
      @java.lang.Override
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @param value The tournamentId to set.
       * @return This builder for chaining.
       */
      public Builder setTournamentId(int value) {

        tournamentId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private int divisionId_ ;
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @return Whether the divisionId field is set.
       */
      @java.lang.Override
      public boolean hasDivisionId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @return The divisionId.
       */
      @java.lang.Override
      public int getDivisionId() {
        return divisionId_;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @param value The divisionId to set.
       * @return This builder for chaining.
       */
      public Builder setDivisionId(int value) {

        divisionId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDivisionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        divisionId_ = 0;
        onChanged();
        return this;
      }

      private int scheduleTime_ ;
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       * @return Whether the scheduleTime field is set.
       */
      @java.lang.Override
      public boolean hasScheduleTime() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       * @return The scheduleTime.
       */
      @java.lang.Override
      public int getScheduleTime() {
        return scheduleTime_;
      }
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       * @param value The scheduleTime to set.
       * @return This builder for chaining.
       */
      public Builder setScheduleTime(int value) {

        scheduleTime_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScheduleTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scheduleTime_ = 0;
        onChanged();
        return this;
      }

      private int skillLevel_ ;
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @return Whether the skillLevel field is set.
       */
      @java.lang.Override
      public boolean hasSkillLevel() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @return The skillLevel.
       */
      @java.lang.Override
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @param value The skillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setSkillLevel(int value) {

        skillLevel_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        skillLevel_ = 0;
        onChanged();
        return this;
      }

      private int tournamentTemplate_ = 0;
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       * @return Whether the tournamentTemplate field is set.
       */
      @java.lang.Override public boolean hasTournamentTemplate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       * @return The tournamentTemplate.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate getTournamentTemplate() {
        kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate.forNumber(tournamentTemplate_);
        return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate.k_ETournamentTemplate_None : result;
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       * @param value The tournamentTemplate to set.
       * @return This builder for chaining.
       */
      public Builder setTournamentTemplate(kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentTemplate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        tournamentTemplate_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       * @return This builder for chaining.
       */
      public Builder clearTournamentTemplate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tournamentTemplate_ = 0;
        onChanged();
        return this;
      }

      private int state_ = 0;
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       * @return Whether the state field is set.
       */
      @java.lang.Override public boolean hasState() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       * @return The state.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState getState() {
        kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.forNumber(state_);
        return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
      }
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        state_ = 0;
        onChanged();
        return this;
      }

      private int stateSeqNum_ ;
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       * @return Whether the stateSeqNum field is set.
       */
      @java.lang.Override
      public boolean hasStateSeqNum() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       * @return The stateSeqNum.
       */
      @java.lang.Override
      public int getStateSeqNum() {
        return stateSeqNum_;
      }
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       * @param value The stateSeqNum to set.
       * @return This builder for chaining.
       */
      public Builder setStateSeqNum(int value) {

        stateSeqNum_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearStateSeqNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stateSeqNum_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       * @return Whether the seasonTrophyId field is set.
       */
      @java.lang.Override
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       * @return The seasonTrophyId.
       */
      @java.lang.Override
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       * @param value The seasonTrophyId to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonTrophyId(int value) {

        seasonTrophyId_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          teams_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team>(teams_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder setTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder setTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Team.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game> games_ =
        java.util.Collections.emptyList();
      private void ensureGamesIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          games_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game>(games_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder> gamesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game> getGamesList() {
        if (gamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(games_);
        } else {
          return gamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public int getGamesCount() {
        if (gamesBuilder_ == null) {
          return games_.size();
        } else {
          return gamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game getGames(int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);
        } else {
          return gamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder setGames(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.set(index, value);
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder setGames(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.set(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(index, value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addAllGames(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game> values) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, games_);
          onChanged();
        } else {
          gamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder clearGames() {
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder removeGames(int index) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.remove(index);
          onChanged();
        } else {
          gamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder getGamesBuilder(
          int index) {
        return getGamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
          int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);  } else {
          return gamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder> 
           getGamesOrBuilderList() {
        if (gamesBuilder_ != null) {
          return gamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(games_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder addGamesBuilder() {
        return getGamesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder addGamesBuilder(
          int index) {
        return getGamesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder> 
           getGamesBuilderList() {
        return getGamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder> 
          getGamesFieldBuilder() {
        if (gamesBuilder_ == null) {
          gamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Game.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.GameOrBuilder>(
                  games_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          games_ = null;
        }
        return gamesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          nodes_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node>(nodes_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder setNodes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder setNodes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.Node.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTATournament)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournament)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTATournament>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournament>() {
      @java.lang.Override
      public CMsgDOTATournament parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournament> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournament> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournament getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATournamentStateChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentStateChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     * @return Whether the newTournamentId field is set.
     */
    boolean hasNewTournamentId();
    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     * @return The newTournamentId.
     */
    int getNewTournamentId();

    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     * @return Whether the event field is set.
     */
    boolean hasEvent();
    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     * @return The event.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent getEvent();

    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     * @return Whether the newTournamentState field is set.
     */
    boolean hasNewTournamentState();
    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     * @return The newTournamentState.
     */
    kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState getNewTournamentState();

    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange> 
        getGameChangesList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange getGameChanges(int index);
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    int getGameChangesCount();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder> 
        getGameChangesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder getGameChangesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange> 
        getTeamChangesList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange getTeamChanges(int index);
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    int getTeamChangesCount();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder> 
        getTeamChangesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder getTeamChangesOrBuilder(
        int index);

    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     * @return A list containing the mergedTournamentIds.
     */
    java.util.List<java.lang.Integer> getMergedTournamentIdsList();
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     * @return The count of mergedTournamentIds.
     */
    int getMergedTournamentIdsCount();
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The mergedTournamentIds at the given index.
     */
    int getMergedTournamentIds(int index);

    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     * @return Whether the stateSeqNum field is set.
     */
    boolean hasStateSeqNum();
    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     * @return The stateSeqNum.
     */
    int getStateSeqNum();
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentStateChange}
   */
  public static final class CMsgDOTATournamentStateChange extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentStateChange)
      CMsgDOTATournamentStateChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTATournamentStateChange.class.getName());
    }
    // Use CMsgDOTATournamentStateChange.newBuilder() to construct.
    private CMsgDOTATournamentStateChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournamentStateChange() {
      event_ = 0;
      newTournamentState_ = 0;
      gameChanges_ = java.util.Collections.emptyList();
      teamChanges_ = java.util.Collections.emptyList();
      mergedTournamentIds_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.Builder.class);
    }

    public interface GameChangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentStateChange.GameChange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 match_id = 1;</code>
       * @return Whether the matchId field is set.
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 1;</code>
       * @return The matchId.
       */
      long getMatchId();

      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       * @return Whether the newState field is set.
       */
      boolean hasNewState();
      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       * @return The newState.
       */
      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState getNewState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentStateChange.GameChange}
     */
    public static final class GameChange extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentStateChange.GameChange)
        GameChangeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          GameChange.class.getName());
      }
      // Use GameChange.newBuilder() to construct.
      private GameChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private GameChange() {
        newState_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder.class);
      }

      private int bitField0_;
      public static final int MATCH_ID_FIELD_NUMBER = 1;
      private long matchId_ = 0L;
      /**
       * <code>optional uint64 match_id = 1;</code>
       * @return Whether the matchId field is set.
       */
      @java.lang.Override
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       * @return The matchId.
       */
      @java.lang.Override
      public long getMatchId() {
        return matchId_;
      }

      public static final int NEW_STATE_FIELD_NUMBER = 2;
      private int newState_ = 0;
      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       * @return Whether the newState field is set.
       */
      @java.lang.Override public boolean hasNewState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       * @return The newState.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState getNewState() {
        kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.forNumber(newState_);
        return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeEnum(2, newState_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, newState_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange) obj;

        if (hasMatchId() != other.hasMatchId()) return false;
        if (hasMatchId()) {
          if (getMatchId()
              != other.getMatchId()) return false;
        }
        if (hasNewState() != other.hasNewState()) return false;
        if (hasNewState()) {
          if (newState_ != other.newState_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMatchId()) {
          hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMatchId());
        }
        if (hasNewState()) {
          hash = (37 * hash) + NEW_STATE_FIELD_NUMBER;
          hash = (53 * hash) + newState_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentStateChange.GameChange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentStateChange.GameChange)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          matchId_ = 0L;
          newState_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.matchId_ = matchId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.newState_ = newState_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance()) return this;
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasNewState()) {
            setNewState(other.getNewState());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  matchId_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState tmpValue =
                      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(2, tmpRaw);
                  } else {
                    newState_ = tmpRaw;
                    bitField0_ |= 0x00000002;
                  }
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 1;</code>
         * @return Whether the matchId field is set.
         */
        @java.lang.Override
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         * @return The matchId.
         */
        @java.lang.Override
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         * @param value The matchId to set.
         * @return This builder for chaining.
         */
        public Builder setMatchId(long value) {

          matchId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private int newState_ = 0;
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         * @return Whether the newState field is set.
         */
        @java.lang.Override public boolean hasNewState() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         * @return The newState.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState getNewState() {
          kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.forNumber(newState_);
          return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
        }
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         * @param value The newState to set.
         * @return This builder for chaining.
         */
        public Builder setNewState(kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentGameState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          newState_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         * @return This builder for chaining.
         */
        public Builder clearNewState() {
          bitField0_ = (bitField0_ & ~0x00000002);
          newState_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentStateChange.GameChange)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentStateChange.GameChange)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<GameChange>
          PARSER = new com.google.protobuf.AbstractParser<GameChange>() {
        @java.lang.Override
        public GameChange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<GameChange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GameChange> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TeamChangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentStateChange.TeamChange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 team_gid = 1;</code>
       * @return Whether the teamGid field is set.
       */
      boolean hasTeamGid();
      /**
       * <code>optional uint64 team_gid = 1;</code>
       * @return The teamGid.
       */
      long getTeamGid();

      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       * @return Whether the newNodeOrState field is set.
       */
      boolean hasNewNodeOrState();
      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       * @return The newNodeOrState.
       */
      int getNewNodeOrState();

      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       * @return Whether the oldNodeOrState field is set.
       */
      boolean hasOldNodeOrState();
      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       * @return The oldNodeOrState.
       */
      int getOldNodeOrState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentStateChange.TeamChange}
     */
    public static final class TeamChange extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentStateChange.TeamChange)
        TeamChangeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          TeamChange.class.getName());
      }
      // Use TeamChange.newBuilder() to construct.
      private TeamChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private TeamChange() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_GID_FIELD_NUMBER = 1;
      private long teamGid_ = 0L;
      /**
       * <code>optional uint64 team_gid = 1;</code>
       * @return Whether the teamGid field is set.
       */
      @java.lang.Override
      public boolean hasTeamGid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 team_gid = 1;</code>
       * @return The teamGid.
       */
      @java.lang.Override
      public long getTeamGid() {
        return teamGid_;
      }

      public static final int NEW_NODE_OR_STATE_FIELD_NUMBER = 2;
      private int newNodeOrState_ = 0;
      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       * @return Whether the newNodeOrState field is set.
       */
      @java.lang.Override
      public boolean hasNewNodeOrState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       * @return The newNodeOrState.
       */
      @java.lang.Override
      public int getNewNodeOrState() {
        return newNodeOrState_;
      }

      public static final int OLD_NODE_OR_STATE_FIELD_NUMBER = 3;
      private int oldNodeOrState_ = 0;
      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       * @return Whether the oldNodeOrState field is set.
       */
      @java.lang.Override
      public boolean hasOldNodeOrState() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       * @return The oldNodeOrState.
       */
      @java.lang.Override
      public int getOldNodeOrState() {
        return oldNodeOrState_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, newNodeOrState_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, oldNodeOrState_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, newNodeOrState_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, oldNodeOrState_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange) obj;

        if (hasTeamGid() != other.hasTeamGid()) return false;
        if (hasTeamGid()) {
          if (getTeamGid()
              != other.getTeamGid()) return false;
        }
        if (hasNewNodeOrState() != other.hasNewNodeOrState()) return false;
        if (hasNewNodeOrState()) {
          if (getNewNodeOrState()
              != other.getNewNodeOrState()) return false;
        }
        if (hasOldNodeOrState() != other.hasOldNodeOrState()) return false;
        if (hasOldNodeOrState()) {
          if (getOldNodeOrState()
              != other.getOldNodeOrState()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeamGid()) {
          hash = (37 * hash) + TEAM_GID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamGid());
        }
        if (hasNewNodeOrState()) {
          hash = (37 * hash) + NEW_NODE_OR_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getNewNodeOrState();
        }
        if (hasOldNodeOrState()) {
          hash = (37 * hash) + OLD_NODE_OR_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getOldNodeOrState();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentStateChange.TeamChange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentStateChange.TeamChange)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          teamGid_ = 0L;
          newNodeOrState_ = 0;
          oldNodeOrState_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.teamGid_ = teamGid_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.newNodeOrState_ = newNodeOrState_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.oldNodeOrState_ = oldNodeOrState_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance()) return this;
          if (other.hasTeamGid()) {
            setTeamGid(other.getTeamGid());
          }
          if (other.hasNewNodeOrState()) {
            setNewNodeOrState(other.getNewNodeOrState());
          }
          if (other.hasOldNodeOrState()) {
            setOldNodeOrState(other.getOldNodeOrState());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  teamGid_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  newNodeOrState_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  oldNodeOrState_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long teamGid_ ;
        /**
         * <code>optional uint64 team_gid = 1;</code>
         * @return Whether the teamGid field is set.
         */
        @java.lang.Override
        public boolean hasTeamGid() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 team_gid = 1;</code>
         * @return The teamGid.
         */
        @java.lang.Override
        public long getTeamGid() {
          return teamGid_;
        }
        /**
         * <code>optional uint64 team_gid = 1;</code>
         * @param value The teamGid to set.
         * @return This builder for chaining.
         */
        public Builder setTeamGid(long value) {

          teamGid_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_gid = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamGid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamGid_ = 0L;
          onChanged();
          return this;
        }

        private int newNodeOrState_ ;
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         * @return Whether the newNodeOrState field is set.
         */
        @java.lang.Override
        public boolean hasNewNodeOrState() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         * @return The newNodeOrState.
         */
        @java.lang.Override
        public int getNewNodeOrState() {
          return newNodeOrState_;
        }
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         * @param value The newNodeOrState to set.
         * @return This builder for chaining.
         */
        public Builder setNewNodeOrState(int value) {

          newNodeOrState_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNewNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000002);
          newNodeOrState_ = 0;
          onChanged();
          return this;
        }

        private int oldNodeOrState_ ;
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         * @return Whether the oldNodeOrState field is set.
         */
        @java.lang.Override
        public boolean hasOldNodeOrState() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         * @return The oldNodeOrState.
         */
        @java.lang.Override
        public int getOldNodeOrState() {
          return oldNodeOrState_;
        }
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         * @param value The oldNodeOrState to set.
         * @return This builder for chaining.
         */
        public Builder setOldNodeOrState(int value) {

          oldNodeOrState_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearOldNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000004);
          oldNodeOrState_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentStateChange.TeamChange)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentStateChange.TeamChange)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TeamChange>
          PARSER = new com.google.protobuf.AbstractParser<TeamChange>() {
        @java.lang.Override
        public TeamChange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TeamChange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TeamChange> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NEW_TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int newTournamentId_ = 0;
    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     * @return Whether the newTournamentId field is set.
     */
    @java.lang.Override
    public boolean hasNewTournamentId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     * @return The newTournamentId.
     */
    @java.lang.Override
    public int getNewTournamentId() {
      return newTournamentId_;
    }

    public static final int EVENT_FIELD_NUMBER = 2;
    private int event_ = 0;
    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     * @return Whether the event field is set.
     */
    @java.lang.Override public boolean hasEvent() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     * @return The event.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent getEvent() {
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent result = kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent.forNumber(event_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent.k_ETournamentEvent_None : result;
    }

    public static final int NEW_TOURNAMENT_STATE_FIELD_NUMBER = 3;
    private int newTournamentState_ = 0;
    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     * @return Whether the newTournamentState field is set.
     */
    @java.lang.Override public boolean hasNewTournamentState() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     * @return The newTournamentState.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState getNewTournamentState() {
      kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.forNumber(newTournamentState_);
      return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
    }

    public static final int GAME_CHANGES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange> gameChanges_;
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange> getGameChangesList() {
      return gameChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder> 
        getGameChangesOrBuilderList() {
      return gameChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    @java.lang.Override
    public int getGameChangesCount() {
      return gameChanges_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange getGameChanges(int index) {
      return gameChanges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder getGameChangesOrBuilder(
        int index) {
      return gameChanges_.get(index);
    }

    public static final int TEAM_CHANGES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange> teamChanges_;
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange> getTeamChangesList() {
      return teamChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder> 
        getTeamChangesOrBuilderList() {
      return teamChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    @java.lang.Override
    public int getTeamChangesCount() {
      return teamChanges_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange getTeamChanges(int index) {
      return teamChanges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder getTeamChangesOrBuilder(
        int index) {
      return teamChanges_.get(index);
    }

    public static final int MERGED_TOURNAMENT_IDS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList mergedTournamentIds_ =
        emptyIntList();
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     * @return A list containing the mergedTournamentIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getMergedTournamentIdsList() {
      return mergedTournamentIds_;
    }
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     * @return The count of mergedTournamentIds.
     */
    public int getMergedTournamentIdsCount() {
      return mergedTournamentIds_.size();
    }
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The mergedTournamentIds at the given index.
     */
    public int getMergedTournamentIds(int index) {
      return mergedTournamentIds_.getInt(index);
    }
    private int mergedTournamentIdsMemoizedSerializedSize = -1;

    public static final int STATE_SEQ_NUM_FIELD_NUMBER = 7;
    private int stateSeqNum_ = 0;
    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     * @return Whether the stateSeqNum field is set.
     */
    @java.lang.Override
    public boolean hasStateSeqNum() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     * @return The stateSeqNum.
     */
    @java.lang.Override
    public int getStateSeqNum() {
      return stateSeqNum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, newTournamentId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, event_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, newTournamentState_);
      }
      for (int i = 0; i < gameChanges_.size(); i++) {
        output.writeMessage(4, gameChanges_.get(i));
      }
      for (int i = 0; i < teamChanges_.size(); i++) {
        output.writeMessage(5, teamChanges_.get(i));
      }
      if (getMergedTournamentIdsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(mergedTournamentIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < mergedTournamentIds_.size(); i++) {
        output.writeUInt32NoTag(mergedTournamentIds_.getInt(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(7, stateSeqNum_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, newTournamentId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, event_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, newTournamentState_);
      }
      for (int i = 0; i < gameChanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, gameChanges_.get(i));
      }
      for (int i = 0; i < teamChanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, teamChanges_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mergedTournamentIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(mergedTournamentIds_.getInt(i));
        }
        size += dataSize;
        if (!getMergedTournamentIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        mergedTournamentIdsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, stateSeqNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange) obj;

      if (hasNewTournamentId() != other.hasNewTournamentId()) return false;
      if (hasNewTournamentId()) {
        if (getNewTournamentId()
            != other.getNewTournamentId()) return false;
      }
      if (hasEvent() != other.hasEvent()) return false;
      if (hasEvent()) {
        if (event_ != other.event_) return false;
      }
      if (hasNewTournamentState() != other.hasNewTournamentState()) return false;
      if (hasNewTournamentState()) {
        if (newTournamentState_ != other.newTournamentState_) return false;
      }
      if (!getGameChangesList()
          .equals(other.getGameChangesList())) return false;
      if (!getTeamChangesList()
          .equals(other.getTeamChangesList())) return false;
      if (!getMergedTournamentIdsList()
          .equals(other.getMergedTournamentIdsList())) return false;
      if (hasStateSeqNum() != other.hasStateSeqNum()) return false;
      if (hasStateSeqNum()) {
        if (getStateSeqNum()
            != other.getStateSeqNum()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNewTournamentId()) {
        hash = (37 * hash) + NEW_TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNewTournamentId();
      }
      if (hasEvent()) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + event_;
      }
      if (hasNewTournamentState()) {
        hash = (37 * hash) + NEW_TOURNAMENT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + newTournamentState_;
      }
      if (getGameChangesCount() > 0) {
        hash = (37 * hash) + GAME_CHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getGameChangesList().hashCode();
      }
      if (getTeamChangesCount() > 0) {
        hash = (37 * hash) + TEAM_CHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getTeamChangesList().hashCode();
      }
      if (getMergedTournamentIdsCount() > 0) {
        hash = (37 * hash) + MERGED_TOURNAMENT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getMergedTournamentIdsList().hashCode();
      }
      if (hasStateSeqNum()) {
        hash = (37 * hash) + STATE_SEQ_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getStateSeqNum();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentStateChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentStateChange)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        newTournamentId_ = 0;
        event_ = 0;
        newTournamentState_ = 0;
        if (gameChangesBuilder_ == null) {
          gameChanges_ = java.util.Collections.emptyList();
        } else {
          gameChanges_ = null;
          gameChangesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (teamChangesBuilder_ == null) {
          teamChanges_ = java.util.Collections.emptyList();
        } else {
          teamChanges_ = null;
          teamChangesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        mergedTournamentIds_ = emptyIntList();
        stateSeqNum_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTATournamentStateChange_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange result) {
        if (gameChangesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            gameChanges_ = java.util.Collections.unmodifiableList(gameChanges_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.gameChanges_ = gameChanges_;
        } else {
          result.gameChanges_ = gameChangesBuilder_.build();
        }
        if (teamChangesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            teamChanges_ = java.util.Collections.unmodifiableList(teamChanges_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.teamChanges_ = teamChanges_;
        } else {
          result.teamChanges_ = teamChangesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.newTournamentId_ = newTournamentId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.event_ = event_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.newTournamentState_ = newTournamentState_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          mergedTournamentIds_.makeImmutable();
          result.mergedTournamentIds_ = mergedTournamentIds_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.stateSeqNum_ = stateSeqNum_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.getDefaultInstance()) return this;
        if (other.hasNewTournamentId()) {
          setNewTournamentId(other.getNewTournamentId());
        }
        if (other.hasEvent()) {
          setEvent(other.getEvent());
        }
        if (other.hasNewTournamentState()) {
          setNewTournamentState(other.getNewTournamentState());
        }
        if (gameChangesBuilder_ == null) {
          if (!other.gameChanges_.isEmpty()) {
            if (gameChanges_.isEmpty()) {
              gameChanges_ = other.gameChanges_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGameChangesIsMutable();
              gameChanges_.addAll(other.gameChanges_);
            }
            onChanged();
          }
        } else {
          if (!other.gameChanges_.isEmpty()) {
            if (gameChangesBuilder_.isEmpty()) {
              gameChangesBuilder_.dispose();
              gameChangesBuilder_ = null;
              gameChanges_ = other.gameChanges_;
              bitField0_ = (bitField0_ & ~0x00000008);
              gameChangesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGameChangesFieldBuilder() : null;
            } else {
              gameChangesBuilder_.addAllMessages(other.gameChanges_);
            }
          }
        }
        if (teamChangesBuilder_ == null) {
          if (!other.teamChanges_.isEmpty()) {
            if (teamChanges_.isEmpty()) {
              teamChanges_ = other.teamChanges_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTeamChangesIsMutable();
              teamChanges_.addAll(other.teamChanges_);
            }
            onChanged();
          }
        } else {
          if (!other.teamChanges_.isEmpty()) {
            if (teamChangesBuilder_.isEmpty()) {
              teamChangesBuilder_.dispose();
              teamChangesBuilder_ = null;
              teamChanges_ = other.teamChanges_;
              bitField0_ = (bitField0_ & ~0x00000010);
              teamChangesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamChangesFieldBuilder() : null;
            } else {
              teamChangesBuilder_.addAllMessages(other.teamChanges_);
            }
          }
        }
        if (!other.mergedTournamentIds_.isEmpty()) {
          if (mergedTournamentIds_.isEmpty()) {
            mergedTournamentIds_ = other.mergedTournamentIds_;
            mergedTournamentIds_.makeImmutable();
            bitField0_ |= 0x00000020;
          } else {
            ensureMergedTournamentIdsIsMutable();
            mergedTournamentIds_.addAll(other.mergedTournamentIds_);
          }
          onChanged();
        }
        if (other.hasStateSeqNum()) {
          setStateSeqNum(other.getStateSeqNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                newTournamentId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  event_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 24: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState tmpValue =
                    kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  newTournamentState_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              case 34: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.parser(),
                        extensionRegistry);
                if (gameChangesBuilder_ == null) {
                  ensureGameChangesIsMutable();
                  gameChanges_.add(m);
                } else {
                  gameChangesBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.parser(),
                        extensionRegistry);
                if (teamChangesBuilder_ == null) {
                  ensureTeamChangesIsMutable();
                  teamChanges_.add(m);
                } else {
                  teamChangesBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 48: {
                int v = input.readUInt32();
                ensureMergedTournamentIdsIsMutable();
                mergedTournamentIds_.addInt(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureMergedTournamentIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  mergedTournamentIds_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 56: {
                stateSeqNum_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int newTournamentId_ ;
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       * @return Whether the newTournamentId field is set.
       */
      @java.lang.Override
      public boolean hasNewTournamentId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       * @return The newTournamentId.
       */
      @java.lang.Override
      public int getNewTournamentId() {
        return newTournamentId_;
      }
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       * @param value The newTournamentId to set.
       * @return This builder for chaining.
       */
      public Builder setNewTournamentId(int value) {

        newTournamentId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        newTournamentId_ = 0;
        onChanged();
        return this;
      }

      private int event_ = 0;
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       * @return Whether the event field is set.
       */
      @java.lang.Override public boolean hasEvent() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       * @return The event.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent getEvent() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent result = kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent.forNumber(event_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent.k_ETournamentEvent_None : result;
      }
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       * @param value The event to set.
       * @return This builder for chaining.
       */
      public Builder setEvent(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.ETournamentEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        event_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       * @return This builder for chaining.
       */
      public Builder clearEvent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        event_ = 0;
        onChanged();
        return this;
      }

      private int newTournamentState_ = 0;
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       * @return Whether the newTournamentState field is set.
       */
      @java.lang.Override public boolean hasNewTournamentState() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       * @return The newTournamentState.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState getNewTournamentState() {
        kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState result = kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.forNumber(newTournamentState_);
        return result == null ? kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
      }
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       * @param value The newTournamentState to set.
       * @return This builder for chaining.
       */
      public Builder setNewTournamentState(kz.moltenhaze.proto.dota.DotaClientEnums.ETournamentState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        newTournamentState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       * @return This builder for chaining.
       */
      public Builder clearNewTournamentState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newTournamentState_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange> gameChanges_ =
        java.util.Collections.emptyList();
      private void ensureGameChangesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          gameChanges_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange>(gameChanges_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder> gameChangesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange> getGameChangesList() {
        if (gameChangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameChanges_);
        } else {
          return gameChangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public int getGameChangesCount() {
        if (gameChangesBuilder_ == null) {
          return gameChanges_.size();
        } else {
          return gameChangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange getGameChanges(int index) {
        if (gameChangesBuilder_ == null) {
          return gameChanges_.get(index);
        } else {
          return gameChangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder setGameChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange value) {
        if (gameChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameChangesIsMutable();
          gameChanges_.set(index, value);
          onChanged();
        } else {
          gameChangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder setGameChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder builderForValue) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameChangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange value) {
        if (gameChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameChangesIsMutable();
          gameChanges_.add(value);
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange value) {
        if (gameChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameChangesIsMutable();
          gameChanges_.add(index, value);
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder builderForValue) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.add(builderForValue.build());
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder builderForValue) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addAllGameChanges(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange> values) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gameChanges_);
          onChanged();
        } else {
          gameChangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder clearGameChanges() {
        if (gameChangesBuilder_ == null) {
          gameChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          gameChangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder removeGameChanges(int index) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.remove(index);
          onChanged();
        } else {
          gameChangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder getGameChangesBuilder(
          int index) {
        return getGameChangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder getGameChangesOrBuilder(
          int index) {
        if (gameChangesBuilder_ == null) {
          return gameChanges_.get(index);  } else {
          return gameChangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder> 
           getGameChangesOrBuilderList() {
        if (gameChangesBuilder_ != null) {
          return gameChangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameChanges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder addGameChangesBuilder() {
        return getGameChangesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder addGameChangesBuilder(
          int index) {
        return getGameChangesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder> 
           getGameChangesBuilderList() {
        return getGameChangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder> 
          getGameChangesFieldBuilder() {
        if (gameChangesBuilder_ == null) {
          gameChangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder>(
                  gameChanges_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          gameChanges_ = null;
        }
        return gameChangesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange> teamChanges_ =
        java.util.Collections.emptyList();
      private void ensureTeamChangesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          teamChanges_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange>(teamChanges_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder> teamChangesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange> getTeamChangesList() {
        if (teamChangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamChanges_);
        } else {
          return teamChangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public int getTeamChangesCount() {
        if (teamChangesBuilder_ == null) {
          return teamChanges_.size();
        } else {
          return teamChangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange getTeamChanges(int index) {
        if (teamChangesBuilder_ == null) {
          return teamChanges_.get(index);
        } else {
          return teamChangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder setTeamChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange value) {
        if (teamChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamChangesIsMutable();
          teamChanges_.set(index, value);
          onChanged();
        } else {
          teamChangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder setTeamChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder builderForValue) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamChangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange value) {
        if (teamChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamChangesIsMutable();
          teamChanges_.add(value);
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange value) {
        if (teamChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamChangesIsMutable();
          teamChanges_.add(index, value);
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder builderForValue) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.add(builderForValue.build());
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder builderForValue) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addAllTeamChanges(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange> values) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamChanges_);
          onChanged();
        } else {
          teamChangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder clearTeamChanges() {
        if (teamChangesBuilder_ == null) {
          teamChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          teamChangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder removeTeamChanges(int index) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.remove(index);
          onChanged();
        } else {
          teamChangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder getTeamChangesBuilder(
          int index) {
        return getTeamChangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder getTeamChangesOrBuilder(
          int index) {
        if (teamChangesBuilder_ == null) {
          return teamChanges_.get(index);  } else {
          return teamChangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder> 
           getTeamChangesOrBuilderList() {
        if (teamChangesBuilder_ != null) {
          return teamChangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamChanges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder addTeamChangesBuilder() {
        return getTeamChangesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder addTeamChangesBuilder(
          int index) {
        return getTeamChangesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder> 
           getTeamChangesBuilderList() {
        return getTeamChangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder> 
          getTeamChangesFieldBuilder() {
        if (teamChangesBuilder_ == null) {
          teamChangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder>(
                  teamChanges_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          teamChanges_ = null;
        }
        return teamChangesBuilder_;
      }

      private com.google.protobuf.Internal.IntList mergedTournamentIds_ = emptyIntList();
      private void ensureMergedTournamentIdsIsMutable() {
        if (!mergedTournamentIds_.isModifiable()) {
          mergedTournamentIds_ = makeMutableCopy(mergedTournamentIds_);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @return A list containing the mergedTournamentIds.
       */
      public java.util.List<java.lang.Integer>
          getMergedTournamentIdsList() {
        mergedTournamentIds_.makeImmutable();
        return mergedTournamentIds_;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @return The count of mergedTournamentIds.
       */
      public int getMergedTournamentIdsCount() {
        return mergedTournamentIds_.size();
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The mergedTournamentIds at the given index.
       */
      public int getMergedTournamentIds(int index) {
        return mergedTournamentIds_.getInt(index);
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The mergedTournamentIds to set.
       * @return This builder for chaining.
       */
      public Builder setMergedTournamentIds(
          int index, int value) {

        ensureMergedTournamentIdsIsMutable();
        mergedTournamentIds_.setInt(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @param value The mergedTournamentIds to add.
       * @return This builder for chaining.
       */
      public Builder addMergedTournamentIds(int value) {

        ensureMergedTournamentIdsIsMutable();
        mergedTournamentIds_.addInt(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @param values The mergedTournamentIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllMergedTournamentIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMergedTournamentIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mergedTournamentIds_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearMergedTournamentIds() {
        mergedTournamentIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private int stateSeqNum_ ;
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       * @return Whether the stateSeqNum field is set.
       */
      @java.lang.Override
      public boolean hasStateSeqNum() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       * @return The stateSeqNum.
       */
      @java.lang.Override
      public int getStateSeqNum() {
        return stateSeqNum_;
      }
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       * @param value The stateSeqNum to set.
       * @return This builder for chaining.
       */
      public Builder setStateSeqNum(int value) {

        stateSeqNum_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearStateSeqNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stateSeqNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentStateChange)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentStateChange)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTATournamentStateChange>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournamentStateChange>() {
      @java.lang.Override
      public CMsgDOTATournamentStateChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournamentStateChange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentStateChange> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTATournamentStateChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 skill_level = 1;</code>
     * @return Whether the skillLevel field is set.
     */
    boolean hasSkillLevel();
    /**
     * <code>optional uint32 skill_level = 1;</code>
     * @return The skillLevel.
     */
    int getSkillLevel();

    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     * @return Whether the timesWon0 field is set.
     */
    boolean hasTimesWon0();
    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     * @return The timesWon0.
     */
    int getTimesWon0();

    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     * @return Whether the timesWon1 field is set.
     */
    boolean hasTimesWon1();
    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     * @return The timesWon1.
     */
    int getTimesWon1();

    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     * @return Whether the timesWon2 field is set.
     */
    boolean hasTimesWon2();
    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     * @return The timesWon2.
     */
    int getTimesWon2();

    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     * @return Whether the timesWon3 field is set.
     */
    boolean hasTimesWon3();
    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     * @return The timesWon3.
     */
    int getTimesWon3();

    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     * @return Whether the timesByeAndLost field is set.
     */
    boolean hasTimesByeAndLost();
    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     * @return The timesByeAndLost.
     */
    int getTimesByeAndLost();

    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     * @return Whether the timesByeAndWon field is set.
     */
    boolean hasTimesByeAndWon();
    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     * @return The timesByeAndWon.
     */
    int getTimesByeAndWon();

    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     * @return Whether the timesUnusualChamp field is set.
     */
    boolean hasTimesUnusualChamp();
    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     * @return The timesUnusualChamp.
     */
    int getTimesUnusualChamp();

    /**
     * <code>optional uint32 total_games_won = 8;</code>
     * @return Whether the totalGamesWon field is set.
     */
    boolean hasTotalGamesWon();
    /**
     * <code>optional uint32 total_games_won = 8;</code>
     * @return The totalGamesWon.
     */
    int getTotalGamesWon();

    /**
     * <code>optional uint32 score = 9;</code>
     * @return Whether the score field is set.
     */
    boolean hasScore();
    /**
     * <code>optional uint32 score = 9;</code>
     * @return The score.
     */
    int getScore();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerSkillLevelStats}
   */
  public static final class CMsgDOTAWeekendTourneyPlayerSkillLevelStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
      CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAWeekendTourneyPlayerSkillLevelStats.class.getName());
    }
    // Use CMsgDOTAWeekendTourneyPlayerSkillLevelStats.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerSkillLevelStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerSkillLevelStats() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder.class);
    }

    private int bitField0_;
    public static final int SKILL_LEVEL_FIELD_NUMBER = 1;
    private int skillLevel_ = 0;
    /**
     * <code>optional uint32 skill_level = 1;</code>
     * @return Whether the skillLevel field is set.
     */
    @java.lang.Override
    public boolean hasSkillLevel() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 skill_level = 1;</code>
     * @return The skillLevel.
     */
    @java.lang.Override
    public int getSkillLevel() {
      return skillLevel_;
    }

    public static final int TIMES_WON_0_FIELD_NUMBER = 2;
    private int timesWon0_ = 0;
    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     * @return Whether the timesWon0 field is set.
     */
    @java.lang.Override
    public boolean hasTimesWon0() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     * @return The timesWon0.
     */
    @java.lang.Override
    public int getTimesWon0() {
      return timesWon0_;
    }

    public static final int TIMES_WON_1_FIELD_NUMBER = 3;
    private int timesWon1_ = 0;
    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     * @return Whether the timesWon1 field is set.
     */
    @java.lang.Override
    public boolean hasTimesWon1() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     * @return The timesWon1.
     */
    @java.lang.Override
    public int getTimesWon1() {
      return timesWon1_;
    }

    public static final int TIMES_WON_2_FIELD_NUMBER = 4;
    private int timesWon2_ = 0;
    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     * @return Whether the timesWon2 field is set.
     */
    @java.lang.Override
    public boolean hasTimesWon2() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     * @return The timesWon2.
     */
    @java.lang.Override
    public int getTimesWon2() {
      return timesWon2_;
    }

    public static final int TIMES_WON_3_FIELD_NUMBER = 5;
    private int timesWon3_ = 0;
    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     * @return Whether the timesWon3 field is set.
     */
    @java.lang.Override
    public boolean hasTimesWon3() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     * @return The timesWon3.
     */
    @java.lang.Override
    public int getTimesWon3() {
      return timesWon3_;
    }

    public static final int TIMES_BYE_AND_LOST_FIELD_NUMBER = 6;
    private int timesByeAndLost_ = 0;
    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     * @return Whether the timesByeAndLost field is set.
     */
    @java.lang.Override
    public boolean hasTimesByeAndLost() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     * @return The timesByeAndLost.
     */
    @java.lang.Override
    public int getTimesByeAndLost() {
      return timesByeAndLost_;
    }

    public static final int TIMES_BYE_AND_WON_FIELD_NUMBER = 7;
    private int timesByeAndWon_ = 0;
    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     * @return Whether the timesByeAndWon field is set.
     */
    @java.lang.Override
    public boolean hasTimesByeAndWon() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     * @return The timesByeAndWon.
     */
    @java.lang.Override
    public int getTimesByeAndWon() {
      return timesByeAndWon_;
    }

    public static final int TIMES_UNUSUAL_CHAMP_FIELD_NUMBER = 10;
    private int timesUnusualChamp_ = 0;
    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     * @return Whether the timesUnusualChamp field is set.
     */
    @java.lang.Override
    public boolean hasTimesUnusualChamp() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     * @return The timesUnusualChamp.
     */
    @java.lang.Override
    public int getTimesUnusualChamp() {
      return timesUnusualChamp_;
    }

    public static final int TOTAL_GAMES_WON_FIELD_NUMBER = 8;
    private int totalGamesWon_ = 0;
    /**
     * <code>optional uint32 total_games_won = 8;</code>
     * @return Whether the totalGamesWon field is set.
     */
    @java.lang.Override
    public boolean hasTotalGamesWon() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 total_games_won = 8;</code>
     * @return The totalGamesWon.
     */
    @java.lang.Override
    public int getTotalGamesWon() {
      return totalGamesWon_;
    }

    public static final int SCORE_FIELD_NUMBER = 9;
    private int score_ = 0;
    /**
     * <code>optional uint32 score = 9;</code>
     * @return Whether the score field is set.
     */
    @java.lang.Override
    public boolean hasScore() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint32 score = 9;</code>
     * @return The score.
     */
    @java.lang.Override
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, skillLevel_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, timesWon0_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, timesWon1_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, timesWon2_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, timesWon3_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, timesByeAndLost_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, timesByeAndWon_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(8, totalGamesWon_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(9, score_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(10, timesUnusualChamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, skillLevel_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timesWon0_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timesWon1_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timesWon2_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, timesWon3_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, timesByeAndLost_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, timesByeAndWon_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, totalGamesWon_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, score_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, timesUnusualChamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats) obj;

      if (hasSkillLevel() != other.hasSkillLevel()) return false;
      if (hasSkillLevel()) {
        if (getSkillLevel()
            != other.getSkillLevel()) return false;
      }
      if (hasTimesWon0() != other.hasTimesWon0()) return false;
      if (hasTimesWon0()) {
        if (getTimesWon0()
            != other.getTimesWon0()) return false;
      }
      if (hasTimesWon1() != other.hasTimesWon1()) return false;
      if (hasTimesWon1()) {
        if (getTimesWon1()
            != other.getTimesWon1()) return false;
      }
      if (hasTimesWon2() != other.hasTimesWon2()) return false;
      if (hasTimesWon2()) {
        if (getTimesWon2()
            != other.getTimesWon2()) return false;
      }
      if (hasTimesWon3() != other.hasTimesWon3()) return false;
      if (hasTimesWon3()) {
        if (getTimesWon3()
            != other.getTimesWon3()) return false;
      }
      if (hasTimesByeAndLost() != other.hasTimesByeAndLost()) return false;
      if (hasTimesByeAndLost()) {
        if (getTimesByeAndLost()
            != other.getTimesByeAndLost()) return false;
      }
      if (hasTimesByeAndWon() != other.hasTimesByeAndWon()) return false;
      if (hasTimesByeAndWon()) {
        if (getTimesByeAndWon()
            != other.getTimesByeAndWon()) return false;
      }
      if (hasTimesUnusualChamp() != other.hasTimesUnusualChamp()) return false;
      if (hasTimesUnusualChamp()) {
        if (getTimesUnusualChamp()
            != other.getTimesUnusualChamp()) return false;
      }
      if (hasTotalGamesWon() != other.hasTotalGamesWon()) return false;
      if (hasTotalGamesWon()) {
        if (getTotalGamesWon()
            != other.getTotalGamesWon()) return false;
      }
      if (hasScore() != other.hasScore()) return false;
      if (hasScore()) {
        if (getScore()
            != other.getScore()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSkillLevel()) {
        hash = (37 * hash) + SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevel();
      }
      if (hasTimesWon0()) {
        hash = (37 * hash) + TIMES_WON_0_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon0();
      }
      if (hasTimesWon1()) {
        hash = (37 * hash) + TIMES_WON_1_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon1();
      }
      if (hasTimesWon2()) {
        hash = (37 * hash) + TIMES_WON_2_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon2();
      }
      if (hasTimesWon3()) {
        hash = (37 * hash) + TIMES_WON_3_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon3();
      }
      if (hasTimesByeAndLost()) {
        hash = (37 * hash) + TIMES_BYE_AND_LOST_FIELD_NUMBER;
        hash = (53 * hash) + getTimesByeAndLost();
      }
      if (hasTimesByeAndWon()) {
        hash = (37 * hash) + TIMES_BYE_AND_WON_FIELD_NUMBER;
        hash = (53 * hash) + getTimesByeAndWon();
      }
      if (hasTimesUnusualChamp()) {
        hash = (37 * hash) + TIMES_UNUSUAL_CHAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimesUnusualChamp();
      }
      if (hasTotalGamesWon()) {
        hash = (37 * hash) + TOTAL_GAMES_WON_FIELD_NUMBER;
        hash = (53 * hash) + getTotalGamesWon();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getScore();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerSkillLevelStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        skillLevel_ = 0;
        timesWon0_ = 0;
        timesWon1_ = 0;
        timesWon2_ = 0;
        timesWon3_ = 0;
        timesByeAndLost_ = 0;
        timesByeAndWon_ = 0;
        timesUnusualChamp_ = 0;
        totalGamesWon_ = 0;
        score_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.skillLevel_ = skillLevel_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.timesWon0_ = timesWon0_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.timesWon1_ = timesWon1_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.timesWon2_ = timesWon2_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.timesWon3_ = timesWon3_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.timesByeAndLost_ = timesByeAndLost_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.timesByeAndWon_ = timesByeAndWon_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.timesUnusualChamp_ = timesUnusualChamp_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.totalGamesWon_ = totalGamesWon_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.score_ = score_;
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance()) return this;
        if (other.hasSkillLevel()) {
          setSkillLevel(other.getSkillLevel());
        }
        if (other.hasTimesWon0()) {
          setTimesWon0(other.getTimesWon0());
        }
        if (other.hasTimesWon1()) {
          setTimesWon1(other.getTimesWon1());
        }
        if (other.hasTimesWon2()) {
          setTimesWon2(other.getTimesWon2());
        }
        if (other.hasTimesWon3()) {
          setTimesWon3(other.getTimesWon3());
        }
        if (other.hasTimesByeAndLost()) {
          setTimesByeAndLost(other.getTimesByeAndLost());
        }
        if (other.hasTimesByeAndWon()) {
          setTimesByeAndWon(other.getTimesByeAndWon());
        }
        if (other.hasTimesUnusualChamp()) {
          setTimesUnusualChamp(other.getTimesUnusualChamp());
        }
        if (other.hasTotalGamesWon()) {
          setTotalGamesWon(other.getTotalGamesWon());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                skillLevel_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                timesWon0_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                timesWon1_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                timesWon2_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                timesWon3_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                timesByeAndLost_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                timesByeAndWon_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                totalGamesWon_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 64
              case 72: {
                score_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 72
              case 80: {
                timesUnusualChamp_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 80
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int skillLevel_ ;
      /**
       * <code>optional uint32 skill_level = 1;</code>
       * @return Whether the skillLevel field is set.
       */
      @java.lang.Override
      public boolean hasSkillLevel() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 skill_level = 1;</code>
       * @return The skillLevel.
       */
      @java.lang.Override
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <code>optional uint32 skill_level = 1;</code>
       * @param value The skillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setSkillLevel(int value) {

        skillLevel_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 skill_level = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        skillLevel_ = 0;
        onChanged();
        return this;
      }

      private int timesWon0_ ;
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       * @return Whether the timesWon0 field is set.
       */
      @java.lang.Override
      public boolean hasTimesWon0() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       * @return The timesWon0.
       */
      @java.lang.Override
      public int getTimesWon0() {
        return timesWon0_;
      }
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       * @param value The timesWon0 to set.
       * @return This builder for chaining.
       */
      public Builder setTimesWon0(int value) {

        timesWon0_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesWon0() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timesWon0_ = 0;
        onChanged();
        return this;
      }

      private int timesWon1_ ;
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       * @return Whether the timesWon1 field is set.
       */
      @java.lang.Override
      public boolean hasTimesWon1() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       * @return The timesWon1.
       */
      @java.lang.Override
      public int getTimesWon1() {
        return timesWon1_;
      }
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       * @param value The timesWon1 to set.
       * @return This builder for chaining.
       */
      public Builder setTimesWon1(int value) {

        timesWon1_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesWon1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timesWon1_ = 0;
        onChanged();
        return this;
      }

      private int timesWon2_ ;
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       * @return Whether the timesWon2 field is set.
       */
      @java.lang.Override
      public boolean hasTimesWon2() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       * @return The timesWon2.
       */
      @java.lang.Override
      public int getTimesWon2() {
        return timesWon2_;
      }
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       * @param value The timesWon2 to set.
       * @return This builder for chaining.
       */
      public Builder setTimesWon2(int value) {

        timesWon2_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesWon2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timesWon2_ = 0;
        onChanged();
        return this;
      }

      private int timesWon3_ ;
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       * @return Whether the timesWon3 field is set.
       */
      @java.lang.Override
      public boolean hasTimesWon3() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       * @return The timesWon3.
       */
      @java.lang.Override
      public int getTimesWon3() {
        return timesWon3_;
      }
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       * @param value The timesWon3 to set.
       * @return This builder for chaining.
       */
      public Builder setTimesWon3(int value) {

        timesWon3_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesWon3() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timesWon3_ = 0;
        onChanged();
        return this;
      }

      private int timesByeAndLost_ ;
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       * @return Whether the timesByeAndLost field is set.
       */
      @java.lang.Override
      public boolean hasTimesByeAndLost() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       * @return The timesByeAndLost.
       */
      @java.lang.Override
      public int getTimesByeAndLost() {
        return timesByeAndLost_;
      }
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       * @param value The timesByeAndLost to set.
       * @return This builder for chaining.
       */
      public Builder setTimesByeAndLost(int value) {

        timesByeAndLost_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesByeAndLost() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timesByeAndLost_ = 0;
        onChanged();
        return this;
      }

      private int timesByeAndWon_ ;
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       * @return Whether the timesByeAndWon field is set.
       */
      @java.lang.Override
      public boolean hasTimesByeAndWon() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       * @return The timesByeAndWon.
       */
      @java.lang.Override
      public int getTimesByeAndWon() {
        return timesByeAndWon_;
      }
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       * @param value The timesByeAndWon to set.
       * @return This builder for chaining.
       */
      public Builder setTimesByeAndWon(int value) {

        timesByeAndWon_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesByeAndWon() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timesByeAndWon_ = 0;
        onChanged();
        return this;
      }

      private int timesUnusualChamp_ ;
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       * @return Whether the timesUnusualChamp field is set.
       */
      @java.lang.Override
      public boolean hasTimesUnusualChamp() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       * @return The timesUnusualChamp.
       */
      @java.lang.Override
      public int getTimesUnusualChamp() {
        return timesUnusualChamp_;
      }
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       * @param value The timesUnusualChamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimesUnusualChamp(int value) {

        timesUnusualChamp_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimesUnusualChamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        timesUnusualChamp_ = 0;
        onChanged();
        return this;
      }

      private int totalGamesWon_ ;
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       * @return Whether the totalGamesWon field is set.
       */
      @java.lang.Override
      public boolean hasTotalGamesWon() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       * @return The totalGamesWon.
       */
      @java.lang.Override
      public int getTotalGamesWon() {
        return totalGamesWon_;
      }
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       * @param value The totalGamesWon to set.
       * @return This builder for chaining.
       */
      public Builder setTotalGamesWon(int value) {

        totalGamesWon_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalGamesWon() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalGamesWon_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <code>optional uint32 score = 9;</code>
       * @return Whether the score field is set.
       */
      @java.lang.Override
      public boolean hasScore() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 score = 9;</code>
       * @return The score.
       */
      @java.lang.Override
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional uint32 score = 9;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {

        score_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 score = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000200);
        score_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats>() {
      @java.lang.Override
      public CMsgDOTAWeekendTourneyPlayerSkillLevelStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    int getAccountId();

    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return Whether the seasonTrophyId field is set.
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return The seasonTrophyId.
     */
    int getSeasonTrophyId();

    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> 
        getSkillLevelsList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getSkillLevels(int index);
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    int getSkillLevelsCount();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder> 
        getSkillLevelsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder getSkillLevelsOrBuilder(
        int index);

    /**
     * <code>optional uint32 current_tier = 4;</code>
     * @return Whether the currentTier field is set.
     */
    boolean hasCurrentTier();
    /**
     * <code>optional uint32 current_tier = 4;</code>
     * @return The currentTier.
     */
    int getCurrentTier();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStats}
   */
  public static final class CMsgDOTAWeekendTourneyPlayerStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerStats)
      CMsgDOTAWeekendTourneyPlayerStatsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAWeekendTourneyPlayerStats.class.getName());
    }
    // Use CMsgDOTAWeekendTourneyPlayerStats.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerStats() {
      skillLevels_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 2;
    private int seasonTrophyId_ = 0;
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return Whether the seasonTrophyId field is set.
     */
    @java.lang.Override
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return The seasonTrophyId.
     */
    @java.lang.Override
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    public static final int SKILL_LEVELS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> skillLevels_;
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> getSkillLevelsList() {
      return skillLevels_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder> 
        getSkillLevelsOrBuilderList() {
      return skillLevels_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    @java.lang.Override
    public int getSkillLevelsCount() {
      return skillLevels_.size();
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getSkillLevels(int index) {
      return skillLevels_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder getSkillLevelsOrBuilder(
        int index) {
      return skillLevels_.get(index);
    }

    public static final int CURRENT_TIER_FIELD_NUMBER = 4;
    private int currentTier_ = 0;
    /**
     * <code>optional uint32 current_tier = 4;</code>
     * @return Whether the currentTier field is set.
     */
    @java.lang.Override
    public boolean hasCurrentTier() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 current_tier = 4;</code>
     * @return The currentTier.
     */
    @java.lang.Override
    public int getCurrentTier() {
      return currentTier_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, seasonTrophyId_);
      }
      for (int i = 0; i < skillLevels_.size(); i++) {
        output.writeMessage(3, skillLevels_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, currentTier_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, seasonTrophyId_);
      }
      for (int i = 0; i < skillLevels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, skillLevels_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, currentTier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats) obj;

      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (hasSeasonTrophyId() != other.hasSeasonTrophyId()) return false;
      if (hasSeasonTrophyId()) {
        if (getSeasonTrophyId()
            != other.getSeasonTrophyId()) return false;
      }
      if (!getSkillLevelsList()
          .equals(other.getSkillLevelsList())) return false;
      if (hasCurrentTier() != other.hasCurrentTier()) return false;
      if (hasCurrentTier()) {
        if (getCurrentTier()
            != other.getCurrentTier()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      if (getSkillLevelsCount() > 0) {
        hash = (37 * hash) + SKILL_LEVELS_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevelsList().hashCode();
      }
      if (hasCurrentTier()) {
        hash = (37 * hash) + CURRENT_TIER_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentTier();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerStats)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accountId_ = 0;
        seasonTrophyId_ = 0;
        if (skillLevelsBuilder_ == null) {
          skillLevels_ = java.util.Collections.emptyList();
        } else {
          skillLevels_ = null;
          skillLevelsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        currentTier_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats result) {
        if (skillLevelsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            skillLevels_ = java.util.Collections.unmodifiableList(skillLevels_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.skillLevels_ = skillLevels_;
        } else {
          result.skillLevels_ = skillLevelsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.seasonTrophyId_ = seasonTrophyId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.currentTier_ = currentTier_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        if (skillLevelsBuilder_ == null) {
          if (!other.skillLevels_.isEmpty()) {
            if (skillLevels_.isEmpty()) {
              skillLevels_ = other.skillLevels_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSkillLevelsIsMutable();
              skillLevels_.addAll(other.skillLevels_);
            }
            onChanged();
          }
        } else {
          if (!other.skillLevels_.isEmpty()) {
            if (skillLevelsBuilder_.isEmpty()) {
              skillLevelsBuilder_.dispose();
              skillLevelsBuilder_ = null;
              skillLevels_ = other.skillLevels_;
              bitField0_ = (bitField0_ & ~0x00000004);
              skillLevelsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSkillLevelsFieldBuilder() : null;
            } else {
              skillLevelsBuilder_.addAllMessages(other.skillLevels_);
            }
          }
        }
        if (other.hasCurrentTier()) {
          setCurrentTier(other.getCurrentTier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                seasonTrophyId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.parser(),
                        extensionRegistry);
                if (skillLevelsBuilder_ == null) {
                  ensureSkillLevelsIsMutable();
                  skillLevels_.add(m);
                } else {
                  skillLevelsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 32: {
                currentTier_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @return Whether the seasonTrophyId field is set.
       */
      @java.lang.Override
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @return The seasonTrophyId.
       */
      @java.lang.Override
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @param value The seasonTrophyId to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonTrophyId(int value) {

        seasonTrophyId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> skillLevels_ =
        java.util.Collections.emptyList();
      private void ensureSkillLevelsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          skillLevels_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats>(skillLevels_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder> skillLevelsBuilder_;

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> getSkillLevelsList() {
        if (skillLevelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillLevels_);
        } else {
          return skillLevelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public int getSkillLevelsCount() {
        if (skillLevelsBuilder_ == null) {
          return skillLevels_.size();
        } else {
          return skillLevelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getSkillLevels(int index) {
        if (skillLevelsBuilder_ == null) {
          return skillLevels_.get(index);
        } else {
          return skillLevelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder setSkillLevels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats value) {
        if (skillLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillLevelsIsMutable();
          skillLevels_.set(index, value);
          onChanged();
        } else {
          skillLevelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder setSkillLevels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder builderForValue) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillLevelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats value) {
        if (skillLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillLevelsIsMutable();
          skillLevels_.add(value);
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats value) {
        if (skillLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillLevelsIsMutable();
          skillLevels_.add(index, value);
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder builderForValue) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.add(builderForValue.build());
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder builderForValue) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addAllSkillLevels(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> values) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, skillLevels_);
          onChanged();
        } else {
          skillLevelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder clearSkillLevels() {
        if (skillLevelsBuilder_ == null) {
          skillLevels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          skillLevelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder removeSkillLevels(int index) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.remove(index);
          onChanged();
        } else {
          skillLevelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder getSkillLevelsBuilder(
          int index) {
        return getSkillLevelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder getSkillLevelsOrBuilder(
          int index) {
        if (skillLevelsBuilder_ == null) {
          return skillLevels_.get(index);  } else {
          return skillLevelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder> 
           getSkillLevelsOrBuilderList() {
        if (skillLevelsBuilder_ != null) {
          return skillLevelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillLevels_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder addSkillLevelsBuilder() {
        return getSkillLevelsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder addSkillLevelsBuilder(
          int index) {
        return getSkillLevelsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder> 
           getSkillLevelsBuilderList() {
        return getSkillLevelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder> 
          getSkillLevelsFieldBuilder() {
        if (skillLevelsBuilder_ == null) {
          skillLevelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder>(
                  skillLevels_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          skillLevels_ = null;
        }
        return skillLevelsBuilder_;
      }

      private int currentTier_ ;
      /**
       * <code>optional uint32 current_tier = 4;</code>
       * @return Whether the currentTier field is set.
       */
      @java.lang.Override
      public boolean hasCurrentTier() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 current_tier = 4;</code>
       * @return The currentTier.
       */
      @java.lang.Override
      public int getCurrentTier() {
        return currentTier_;
      }
      /**
       * <code>optional uint32 current_tier = 4;</code>
       * @param value The currentTier to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTier(int value) {

        currentTier_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_tier = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTier() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentTier_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerStats)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerStats)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStats>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerStats>() {
      @java.lang.Override
      public CMsgDOTAWeekendTourneyPlayerStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerStatsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerStatsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    int getAccountId();

    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return Whether the seasonTrophyId field is set.
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return The seasonTrophyId.
     */
    int getSeasonTrophyId();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStatsRequest}
   */
  public static final class CMsgDOTAWeekendTourneyPlayerStatsRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerStatsRequest)
      CMsgDOTAWeekendTourneyPlayerStatsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAWeekendTourneyPlayerStatsRequest.class.getName());
    }
    // Use CMsgDOTAWeekendTourneyPlayerStatsRequest.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerStatsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerStatsRequest() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 2;
    private int seasonTrophyId_ = 0;
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return Whether the seasonTrophyId field is set.
     */
    @java.lang.Override
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     * @return The seasonTrophyId.
     */
    @java.lang.Override
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, seasonTrophyId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, seasonTrophyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest) obj;

      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (hasSeasonTrophyId() != other.hasSeasonTrophyId()) return false;
      if (hasSeasonTrophyId()) {
        if (getSeasonTrophyId()
            != other.getSeasonTrophyId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStatsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerStatsRequest)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accountId_ = 0;
        seasonTrophyId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.seasonTrophyId_ = seasonTrophyId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                seasonTrophyId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @return Whether the seasonTrophyId field is set.
       */
      @java.lang.Override
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @return The seasonTrophyId.
       */
      @java.lang.Override
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @param value The seasonTrophyId to set.
       * @return This builder for chaining.
       */
      public Builder setSeasonTrophyId(int value) {

        seasonTrophyId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerStatsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerStatsRequest)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStatsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerStatsRequest>() {
      @java.lang.Override
      public CMsgDOTAWeekendTourneyPlayerStatsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStatsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStatsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerHistoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerHistory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    int getAccountId();

    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> 
        getTournamentsList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getTournaments(int index);
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    int getTournamentsCount();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder> 
        getTournamentsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder getTournamentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory}
   */
  public static final class CMsgDOTAWeekendTourneyPlayerHistory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerHistory)
      CMsgDOTAWeekendTourneyPlayerHistoryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAWeekendTourneyPlayerHistory.class.getName());
    }
    // Use CMsgDOTAWeekendTourneyPlayerHistory.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerHistory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerHistory() {
      tournaments_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Builder.class);
    }

    public interface TournamentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return Whether the tournamentId field is set.
       */
      boolean hasTournamentId();
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return The tournamentId.
       */
      int getTournamentId();

      /**
       * <code>optional uint32 start_time = 2;</code>
       * @return Whether the startTime field is set.
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 2;</code>
       * @return The startTime.
       */
      int getStartTime();

      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       * @return Whether the tournamentTier field is set.
       */
      boolean hasTournamentTier();
      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       * @return The tournamentTier.
       */
      int getTournamentTier();

      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return Whether the teamId field is set.
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return The teamId.
       */
      int getTeamId();

      /**
       * <code>optional uint32 team_date = 5;</code>
       * @return Whether the teamDate field is set.
       */
      boolean hasTeamDate();
      /**
       * <code>optional uint32 team_date = 5;</code>
       * @return The teamDate.
       */
      int getTeamDate();

      /**
       * <code>optional uint32 team_result = 6;</code>
       * @return Whether the teamResult field is set.
       */
      boolean hasTeamResult();
      /**
       * <code>optional uint32 team_result = 6;</code>
       * @return The teamResult.
       */
      int getTeamResult();

      /**
       * <code>repeated uint32 account_id = 7;</code>
       * @return A list containing the accountId.
       */
      java.util.List<java.lang.Integer> getAccountIdList();
      /**
       * <code>repeated uint32 account_id = 7;</code>
       * @return The count of accountId.
       */
      int getAccountIdCount();
      /**
       * <code>repeated uint32 account_id = 7;</code>
       * @param index The index of the element to return.
       * @return The accountId at the given index.
       */
      int getAccountId(int index);

      /**
       * <code>optional string team_name = 8;</code>
       * @return Whether the teamName field is set.
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 8;</code>
       * @return The teamName.
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 8;</code>
       * @return The bytes for teamName.
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       * @return Whether the seasonTrophyId field is set.
       */
      boolean hasSeasonTrophyId();
      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       * @return The seasonTrophyId.
       */
      int getSeasonTrophyId();
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory.Tournament}
     */
    public static final class Tournament extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
        TournamentOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Tournament.class.getName());
      }
      // Use Tournament.newBuilder() to construct.
      private Tournament(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Tournament() {
        accountId_ = emptyIntList();
        teamName_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder.class);
      }

      private int bitField0_;
      public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
      private int tournamentId_ = 0;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return Whether the tournamentId field is set.
       */
      @java.lang.Override
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       * @return The tournamentId.
       */
      @java.lang.Override
      public int getTournamentId() {
        return tournamentId_;
      }

      public static final int START_TIME_FIELD_NUMBER = 2;
      private int startTime_ = 0;
      /**
       * <code>optional uint32 start_time = 2;</code>
       * @return Whether the startTime field is set.
       */
      @java.lang.Override
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 start_time = 2;</code>
       * @return The startTime.
       */
      @java.lang.Override
      public int getStartTime() {
        return startTime_;
      }

      public static final int TOURNAMENT_TIER_FIELD_NUMBER = 3;
      private int tournamentTier_ = 0;
      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       * @return Whether the tournamentTier field is set.
       */
      @java.lang.Override
      public boolean hasTournamentTier() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       * @return The tournamentTier.
       */
      @java.lang.Override
      public int getTournamentTier() {
        return tournamentTier_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 4;
      private int teamId_ = 0;
      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_DATE_FIELD_NUMBER = 5;
      private int teamDate_ = 0;
      /**
       * <code>optional uint32 team_date = 5;</code>
       * @return Whether the teamDate field is set.
       */
      @java.lang.Override
      public boolean hasTeamDate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 team_date = 5;</code>
       * @return The teamDate.
       */
      @java.lang.Override
      public int getTeamDate() {
        return teamDate_;
      }

      public static final int TEAM_RESULT_FIELD_NUMBER = 6;
      private int teamResult_ = 0;
      /**
       * <code>optional uint32 team_result = 6;</code>
       * @return Whether the teamResult field is set.
       */
      @java.lang.Override
      public boolean hasTeamResult() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 team_result = 6;</code>
       * @return The teamResult.
       */
      @java.lang.Override
      public int getTeamResult() {
        return teamResult_;
      }

      public static final int ACCOUNT_ID_FIELD_NUMBER = 7;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList accountId_ =
          emptyIntList();
      /**
       * <code>repeated uint32 account_id = 7;</code>
       * @return A list containing the accountId.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getAccountIdList() {
        return accountId_;
      }
      /**
       * <code>repeated uint32 account_id = 7;</code>
       * @return The count of accountId.
       */
      public int getAccountIdCount() {
        return accountId_.size();
      }
      /**
       * <code>repeated uint32 account_id = 7;</code>
       * @param index The index of the element to return.
       * @return The accountId at the given index.
       */
      public int getAccountId(int index) {
        return accountId_.getInt(index);
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 8;
      @SuppressWarnings("serial")
      private volatile java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 8;</code>
       * @return Whether the teamName field is set.
       */
      @java.lang.Override
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional string team_name = 8;</code>
       * @return The teamName.
       */
      @java.lang.Override
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 8;</code>
       * @return The bytes for teamName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 9;
      private int seasonTrophyId_ = 0;
      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       * @return Whether the seasonTrophyId field is set.
       */
      @java.lang.Override
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       * @return The seasonTrophyId.
       */
      @java.lang.Override
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, tournamentId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, startTime_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, tournamentTier_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, teamDate_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, teamResult_);
        }
        for (int i = 0; i < accountId_.size(); i++) {
          output.writeUInt32(7, accountId_.getInt(i));
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 8, teamName_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(9, seasonTrophyId_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, tournamentId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, startTime_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, tournamentTier_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, teamDate_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, teamResult_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < accountId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(accountId_.getInt(i));
          }
          size += dataSize;
          size += 1 * getAccountIdList().size();
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(8, teamName_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, seasonTrophyId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament) obj;

        if (hasTournamentId() != other.hasTournamentId()) return false;
        if (hasTournamentId()) {
          if (getTournamentId()
              != other.getTournamentId()) return false;
        }
        if (hasStartTime() != other.hasStartTime()) return false;
        if (hasStartTime()) {
          if (getStartTime()
              != other.getStartTime()) return false;
        }
        if (hasTournamentTier() != other.hasTournamentTier()) return false;
        if (hasTournamentTier()) {
          if (getTournamentTier()
              != other.getTournamentTier()) return false;
        }
        if (hasTeamId() != other.hasTeamId()) return false;
        if (hasTeamId()) {
          if (getTeamId()
              != other.getTeamId()) return false;
        }
        if (hasTeamDate() != other.hasTeamDate()) return false;
        if (hasTeamDate()) {
          if (getTeamDate()
              != other.getTeamDate()) return false;
        }
        if (hasTeamResult() != other.hasTeamResult()) return false;
        if (hasTeamResult()) {
          if (getTeamResult()
              != other.getTeamResult()) return false;
        }
        if (!getAccountIdList()
            .equals(other.getAccountIdList())) return false;
        if (hasTeamName() != other.hasTeamName()) return false;
        if (hasTeamName()) {
          if (!getTeamName()
              .equals(other.getTeamName())) return false;
        }
        if (hasSeasonTrophyId() != other.hasSeasonTrophyId()) return false;
        if (hasSeasonTrophyId()) {
          if (getSeasonTrophyId()
              != other.getSeasonTrophyId()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTournamentId()) {
          hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTournamentId();
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getStartTime();
        }
        if (hasTournamentTier()) {
          hash = (37 * hash) + TOURNAMENT_TIER_FIELD_NUMBER;
          hash = (53 * hash) + getTournamentTier();
        }
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasTeamDate()) {
          hash = (37 * hash) + TEAM_DATE_FIELD_NUMBER;
          hash = (53 * hash) + getTeamDate();
        }
        if (hasTeamResult()) {
          hash = (37 * hash) + TEAM_RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getTeamResult();
        }
        if (getAccountIdCount() > 0) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountIdList().hashCode();
        }
        if (hasTeamName()) {
          hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTeamName().hashCode();
        }
        if (hasSeasonTrophyId()) {
          hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSeasonTrophyId();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory.Tournament}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          tournamentId_ = 0;
          startTime_ = 0;
          tournamentTier_ = 0;
          teamId_ = 0;
          teamDate_ = 0;
          teamResult_ = 0;
          accountId_ = emptyIntList();
          teamName_ = "";
          seasonTrophyId_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.tournamentId_ = tournamentId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.startTime_ = startTime_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.tournamentTier_ = tournamentTier_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.teamId_ = teamId_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.teamDate_ = teamDate_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.teamResult_ = teamResult_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            accountId_.makeImmutable();
            result.accountId_ = accountId_;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.teamName_ = teamName_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.seasonTrophyId_ = seasonTrophyId_;
            to_bitField0_ |= 0x00000080;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance()) return this;
          if (other.hasTournamentId()) {
            setTournamentId(other.getTournamentId());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasTournamentTier()) {
            setTournamentTier(other.getTournamentTier());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamDate()) {
            setTeamDate(other.getTeamDate());
          }
          if (other.hasTeamResult()) {
            setTeamResult(other.getTeamResult());
          }
          if (!other.accountId_.isEmpty()) {
            if (accountId_.isEmpty()) {
              accountId_ = other.accountId_;
              accountId_.makeImmutable();
              bitField0_ |= 0x00000040;
            } else {
              ensureAccountIdIsMutable();
              accountId_.addAll(other.accountId_);
            }
            onChanged();
          }
          if (other.hasTeamName()) {
            teamName_ = other.teamName_;
            bitField0_ |= 0x00000080;
            onChanged();
          }
          if (other.hasSeasonTrophyId()) {
            setSeasonTrophyId(other.getSeasonTrophyId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  tournamentId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  startTime_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  tournamentTier_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  teamId_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  teamDate_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  teamResult_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  int v = input.readUInt32();
                  ensureAccountIdIsMutable();
                  accountId_.addInt(v);
                  break;
                } // case 56
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureAccountIdIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    accountId_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 58
                case 66: {
                  teamName_ = input.readBytes();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 66
                case 72: {
                  seasonTrophyId_ = input.readUInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int tournamentId_ ;
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         * @return Whether the tournamentId field is set.
         */
        @java.lang.Override
        public boolean hasTournamentId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         * @return The tournamentId.
         */
        @java.lang.Override
        public int getTournamentId() {
          return tournamentId_;
        }
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         * @param value The tournamentId to set.
         * @return This builder for chaining.
         */
        public Builder setTournamentId(int value) {

          tournamentId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTournamentId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tournamentId_ = 0;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 2;</code>
         * @return Whether the startTime field is set.
         */
        @java.lang.Override
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         * @return The startTime.
         */
        @java.lang.Override
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         * @param value The startTime to set.
         * @return This builder for chaining.
         */
        public Builder setStartTime(int value) {

          startTime_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startTime_ = 0;
          onChanged();
          return this;
        }

        private int tournamentTier_ ;
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         * @return Whether the tournamentTier field is set.
         */
        @java.lang.Override
        public boolean hasTournamentTier() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         * @return The tournamentTier.
         */
        @java.lang.Override
        public int getTournamentTier() {
          return tournamentTier_;
        }
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         * @param value The tournamentTier to set.
         * @return This builder for chaining.
         */
        public Builder setTournamentTier(int value) {

          tournamentTier_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTournamentTier() {
          bitField0_ = (bitField0_ & ~0x00000004);
          tournamentTier_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @return Whether the teamId field is set.
         */
        @java.lang.Override
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @return The teamId.
         */
        @java.lang.Override
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @param value The teamId to set.
         * @return This builder for chaining.
         */
        public Builder setTeamId(int value) {

          teamId_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private int teamDate_ ;
        /**
         * <code>optional uint32 team_date = 5;</code>
         * @return Whether the teamDate field is set.
         */
        @java.lang.Override
        public boolean hasTeamDate() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 team_date = 5;</code>
         * @return The teamDate.
         */
        @java.lang.Override
        public int getTeamDate() {
          return teamDate_;
        }
        /**
         * <code>optional uint32 team_date = 5;</code>
         * @param value The teamDate to set.
         * @return This builder for chaining.
         */
        public Builder setTeamDate(int value) {

          teamDate_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_date = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamDate() {
          bitField0_ = (bitField0_ & ~0x00000010);
          teamDate_ = 0;
          onChanged();
          return this;
        }

        private int teamResult_ ;
        /**
         * <code>optional uint32 team_result = 6;</code>
         * @return Whether the teamResult field is set.
         */
        @java.lang.Override
        public boolean hasTeamResult() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 team_result = 6;</code>
         * @return The teamResult.
         */
        @java.lang.Override
        public int getTeamResult() {
          return teamResult_;
        }
        /**
         * <code>optional uint32 team_result = 6;</code>
         * @param value The teamResult to set.
         * @return This builder for chaining.
         */
        public Builder setTeamResult(int value) {

          teamResult_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_result = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamResult() {
          bitField0_ = (bitField0_ & ~0x00000020);
          teamResult_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList accountId_ = emptyIntList();
        private void ensureAccountIdIsMutable() {
          if (!accountId_.isModifiable()) {
            accountId_ = makeMutableCopy(accountId_);
          }
          bitField0_ |= 0x00000040;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @return A list containing the accountId.
         */
        public java.util.List<java.lang.Integer>
            getAccountIdList() {
          accountId_.makeImmutable();
          return accountId_;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @return The count of accountId.
         */
        public int getAccountIdCount() {
          return accountId_.size();
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @param index The index of the element to return.
         * @return The accountId at the given index.
         */
        public int getAccountId(int index) {
          return accountId_.getInt(index);
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @param index The index to set the value at.
         * @param value The accountId to set.
         * @return This builder for chaining.
         */
        public Builder setAccountId(
            int index, int value) {

          ensureAccountIdIsMutable();
          accountId_.setInt(index, value);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @param value The accountId to add.
         * @return This builder for chaining.
         */
        public Builder addAccountId(int value) {

          ensureAccountIdIsMutable();
          accountId_.addInt(value);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @param values The accountId to add.
         * @return This builder for chaining.
         */
        public Builder addAllAccountId(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureAccountIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accountId_);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccountId() {
          accountId_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 8;</code>
         * @return Whether the teamName field is set.
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional string team_name = 8;</code>
         * @return The teamName.
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 8;</code>
         * @return The bytes for teamName.
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 8;</code>
         * @param value The teamName to set.
         * @return This builder for chaining.
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          teamName_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeamName() {
          teamName_ = getDefaultInstance().getTeamName();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 8;</code>
         * @param value The bytes for teamName to set.
         * @return This builder for chaining.
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          teamName_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }

        private int seasonTrophyId_ ;
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         * @return Whether the seasonTrophyId field is set.
         */
        @java.lang.Override
        public boolean hasSeasonTrophyId() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         * @return The seasonTrophyId.
         */
        @java.lang.Override
        public int getSeasonTrophyId() {
          return seasonTrophyId_;
        }
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         * @param value The seasonTrophyId to set.
         * @return This builder for chaining.
         */
        public Builder setSeasonTrophyId(int value) {

          seasonTrophyId_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearSeasonTrophyId() {
          bitField0_ = (bitField0_ & ~0x00000100);
          seasonTrophyId_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Tournament>
          PARSER = new com.google.protobuf.AbstractParser<Tournament>() {
        @java.lang.Override
        public Tournament parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Tournament> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Tournament> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_ = 0;
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return Whether the accountId field is set.
     */
    @java.lang.Override
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     * @return The accountId.
     */
    @java.lang.Override
    public int getAccountId() {
      return accountId_;
    }

    public static final int TOURNAMENTS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> tournaments_;
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> getTournamentsList() {
      return tournaments_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder> 
        getTournamentsOrBuilderList() {
      return tournaments_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    @java.lang.Override
    public int getTournamentsCount() {
      return tournaments_.size();
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getTournaments(int index) {
      return tournaments_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder getTournamentsOrBuilder(
        int index) {
      return tournaments_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, accountId_);
      }
      for (int i = 0; i < tournaments_.size(); i++) {
        output.writeMessage(3, tournaments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      for (int i = 0; i < tournaments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tournaments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory) obj;

      if (hasAccountId() != other.hasAccountId()) return false;
      if (hasAccountId()) {
        if (getAccountId()
            != other.getAccountId()) return false;
      }
      if (!getTournamentsList()
          .equals(other.getTournamentsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (getTournamentsCount() > 0) {
        hash = (37 * hash) + TOURNAMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getTournamentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerHistory)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accountId_ = 0;
        if (tournamentsBuilder_ == null) {
          tournaments_ = java.util.Collections.emptyList();
        } else {
          tournaments_ = null;
          tournamentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory result) {
        if (tournamentsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            tournaments_ = java.util.Collections.unmodifiableList(tournaments_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tournaments_ = tournaments_;
        } else {
          result.tournaments_ = tournamentsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accountId_ = accountId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (tournamentsBuilder_ == null) {
          if (!other.tournaments_.isEmpty()) {
            if (tournaments_.isEmpty()) {
              tournaments_ = other.tournaments_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTournamentsIsMutable();
              tournaments_.addAll(other.tournaments_);
            }
            onChanged();
          }
        } else {
          if (!other.tournaments_.isEmpty()) {
            if (tournamentsBuilder_.isEmpty()) {
              tournamentsBuilder_.dispose();
              tournamentsBuilder_ = null;
              tournaments_ = other.tournaments_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tournamentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTournamentsFieldBuilder() : null;
            } else {
              tournamentsBuilder_.addAllMessages(other.tournaments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                accountId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 26: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.parser(),
                        extensionRegistry);
                if (tournamentsBuilder_ == null) {
                  ensureTournamentsIsMutable();
                  tournaments_.add(m);
                } else {
                  tournamentsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @param value The accountId to set.
       * @return This builder for chaining.
       */
      public Builder setAccountId(int value) {

        accountId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> tournaments_ =
        java.util.Collections.emptyList();
      private void ensureTournamentsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          tournaments_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament>(tournaments_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder> tournamentsBuilder_;

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> getTournamentsList() {
        if (tournamentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tournaments_);
        } else {
          return tournamentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public int getTournamentsCount() {
        if (tournamentsBuilder_ == null) {
          return tournaments_.size();
        } else {
          return tournamentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getTournaments(int index) {
        if (tournamentsBuilder_ == null) {
          return tournaments_.get(index);
        } else {
          return tournamentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder setTournaments(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament value) {
        if (tournamentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentsIsMutable();
          tournaments_.set(index, value);
          onChanged();
        } else {
          tournamentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder setTournaments(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder builderForValue) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.set(index, builderForValue.build());
          onChanged();
        } else {
          tournamentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament value) {
        if (tournamentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentsIsMutable();
          tournaments_.add(value);
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament value) {
        if (tournamentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentsIsMutable();
          tournaments_.add(index, value);
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder builderForValue) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.add(builderForValue.build());
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder builderForValue) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.add(index, builderForValue.build());
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addAllTournaments(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> values) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tournaments_);
          onChanged();
        } else {
          tournamentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder clearTournaments() {
        if (tournamentsBuilder_ == null) {
          tournaments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tournamentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder removeTournaments(int index) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.remove(index);
          onChanged();
        } else {
          tournamentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder getTournamentsBuilder(
          int index) {
        return getTournamentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder getTournamentsOrBuilder(
          int index) {
        if (tournamentsBuilder_ == null) {
          return tournaments_.get(index);  } else {
          return tournamentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder> 
           getTournamentsOrBuilderList() {
        if (tournamentsBuilder_ != null) {
          return tournamentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tournaments_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder addTournamentsBuilder() {
        return getTournamentsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder addTournamentsBuilder(
          int index) {
        return getTournamentsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder> 
           getTournamentsBuilderList() {
        return getTournamentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder> 
          getTournamentsFieldBuilder() {
        if (tournamentsBuilder_ == null) {
          tournamentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder>(
                  tournaments_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          tournaments_ = null;
        }
        return tournamentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerHistory)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerHistory)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistory>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerHistory>() {
      @java.lang.Override
      public CMsgDOTAWeekendTourneyPlayerHistory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistory> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistory> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyPlayerHistory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyParticipationDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyParticipationDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> 
        getDivisionsList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDivisions(int index);
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    int getDivisionsCount();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder> 
        getDivisionsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder getDivisionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails}
   */
  public static final class CMsgDOTAWeekendTourneyParticipationDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyParticipationDetails)
      CMsgDOTAWeekendTourneyParticipationDetailsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgDOTAWeekendTourneyParticipationDetails.class.getName());
    }
    // Use CMsgDOTAWeekendTourneyParticipationDetails.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyParticipationDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyParticipationDetails() {
      divisions_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Builder.class);
    }

    public interface TierOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 tier = 1;</code>
       * @return Whether the tier field is set.
       */
      boolean hasTier();
      /**
       * <code>optional uint32 tier = 1;</code>
       * @return The tier.
       */
      int getTier();

      /**
       * <code>optional uint32 players = 2;</code>
       * @return Whether the players field is set.
       */
      boolean hasPlayers();
      /**
       * <code>optional uint32 players = 2;</code>
       * @return The players.
       */
      int getPlayers();

      /**
       * <code>optional uint32 teams = 3;</code>
       * @return Whether the teams field is set.
       */
      boolean hasTeams();
      /**
       * <code>optional uint32 teams = 3;</code>
       * @return The teams.
       */
      int getTeams();

      /**
       * <code>optional uint32 winning_teams = 4;</code>
       * @return Whether the winningTeams field is set.
       */
      boolean hasWinningTeams();
      /**
       * <code>optional uint32 winning_teams = 4;</code>
       * @return The winningTeams.
       */
      int getWinningTeams();

      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       * @return Whether the playersStreak2 field is set.
       */
      boolean hasPlayersStreak2();
      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       * @return The playersStreak2.
       */
      int getPlayersStreak2();

      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       * @return Whether the playersStreak3 field is set.
       */
      boolean hasPlayersStreak3();
      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       * @return The playersStreak3.
       */
      int getPlayersStreak3();

      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       * @return Whether the playersStreak4 field is set.
       */
      boolean hasPlayersStreak4();
      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       * @return The playersStreak4.
       */
      int getPlayersStreak4();

      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       * @return Whether the playersStreak5 field is set.
       */
      boolean hasPlayersStreak5();
      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       * @return The playersStreak5.
       */
      int getPlayersStreak5();
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Tier}
     */
    public static final class Tier extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
        TierOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Tier.class.getName());
      }
      // Use Tier.newBuilder() to construct.
      private Tier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Tier() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder.class);
      }

      private int bitField0_;
      public static final int TIER_FIELD_NUMBER = 1;
      private int tier_ = 0;
      /**
       * <code>optional uint32 tier = 1;</code>
       * @return Whether the tier field is set.
       */
      @java.lang.Override
      public boolean hasTier() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 tier = 1;</code>
       * @return The tier.
       */
      @java.lang.Override
      public int getTier() {
        return tier_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 2;
      private int players_ = 0;
      /**
       * <code>optional uint32 players = 2;</code>
       * @return Whether the players field is set.
       */
      @java.lang.Override
      public boolean hasPlayers() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 players = 2;</code>
       * @return The players.
       */
      @java.lang.Override
      public int getPlayers() {
        return players_;
      }

      public static final int TEAMS_FIELD_NUMBER = 3;
      private int teams_ = 0;
      /**
       * <code>optional uint32 teams = 3;</code>
       * @return Whether the teams field is set.
       */
      @java.lang.Override
      public boolean hasTeams() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 teams = 3;</code>
       * @return The teams.
       */
      @java.lang.Override
      public int getTeams() {
        return teams_;
      }

      public static final int WINNING_TEAMS_FIELD_NUMBER = 4;
      private int winningTeams_ = 0;
      /**
       * <code>optional uint32 winning_teams = 4;</code>
       * @return Whether the winningTeams field is set.
       */
      @java.lang.Override
      public boolean hasWinningTeams() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 winning_teams = 4;</code>
       * @return The winningTeams.
       */
      @java.lang.Override
      public int getWinningTeams() {
        return winningTeams_;
      }

      public static final int PLAYERS_STREAK_2_FIELD_NUMBER = 5;
      private int playersStreak2_ = 0;
      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       * @return Whether the playersStreak2 field is set.
       */
      @java.lang.Override
      public boolean hasPlayersStreak2() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       * @return The playersStreak2.
       */
      @java.lang.Override
      public int getPlayersStreak2() {
        return playersStreak2_;
      }

      public static final int PLAYERS_STREAK_3_FIELD_NUMBER = 6;
      private int playersStreak3_ = 0;
      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       * @return Whether the playersStreak3 field is set.
       */
      @java.lang.Override
      public boolean hasPlayersStreak3() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       * @return The playersStreak3.
       */
      @java.lang.Override
      public int getPlayersStreak3() {
        return playersStreak3_;
      }

      public static final int PLAYERS_STREAK_4_FIELD_NUMBER = 7;
      private int playersStreak4_ = 0;
      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       * @return Whether the playersStreak4 field is set.
       */
      @java.lang.Override
      public boolean hasPlayersStreak4() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       * @return The playersStreak4.
       */
      @java.lang.Override
      public int getPlayersStreak4() {
        return playersStreak4_;
      }

      public static final int PLAYERS_STREAK_5_FIELD_NUMBER = 8;
      private int playersStreak5_ = 0;
      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       * @return Whether the playersStreak5 field is set.
       */
      @java.lang.Override
      public boolean hasPlayersStreak5() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       * @return The playersStreak5.
       */
      @java.lang.Override
      public int getPlayersStreak5() {
        return playersStreak5_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, tier_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, players_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, teams_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, winningTeams_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, playersStreak2_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, playersStreak3_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(7, playersStreak4_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(8, playersStreak5_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, tier_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, players_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, teams_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, winningTeams_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, playersStreak2_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, playersStreak3_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, playersStreak4_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, playersStreak5_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier) obj;

        if (hasTier() != other.hasTier()) return false;
        if (hasTier()) {
          if (getTier()
              != other.getTier()) return false;
        }
        if (hasPlayers() != other.hasPlayers()) return false;
        if (hasPlayers()) {
          if (getPlayers()
              != other.getPlayers()) return false;
        }
        if (hasTeams() != other.hasTeams()) return false;
        if (hasTeams()) {
          if (getTeams()
              != other.getTeams()) return false;
        }
        if (hasWinningTeams() != other.hasWinningTeams()) return false;
        if (hasWinningTeams()) {
          if (getWinningTeams()
              != other.getWinningTeams()) return false;
        }
        if (hasPlayersStreak2() != other.hasPlayersStreak2()) return false;
        if (hasPlayersStreak2()) {
          if (getPlayersStreak2()
              != other.getPlayersStreak2()) return false;
        }
        if (hasPlayersStreak3() != other.hasPlayersStreak3()) return false;
        if (hasPlayersStreak3()) {
          if (getPlayersStreak3()
              != other.getPlayersStreak3()) return false;
        }
        if (hasPlayersStreak4() != other.hasPlayersStreak4()) return false;
        if (hasPlayersStreak4()) {
          if (getPlayersStreak4()
              != other.getPlayersStreak4()) return false;
        }
        if (hasPlayersStreak5() != other.hasPlayersStreak5()) return false;
        if (hasPlayersStreak5()) {
          if (getPlayersStreak5()
              != other.getPlayersStreak5()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTier()) {
          hash = (37 * hash) + TIER_FIELD_NUMBER;
          hash = (53 * hash) + getTier();
        }
        if (hasPlayers()) {
          hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
          hash = (53 * hash) + getPlayers();
        }
        if (hasTeams()) {
          hash = (37 * hash) + TEAMS_FIELD_NUMBER;
          hash = (53 * hash) + getTeams();
        }
        if (hasWinningTeams()) {
          hash = (37 * hash) + WINNING_TEAMS_FIELD_NUMBER;
          hash = (53 * hash) + getWinningTeams();
        }
        if (hasPlayersStreak2()) {
          hash = (37 * hash) + PLAYERS_STREAK_2_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak2();
        }
        if (hasPlayersStreak3()) {
          hash = (37 * hash) + PLAYERS_STREAK_3_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak3();
        }
        if (hasPlayersStreak4()) {
          hash = (37 * hash) + PLAYERS_STREAK_4_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak4();
        }
        if (hasPlayersStreak5()) {
          hash = (37 * hash) + PLAYERS_STREAK_5_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak5();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Tier}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          tier_ = 0;
          players_ = 0;
          teams_ = 0;
          winningTeams_ = 0;
          playersStreak2_ = 0;
          playersStreak3_ = 0;
          playersStreak4_ = 0;
          playersStreak5_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.tier_ = tier_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.players_ = players_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.teams_ = teams_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.winningTeams_ = winningTeams_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.playersStreak2_ = playersStreak2_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.playersStreak3_ = playersStreak3_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.playersStreak4_ = playersStreak4_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.playersStreak5_ = playersStreak5_;
            to_bitField0_ |= 0x00000080;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance()) return this;
          if (other.hasTier()) {
            setTier(other.getTier());
          }
          if (other.hasPlayers()) {
            setPlayers(other.getPlayers());
          }
          if (other.hasTeams()) {
            setTeams(other.getTeams());
          }
          if (other.hasWinningTeams()) {
            setWinningTeams(other.getWinningTeams());
          }
          if (other.hasPlayersStreak2()) {
            setPlayersStreak2(other.getPlayersStreak2());
          }
          if (other.hasPlayersStreak3()) {
            setPlayersStreak3(other.getPlayersStreak3());
          }
          if (other.hasPlayersStreak4()) {
            setPlayersStreak4(other.getPlayersStreak4());
          }
          if (other.hasPlayersStreak5()) {
            setPlayersStreak5(other.getPlayersStreak5());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  tier_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  players_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  teams_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  winningTeams_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  playersStreak2_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  playersStreak3_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  playersStreak4_ = input.readUInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  playersStreak5_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int tier_ ;
        /**
         * <code>optional uint32 tier = 1;</code>
         * @return Whether the tier field is set.
         */
        @java.lang.Override
        public boolean hasTier() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 tier = 1;</code>
         * @return The tier.
         */
        @java.lang.Override
        public int getTier() {
          return tier_;
        }
        /**
         * <code>optional uint32 tier = 1;</code>
         * @param value The tier to set.
         * @return This builder for chaining.
         */
        public Builder setTier(int value) {

          tier_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tier = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTier() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tier_ = 0;
          onChanged();
          return this;
        }

        private int players_ ;
        /**
         * <code>optional uint32 players = 2;</code>
         * @return Whether the players field is set.
         */
        @java.lang.Override
        public boolean hasPlayers() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 players = 2;</code>
         * @return The players.
         */
        @java.lang.Override
        public int getPlayers() {
          return players_;
        }
        /**
         * <code>optional uint32 players = 2;</code>
         * @param value The players to set.
         * @return This builder for chaining.
         */
        public Builder setPlayers(int value) {

          players_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayers() {
          bitField0_ = (bitField0_ & ~0x00000002);
          players_ = 0;
          onChanged();
          return this;
        }

        private int teams_ ;
        /**
         * <code>optional uint32 teams = 3;</code>
         * @return Whether the teams field is set.
         */
        @java.lang.Override
        public boolean hasTeams() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 teams = 3;</code>
         * @return The teams.
         */
        @java.lang.Override
        public int getTeams() {
          return teams_;
        }
        /**
         * <code>optional uint32 teams = 3;</code>
         * @param value The teams to set.
         * @return This builder for chaining.
         */
        public Builder setTeams(int value) {

          teams_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 teams = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeams() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teams_ = 0;
          onChanged();
          return this;
        }

        private int winningTeams_ ;
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         * @return Whether the winningTeams field is set.
         */
        @java.lang.Override
        public boolean hasWinningTeams() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         * @return The winningTeams.
         */
        @java.lang.Override
        public int getWinningTeams() {
          return winningTeams_;
        }
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         * @param value The winningTeams to set.
         * @return This builder for chaining.
         */
        public Builder setWinningTeams(int value) {

          winningTeams_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearWinningTeams() {
          bitField0_ = (bitField0_ & ~0x00000008);
          winningTeams_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak2_ ;
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         * @return Whether the playersStreak2 field is set.
         */
        @java.lang.Override
        public boolean hasPlayersStreak2() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         * @return The playersStreak2.
         */
        @java.lang.Override
        public int getPlayersStreak2() {
          return playersStreak2_;
        }
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         * @param value The playersStreak2 to set.
         * @return This builder for chaining.
         */
        public Builder setPlayersStreak2(int value) {

          playersStreak2_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayersStreak2() {
          bitField0_ = (bitField0_ & ~0x00000010);
          playersStreak2_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak3_ ;
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         * @return Whether the playersStreak3 field is set.
         */
        @java.lang.Override
        public boolean hasPlayersStreak3() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         * @return The playersStreak3.
         */
        @java.lang.Override
        public int getPlayersStreak3() {
          return playersStreak3_;
        }
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         * @param value The playersStreak3 to set.
         * @return This builder for chaining.
         */
        public Builder setPlayersStreak3(int value) {

          playersStreak3_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayersStreak3() {
          bitField0_ = (bitField0_ & ~0x00000020);
          playersStreak3_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak4_ ;
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         * @return Whether the playersStreak4 field is set.
         */
        @java.lang.Override
        public boolean hasPlayersStreak4() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         * @return The playersStreak4.
         */
        @java.lang.Override
        public int getPlayersStreak4() {
          return playersStreak4_;
        }
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         * @param value The playersStreak4 to set.
         * @return This builder for chaining.
         */
        public Builder setPlayersStreak4(int value) {

          playersStreak4_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayersStreak4() {
          bitField0_ = (bitField0_ & ~0x00000040);
          playersStreak4_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak5_ ;
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         * @return Whether the playersStreak5 field is set.
         */
        @java.lang.Override
        public boolean hasPlayersStreak5() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         * @return The playersStreak5.
         */
        @java.lang.Override
        public int getPlayersStreak5() {
          return playersStreak5_;
        }
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         * @param value The playersStreak5 to set.
         * @return This builder for chaining.
         */
        public Builder setPlayersStreak5(int value) {

          playersStreak5_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayersStreak5() {
          bitField0_ = (bitField0_ & ~0x00000080);
          playersStreak5_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Tier>
          PARSER = new com.google.protobuf.AbstractParser<Tier>() {
        @java.lang.Override
        public Tier parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Tier> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Tier> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DivisionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyParticipationDetails.Division)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division_id = 1;</code>
       * @return Whether the divisionId field is set.
       */
      boolean hasDivisionId();
      /**
       * <code>optional uint32 division_id = 1;</code>
       * @return The divisionId.
       */
      int getDivisionId();

      /**
       * <code>optional uint32 schedule_time = 2;</code>
       * @return Whether the scheduleTime field is set.
       */
      boolean hasScheduleTime();
      /**
       * <code>optional uint32 schedule_time = 2;</code>
       * @return The scheduleTime.
       */
      int getScheduleTime();

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> 
          getTiersList();
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getTiers(int index);
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      int getTiersCount();
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder> 
          getTiersOrBuilderList();
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder getTiersOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Division}
     */
    public static final class Division extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyParticipationDetails.Division)
        DivisionOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Division.class.getName());
      }
      // Use Division.newBuilder() to construct.
      private Division(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Division() {
        tiers_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder.class);
      }

      private int bitField0_;
      public static final int DIVISION_ID_FIELD_NUMBER = 1;
      private int divisionId_ = 0;
      /**
       * <code>optional uint32 division_id = 1;</code>
       * @return Whether the divisionId field is set.
       */
      @java.lang.Override
      public boolean hasDivisionId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 division_id = 1;</code>
       * @return The divisionId.
       */
      @java.lang.Override
      public int getDivisionId() {
        return divisionId_;
      }

      public static final int SCHEDULE_TIME_FIELD_NUMBER = 2;
      private int scheduleTime_ = 0;
      /**
       * <code>optional uint32 schedule_time = 2;</code>
       * @return Whether the scheduleTime field is set.
       */
      @java.lang.Override
      public boolean hasScheduleTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 schedule_time = 2;</code>
       * @return The scheduleTime.
       */
      @java.lang.Override
      public int getScheduleTime() {
        return scheduleTime_;
      }

      public static final int TIERS_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> tiers_;
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      @java.lang.Override
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> getTiersList() {
        return tiers_;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder> 
          getTiersOrBuilderList() {
        return tiers_;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      @java.lang.Override
      public int getTiersCount() {
        return tiers_.size();
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getTiers(int index) {
        return tiers_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder getTiersOrBuilder(
          int index) {
        return tiers_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, divisionId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, scheduleTime_);
        }
        for (int i = 0; i < tiers_.size(); i++) {
          output.writeMessage(3, tiers_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, divisionId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, scheduleTime_);
        }
        for (int i = 0; i < tiers_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, tiers_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division) obj;

        if (hasDivisionId() != other.hasDivisionId()) return false;
        if (hasDivisionId()) {
          if (getDivisionId()
              != other.getDivisionId()) return false;
        }
        if (hasScheduleTime() != other.hasScheduleTime()) return false;
        if (hasScheduleTime()) {
          if (getScheduleTime()
              != other.getScheduleTime()) return false;
        }
        if (!getTiersList()
            .equals(other.getTiersList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDivisionId()) {
          hash = (37 * hash) + DIVISION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getDivisionId();
        }
        if (hasScheduleTime()) {
          hash = (37 * hash) + SCHEDULE_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getScheduleTime();
        }
        if (getTiersCount() > 0) {
          hash = (37 * hash) + TIERS_FIELD_NUMBER;
          hash = (53 * hash) + getTiersList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Division}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyParticipationDetails.Division)
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          divisionId_ = 0;
          scheduleTime_ = 0;
          if (tiersBuilder_ == null) {
            tiers_ = java.util.Collections.emptyList();
          } else {
            tiers_ = null;
            tiersBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division result) {
          if (tiersBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0)) {
              tiers_ = java.util.Collections.unmodifiableList(tiers_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.tiers_ = tiers_;
          } else {
            result.tiers_ = tiersBuilder_.build();
          }
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.divisionId_ = divisionId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.scheduleTime_ = scheduleTime_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance()) return this;
          if (other.hasDivisionId()) {
            setDivisionId(other.getDivisionId());
          }
          if (other.hasScheduleTime()) {
            setScheduleTime(other.getScheduleTime());
          }
          if (tiersBuilder_ == null) {
            if (!other.tiers_.isEmpty()) {
              if (tiers_.isEmpty()) {
                tiers_ = other.tiers_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTiersIsMutable();
                tiers_.addAll(other.tiers_);
              }
              onChanged();
            }
          } else {
            if (!other.tiers_.isEmpty()) {
              if (tiersBuilder_.isEmpty()) {
                tiersBuilder_.dispose();
                tiersBuilder_ = null;
                tiers_ = other.tiers_;
                bitField0_ = (bitField0_ & ~0x00000004);
                tiersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTiersFieldBuilder() : null;
              } else {
                tiersBuilder_.addAllMessages(other.tiers_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  divisionId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  scheduleTime_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier m =
                      input.readMessage(
                          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.parser(),
                          extensionRegistry);
                  if (tiersBuilder_ == null) {
                    ensureTiersIsMutable();
                    tiers_.add(m);
                  } else {
                    tiersBuilder_.addMessage(m);
                  }
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int divisionId_ ;
        /**
         * <code>optional uint32 division_id = 1;</code>
         * @return Whether the divisionId field is set.
         */
        @java.lang.Override
        public boolean hasDivisionId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 division_id = 1;</code>
         * @return The divisionId.
         */
        @java.lang.Override
        public int getDivisionId() {
          return divisionId_;
        }
        /**
         * <code>optional uint32 division_id = 1;</code>
         * @param value The divisionId to set.
         * @return This builder for chaining.
         */
        public Builder setDivisionId(int value) {

          divisionId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDivisionId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          divisionId_ = 0;
          onChanged();
          return this;
        }

        private int scheduleTime_ ;
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         * @return Whether the scheduleTime field is set.
         */
        @java.lang.Override
        public boolean hasScheduleTime() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         * @return The scheduleTime.
         */
        @java.lang.Override
        public int getScheduleTime() {
          return scheduleTime_;
        }
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         * @param value The scheduleTime to set.
         * @return This builder for chaining.
         */
        public Builder setScheduleTime(int value) {

          scheduleTime_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearScheduleTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          scheduleTime_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> tiers_ =
          java.util.Collections.emptyList();
        private void ensureTiersIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            tiers_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier>(tiers_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder> tiersBuilder_;

        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> getTiersList() {
          if (tiersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(tiers_);
          } else {
            return tiersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public int getTiersCount() {
          if (tiersBuilder_ == null) {
            return tiers_.size();
          } else {
            return tiersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getTiers(int index) {
          if (tiersBuilder_ == null) {
            return tiers_.get(index);
          } else {
            return tiersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder setTiers(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier value) {
          if (tiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTiersIsMutable();
            tiers_.set(index, value);
            onChanged();
          } else {
            tiersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder setTiers(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder builderForValue) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.set(index, builderForValue.build());
            onChanged();
          } else {
            tiersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier value) {
          if (tiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTiersIsMutable();
            tiers_.add(value);
            onChanged();
          } else {
            tiersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier value) {
          if (tiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTiersIsMutable();
            tiers_.add(index, value);
            onChanged();
          } else {
            tiersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder builderForValue) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.add(builderForValue.build());
            onChanged();
          } else {
            tiersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder builderForValue) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.add(index, builderForValue.build());
            onChanged();
          } else {
            tiersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addAllTiers(
            java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> values) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, tiers_);
            onChanged();
          } else {
            tiersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder clearTiers() {
          if (tiersBuilder_ == null) {
            tiers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            tiersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder removeTiers(int index) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.remove(index);
            onChanged();
          } else {
            tiersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder getTiersBuilder(
            int index) {
          return getTiersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder getTiersOrBuilder(
            int index) {
          if (tiersBuilder_ == null) {
            return tiers_.get(index);  } else {
            return tiersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder> 
             getTiersOrBuilderList() {
          if (tiersBuilder_ != null) {
            return tiersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(tiers_);
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder addTiersBuilder() {
          return getTiersFieldBuilder().addBuilder(
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder addTiersBuilder(
            int index) {
          return getTiersFieldBuilder().addBuilder(
              index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder> 
             getTiersBuilderList() {
          return getTiersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder> 
            getTiersFieldBuilder() {
          if (tiersBuilder_ == null) {
            tiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder>(
                    tiers_,
                    ((bitField0_ & 0x00000004) != 0),
                    getParentForChildren(),
                    isClean());
            tiers_ = null;
          }
          return tiersBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyParticipationDetails.Division)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyParticipationDetails.Division)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Division>
          PARSER = new com.google.protobuf.AbstractParser<Division>() {
        @java.lang.Override
        public Division parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Division> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Division> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIVISIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> divisions_;
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> getDivisionsList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder> 
        getDivisionsOrBuilderList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    @java.lang.Override
    public int getDivisionsCount() {
      return divisions_.size();
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDivisions(int index) {
      return divisions_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder getDivisionsOrBuilder(
        int index) {
      return divisions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < divisions_.size(); i++) {
        output.writeMessage(1, divisions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < divisions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, divisions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails other = (kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails) obj;

      if (!getDivisionsList()
          .equals(other.getDivisionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDivisionsCount() > 0) {
        hash = (37 * hash) + DIVISIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyParticipationDetails)
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.class, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
        } else {
          divisions_ = null;
          divisionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails result = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails result) {
        if (divisionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            divisions_ = java.util.Collections.unmodifiableList(divisions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.divisions_ = divisions_;
        } else {
          result.divisions_ = divisionsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.getDefaultInstance()) return this;
        if (divisionsBuilder_ == null) {
          if (!other.divisions_.isEmpty()) {
            if (divisions_.isEmpty()) {
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDivisionsIsMutable();
              divisions_.addAll(other.divisions_);
            }
            onChanged();
          }
        } else {
          if (!other.divisions_.isEmpty()) {
            if (divisionsBuilder_.isEmpty()) {
              divisionsBuilder_.dispose();
              divisionsBuilder_ = null;
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              divisionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDivisionsFieldBuilder() : null;
            } else {
              divisionsBuilder_.addAllMessages(other.divisions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.parser(),
                        extensionRegistry);
                if (divisionsBuilder_ == null) {
                  ensureDivisionsIsMutable();
                  divisions_.add(m);
                } else {
                  divisionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> divisions_ =
        java.util.Collections.emptyList();
      private void ensureDivisionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          divisions_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division>(divisions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder> divisionsBuilder_;

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> getDivisionsList() {
        if (divisionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(divisions_);
        } else {
          return divisionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public int getDivisionsCount() {
        if (divisionsBuilder_ == null) {
          return divisions_.size();
        } else {
          return divisionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDivisions(int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);
        } else {
          return divisionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.set(index, value);
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.set(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(index, value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addAllDivisions(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> values) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, divisions_);
          onChanged();
        } else {
          divisionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder clearDivisions() {
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          divisionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder removeDivisions(int index) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.remove(index);
          onChanged();
        } else {
          divisionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder getDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder getDivisionsOrBuilder(
          int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);  } else {
          return divisionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder> 
           getDivisionsOrBuilderList() {
        if (divisionsBuilder_ != null) {
          return divisionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(divisions_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder addDivisionsBuilder() {
        return getDivisionsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder addDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder> 
           getDivisionsBuilderList() {
        return getDivisionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder> 
          getDivisionsFieldBuilder() {
        if (divisionsBuilder_ == null) {
          divisionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder>(
                  divisions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          divisions_ = null;
        }
        return divisionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyParticipationDetails)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyParticipationDetails)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyParticipationDetails>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyParticipationDetails>() {
      @java.lang.Override
      public CMsgDOTAWeekendTourneyParticipationDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyParticipationDetails> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyParticipationDetails> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesClientTournament.CMsgDOTAWeekendTourneyParticipationDetails getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneySchedule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneyOpts_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneyLeave_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Team_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Game_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_Game_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournament_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentStateChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'dota_gcmessages_client_tournament.prot" +
      "o\032\027dota_client_enums.proto\"#\n!CMsgReques" +
      "tWeekendTourneySchedule\"\366\001\n\032CMsgWeekendT" +
      "ourneySchedule\0227\n\tdivisions\030\001 \003(\0132$.CMsg" +
      "WeekendTourneySchedule.Division\032\236\001\n\010Divi" +
      "sion\022\025\n\rdivision_code\030\001 \001(\r\022\030\n\020time_wind" +
      "ow_open\030\002 \001(\r\022\031\n\021time_window_close\030\003 \001(\r" +
      "\022\035\n\025time_window_open_next\030\004 \001(\r\022\021\n\ttroph" +
      "y_id\030\005 \001(\r\022\024\n\014free_weekend\030\006 \001(\010\"\303\001\n\026CMs" +
      "gWeekendTourneyOpts\022\025\n\rparticipating\030\001 \001" +
      "(\010\022\023\n\013division_id\030\002 \001(\r\022\r\n\005buyin\030\003 \001(\r\022\023" +
      "\n\013skill_level\030\004 \001(\r\022\024\n\014match_groups\030\005 \001(" +
      "\r\022\017\n\007team_id\030\006 \001(\r\022\030\n\020pickup_team_name\030\007" +
      " \001(\t\022\030\n\020pickup_team_logo\030\010 \001(\004\"\031\n\027CMsgWe" +
      "ekendTourneyLeave\"\315\007\n\022CMsgDOTATournament" +
      "\022\025\n\rtournament_id\030\001 \001(\r\022\023\n\013division_id\030\002" +
      " \001(\r\022\025\n\rschedule_time\030\003 \001(\r\022\023\n\013skill_lev" +
      "el\030\004 \001(\r\022M\n\023tournament_template\030\005 \001(\0162\024." +
      "ETournamentTemplate:\032k_ETournamentTempla" +
      "te_None\022<\n\005state\030\006 \001(\0162\021.ETournamentStat" +
      "e:\032k_ETournamentState_Unknown\022\025\n\rstate_s" +
      "eq_num\030\n \001(\r\022\030\n\020season_trophy_id\030\013 \001(\r\022\'" +
      "\n\005teams\030\007 \003(\0132\030.CMsgDOTATournament.Team\022" +
      "\'\n\005games\030\010 \003(\0132\030.CMsgDOTATournament.Game" +
      "\022\'\n\005nodes\030\t \003(\0132\030.CMsgDOTATournament.Nod" +
      "e\032\352\001\n\004Team\022\020\n\010team_gid\030\001 \001(\006\022\025\n\rnode_or_" +
      "state\030\002 \001(\r\022\023\n\007players\030\003 \003(\rB\002\020\001\022\030\n\014play" +
      "er_buyin\030\t \003(\rB\002\020\001\022\036\n\022player_skill_level" +
      "\030\n \003(\rB\002\020\001\022\030\n\020match_group_mask\030\014 \001(\r\022\017\n\007" +
      "team_id\030\004 \001(\r\022\021\n\tteam_name\030\005 \001(\t\022\026\n\016team" +
      "_base_logo\030\007 \001(\004\022\024\n\014team_ui_logo\030\010 \001(\004\032\253" +
      "\001\n\004Game\022\020\n\010node_idx\030\001 \001(\r\022\020\n\010lobby_id\030\002 " +
      "\001(\006\022\020\n\010match_id\030\003 \001(\004\022\023\n\013team_a_good\030\004 \001" +
      "(\010\022D\n\005state\030\005 \001(\0162\025.ETournamentGameState" +
      ":\036k_ETournamentGameState_Unknown\022\022\n\nstar" +
      "t_time\030\006 \001(\r\032\212\001\n\004Node\022\017\n\007node_id\030\001 \001(\r\022\022" +
      "\n\nteam_idx_a\030\002 \001(\r\022\022\n\nteam_idx_b\030\003 \001(\r\022I" +
      "\n\nnode_state\030\004 \001(\0162\025.ETournamentNodeStat" +
      "e:\036k_ETournamentNodeState_Unknown\"\276\004\n\035CM" +
      "sgDOTATournamentStateChange\022\031\n\021new_tourn" +
      "ament_id\030\001 \001(\r\0229\n\005event\030\002 \001(\0162\021.ETournam" +
      "entEvent:\027k_ETournamentEvent_None\022K\n\024new" +
      "_tournament_state\030\003 \001(\0162\021.ETournamentSta" +
      "te:\032k_ETournamentState_Unknown\022?\n\014game_c" +
      "hanges\030\004 \003(\0132).CMsgDOTATournamentStateCh" +
      "ange.GameChange\022?\n\014team_changes\030\005 \003(\0132)." +
      "CMsgDOTATournamentStateChange.TeamChange" +
      "\022!\n\025merged_tournament_ids\030\006 \003(\rB\002\020\001\022\025\n\rs" +
      "tate_seq_num\030\007 \001(\r\032h\n\nGameChange\022\020\n\010matc" +
      "h_id\030\001 \001(\004\022H\n\tnew_state\030\002 \001(\0162\025.ETournam" +
      "entGameState:\036k_ETournamentGameState_Unk" +
      "nown\032T\n\nTeamChange\022\020\n\010team_gid\030\001 \001(\004\022\031\n\021" +
      "new_node_or_state\030\002 \001(\r\022\031\n\021old_node_or_s" +
      "tate\030\003 \001(\r\"\222\002\n+CMsgDOTAWeekendTourneyPla" +
      "yerSkillLevelStats\022\023\n\013skill_level\030\001 \001(\r\022" +
      "\023\n\013times_won_0\030\002 \001(\r\022\023\n\013times_won_1\030\003 \001(" +
      "\r\022\023\n\013times_won_2\030\004 \001(\r\022\023\n\013times_won_3\030\005 " +
      "\001(\r\022\032\n\022times_bye_and_lost\030\006 \001(\r\022\031\n\021times" +
      "_bye_and_won\030\007 \001(\r\022\033\n\023times_unusual_cham" +
      "p\030\n \001(\r\022\027\n\017total_games_won\030\010 \001(\r\022\r\n\005scor" +
      "e\030\t \001(\r\"\253\001\n!CMsgDOTAWeekendTourneyPlayer" +
      "Stats\022\022\n\naccount_id\030\001 \001(\r\022\030\n\020season_trop" +
      "hy_id\030\002 \001(\r\022B\n\014skill_levels\030\003 \003(\0132,.CMsg" +
      "DOTAWeekendTourneyPlayerSkillLevelStats\022" +
      "\024\n\014current_tier\030\004 \001(\r\"X\n(CMsgDOTAWeekend" +
      "TourneyPlayerStatsRequest\022\022\n\naccount_id\030" +
      "\001 \001(\r\022\030\n\020season_trophy_id\030\002 \001(\r\"\314\002\n#CMsg" +
      "DOTAWeekendTourneyPlayerHistory\022\022\n\naccou" +
      "nt_id\030\001 \001(\r\022D\n\013tournaments\030\003 \003(\0132/.CMsgD" +
      "OTAWeekendTourneyPlayerHistory.Tournamen" +
      "t\032\312\001\n\nTournament\022\025\n\rtournament_id\030\001 \001(\r\022" +
      "\022\n\nstart_time\030\002 \001(\r\022\027\n\017tournament_tier\030\003" +
      " \001(\r\022\017\n\007team_id\030\004 \001(\r\022\021\n\tteam_date\030\005 \001(\r" +
      "\022\023\n\013team_result\030\006 \001(\r\022\022\n\naccount_id\030\007 \003(" +
      "\r\022\021\n\tteam_name\030\010 \001(\t\022\030\n\020season_trophy_id" +
      "\030\t \001(\r\"\244\003\n*CMsgDOTAWeekendTourneyPartici" +
      "pationDetails\022G\n\tdivisions\030\001 \003(\01324.CMsgD" +
      "OTAWeekendTourneyParticipationDetails.Di" +
      "vision\032\263\001\n\004Tier\022\014\n\004tier\030\001 \001(\r\022\017\n\007players" +
      "\030\002 \001(\r\022\r\n\005teams\030\003 \001(\r\022\025\n\rwinning_teams\030\004" +
      " \001(\r\022\030\n\020players_streak_2\030\005 \001(\r\022\030\n\020player" +
      "s_streak_3\030\006 \001(\r\022\030\n\020players_streak_4\030\007 \001" +
      "(\r\022\030\n\020players_streak_5\030\010 \001(\r\032w\n\010Division" +
      "\022\023\n\013division_id\030\001 \001(\r\022\025\n\rschedule_time\030\002" +
      " \001(\r\022?\n\005tiers\030\003 \003(\01320.CMsgDOTAWeekendTou" +
      "rneyParticipationDetails.Tier*\266\004\n\020ETourn" +
      "amentEvent\022\033\n\027k_ETournamentEvent_None\020\000\022" +
      "(\n$k_ETournamentEvent_TournamentCreated\020" +
      "\001\022(\n$k_ETournamentEvent_TournamentsMerge" +
      "d\020\002\022\"\n\036k_ETournamentEvent_GameOutcome\020\003\022" +
      "#\n\037k_ETournamentEvent_TeamGivenBye\020\004\0220\n," +
      "k_ETournamentEvent_TournamentCanceledByA" +
      "dmin\020\005\022$\n k_ETournamentEvent_TeamAbandon" +
      "ed\020\006\022+\n\'k_ETournamentEvent_ScheduledGame" +
      "Started\020\007\022\037\n\033k_ETournamentEvent_Canceled" +
      "\020\010\022?\n;k_ETournamentEvent_TeamParticipati" +
      "onTimedOut_EntryFeeRefund\020\t\022@\n<k_ETourna" +
      "mentEvent_TeamParticipationTimedOut_Entr" +
      "yFeeForfeit\020\n\022?\n;k_ETournamentEvent_Team" +
      "ParticipationTimedOut_GrantedVictory\020\013B\032" +
      "\n\030kz.moltenhaze.proto.dota"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.moltenhaze.proto.dota.DotaClientEnums.getDescriptor(),
        });
    internal_static_CMsgRequestWeekendTourneySchedule_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgRequestWeekendTourneySchedule_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgWeekendTourneySchedule_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgWeekendTourneySchedule_descriptor,
        new java.lang.String[] { "Divisions", });
    internal_static_CMsgWeekendTourneySchedule_Division_descriptor =
      internal_static_CMsgWeekendTourneySchedule_descriptor.getNestedTypes().get(0);
    internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgWeekendTourneySchedule_Division_descriptor,
        new java.lang.String[] { "DivisionCode", "TimeWindowOpen", "TimeWindowClose", "TimeWindowOpenNext", "TrophyId", "FreeWeekend", });
    internal_static_CMsgWeekendTourneyOpts_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgWeekendTourneyOpts_descriptor,
        new java.lang.String[] { "Participating", "DivisionId", "Buyin", "SkillLevel", "MatchGroups", "TeamId", "PickupTeamName", "PickupTeamLogo", });
    internal_static_CMsgWeekendTourneyLeave_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgWeekendTourneyLeave_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgDOTATournament_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgDOTATournament_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_descriptor,
        new java.lang.String[] { "TournamentId", "DivisionId", "ScheduleTime", "SkillLevel", "TournamentTemplate", "State", "StateSeqNum", "SeasonTrophyId", "Teams", "Games", "Nodes", });
    internal_static_CMsgDOTATournament_Team_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTATournament_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Team_descriptor,
        new java.lang.String[] { "TeamGid", "NodeOrState", "Players", "PlayerBuyin", "PlayerSkillLevel", "MatchGroupMask", "TeamId", "TeamName", "TeamBaseLogo", "TeamUiLogo", });
    internal_static_CMsgDOTATournament_Game_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTATournament_Game_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Game_descriptor,
        new java.lang.String[] { "NodeIdx", "LobbyId", "MatchId", "TeamAGood", "State", "StartTime", });
    internal_static_CMsgDOTATournament_Node_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTATournament_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Node_descriptor,
        new java.lang.String[] { "NodeId", "TeamIdxA", "TeamIdxB", "NodeState", });
    internal_static_CMsgDOTATournamentStateChange_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournamentStateChange_descriptor,
        new java.lang.String[] { "NewTournamentId", "Event", "NewTournamentState", "GameChanges", "TeamChanges", "MergedTournamentIds", "StateSeqNum", });
    internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor =
      internal_static_CMsgDOTATournamentStateChange_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor,
        new java.lang.String[] { "MatchId", "NewState", });
    internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor =
      internal_static_CMsgDOTATournamentStateChange_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor,
        new java.lang.String[] { "TeamGid", "NewNodeOrState", "OldNodeOrState", });
    internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor,
        new java.lang.String[] { "SkillLevel", "TimesWon0", "TimesWon1", "TimesWon2", "TimesWon3", "TimesByeAndLost", "TimesByeAndWon", "TimesUnusualChamp", "TotalGamesWon", "Score", });
    internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor,
        new java.lang.String[] { "AccountId", "SeasonTrophyId", "SkillLevels", "CurrentTier", });
    internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor,
        new java.lang.String[] { "AccountId", "SeasonTrophyId", });
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor,
        new java.lang.String[] { "AccountId", "Tournaments", });
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor =
      internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor,
        new java.lang.String[] { "TournamentId", "StartTime", "TournamentTier", "TeamId", "TeamDate", "TeamResult", "AccountId", "TeamName", "SeasonTrophyId", });
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor,
        new java.lang.String[] { "Divisions", });
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor =
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor,
        new java.lang.String[] { "Tier", "Players", "Teams", "WinningTeams", "PlayersStreak2", "PlayersStreak3", "PlayersStreak4", "PlayersStreak5", });
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor =
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor,
        new java.lang.String[] { "DivisionId", "ScheduleTime", "Tiers", });
    descriptor.resolveAllFeaturesImmutable();
    kz.moltenhaze.proto.dota.DotaClientEnums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
