// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages_steamlearn.steamworkssdk.proto
// Protobuf Java Version: 4.28.0

package kz.moltenhaze.proto.dota;

public final class SteammessagesSteamlearnSteamworkssdk {
  private SteammessagesSteamlearnSteamworkssdk() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 0,
      /* suffix= */ "",
      SteammessagesSteamlearnSteamworkssdk.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ESteamLearnDataType}
   */
  public enum ESteamLearnDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_DATATYPE_INVALID = 0;</code>
     */
    STEAMLEARN_DATATYPE_INVALID(0),
    /**
     * <code>STEAMLEARN_DATATYPE_INT32 = 1;</code>
     */
    STEAMLEARN_DATATYPE_INT32(1),
    /**
     * <code>STEAMLEARN_DATATYPE_FLOAT32 = 2;</code>
     */
    STEAMLEARN_DATATYPE_FLOAT32(2),
    /**
     * <code>STEAMLEARN_DATATYPE_BOOL = 3;</code>
     */
    STEAMLEARN_DATATYPE_BOOL(3),
    /**
     * <code>STEAMLEARN_DATATYPE_STRING = 4;</code>
     */
    STEAMLEARN_DATATYPE_STRING(4),
    /**
     * <code>STEAMLEARN_DATATYPE_OBJECT = 5;</code>
     */
    STEAMLEARN_DATATYPE_OBJECT(5),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteamLearnDataType.class.getName());
    }
    /**
     * <code>STEAMLEARN_DATATYPE_INVALID = 0;</code>
     */
    public static final int STEAMLEARN_DATATYPE_INVALID_VALUE = 0;
    /**
     * <code>STEAMLEARN_DATATYPE_INT32 = 1;</code>
     */
    public static final int STEAMLEARN_DATATYPE_INT32_VALUE = 1;
    /**
     * <code>STEAMLEARN_DATATYPE_FLOAT32 = 2;</code>
     */
    public static final int STEAMLEARN_DATATYPE_FLOAT32_VALUE = 2;
    /**
     * <code>STEAMLEARN_DATATYPE_BOOL = 3;</code>
     */
    public static final int STEAMLEARN_DATATYPE_BOOL_VALUE = 3;
    /**
     * <code>STEAMLEARN_DATATYPE_STRING = 4;</code>
     */
    public static final int STEAMLEARN_DATATYPE_STRING_VALUE = 4;
    /**
     * <code>STEAMLEARN_DATATYPE_OBJECT = 5;</code>
     */
    public static final int STEAMLEARN_DATATYPE_OBJECT_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteamLearnDataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteamLearnDataType forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_DATATYPE_INVALID;
        case 1: return STEAMLEARN_DATATYPE_INT32;
        case 2: return STEAMLEARN_DATATYPE_FLOAT32;
        case 3: return STEAMLEARN_DATATYPE_BOOL;
        case 4: return STEAMLEARN_DATATYPE_STRING;
        case 5: return STEAMLEARN_DATATYPE_OBJECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteamLearnDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteamLearnDataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteamLearnDataType>() {
            public ESteamLearnDataType findValueByNumber(int number) {
              return ESteamLearnDataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(0);
    }

    private static final ESteamLearnDataType[] VALUES = values();

    public static ESteamLearnDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteamLearnDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteamLearnDataType)
  }

  /**
   * Protobuf enum {@code ESteammLearnRegisterDataSourceResult}
   */
  public enum ESteammLearnRegisterDataSourceResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR = 0;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR(0),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED = 1;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED(1),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND = 2;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND(2),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC = 3;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC(3),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME = 4;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME(4),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION = 5;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION(5),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED = 6;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED(6),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID = 7;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID(7),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN = 8;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN(8),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP = 9;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP(9),
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED = 10;</code>
     */
    STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED(10),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteammLearnRegisterDataSourceResult.class.getName());
    }
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR = 0;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_VALUE = 0;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED = 1;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED_VALUE = 1;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND = 2;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND_VALUE = 2;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC = 3;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC_VALUE = 3;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME = 4;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME_VALUE = 4;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION = 5;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION_VALUE = 5;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED = 6;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED_VALUE = 6;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID = 7;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID_VALUE = 7;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN = 8;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN_VALUE = 8;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP = 9;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP_VALUE = 9;
    /**
     * <code>STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED = 10;</code>
     */
    public static final int STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteammLearnRegisterDataSourceResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteammLearnRegisterDataSourceResult forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR;
        case 1: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED;
        case 2: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND;
        case 3: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC;
        case 4: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME;
        case 5: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION;
        case 6: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED;
        case 7: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID;
        case 8: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN;
        case 9: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP;
        case 10: return STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteammLearnRegisterDataSourceResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteammLearnRegisterDataSourceResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteammLearnRegisterDataSourceResult>() {
            public ESteammLearnRegisterDataSourceResult findValueByNumber(int number) {
              return ESteammLearnRegisterDataSourceResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(1);
    }

    private static final ESteammLearnRegisterDataSourceResult[] VALUES = values();

    public static ESteammLearnRegisterDataSourceResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteammLearnRegisterDataSourceResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteammLearnRegisterDataSourceResult)
  }

  /**
   * Protobuf enum {@code ESteamLearnCacheDataResult}
   */
  public enum ESteamLearnCacheDataResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR = 0;</code>
     */
    STEAMLEARN_CACHE_DATA_ERROR(0),
    /**
     * <code>STEAMLEARN_CACHE_DATA_SUCCESS = 1;</code>
     */
    STEAMLEARN_CACHE_DATA_SUCCESS(1),
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE = 2;</code>
     */
    STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE(2),
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE = 3;</code>
     */
    STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE(3),
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS = 4;</code>
     */
    STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS(4),
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN = 5;</code>
     */
    STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN(5),
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP = 6;</code>
     */
    STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP(6),
    /**
     * <code>STEAMLEARN_CACHE_DATA_DISABLED = 7;</code>
     */
    STEAMLEARN_CACHE_DATA_DISABLED(7),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteamLearnCacheDataResult.class.getName());
    }
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR = 0;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_ERROR_VALUE = 0;
    /**
     * <code>STEAMLEARN_CACHE_DATA_SUCCESS = 1;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_SUCCESS_VALUE = 1;
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE = 2;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE_VALUE = 2;
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE = 3;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE_VALUE = 3;
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS = 4;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS_VALUE = 4;
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN = 5;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN_VALUE = 5;
    /**
     * <code>STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP = 6;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP_VALUE = 6;
    /**
     * <code>STEAMLEARN_CACHE_DATA_DISABLED = 7;</code>
     */
    public static final int STEAMLEARN_CACHE_DATA_DISABLED_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteamLearnCacheDataResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteamLearnCacheDataResult forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_CACHE_DATA_ERROR;
        case 1: return STEAMLEARN_CACHE_DATA_SUCCESS;
        case 2: return STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE;
        case 3: return STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE;
        case 4: return STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS;
        case 5: return STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN;
        case 6: return STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP;
        case 7: return STEAMLEARN_CACHE_DATA_DISABLED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteamLearnCacheDataResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteamLearnCacheDataResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteamLearnCacheDataResult>() {
            public ESteamLearnCacheDataResult findValueByNumber(int number) {
              return ESteamLearnCacheDataResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(2);
    }

    private static final ESteamLearnCacheDataResult[] VALUES = values();

    public static ESteamLearnCacheDataResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteamLearnCacheDataResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteamLearnCacheDataResult)
  }

  /**
   * Protobuf enum {@code ESteamLearnSnapshotProjectResult}
   */
  public enum ESteamLearnSnapshotProjectResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR = 0;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR(0),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED = 1;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED(1),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED = 2;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED(2),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID = 3;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID(3),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE = 4;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE(4),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY = 5;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY(5),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION = 6;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION(6),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG = 7;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG(7),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN = 8;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN(8),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP = 9;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP(9),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR = 10;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR(10),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_DISABLED = 11;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_DISABLED(11),
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION = 12;</code>
     */
    STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION(12),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteamLearnSnapshotProjectResult.class.getName());
    }
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR = 0;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_VALUE = 0;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED = 1;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED_VALUE = 1;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED = 2;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED_VALUE = 2;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID = 3;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID_VALUE = 3;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE = 4;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE_VALUE = 4;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY = 5;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY_VALUE = 5;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION = 6;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION_VALUE = 6;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG = 7;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG_VALUE = 7;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN = 8;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN_VALUE = 8;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP = 9;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP_VALUE = 9;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR = 10;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR_VALUE = 10;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_DISABLED = 11;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_DISABLED_VALUE = 11;
    /**
     * <code>STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION = 12;</code>
     */
    public static final int STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION_VALUE = 12;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteamLearnSnapshotProjectResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteamLearnSnapshotProjectResult forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR;
        case 1: return STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED;
        case 2: return STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED;
        case 3: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID;
        case 4: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE;
        case 5: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY;
        case 6: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION;
        case 7: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG;
        case 8: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN;
        case 9: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP;
        case 10: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR;
        case 11: return STEAMLEARN_SNAPSHOT_PROJECT_DISABLED;
        case 12: return STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteamLearnSnapshotProjectResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteamLearnSnapshotProjectResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteamLearnSnapshotProjectResult>() {
            public ESteamLearnSnapshotProjectResult findValueByNumber(int number) {
              return ESteamLearnSnapshotProjectResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(3);
    }

    private static final ESteamLearnSnapshotProjectResult[] VALUES = values();

    public static ESteamLearnSnapshotProjectResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteamLearnSnapshotProjectResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteamLearnSnapshotProjectResult)
  }

  /**
   * Protobuf enum {@code ESteamLearnGetAccessTokensResult}
   */
  public enum ESteamLearnGetAccessTokensResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_GET_ACCESS_TOKENS_ERROR = 0;</code>
     */
    STEAMLEARN_GET_ACCESS_TOKENS_ERROR(0),
    /**
     * <code>STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS = 1;</code>
     */
    STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteamLearnGetAccessTokensResult.class.getName());
    }
    /**
     * <code>STEAMLEARN_GET_ACCESS_TOKENS_ERROR = 0;</code>
     */
    public static final int STEAMLEARN_GET_ACCESS_TOKENS_ERROR_VALUE = 0;
    /**
     * <code>STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS = 1;</code>
     */
    public static final int STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteamLearnGetAccessTokensResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteamLearnGetAccessTokensResult forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_GET_ACCESS_TOKENS_ERROR;
        case 1: return STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteamLearnGetAccessTokensResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteamLearnGetAccessTokensResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteamLearnGetAccessTokensResult>() {
            public ESteamLearnGetAccessTokensResult findValueByNumber(int number) {
              return ESteamLearnGetAccessTokensResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(4);
    }

    private static final ESteamLearnGetAccessTokensResult[] VALUES = values();

    public static ESteamLearnGetAccessTokensResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteamLearnGetAccessTokensResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteamLearnGetAccessTokensResult)
  }

  /**
   * Protobuf enum {@code ESteamLearnInferenceResult}
   */
  public enum ESteamLearnInferenceResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR = 0;</code>
     */
    STEAMLEARN_INFERENCE_ERROR(0),
    /**
     * <code>STEAMLEARN_INFERENCE_SUCCESS = 1;</code>
     */
    STEAMLEARN_INFERENCE_SUCCESS(1),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID = 2;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID(2),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA = 3;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA(3),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG = 4;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG(4),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_FORBIDDEN = 5;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_FORBIDDEN(5),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP = 6;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP(6),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION = 7;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION(7),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND = 8;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND(8),
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_TOO_BUSY = 9;</code>
     */
    STEAMLEARN_INFERENCE_ERROR_TOO_BUSY(9),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteamLearnInferenceResult.class.getName());
    }
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR = 0;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_VALUE = 0;
    /**
     * <code>STEAMLEARN_INFERENCE_SUCCESS = 1;</code>
     */
    public static final int STEAMLEARN_INFERENCE_SUCCESS_VALUE = 1;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID = 2;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID_VALUE = 2;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA = 3;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA_VALUE = 3;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG = 4;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG_VALUE = 4;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_FORBIDDEN = 5;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_FORBIDDEN_VALUE = 5;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP = 6;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP_VALUE = 6;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION = 7;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION_VALUE = 7;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND = 8;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND_VALUE = 8;
    /**
     * <code>STEAMLEARN_INFERENCE_ERROR_TOO_BUSY = 9;</code>
     */
    public static final int STEAMLEARN_INFERENCE_ERROR_TOO_BUSY_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteamLearnInferenceResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteamLearnInferenceResult forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_INFERENCE_ERROR;
        case 1: return STEAMLEARN_INFERENCE_SUCCESS;
        case 2: return STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID;
        case 3: return STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA;
        case 4: return STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG;
        case 5: return STEAMLEARN_INFERENCE_ERROR_FORBIDDEN;
        case 6: return STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP;
        case 7: return STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION;
        case 8: return STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND;
        case 9: return STEAMLEARN_INFERENCE_ERROR_TOO_BUSY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteamLearnInferenceResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteamLearnInferenceResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteamLearnInferenceResult>() {
            public ESteamLearnInferenceResult findValueByNumber(int number) {
              return ESteamLearnInferenceResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(5);
    }

    private static final ESteamLearnInferenceResult[] VALUES = values();

    public static ESteamLearnInferenceResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteamLearnInferenceResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteamLearnInferenceResult)
  }

  /**
   * Protobuf enum {@code ESteamLearnInferenceMetadataResult}
   */
  public enum ESteamLearnInferenceMetadataResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR = 0;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR(0),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_SUCCESS = 1;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_SUCCESS(1),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID = 2;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID(2),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG = 3;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG(3),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN = 4;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN(4),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP = 5;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP(5),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION = 6;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION(6),
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND = 7;</code>
     */
    STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND(7),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ESteamLearnInferenceMetadataResult.class.getName());
    }
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR = 0;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_VALUE = 0;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_SUCCESS = 1;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_SUCCESS_VALUE = 1;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID = 2;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID_VALUE = 2;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG = 3;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG_VALUE = 3;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN = 4;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN_VALUE = 4;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP = 5;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP_VALUE = 5;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION = 6;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION_VALUE = 6;
    /**
     * <code>STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND = 7;</code>
     */
    public static final int STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ESteamLearnInferenceMetadataResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ESteamLearnInferenceMetadataResult forNumber(int value) {
      switch (value) {
        case 0: return STEAMLEARN_INFERENCE_METADATA_ERROR;
        case 1: return STEAMLEARN_INFERENCE_METADATA_SUCCESS;
        case 2: return STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID;
        case 3: return STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG;
        case 4: return STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN;
        case 5: return STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP;
        case 6: return STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION;
        case 7: return STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ESteamLearnInferenceMetadataResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ESteamLearnInferenceMetadataResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ESteamLearnInferenceMetadataResult>() {
            public ESteamLearnInferenceMetadataResult findValueByNumber(int number) {
              return ESteamLearnInferenceMetadataResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.getDescriptor().getEnumTypes().get(6);
    }

    private static final ESteamLearnInferenceMetadataResult[] VALUES = values();

    public static ESteamLearnInferenceMetadataResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ESteamLearnInferenceMetadataResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ESteamLearnInferenceMetadataResult)
  }

  public interface CMsgSteamLearnDataSourceDescObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnDataSourceDescObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement> 
        getElementsList();
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement getElements(int index);
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    int getElementsCount();
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder> 
        getElementsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder getElementsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearnDataSourceDescObject}
   */
  public static final class CMsgSteamLearnDataSourceDescObject extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnDataSourceDescObject)
      CMsgSteamLearnDataSourceDescObjectOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnDataSourceDescObject.class.getName());
    }
    // Use CMsgSteamLearnDataSourceDescObject.newBuilder() to construct.
    private CMsgSteamLearnDataSourceDescObject(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnDataSourceDescObject() {
      elements_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder.class);
    }

    public static final int ELEMENTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement> elements_;
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement> getElementsList() {
      return elements_;
    }
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder> 
        getElementsOrBuilderList() {
      return elements_;
    }
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    @java.lang.Override
    public int getElementsCount() {
      return elements_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement getElements(int index) {
      return elements_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder getElementsOrBuilder(
        int index) {
      return elements_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < elements_.size(); i++) {
        output.writeMessage(1, elements_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < elements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, elements_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject) obj;

      if (!getElementsList()
          .equals(other.getElementsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getElementsCount() > 0) {
        hash = (37 * hash) + ELEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getElementsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnDataSourceDescObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnDataSourceDescObject)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (elementsBuilder_ == null) {
          elements_ = java.util.Collections.emptyList();
        } else {
          elements_ = null;
          elementsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescObject_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject result) {
        if (elementsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            elements_ = java.util.Collections.unmodifiableList(elements_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.elements_ = elements_;
        } else {
          result.elements_ = elementsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance()) return this;
        if (elementsBuilder_ == null) {
          if (!other.elements_.isEmpty()) {
            if (elements_.isEmpty()) {
              elements_ = other.elements_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureElementsIsMutable();
              elements_.addAll(other.elements_);
            }
            onChanged();
          }
        } else {
          if (!other.elements_.isEmpty()) {
            if (elementsBuilder_.isEmpty()) {
              elementsBuilder_.dispose();
              elementsBuilder_ = null;
              elements_ = other.elements_;
              bitField0_ = (bitField0_ & ~0x00000001);
              elementsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getElementsFieldBuilder() : null;
            } else {
              elementsBuilder_.addAllMessages(other.elements_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.parser(),
                        extensionRegistry);
                if (elementsBuilder_ == null) {
                  ensureElementsIsMutable();
                  elements_.add(m);
                } else {
                  elementsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement> elements_ =
        java.util.Collections.emptyList();
      private void ensureElementsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          elements_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement>(elements_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder> elementsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement> getElementsList() {
        if (elementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(elements_);
        } else {
          return elementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public int getElementsCount() {
        if (elementsBuilder_ == null) {
          return elements_.size();
        } else {
          return elementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement getElements(int index) {
        if (elementsBuilder_ == null) {
          return elements_.get(index);
        } else {
          return elementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder setElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.set(index, value);
          onChanged();
        } else {
          elementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder setElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.set(index, builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder addElements(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.add(value);
          onChanged();
        } else {
          elementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder addElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.add(index, value);
          onChanged();
        } else {
          elementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder addElements(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.add(builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder addElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.add(index, builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder addAllElements(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement> values) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, elements_);
          onChanged();
        } else {
          elementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder clearElements() {
        if (elementsBuilder_ == null) {
          elements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          elementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public Builder removeElements(int index) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.remove(index);
          onChanged();
        } else {
          elementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder getElementsBuilder(
          int index) {
        return getElementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder getElementsOrBuilder(
          int index) {
        if (elementsBuilder_ == null) {
          return elements_.get(index);  } else {
          return elementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder> 
           getElementsOrBuilderList() {
        if (elementsBuilder_ != null) {
          return elementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(elements_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder addElementsBuilder() {
        return getElementsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder addElementsBuilder(
          int index) {
        return getElementsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnDataSourceDescElement elements = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder> 
           getElementsBuilderList() {
        return getElementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder> 
          getElementsFieldBuilder() {
        if (elementsBuilder_ == null) {
          elementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder>(
                  elements_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          elements_ = null;
        }
        return elementsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnDataSourceDescObject)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataSourceDescObject)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnDataSourceDescObject>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnDataSourceDescObject>() {
      @java.lang.Override
      public CMsgSteamLearnDataSourceDescObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnDataSourceDescObject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnDataSourceDescObject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnDataSourceDescElementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnDataSourceDescElement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
     * @return Whether the dataType field is set.
     */
    boolean hasDataType();
    /**
     * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
     * @return The dataType.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType getDataType();

    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
     * @return Whether the object field is set.
     */
    boolean hasObject();
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
     * @return The object.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getObject();
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder getObjectOrBuilder();

    /**
     * <code>optional uint32 count = 4;</code>
     * @return Whether the count field is set.
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 4;</code>
     * @return The count.
     */
    int getCount();
  }
  /**
   * Protobuf type {@code CMsgSteamLearnDataSourceDescElement}
   */
  public static final class CMsgSteamLearnDataSourceDescElement extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnDataSourceDescElement)
      CMsgSteamLearnDataSourceDescElementOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnDataSourceDescElement.class.getName());
    }
    // Use CMsgSteamLearnDataSourceDescElement.newBuilder() to construct.
    private CMsgSteamLearnDataSourceDescElement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnDataSourceDescElement() {
      name_ = "";
      dataType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescElement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescElement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_TYPE_FIELD_NUMBER = 2;
    private int dataType_ = 0;
    /**
     * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
     * @return Whether the dataType field is set.
     */
    @java.lang.Override public boolean hasDataType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
     * @return The dataType.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType getDataType() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType.forNumber(dataType_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType.STEAMLEARN_DATATYPE_INVALID : result;
    }

    public static final int OBJECT_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject object_;
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
     * @return Whether the object field is set.
     */
    @java.lang.Override
    public boolean hasObject() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
     * @return The object.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getObject() {
      return object_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : object_;
    }
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder getObjectOrBuilder() {
      return object_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : object_;
    }

    public static final int COUNT_FIELD_NUMBER = 4;
    private int count_ = 0;
    /**
     * <code>optional uint32 count = 4;</code>
     * @return Whether the count field is set.
     */
    @java.lang.Override
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 count = 4;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, dataType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getObject());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, count_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getObject());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasDataType() != other.hasDataType()) return false;
      if (hasDataType()) {
        if (dataType_ != other.dataType_) return false;
      }
      if (hasObject() != other.hasObject()) return false;
      if (hasObject()) {
        if (!getObject()
            .equals(other.getObject())) return false;
      }
      if (hasCount() != other.hasCount()) return false;
      if (hasCount()) {
        if (getCount()
            != other.getCount()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasDataType()) {
        hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + dataType_;
      }
      if (hasObject()) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObject().hashCode();
      }
      if (hasCount()) {
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCount();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnDataSourceDescElement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnDataSourceDescElement)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescElement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        dataType_ = 0;
        object_ = null;
        if (objectBuilder_ != null) {
          objectBuilder_.dispose();
          objectBuilder_ = null;
        }
        count_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSourceDescElement_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dataType_ = dataType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.object_ = objectBuilder_ == null
              ? object_
              : objectBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.count_ = count_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement.getDefaultInstance()) return this;
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasObject()) {
          mergeObject(other.getObject());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  dataType_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getObjectFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                count_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int dataType_ = 0;
      /**
       * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
       * @return Whether the dataType field is set.
       */
      @java.lang.Override public boolean hasDataType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
       * @return The dataType.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType getDataType() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType.forNumber(dataType_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType.STEAMLEARN_DATATYPE_INVALID : result;
      }
      /**
       * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        dataType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteamLearnDataType data_type = 2 [default = STEAMLEARN_DATATYPE_INVALID];</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataType_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject object_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder> objectBuilder_;
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       * @return Whether the object field is set.
       */
      public boolean hasObject() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       * @return The object.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getObject() {
        if (objectBuilder_ == null) {
          return object_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : object_;
        } else {
          return objectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      public Builder setObject(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          object_ = value;
        } else {
          objectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      public Builder setObject(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder builderForValue) {
        if (objectBuilder_ == null) {
          object_ = builderForValue.build();
        } else {
          objectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      public Builder mergeObject(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject value) {
        if (objectBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            object_ != null &&
            object_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance()) {
            getObjectBuilder().mergeFrom(value);
          } else {
            object_ = value;
          }
        } else {
          objectBuilder_.mergeFrom(value);
        }
        if (object_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      public Builder clearObject() {
        bitField0_ = (bitField0_ & ~0x00000004);
        object_ = null;
        if (objectBuilder_ != null) {
          objectBuilder_.dispose();
          objectBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder getObjectBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getObjectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder getObjectOrBuilder() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilder();
        } else {
          return object_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : object_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject object = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder> 
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder>(
                  getObject(),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }

      private int count_ ;
      /**
       * <code>optional uint32 count = 4;</code>
       * @return Whether the count field is set.
       */
      @java.lang.Override
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 count = 4;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 4;</code>
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(int value) {

        count_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 count = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnDataSourceDescElement)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataSourceDescElement)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnDataSourceDescElement>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnDataSourceDescElement>() {
      @java.lang.Override
      public CMsgSteamLearnDataSourceDescElement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnDataSourceDescElement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnDataSourceDescElement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescElement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnDataSourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnDataSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional uint32 version = 3;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 3;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <code>optional string source_description = 4;</code>
     * @return Whether the sourceDescription field is set.
     */
    boolean hasSourceDescription();
    /**
     * <code>optional string source_description = 4;</code>
     * @return The sourceDescription.
     */
    java.lang.String getSourceDescription();
    /**
     * <code>optional string source_description = 4;</code>
     * @return The bytes for sourceDescription.
     */
    com.google.protobuf.ByteString
        getSourceDescriptionBytes();

    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
     * @return Whether the structure field is set.
     */
    boolean hasStructure();
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
     * @return The structure.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getStructure();
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder getStructureOrBuilder();

    /**
     * <code>optional uint32 structure_crc = 6;</code>
     * @return Whether the structureCrc field is set.
     */
    boolean hasStructureCrc();
    /**
     * <code>optional uint32 structure_crc = 6;</code>
     * @return The structureCrc.
     */
    int getStructureCrc();

    /**
     * <code>optional uint32 cache_duration_seconds = 7;</code>
     * @return Whether the cacheDurationSeconds field is set.
     */
    boolean hasCacheDurationSeconds();
    /**
     * <code>optional uint32 cache_duration_seconds = 7;</code>
     * @return The cacheDurationSeconds.
     */
    int getCacheDurationSeconds();
  }
  /**
   * Protobuf type {@code CMsgSteamLearnDataSource}
   */
  public static final class CMsgSteamLearnDataSource extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnDataSource)
      CMsgSteamLearnDataSourceOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnDataSource.class.getName());
    }
    // Use CMsgSteamLearnDataSource.newBuilder() to construct.
    private CMsgSteamLearnDataSource(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnDataSource() {
      name_ = "";
      sourceDescription_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>optional uint32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 3;
    private int version_ = 0;
    /**
     * <code>optional uint32 version = 3;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 version = 3;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int SOURCE_DESCRIPTION_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sourceDescription_ = "";
    /**
     * <code>optional string source_description = 4;</code>
     * @return Whether the sourceDescription field is set.
     */
    @java.lang.Override
    public boolean hasSourceDescription() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional string source_description = 4;</code>
     * @return The sourceDescription.
     */
    @java.lang.Override
    public java.lang.String getSourceDescription() {
      java.lang.Object ref = sourceDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sourceDescription_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string source_description = 4;</code>
     * @return The bytes for sourceDescription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceDescriptionBytes() {
      java.lang.Object ref = sourceDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRUCTURE_FIELD_NUMBER = 5;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject structure_;
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
     * @return Whether the structure field is set.
     */
    @java.lang.Override
    public boolean hasStructure() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
     * @return The structure.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getStructure() {
      return structure_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : structure_;
    }
    /**
     * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder getStructureOrBuilder() {
      return structure_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : structure_;
    }

    public static final int STRUCTURE_CRC_FIELD_NUMBER = 6;
    private int structureCrc_ = 0;
    /**
     * <code>optional uint32 structure_crc = 6;</code>
     * @return Whether the structureCrc field is set.
     */
    @java.lang.Override
    public boolean hasStructureCrc() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 structure_crc = 6;</code>
     * @return The structureCrc.
     */
    @java.lang.Override
    public int getStructureCrc() {
      return structureCrc_;
    }

    public static final int CACHE_DURATION_SECONDS_FIELD_NUMBER = 7;
    private int cacheDurationSeconds_ = 0;
    /**
     * <code>optional uint32 cache_duration_seconds = 7;</code>
     * @return Whether the cacheDurationSeconds field is set.
     */
    @java.lang.Override
    public boolean hasCacheDurationSeconds() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 cache_duration_seconds = 7;</code>
     * @return The cacheDurationSeconds.
     */
    @java.lang.Override
    public int getCacheDurationSeconds() {
      return cacheDurationSeconds_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, version_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, sourceDescription_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(5, getStructure());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, structureCrc_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, cacheDurationSeconds_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, version_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, sourceDescription_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getStructure());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, structureCrc_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, cacheDurationSeconds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (getVersion()
            != other.getVersion()) return false;
      }
      if (hasSourceDescription() != other.hasSourceDescription()) return false;
      if (hasSourceDescription()) {
        if (!getSourceDescription()
            .equals(other.getSourceDescription())) return false;
      }
      if (hasStructure() != other.hasStructure()) return false;
      if (hasStructure()) {
        if (!getStructure()
            .equals(other.getStructure())) return false;
      }
      if (hasStructureCrc() != other.hasStructureCrc()) return false;
      if (hasStructureCrc()) {
        if (getStructureCrc()
            != other.getStructureCrc()) return false;
      }
      if (hasCacheDurationSeconds() != other.hasCacheDurationSeconds()) return false;
      if (hasCacheDurationSeconds()) {
        if (getCacheDurationSeconds()
            != other.getCacheDurationSeconds()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasSourceDescription()) {
        hash = (37 * hash) + SOURCE_DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getSourceDescription().hashCode();
      }
      if (hasStructure()) {
        hash = (37 * hash) + STRUCTURE_FIELD_NUMBER;
        hash = (53 * hash) + getStructure().hashCode();
      }
      if (hasStructureCrc()) {
        hash = (37 * hash) + STRUCTURE_CRC_FIELD_NUMBER;
        hash = (53 * hash) + getStructureCrc();
      }
      if (hasCacheDurationSeconds()) {
        hash = (37 * hash) + CACHE_DURATION_SECONDS_FIELD_NUMBER;
        hash = (53 * hash) + getCacheDurationSeconds();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnDataSource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnDataSource)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getStructureFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        name_ = "";
        version_ = 0;
        sourceDescription_ = "";
        structure_ = null;
        if (structureBuilder_ != null) {
          structureBuilder_.dispose();
          structureBuilder_ = null;
        }
        structureCrc_ = 0;
        cacheDurationSeconds_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataSource_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.version_ = version_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.sourceDescription_ = sourceDescription_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.structure_ = structureBuilder_ == null
              ? structure_
              : structureBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.structureCrc_ = structureCrc_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.cacheDurationSeconds_ = cacheDurationSeconds_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasSourceDescription()) {
          sourceDescription_ = other.sourceDescription_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasStructure()) {
          mergeStructure(other.getStructure());
        }
        if (other.hasStructureCrc()) {
          setStructureCrc(other.getStructureCrc());
        }
        if (other.hasCacheDurationSeconds()) {
          setCacheDurationSeconds(other.getCacheDurationSeconds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                version_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                sourceDescription_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getStructureFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                structureCrc_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                cacheDurationSeconds_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>optional uint32 version = 3;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 version = 3;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional uint32 version = 3;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        version_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sourceDescription_ = "";
      /**
       * <code>optional string source_description = 4;</code>
       * @return Whether the sourceDescription field is set.
       */
      public boolean hasSourceDescription() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string source_description = 4;</code>
       * @return The sourceDescription.
       */
      public java.lang.String getSourceDescription() {
        java.lang.Object ref = sourceDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sourceDescription_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source_description = 4;</code>
       * @return The bytes for sourceDescription.
       */
      public com.google.protobuf.ByteString
          getSourceDescriptionBytes() {
        java.lang.Object ref = sourceDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source_description = 4;</code>
       * @param value The sourceDescription to set.
       * @return This builder for chaining.
       */
      public Builder setSourceDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sourceDescription_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source_description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceDescription() {
        sourceDescription_ = getDefaultInstance().getSourceDescription();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>optional string source_description = 4;</code>
       * @param value The bytes for sourceDescription to set.
       * @return This builder for chaining.
       */
      public Builder setSourceDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        sourceDescription_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject structure_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder> structureBuilder_;
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       * @return Whether the structure field is set.
       */
      public boolean hasStructure() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       * @return The structure.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject getStructure() {
        if (structureBuilder_ == null) {
          return structure_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : structure_;
        } else {
          return structureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      public Builder setStructure(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject value) {
        if (structureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          structure_ = value;
        } else {
          structureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      public Builder setStructure(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder builderForValue) {
        if (structureBuilder_ == null) {
          structure_ = builderForValue.build();
        } else {
          structureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      public Builder mergeStructure(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject value) {
        if (structureBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            structure_ != null &&
            structure_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance()) {
            getStructureBuilder().mergeFrom(value);
          } else {
            structure_ = value;
          }
        } else {
          structureBuilder_.mergeFrom(value);
        }
        if (structure_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      public Builder clearStructure() {
        bitField0_ = (bitField0_ & ~0x00000010);
        structure_ = null;
        if (structureBuilder_ != null) {
          structureBuilder_.dispose();
          structureBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder getStructureBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getStructureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder getStructureOrBuilder() {
        if (structureBuilder_ != null) {
          return structureBuilder_.getMessageOrBuilder();
        } else {
          return structure_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.getDefaultInstance() : structure_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSourceDescObject structure = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder> 
          getStructureFieldBuilder() {
        if (structureBuilder_ == null) {
          structureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceDescObjectOrBuilder>(
                  getStructure(),
                  getParentForChildren(),
                  isClean());
          structure_ = null;
        }
        return structureBuilder_;
      }

      private int structureCrc_ ;
      /**
       * <code>optional uint32 structure_crc = 6;</code>
       * @return Whether the structureCrc field is set.
       */
      @java.lang.Override
      public boolean hasStructureCrc() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 structure_crc = 6;</code>
       * @return The structureCrc.
       */
      @java.lang.Override
      public int getStructureCrc() {
        return structureCrc_;
      }
      /**
       * <code>optional uint32 structure_crc = 6;</code>
       * @param value The structureCrc to set.
       * @return This builder for chaining.
       */
      public Builder setStructureCrc(int value) {

        structureCrc_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 structure_crc = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearStructureCrc() {
        bitField0_ = (bitField0_ & ~0x00000020);
        structureCrc_ = 0;
        onChanged();
        return this;
      }

      private int cacheDurationSeconds_ ;
      /**
       * <code>optional uint32 cache_duration_seconds = 7;</code>
       * @return Whether the cacheDurationSeconds field is set.
       */
      @java.lang.Override
      public boolean hasCacheDurationSeconds() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 cache_duration_seconds = 7;</code>
       * @return The cacheDurationSeconds.
       */
      @java.lang.Override
      public int getCacheDurationSeconds() {
        return cacheDurationSeconds_;
      }
      /**
       * <code>optional uint32 cache_duration_seconds = 7;</code>
       * @param value The cacheDurationSeconds to set.
       * @return This builder for chaining.
       */
      public Builder setCacheDurationSeconds(int value) {

        cacheDurationSeconds_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cache_duration_seconds = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCacheDurationSeconds() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cacheDurationSeconds_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnDataSource)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataSource)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnDataSource>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnDataSource>() {
      @java.lang.Override
      public CMsgSteamLearnDataSource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnDataSource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnDataSource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnDataObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnDataObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement> 
        getElementsList();
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement getElements(int index);
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    int getElementsCount();
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder> 
        getElementsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder getElementsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearnDataObject}
   */
  public static final class CMsgSteamLearnDataObject extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnDataObject)
      CMsgSteamLearnDataObjectOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnDataObject.class.getName());
    }
    // Use CMsgSteamLearnDataObject.newBuilder() to construct.
    private CMsgSteamLearnDataObject(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnDataObject() {
      elements_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder.class);
    }

    public static final int ELEMENTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement> elements_;
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement> getElementsList() {
      return elements_;
    }
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder> 
        getElementsOrBuilderList() {
      return elements_;
    }
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    @java.lang.Override
    public int getElementsCount() {
      return elements_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement getElements(int index) {
      return elements_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder getElementsOrBuilder(
        int index) {
      return elements_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < elements_.size(); i++) {
        output.writeMessage(1, elements_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < elements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, elements_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject) obj;

      if (!getElementsList()
          .equals(other.getElementsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getElementsCount() > 0) {
        hash = (37 * hash) + ELEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getElementsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnDataObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnDataObject)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (elementsBuilder_ == null) {
          elements_ = java.util.Collections.emptyList();
        } else {
          elements_ = null;
          elementsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataObject_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject result) {
        if (elementsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            elements_ = java.util.Collections.unmodifiableList(elements_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.elements_ = elements_;
        } else {
          result.elements_ = elementsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance()) return this;
        if (elementsBuilder_ == null) {
          if (!other.elements_.isEmpty()) {
            if (elements_.isEmpty()) {
              elements_ = other.elements_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureElementsIsMutable();
              elements_.addAll(other.elements_);
            }
            onChanged();
          }
        } else {
          if (!other.elements_.isEmpty()) {
            if (elementsBuilder_.isEmpty()) {
              elementsBuilder_.dispose();
              elementsBuilder_ = null;
              elements_ = other.elements_;
              bitField0_ = (bitField0_ & ~0x00000001);
              elementsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getElementsFieldBuilder() : null;
            } else {
              elementsBuilder_.addAllMessages(other.elements_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.parser(),
                        extensionRegistry);
                if (elementsBuilder_ == null) {
                  ensureElementsIsMutable();
                  elements_.add(m);
                } else {
                  elementsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement> elements_ =
        java.util.Collections.emptyList();
      private void ensureElementsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          elements_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement>(elements_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder> elementsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement> getElementsList() {
        if (elementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(elements_);
        } else {
          return elementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public int getElementsCount() {
        if (elementsBuilder_ == null) {
          return elements_.size();
        } else {
          return elementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement getElements(int index) {
        if (elementsBuilder_ == null) {
          return elements_.get(index);
        } else {
          return elementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder setElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.set(index, value);
          onChanged();
        } else {
          elementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder setElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.set(index, builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder addElements(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.add(value);
          onChanged();
        } else {
          elementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder addElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementsIsMutable();
          elements_.add(index, value);
          onChanged();
        } else {
          elementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder addElements(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.add(builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder addElements(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.add(index, builderForValue.build());
          onChanged();
        } else {
          elementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder addAllElements(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement> values) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, elements_);
          onChanged();
        } else {
          elementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder clearElements() {
        if (elementsBuilder_ == null) {
          elements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          elementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public Builder removeElements(int index) {
        if (elementsBuilder_ == null) {
          ensureElementsIsMutable();
          elements_.remove(index);
          onChanged();
        } else {
          elementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder getElementsBuilder(
          int index) {
        return getElementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder getElementsOrBuilder(
          int index) {
        if (elementsBuilder_ == null) {
          return elements_.get(index);  } else {
          return elementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder> 
           getElementsOrBuilderList() {
        if (elementsBuilder_ != null) {
          return elementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(elements_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder addElementsBuilder() {
        return getElementsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder addElementsBuilder(
          int index) {
        return getElementsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnDataElement elements = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder> 
           getElementsBuilderList() {
        return getElementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder> 
          getElementsFieldBuilder() {
        if (elementsBuilder_ == null) {
          elementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder>(
                  elements_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          elements_ = null;
        }
        return elementsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnDataObject)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataObject)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnDataObject>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnDataObject>() {
      @java.lang.Override
      public CMsgSteamLearnDataObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnDataObject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnDataObject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnDataElementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnDataElement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int32 data_int32s = 20;</code>
     * @return A list containing the dataInt32s.
     */
    java.util.List<java.lang.Integer> getDataInt32SList();
    /**
     * <code>repeated int32 data_int32s = 20;</code>
     * @return The count of dataInt32s.
     */
    int getDataInt32SCount();
    /**
     * <code>repeated int32 data_int32s = 20;</code>
     * @param index The index of the element to return.
     * @return The dataInt32s at the given index.
     */
    int getDataInt32S(int index);

    /**
     * <code>repeated float data_floats = 21;</code>
     * @return A list containing the dataFloats.
     */
    java.util.List<java.lang.Float> getDataFloatsList();
    /**
     * <code>repeated float data_floats = 21;</code>
     * @return The count of dataFloats.
     */
    int getDataFloatsCount();
    /**
     * <code>repeated float data_floats = 21;</code>
     * @param index The index of the element to return.
     * @return The dataFloats at the given index.
     */
    float getDataFloats(int index);

    /**
     * <code>repeated bool data_bools = 22;</code>
     * @return A list containing the dataBools.
     */
    java.util.List<java.lang.Boolean> getDataBoolsList();
    /**
     * <code>repeated bool data_bools = 22;</code>
     * @return The count of dataBools.
     */
    int getDataBoolsCount();
    /**
     * <code>repeated bool data_bools = 22;</code>
     * @param index The index of the element to return.
     * @return The dataBools at the given index.
     */
    boolean getDataBools(int index);

    /**
     * <code>repeated string data_strings = 23;</code>
     * @return A list containing the dataStrings.
     */
    java.util.List<java.lang.String>
        getDataStringsList();
    /**
     * <code>repeated string data_strings = 23;</code>
     * @return The count of dataStrings.
     */
    int getDataStringsCount();
    /**
     * <code>repeated string data_strings = 23;</code>
     * @param index The index of the element to return.
     * @return The dataStrings at the given index.
     */
    java.lang.String getDataStrings(int index);
    /**
     * <code>repeated string data_strings = 23;</code>
     * @param index The index of the value to return.
     * @return The bytes of the dataStrings at the given index.
     */
    com.google.protobuf.ByteString
        getDataStringsBytes(int index);

    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject> 
        getDataObjectsList();
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDataObjects(int index);
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    int getDataObjectsCount();
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> 
        getDataObjectsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder getDataObjectsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearnDataElement}
   */
  public static final class CMsgSteamLearnDataElement extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnDataElement)
      CMsgSteamLearnDataElementOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnDataElement.class.getName());
    }
    // Use CMsgSteamLearnDataElement.newBuilder() to construct.
    private CMsgSteamLearnDataElement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnDataElement() {
      name_ = "";
      dataInt32S_ = emptyIntList();
      dataFloats_ = emptyFloatList();
      dataBools_ = emptyBooleanList();
      dataStrings_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      dataObjects_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataElement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataElement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_INT32S_FIELD_NUMBER = 20;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList dataInt32S_ =
        emptyIntList();
    /**
     * <code>repeated int32 data_int32s = 20;</code>
     * @return A list containing the dataInt32s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDataInt32SList() {
      return dataInt32S_;
    }
    /**
     * <code>repeated int32 data_int32s = 20;</code>
     * @return The count of dataInt32s.
     */
    public int getDataInt32SCount() {
      return dataInt32S_.size();
    }
    /**
     * <code>repeated int32 data_int32s = 20;</code>
     * @param index The index of the element to return.
     * @return The dataInt32s at the given index.
     */
    public int getDataInt32S(int index) {
      return dataInt32S_.getInt(index);
    }

    public static final int DATA_FLOATS_FIELD_NUMBER = 21;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList dataFloats_ =
        emptyFloatList();
    /**
     * <code>repeated float data_floats = 21;</code>
     * @return A list containing the dataFloats.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getDataFloatsList() {
      return dataFloats_;
    }
    /**
     * <code>repeated float data_floats = 21;</code>
     * @return The count of dataFloats.
     */
    public int getDataFloatsCount() {
      return dataFloats_.size();
    }
    /**
     * <code>repeated float data_floats = 21;</code>
     * @param index The index of the element to return.
     * @return The dataFloats at the given index.
     */
    public float getDataFloats(int index) {
      return dataFloats_.getFloat(index);
    }

    public static final int DATA_BOOLS_FIELD_NUMBER = 22;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList dataBools_ =
        emptyBooleanList();
    /**
     * <code>repeated bool data_bools = 22;</code>
     * @return A list containing the dataBools.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getDataBoolsList() {
      return dataBools_;
    }
    /**
     * <code>repeated bool data_bools = 22;</code>
     * @return The count of dataBools.
     */
    public int getDataBoolsCount() {
      return dataBools_.size();
    }
    /**
     * <code>repeated bool data_bools = 22;</code>
     * @param index The index of the element to return.
     * @return The dataBools at the given index.
     */
    public boolean getDataBools(int index) {
      return dataBools_.getBoolean(index);
    }

    public static final int DATA_STRINGS_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList dataStrings_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string data_strings = 23;</code>
     * @return A list containing the dataStrings.
     */
    public com.google.protobuf.ProtocolStringList
        getDataStringsList() {
      return dataStrings_;
    }
    /**
     * <code>repeated string data_strings = 23;</code>
     * @return The count of dataStrings.
     */
    public int getDataStringsCount() {
      return dataStrings_.size();
    }
    /**
     * <code>repeated string data_strings = 23;</code>
     * @param index The index of the element to return.
     * @return The dataStrings at the given index.
     */
    public java.lang.String getDataStrings(int index) {
      return dataStrings_.get(index);
    }
    /**
     * <code>repeated string data_strings = 23;</code>
     * @param index The index of the value to return.
     * @return The bytes of the dataStrings at the given index.
     */
    public com.google.protobuf.ByteString
        getDataStringsBytes(int index) {
      return dataStrings_.getByteString(index);
    }

    public static final int DATA_OBJECTS_FIELD_NUMBER = 24;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject> dataObjects_;
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject> getDataObjectsList() {
      return dataObjects_;
    }
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> 
        getDataObjectsOrBuilderList() {
      return dataObjects_;
    }
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    @java.lang.Override
    public int getDataObjectsCount() {
      return dataObjects_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDataObjects(int index) {
      return dataObjects_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder getDataObjectsOrBuilder(
        int index) {
      return dataObjects_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      for (int i = 0; i < dataInt32S_.size(); i++) {
        output.writeInt32(20, dataInt32S_.getInt(i));
      }
      for (int i = 0; i < dataFloats_.size(); i++) {
        output.writeFloat(21, dataFloats_.getFloat(i));
      }
      for (int i = 0; i < dataBools_.size(); i++) {
        output.writeBool(22, dataBools_.getBoolean(i));
      }
      for (int i = 0; i < dataStrings_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 23, dataStrings_.getRaw(i));
      }
      for (int i = 0; i < dataObjects_.size(); i++) {
        output.writeMessage(24, dataObjects_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dataInt32S_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataInt32S_.getInt(i));
        }
        size += dataSize;
        size += 2 * getDataInt32SList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getDataFloatsList().size();
        size += dataSize;
        size += 2 * getDataFloatsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getDataBoolsList().size();
        size += dataSize;
        size += 2 * getDataBoolsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dataStrings_.size(); i++) {
          dataSize += computeStringSizeNoTag(dataStrings_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getDataStringsList().size();
      }
      for (int i = 0; i < dataObjects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, dataObjects_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (!getDataInt32SList()
          .equals(other.getDataInt32SList())) return false;
      if (!getDataFloatsList()
          .equals(other.getDataFloatsList())) return false;
      if (!getDataBoolsList()
          .equals(other.getDataBoolsList())) return false;
      if (!getDataStringsList()
          .equals(other.getDataStringsList())) return false;
      if (!getDataObjectsList()
          .equals(other.getDataObjectsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (getDataInt32SCount() > 0) {
        hash = (37 * hash) + DATA_INT32S_FIELD_NUMBER;
        hash = (53 * hash) + getDataInt32SList().hashCode();
      }
      if (getDataFloatsCount() > 0) {
        hash = (37 * hash) + DATA_FLOATS_FIELD_NUMBER;
        hash = (53 * hash) + getDataFloatsList().hashCode();
      }
      if (getDataBoolsCount() > 0) {
        hash = (37 * hash) + DATA_BOOLS_FIELD_NUMBER;
        hash = (53 * hash) + getDataBoolsList().hashCode();
      }
      if (getDataStringsCount() > 0) {
        hash = (37 * hash) + DATA_STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getDataStringsList().hashCode();
      }
      if (getDataObjectsCount() > 0) {
        hash = (37 * hash) + DATA_OBJECTS_FIELD_NUMBER;
        hash = (53 * hash) + getDataObjectsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnDataElement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnDataElement)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataElement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        dataInt32S_ = emptyIntList();
        dataFloats_ = emptyFloatList();
        dataBools_ = emptyBooleanList();
        dataStrings_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        if (dataObjectsBuilder_ == null) {
          dataObjects_ = java.util.Collections.emptyList();
        } else {
          dataObjects_ = null;
          dataObjectsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataElement_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement result) {
        if (dataObjectsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            dataObjects_ = java.util.Collections.unmodifiableList(dataObjects_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.dataObjects_ = dataObjects_;
        } else {
          result.dataObjects_ = dataObjectsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          dataInt32S_.makeImmutable();
          result.dataInt32S_ = dataInt32S_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          dataFloats_.makeImmutable();
          result.dataFloats_ = dataFloats_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          dataBools_.makeImmutable();
          result.dataBools_ = dataBools_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          dataStrings_.makeImmutable();
          result.dataStrings_ = dataStrings_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement.getDefaultInstance()) return this;
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.dataInt32S_.isEmpty()) {
          if (dataInt32S_.isEmpty()) {
            dataInt32S_ = other.dataInt32S_;
            dataInt32S_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureDataInt32SIsMutable();
            dataInt32S_.addAll(other.dataInt32S_);
          }
          onChanged();
        }
        if (!other.dataFloats_.isEmpty()) {
          if (dataFloats_.isEmpty()) {
            dataFloats_ = other.dataFloats_;
            dataFloats_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureDataFloatsIsMutable();
            dataFloats_.addAll(other.dataFloats_);
          }
          onChanged();
        }
        if (!other.dataBools_.isEmpty()) {
          if (dataBools_.isEmpty()) {
            dataBools_ = other.dataBools_;
            dataBools_.makeImmutable();
            bitField0_ |= 0x00000008;
          } else {
            ensureDataBoolsIsMutable();
            dataBools_.addAll(other.dataBools_);
          }
          onChanged();
        }
        if (!other.dataStrings_.isEmpty()) {
          if (dataStrings_.isEmpty()) {
            dataStrings_ = other.dataStrings_;
            bitField0_ |= 0x00000010;
          } else {
            ensureDataStringsIsMutable();
            dataStrings_.addAll(other.dataStrings_);
          }
          onChanged();
        }
        if (dataObjectsBuilder_ == null) {
          if (!other.dataObjects_.isEmpty()) {
            if (dataObjects_.isEmpty()) {
              dataObjects_ = other.dataObjects_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDataObjectsIsMutable();
              dataObjects_.addAll(other.dataObjects_);
            }
            onChanged();
          }
        } else {
          if (!other.dataObjects_.isEmpty()) {
            if (dataObjectsBuilder_.isEmpty()) {
              dataObjectsBuilder_.dispose();
              dataObjectsBuilder_ = null;
              dataObjects_ = other.dataObjects_;
              bitField0_ = (bitField0_ & ~0x00000020);
              dataObjectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataObjectsFieldBuilder() : null;
            } else {
              dataObjectsBuilder_.addAllMessages(other.dataObjects_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 160: {
                int v = input.readInt32();
                ensureDataInt32SIsMutable();
                dataInt32S_.addInt(v);
                break;
              } // case 160
              case 162: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDataInt32SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  dataInt32S_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 162
              case 173: {
                float v = input.readFloat();
                ensureDataFloatsIsMutable();
                dataFloats_.addFloat(v);
                break;
              } // case 173
              case 170: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureDataFloatsIsMutable(alloc / 4);
                while (input.getBytesUntilLimit() > 0) {
                  dataFloats_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 170
              case 176: {
                boolean v = input.readBool();
                ensureDataBoolsIsMutable();
                dataBools_.addBoolean(v);
                break;
              } // case 176
              case 178: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureDataBoolsIsMutable(alloc / 1);
                while (input.getBytesUntilLimit() > 0) {
                  dataBools_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 178
              case 186: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureDataStringsIsMutable();
                dataStrings_.add(bs);
                break;
              } // case 186
              case 194: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.parser(),
                        extensionRegistry);
                if (dataObjectsBuilder_ == null) {
                  ensureDataObjectsIsMutable();
                  dataObjects_.add(m);
                } else {
                  dataObjectsBuilder_.addMessage(m);
                }
                break;
              } // case 194
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dataInt32S_ = emptyIntList();
      private void ensureDataInt32SIsMutable() {
        if (!dataInt32S_.isModifiable()) {
          dataInt32S_ = makeMutableCopy(dataInt32S_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @return A list containing the dataInt32s.
       */
      public java.util.List<java.lang.Integer>
          getDataInt32SList() {
        dataInt32S_.makeImmutable();
        return dataInt32S_;
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @return The count of dataInt32s.
       */
      public int getDataInt32SCount() {
        return dataInt32S_.size();
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @param index The index of the element to return.
       * @return The dataInt32s at the given index.
       */
      public int getDataInt32S(int index) {
        return dataInt32S_.getInt(index);
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @param index The index to set the value at.
       * @param value The dataInt32s to set.
       * @return This builder for chaining.
       */
      public Builder setDataInt32S(
          int index, int value) {

        ensureDataInt32SIsMutable();
        dataInt32S_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @param value The dataInt32s to add.
       * @return This builder for chaining.
       */
      public Builder addDataInt32S(int value) {

        ensureDataInt32SIsMutable();
        dataInt32S_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @param values The dataInt32s to add.
       * @return This builder for chaining.
       */
      public Builder addAllDataInt32S(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDataInt32SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataInt32S_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 data_int32s = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataInt32S() {
        dataInt32S_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList dataFloats_ = emptyFloatList();
      private void ensureDataFloatsIsMutable() {
        if (!dataFloats_.isModifiable()) {
          dataFloats_ = makeMutableCopy(dataFloats_);
        }
        bitField0_ |= 0x00000004;
      }
      private void ensureDataFloatsIsMutable(int capacity) {
        if (!dataFloats_.isModifiable()) {
          dataFloats_ = makeMutableCopy(dataFloats_, capacity);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @return A list containing the dataFloats.
       */
      public java.util.List<java.lang.Float>
          getDataFloatsList() {
        dataFloats_.makeImmutable();
        return dataFloats_;
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @return The count of dataFloats.
       */
      public int getDataFloatsCount() {
        return dataFloats_.size();
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @param index The index of the element to return.
       * @return The dataFloats at the given index.
       */
      public float getDataFloats(int index) {
        return dataFloats_.getFloat(index);
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @param index The index to set the value at.
       * @param value The dataFloats to set.
       * @return This builder for chaining.
       */
      public Builder setDataFloats(
          int index, float value) {

        ensureDataFloatsIsMutable();
        dataFloats_.setFloat(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @param value The dataFloats to add.
       * @return This builder for chaining.
       */
      public Builder addDataFloats(float value) {

        ensureDataFloatsIsMutable();
        dataFloats_.addFloat(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @param values The dataFloats to add.
       * @return This builder for chaining.
       */
      public Builder addAllDataFloats(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureDataFloatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataFloats_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float data_floats = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataFloats() {
        dataFloats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.BooleanList dataBools_ = emptyBooleanList();
      private void ensureDataBoolsIsMutable() {
        if (!dataBools_.isModifiable()) {
          dataBools_ = makeMutableCopy(dataBools_);
        }
        bitField0_ |= 0x00000008;
      }
      private void ensureDataBoolsIsMutable(int capacity) {
        if (!dataBools_.isModifiable()) {
          dataBools_ = makeMutableCopy(dataBools_, capacity);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @return A list containing the dataBools.
       */
      public java.util.List<java.lang.Boolean>
          getDataBoolsList() {
        dataBools_.makeImmutable();
        return dataBools_;
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @return The count of dataBools.
       */
      public int getDataBoolsCount() {
        return dataBools_.size();
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @param index The index of the element to return.
       * @return The dataBools at the given index.
       */
      public boolean getDataBools(int index) {
        return dataBools_.getBoolean(index);
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @param index The index to set the value at.
       * @param value The dataBools to set.
       * @return This builder for chaining.
       */
      public Builder setDataBools(
          int index, boolean value) {

        ensureDataBoolsIsMutable();
        dataBools_.setBoolean(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @param value The dataBools to add.
       * @return This builder for chaining.
       */
      public Builder addDataBools(boolean value) {

        ensureDataBoolsIsMutable();
        dataBools_.addBoolean(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @param values The dataBools to add.
       * @return This builder for chaining.
       */
      public Builder addAllDataBools(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureDataBoolsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataBools_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool data_bools = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataBools() {
        dataBools_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList dataStrings_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureDataStringsIsMutable() {
        if (!dataStrings_.isModifiable()) {
          dataStrings_ = new com.google.protobuf.LazyStringArrayList(dataStrings_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @return A list containing the dataStrings.
       */
      public com.google.protobuf.ProtocolStringList
          getDataStringsList() {
        dataStrings_.makeImmutable();
        return dataStrings_;
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @return The count of dataStrings.
       */
      public int getDataStringsCount() {
        return dataStrings_.size();
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @param index The index of the element to return.
       * @return The dataStrings at the given index.
       */
      public java.lang.String getDataStrings(int index) {
        return dataStrings_.get(index);
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @param index The index of the value to return.
       * @return The bytes of the dataStrings at the given index.
       */
      public com.google.protobuf.ByteString
          getDataStringsBytes(int index) {
        return dataStrings_.getByteString(index);
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @param index The index to set the value at.
       * @param value The dataStrings to set.
       * @return This builder for chaining.
       */
      public Builder setDataStrings(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDataStringsIsMutable();
        dataStrings_.set(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @param value The dataStrings to add.
       * @return This builder for chaining.
       */
      public Builder addDataStrings(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDataStringsIsMutable();
        dataStrings_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @param values The dataStrings to add.
       * @return This builder for chaining.
       */
      public Builder addAllDataStrings(
          java.lang.Iterable<java.lang.String> values) {
        ensureDataStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataStrings_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataStrings() {
        dataStrings_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string data_strings = 23;</code>
       * @param value The bytes of the dataStrings to add.
       * @return This builder for chaining.
       */
      public Builder addDataStringsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDataStringsIsMutable();
        dataStrings_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject> dataObjects_ =
        java.util.Collections.emptyList();
      private void ensureDataObjectsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          dataObjects_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject>(dataObjects_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> dataObjectsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject> getDataObjectsList() {
        if (dataObjectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataObjects_);
        } else {
          return dataObjectsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public int getDataObjectsCount() {
        if (dataObjectsBuilder_ == null) {
          return dataObjects_.size();
        } else {
          return dataObjectsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDataObjects(int index) {
        if (dataObjectsBuilder_ == null) {
          return dataObjects_.get(index);
        } else {
          return dataObjectsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder setDataObjects(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject value) {
        if (dataObjectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataObjectsIsMutable();
          dataObjects_.set(index, value);
          onChanged();
        } else {
          dataObjectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder setDataObjects(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder builderForValue) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataObjectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder addDataObjects(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject value) {
        if (dataObjectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataObjectsIsMutable();
          dataObjects_.add(value);
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder addDataObjects(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject value) {
        if (dataObjectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataObjectsIsMutable();
          dataObjects_.add(index, value);
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder addDataObjects(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder builderForValue) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.add(builderForValue.build());
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder addDataObjects(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder builderForValue) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder addAllDataObjects(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject> values) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataObjects_);
          onChanged();
        } else {
          dataObjectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder clearDataObjects() {
        if (dataObjectsBuilder_ == null) {
          dataObjects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          dataObjectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public Builder removeDataObjects(int index) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.remove(index);
          onChanged();
        } else {
          dataObjectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder getDataObjectsBuilder(
          int index) {
        return getDataObjectsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder getDataObjectsOrBuilder(
          int index) {
        if (dataObjectsBuilder_ == null) {
          return dataObjects_.get(index);  } else {
          return dataObjectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> 
           getDataObjectsOrBuilderList() {
        if (dataObjectsBuilder_ != null) {
          return dataObjectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataObjects_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder addDataObjectsBuilder() {
        return getDataObjectsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder addDataObjectsBuilder(
          int index) {
        return getDataObjectsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnDataObject data_objects = 24;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder> 
           getDataObjectsBuilderList() {
        return getDataObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> 
          getDataObjectsFieldBuilder() {
        if (dataObjectsBuilder_ == null) {
          dataObjectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder>(
                  dataObjects_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          dataObjects_ = null;
        }
        return dataObjectsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnDataElement)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataElement)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnDataElement>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnDataElement>() {
      @java.lang.Override
      public CMsgSteamLearnDataElement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnDataElement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnDataElement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataElement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 data_source_id = 1;</code>
     * @return Whether the dataSourceId field is set.
     */
    boolean hasDataSourceId();
    /**
     * <code>optional uint32 data_source_id = 1;</code>
     * @return The dataSourceId.
     */
    int getDataSourceId();

    /**
     * <code>repeated uint64 keys = 2;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Long> getKeysList();
    /**
     * <code>repeated uint64 keys = 2;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <code>repeated uint64 keys = 2;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    long getKeys(int index);

    /**
     * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
     * @return Whether the dataObject field is set.
     */
    boolean hasDataObject();
    /**
     * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
     * @return The dataObject.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDataObject();
    /**
     * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder getDataObjectOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgSteamLearnData}
   */
  public static final class CMsgSteamLearnData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnData)
      CMsgSteamLearnDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnData.class.getName());
    }
    // Use CMsgSteamLearnData.newBuilder() to construct.
    private CMsgSteamLearnData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnData() {
      keys_ = emptyLongList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder.class);
    }

    private int bitField0_;
    public static final int DATA_SOURCE_ID_FIELD_NUMBER = 1;
    private int dataSourceId_ = 0;
    /**
     * <code>optional uint32 data_source_id = 1;</code>
     * @return Whether the dataSourceId field is set.
     */
    @java.lang.Override
    public boolean hasDataSourceId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 data_source_id = 1;</code>
     * @return The dataSourceId.
     */
    @java.lang.Override
    public int getDataSourceId() {
      return dataSourceId_;
    }

    public static final int KEYS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList keys_ =
        emptyLongList();
    /**
     * <code>repeated uint64 keys = 2;</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated uint64 keys = 2;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated uint64 keys = 2;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public long getKeys(int index) {
      return keys_.getLong(index);
    }

    public static final int DATA_OBJECT_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject dataObject_;
    /**
     * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
     * @return Whether the dataObject field is set.
     */
    @java.lang.Override
    public boolean hasDataObject() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
     * @return The dataObject.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDataObject() {
      return dataObject_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance() : dataObject_;
    }
    /**
     * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder getDataObjectOrBuilder() {
      return dataObject_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance() : dataObject_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, dataSourceId_);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeUInt64(2, keys_.getLong(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getDataObject());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, dataSourceId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(keys_.getLong(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDataObject());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData) obj;

      if (hasDataSourceId() != other.hasDataSourceId()) return false;
      if (hasDataSourceId()) {
        if (getDataSourceId()
            != other.getDataSourceId()) return false;
      }
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (hasDataObject() != other.hasDataObject()) return false;
      if (hasDataObject()) {
        if (!getDataObject()
            .equals(other.getDataObject())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDataSourceId()) {
        hash = (37 * hash) + DATA_SOURCE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDataSourceId();
      }
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      if (hasDataObject()) {
        hash = (37 * hash) + DATA_OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getDataObject().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnData)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDataObjectFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        dataSourceId_ = 0;
        keys_ = emptyLongList();
        dataObject_ = null;
        if (dataObjectBuilder_ != null) {
          dataObjectBuilder_.dispose();
          dataObjectBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnData_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.dataSourceId_ = dataSourceId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          keys_.makeImmutable();
          result.keys_ = keys_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.dataObject_ = dataObjectBuilder_ == null
              ? dataObject_
              : dataObjectBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance()) return this;
        if (other.hasDataSourceId()) {
          setDataSourceId(other.getDataSourceId());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            keys_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        if (other.hasDataObject()) {
          mergeDataObject(other.getDataObject());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                dataSourceId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                long v = input.readUInt64();
                ensureKeysIsMutable();
                keys_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureKeysIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  keys_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getDataObjectFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int dataSourceId_ ;
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return Whether the dataSourceId field is set.
       */
      @java.lang.Override
      public boolean hasDataSourceId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return The dataSourceId.
       */
      @java.lang.Override
      public int getDataSourceId() {
        return dataSourceId_;
      }
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @param value The dataSourceId to set.
       * @return This builder for chaining.
       */
      public Builder setDataSourceId(int value) {

        dataSourceId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataSourceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dataSourceId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList keys_ = emptyLongList();
      private void ensureKeysIsMutable() {
        if (!keys_.isModifiable()) {
          keys_ = makeMutableCopy(keys_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @return A list containing the keys.
       */
      public java.util.List<java.lang.Long>
          getKeysList() {
        keys_.makeImmutable();
        return keys_;
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public long getKeys(int index) {
        return keys_.getLong(index);
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, long value) {

        ensureKeysIsMutable();
        keys_.setLong(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(long value) {

        ensureKeysIsMutable();
        keys_.addLong(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject dataObject_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> dataObjectBuilder_;
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       * @return Whether the dataObject field is set.
       */
      public boolean hasDataObject() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       * @return The dataObject.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject getDataObject() {
        if (dataObjectBuilder_ == null) {
          return dataObject_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance() : dataObject_;
        } else {
          return dataObjectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      public Builder setDataObject(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject value) {
        if (dataObjectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataObject_ = value;
        } else {
          dataObjectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      public Builder setDataObject(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder builderForValue) {
        if (dataObjectBuilder_ == null) {
          dataObject_ = builderForValue.build();
        } else {
          dataObjectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      public Builder mergeDataObject(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject value) {
        if (dataObjectBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            dataObject_ != null &&
            dataObject_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance()) {
            getDataObjectBuilder().mergeFrom(value);
          } else {
            dataObject_ = value;
          }
        } else {
          dataObjectBuilder_.mergeFrom(value);
        }
        if (dataObject_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      public Builder clearDataObject() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dataObject_ = null;
        if (dataObjectBuilder_ != null) {
          dataObjectBuilder_.dispose();
          dataObjectBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder getDataObjectBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDataObjectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder getDataObjectOrBuilder() {
        if (dataObjectBuilder_ != null) {
          return dataObjectBuilder_.getMessageOrBuilder();
        } else {
          return dataObject_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.getDefaultInstance() : dataObject_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataObject data_object = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder> 
          getDataObjectFieldBuilder() {
        if (dataObjectBuilder_ == null) {
          dataObjectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObject.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataObjectOrBuilder>(
                  getDataObject(),
                  getParentForChildren(),
                  isClean());
          dataObject_ = null;
        }
        return dataObjectBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnData)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnData)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnData>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnData>() {
      @java.lang.Override
      public CMsgSteamLearnData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnDataListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnDataList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> 
        getDataList();
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData(int index);
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearnDataList}
   */
  public static final class CMsgSteamLearnDataList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnDataList)
      CMsgSteamLearnDataListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnDataList.class.getName());
    }
    // Use CMsgSteamLearnDataList.newBuilder() to construct.
    private CMsgSteamLearnDataList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnDataList() {
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> data_;
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(1, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList) obj;

      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnDataList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnDataList)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnDataList_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance()) return this;
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          data_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder setData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder setData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder addData(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder addData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder addData(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder addData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnDataList)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnDataList)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnDataList>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnDataList>() {
      @java.lang.Override
      public CMsgSteamLearnDataList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnDataList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnDataList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_RegisterDataSource_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_RegisterDataSource_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    boolean hasAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    java.lang.String getAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    com.google.protobuf.ByteString
        getAccessTokenBytes();

    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
     * @return Whether the dataSource field is set.
     */
    boolean hasDataSource();
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
     * @return The dataSource.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDataSource();
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder getDataSourceOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_RegisterDataSource_Request}
   */
  public static final class CMsgSteamLearn_RegisterDataSource_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_RegisterDataSource_Request)
      CMsgSteamLearn_RegisterDataSource_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_RegisterDataSource_Request.class.getName());
    }
    // Use CMsgSteamLearn_RegisterDataSource_Request.newBuilder() to construct.
    private CMsgSteamLearn_RegisterDataSource_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_RegisterDataSource_Request() {
      accessToken_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.Builder.class);
    }

    private int bitField0_;
    public static final int ACCESS_TOKEN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object accessToken_ = "";
    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    @java.lang.Override
    public boolean hasAccessToken() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    @java.lang.Override
    public java.lang.String getAccessToken() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accessToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccessTokenBytes() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_SOURCE_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource dataSource_;
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
     * @return Whether the dataSource field is set.
     */
    @java.lang.Override
    public boolean hasDataSource() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
     * @return The dataSource.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDataSource() {
      return dataSource_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
    }
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder getDataSourceOrBuilder() {
      return dataSource_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getDataSource());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDataSource());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request) obj;

      if (hasAccessToken() != other.hasAccessToken()) return false;
      if (hasAccessToken()) {
        if (!getAccessToken()
            .equals(other.getAccessToken())) return false;
      }
      if (hasDataSource() != other.hasDataSource()) return false;
      if (hasDataSource()) {
        if (!getDataSource()
            .equals(other.getDataSource())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccessToken()) {
        hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAccessToken().hashCode();
      }
      if (hasDataSource()) {
        hash = (37 * hash) + DATA_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getDataSource().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_RegisterDataSource_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_RegisterDataSource_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDataSourceFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accessToken_ = "";
        dataSource_ = null;
        if (dataSourceBuilder_ != null) {
          dataSourceBuilder_.dispose();
          dataSourceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accessToken_ = accessToken_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dataSource_ = dataSourceBuilder_ == null
              ? dataSource_
              : dataSourceBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request.getDefaultInstance()) return this;
        if (other.hasAccessToken()) {
          accessToken_ = other.accessToken_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDataSource()) {
          mergeDataSource(other.getDataSource());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                accessToken_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                input.readMessage(
                    getDataSourceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 1;</code>
       * @return Whether the accessToken field is set.
       */
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The accessToken.
       */
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The bytes for accessToken.
       */
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessToken() {
        accessToken_ = getDefaultInstance().getAccessToken();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The bytes for accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource dataSource_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder> dataSourceBuilder_;
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       * @return Whether the dataSource field is set.
       */
      public boolean hasDataSource() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       * @return The dataSource.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDataSource() {
        if (dataSourceBuilder_ == null) {
          return dataSource_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
        } else {
          return dataSourceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      public Builder setDataSource(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource value) {
        if (dataSourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataSource_ = value;
        } else {
          dataSourceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      public Builder setDataSource(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder builderForValue) {
        if (dataSourceBuilder_ == null) {
          dataSource_ = builderForValue.build();
        } else {
          dataSourceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      public Builder mergeDataSource(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource value) {
        if (dataSourceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            dataSource_ != null &&
            dataSource_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance()) {
            getDataSourceBuilder().mergeFrom(value);
          } else {
            dataSource_ = value;
          }
        } else {
          dataSourceBuilder_.mergeFrom(value);
        }
        if (dataSource_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      public Builder clearDataSource() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataSource_ = null;
        if (dataSourceBuilder_ != null) {
          dataSourceBuilder_.dispose();
          dataSourceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder getDataSourceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder getDataSourceOrBuilder() {
        if (dataSourceBuilder_ != null) {
          return dataSourceBuilder_.getMessageOrBuilder();
        } else {
          return dataSource_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder> 
          getDataSourceFieldBuilder() {
        if (dataSourceBuilder_ == null) {
          dataSourceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder>(
                  getDataSource(),
                  getParentForChildren(),
                  isClean());
          dataSource_ = null;
        }
        return dataSourceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_RegisterDataSource_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_RegisterDataSource_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_RegisterDataSource_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_RegisterDataSource_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_RegisterDataSource_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_RegisterDataSource_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_RegisterDataSource_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_RegisterDataSource_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_RegisterDataSource_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult getResult();

    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
     * @return Whether the dataSource field is set.
     */
    boolean hasDataSource();
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
     * @return The dataSource.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDataSource();
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder getDataSourceOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_RegisterDataSource_Response}
   */
  public static final class CMsgSteamLearn_RegisterDataSource_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_RegisterDataSource_Response)
      CMsgSteamLearn_RegisterDataSource_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_RegisterDataSource_Response.class.getName());
    }
    // Use CMsgSteamLearn_RegisterDataSource_Response.newBuilder() to construct.
    private CMsgSteamLearn_RegisterDataSource_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_RegisterDataSource_Response() {
      result_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.Builder.class);
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult getResult() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult.STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR : result;
    }

    public static final int DATA_SOURCE_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource dataSource_;
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
     * @return Whether the dataSource field is set.
     */
    @java.lang.Override
    public boolean hasDataSource() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
     * @return The dataSource.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDataSource() {
      return dataSource_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
    }
    /**
     * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder getDataSourceOrBuilder() {
      return dataSource_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getDataSource());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDataSource());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (hasDataSource() != other.hasDataSource()) return false;
      if (hasDataSource()) {
        if (!getDataSource()
            .equals(other.getDataSource())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasDataSource()) {
        hash = (37 * hash) + DATA_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getDataSource().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_RegisterDataSource_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_RegisterDataSource_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDataSourceFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        dataSource_ = null;
        if (dataSourceBuilder_ != null) {
          dataSourceBuilder_.dispose();
          dataSourceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_RegisterDataSource_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dataSource_ = dataSourceBuilder_ == null
              ? dataSource_
              : dataSourceBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasDataSource()) {
          mergeDataSource(other.getDataSource());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getDataSourceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult getResult() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult.STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR : result;
      }
      /**
       * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteammLearnRegisterDataSourceResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteammLearnRegisterDataSourceResult result = 1 [default = STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource dataSource_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder> dataSourceBuilder_;
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       * @return Whether the dataSource field is set.
       */
      public boolean hasDataSource() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       * @return The dataSource.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource getDataSource() {
        if (dataSourceBuilder_ == null) {
          return dataSource_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
        } else {
          return dataSourceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      public Builder setDataSource(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource value) {
        if (dataSourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataSource_ = value;
        } else {
          dataSourceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      public Builder setDataSource(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder builderForValue) {
        if (dataSourceBuilder_ == null) {
          dataSource_ = builderForValue.build();
        } else {
          dataSourceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      public Builder mergeDataSource(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource value) {
        if (dataSourceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            dataSource_ != null &&
            dataSource_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance()) {
            getDataSourceBuilder().mergeFrom(value);
          } else {
            dataSource_ = value;
          }
        } else {
          dataSourceBuilder_.mergeFrom(value);
        }
        if (dataSource_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      public Builder clearDataSource() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataSource_ = null;
        if (dataSourceBuilder_ != null) {
          dataSourceBuilder_.dispose();
          dataSourceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder getDataSourceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder getDataSourceOrBuilder() {
        if (dataSourceBuilder_ != null) {
          return dataSourceBuilder_.getMessageOrBuilder();
        } else {
          return dataSource_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.getDefaultInstance() : dataSource_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataSource data_source = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder> 
          getDataSourceFieldBuilder() {
        if (dataSourceBuilder_ == null) {
          dataSourceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSource.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataSourceOrBuilder>(
                  getDataSource(),
                  getParentForChildren(),
                  isClean());
          dataSource_ = null;
        }
        return dataSourceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_RegisterDataSource_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_RegisterDataSource_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_RegisterDataSource_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_RegisterDataSource_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_RegisterDataSource_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_RegisterDataSource_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_RegisterDataSource_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_RegisterDataSource_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_CacheData_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_CacheData_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    boolean hasAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    java.lang.String getAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    com.google.protobuf.ByteString
        getAccessTokenBytes();

    /**
     * <code>optional .CMsgSteamLearnData data = 3;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>optional .CMsgSteamLearnData data = 3;</code>
     * @return The data.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData();
    /**
     * <code>optional .CMsgSteamLearnData data = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_CacheData_Request}
   */
  public static final class CMsgSteamLearn_CacheData_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_CacheData_Request)
      CMsgSteamLearn_CacheData_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_CacheData_Request.class.getName());
    }
    // Use CMsgSteamLearn_CacheData_Request.newBuilder() to construct.
    private CMsgSteamLearn_CacheData_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_CacheData_Request() {
      accessToken_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder.class);
    }

    private int bitField0_;
    public static final int ACCESS_TOKEN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object accessToken_ = "";
    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    @java.lang.Override
    public boolean hasAccessToken() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    @java.lang.Override
    public java.lang.String getAccessToken() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accessToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccessTokenBytes() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData data_;
    /**
     * <code>optional .CMsgSteamLearnData data = 3;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnData data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData() {
      return data_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance() : data_;
    }
    /**
     * <code>optional .CMsgSteamLearnData data = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder() {
      return data_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance() : data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request) obj;

      if (hasAccessToken() != other.hasAccessToken()) return false;
      if (hasAccessToken()) {
        if (!getAccessToken()
            .equals(other.getAccessToken())) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccessToken()) {
        hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAccessToken().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_CacheData_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_CacheData_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accessToken_ = "";
        data_ = null;
        if (dataBuilder_ != null) {
          dataBuilder_.dispose();
          dataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accessToken_ = accessToken_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.data_ = dataBuilder_ == null
              ? data_
              : dataBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.getDefaultInstance()) return this;
        if (other.hasAccessToken()) {
          accessToken_ = other.accessToken_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                accessToken_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                input.readMessage(
                    getDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 1;</code>
       * @return Whether the accessToken field is set.
       */
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The accessToken.
       */
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The bytes for accessToken.
       */
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessToken() {
        accessToken_ = getDefaultInstance().getAccessToken();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The bytes for accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData data_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> dataBuilder_;
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       * @return The data.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      public Builder setData(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      public Builder setData(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      public Builder mergeData(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            data_ != null &&
            data_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance()) {
            getDataBuilder().mergeFrom(value);
          } else {
            data_ = value;
          }
        } else {
          dataBuilder_.mergeFrom(value);
        }
        if (data_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = null;
        if (dataBuilder_ != null) {
          dataBuilder_.dispose();
          dataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder getDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnData data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_CacheData_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_CacheData_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_CacheData_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_CacheData_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_CacheData_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_CacheData_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_CacheData_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_CacheData_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_CacheData_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
     * @return Whether the cacheDataResult field is set.
     */
    boolean hasCacheDataResult();
    /**
     * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
     * @return The cacheDataResult.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult getCacheDataResult();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_CacheData_Response}
   */
  public static final class CMsgSteamLearn_CacheData_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_CacheData_Response)
      CMsgSteamLearn_CacheData_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_CacheData_Response.class.getName());
    }
    // Use CMsgSteamLearn_CacheData_Response.newBuilder() to construct.
    private CMsgSteamLearn_CacheData_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_CacheData_Response() {
      cacheDataResult_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder.class);
    }

    private int bitField0_;
    public static final int CACHE_DATA_RESULT_FIELD_NUMBER = 1;
    private int cacheDataResult_ = 0;
    /**
     * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
     * @return Whether the cacheDataResult field is set.
     */
    @java.lang.Override public boolean hasCacheDataResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
     * @return The cacheDataResult.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult getCacheDataResult() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult.forNumber(cacheDataResult_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult.STEAMLEARN_CACHE_DATA_ERROR : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, cacheDataResult_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cacheDataResult_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response) obj;

      if (hasCacheDataResult() != other.hasCacheDataResult()) return false;
      if (hasCacheDataResult()) {
        if (cacheDataResult_ != other.cacheDataResult_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCacheDataResult()) {
        hash = (37 * hash) + CACHE_DATA_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + cacheDataResult_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_CacheData_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_CacheData_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cacheDataResult_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_CacheData_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cacheDataResult_ = cacheDataResult_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.getDefaultInstance()) return this;
        if (other.hasCacheDataResult()) {
          setCacheDataResult(other.getCacheDataResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  cacheDataResult_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int cacheDataResult_ = 0;
      /**
       * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
       * @return Whether the cacheDataResult field is set.
       */
      @java.lang.Override public boolean hasCacheDataResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
       * @return The cacheDataResult.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult getCacheDataResult() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult.forNumber(cacheDataResult_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult.STEAMLEARN_CACHE_DATA_ERROR : result;
      }
      /**
       * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
       * @param value The cacheDataResult to set.
       * @return This builder for chaining.
       */
      public Builder setCacheDataResult(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnCacheDataResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cacheDataResult_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteamLearnCacheDataResult cache_data_result = 1 [default = STEAMLEARN_CACHE_DATA_ERROR];</code>
       * @return This builder for chaining.
       */
      public Builder clearCacheDataResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cacheDataResult_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_CacheData_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_CacheData_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_CacheData_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_CacheData_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_CacheData_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_CacheData_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_CacheData_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_SnapshotProject_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_SnapshotProject_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    boolean hasAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    java.lang.String getAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    com.google.protobuf.ByteString
        getAccessTokenBytes();

    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return Whether the projectId field is set.
     */
    boolean hasProjectId();
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return The projectId.
     */
    int getProjectId();

    /**
     * <code>optional uint32 published_version = 7;</code>
     * @return Whether the publishedVersion field is set.
     */
    boolean hasPublishedVersion();
    /**
     * <code>optional uint32 published_version = 7;</code>
     * @return The publishedVersion.
     */
    int getPublishedVersion();

    /**
     * <code>repeated uint64 keys = 4;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Long> getKeysList();
    /**
     * <code>repeated uint64 keys = 4;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <code>repeated uint64 keys = 4;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    long getKeys(int index);

    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> 
        getDataList();
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData(int index);
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder(
        int index);

    /**
     * <code>optional uint32 pending_data_limit_seconds = 6;</code>
     * @return Whether the pendingDataLimitSeconds field is set.
     */
    boolean hasPendingDataLimitSeconds();
    /**
     * <code>optional uint32 pending_data_limit_seconds = 6;</code>
     * @return The pendingDataLimitSeconds.
     */
    int getPendingDataLimitSeconds();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_SnapshotProject_Request}
   */
  public static final class CMsgSteamLearn_SnapshotProject_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_SnapshotProject_Request)
      CMsgSteamLearn_SnapshotProject_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_SnapshotProject_Request.class.getName());
    }
    // Use CMsgSteamLearn_SnapshotProject_Request.newBuilder() to construct.
    private CMsgSteamLearn_SnapshotProject_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_SnapshotProject_Request() {
      accessToken_ = "";
      keys_ = emptyLongList();
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder.class);
    }

    private int bitField0_;
    public static final int ACCESS_TOKEN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object accessToken_ = "";
    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    @java.lang.Override
    public boolean hasAccessToken() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    @java.lang.Override
    public java.lang.String getAccessToken() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accessToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccessTokenBytes() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECT_ID_FIELD_NUMBER = 3;
    private int projectId_ = 0;
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return Whether the projectId field is set.
     */
    @java.lang.Override
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public int getProjectId() {
      return projectId_;
    }

    public static final int PUBLISHED_VERSION_FIELD_NUMBER = 7;
    private int publishedVersion_ = 0;
    /**
     * <code>optional uint32 published_version = 7;</code>
     * @return Whether the publishedVersion field is set.
     */
    @java.lang.Override
    public boolean hasPublishedVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 published_version = 7;</code>
     * @return The publishedVersion.
     */
    @java.lang.Override
    public int getPublishedVersion() {
      return publishedVersion_;
    }

    public static final int KEYS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList keys_ =
        emptyLongList();
    /**
     * <code>repeated uint64 keys = 4;</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated uint64 keys = 4;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated uint64 keys = 4;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public long getKeys(int index) {
      return keys_.getLong(index);
    }

    public static final int DATA_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> data_;
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnData data = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    public static final int PENDING_DATA_LIMIT_SECONDS_FIELD_NUMBER = 6;
    private int pendingDataLimitSeconds_ = 0;
    /**
     * <code>optional uint32 pending_data_limit_seconds = 6;</code>
     * @return Whether the pendingDataLimitSeconds field is set.
     */
    @java.lang.Override
    public boolean hasPendingDataLimitSeconds() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 pending_data_limit_seconds = 6;</code>
     * @return The pendingDataLimitSeconds.
     */
    @java.lang.Override
    public int getPendingDataLimitSeconds() {
      return pendingDataLimitSeconds_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(3, projectId_);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeUInt64(4, keys_.getLong(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(5, data_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(6, pendingDataLimitSeconds_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(7, publishedVersion_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, projectId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(keys_.getLong(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, data_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, pendingDataLimitSeconds_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, publishedVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request) obj;

      if (hasAccessToken() != other.hasAccessToken()) return false;
      if (hasAccessToken()) {
        if (!getAccessToken()
            .equals(other.getAccessToken())) return false;
      }
      if (hasProjectId() != other.hasProjectId()) return false;
      if (hasProjectId()) {
        if (getProjectId()
            != other.getProjectId()) return false;
      }
      if (hasPublishedVersion() != other.hasPublishedVersion()) return false;
      if (hasPublishedVersion()) {
        if (getPublishedVersion()
            != other.getPublishedVersion()) return false;
      }
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (hasPendingDataLimitSeconds() != other.hasPendingDataLimitSeconds()) return false;
      if (hasPendingDataLimitSeconds()) {
        if (getPendingDataLimitSeconds()
            != other.getPendingDataLimitSeconds()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccessToken()) {
        hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAccessToken().hashCode();
      }
      if (hasProjectId()) {
        hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProjectId();
      }
      if (hasPublishedVersion()) {
        hash = (37 * hash) + PUBLISHED_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getPublishedVersion();
      }
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      if (hasPendingDataLimitSeconds()) {
        hash = (37 * hash) + PENDING_DATA_LIMIT_SECONDS_FIELD_NUMBER;
        hash = (53 * hash) + getPendingDataLimitSeconds();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_SnapshotProject_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_SnapshotProject_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accessToken_ = "";
        projectId_ = 0;
        publishedVersion_ = 0;
        keys_ = emptyLongList();
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        pendingDataLimitSeconds_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accessToken_ = accessToken_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.projectId_ = projectId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.publishedVersion_ = publishedVersion_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          keys_.makeImmutable();
          result.keys_ = keys_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.pendingDataLimitSeconds_ = pendingDataLimitSeconds_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.getDefaultInstance()) return this;
        if (other.hasAccessToken()) {
          accessToken_ = other.accessToken_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        if (other.hasPublishedVersion()) {
          setPublishedVersion(other.getPublishedVersion());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            keys_.makeImmutable();
            bitField0_ |= 0x00000008;
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        if (other.hasPendingDataLimitSeconds()) {
          setPendingDataLimitSeconds(other.getPendingDataLimitSeconds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                accessToken_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 24: {
                projectId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 24
              case 32: {
                long v = input.readUInt64();
                ensureKeysIsMutable();
                keys_.addLong(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureKeysIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  keys_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 42: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 48: {
                pendingDataLimitSeconds_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                publishedVersion_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 1;</code>
       * @return Whether the accessToken field is set.
       */
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The accessToken.
       */
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The bytes for accessToken.
       */
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessToken() {
        accessToken_ = getDefaultInstance().getAccessToken();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The bytes for accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int projectId_ ;
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return Whether the projectId field is set.
       */
      @java.lang.Override
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @param value The projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectId(int value) {

        projectId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        projectId_ = 0;
        onChanged();
        return this;
      }

      private int publishedVersion_ ;
      /**
       * <code>optional uint32 published_version = 7;</code>
       * @return Whether the publishedVersion field is set.
       */
      @java.lang.Override
      public boolean hasPublishedVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 published_version = 7;</code>
       * @return The publishedVersion.
       */
      @java.lang.Override
      public int getPublishedVersion() {
        return publishedVersion_;
      }
      /**
       * <code>optional uint32 published_version = 7;</code>
       * @param value The publishedVersion to set.
       * @return This builder for chaining.
       */
      public Builder setPublishedVersion(int value) {

        publishedVersion_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 published_version = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublishedVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        publishedVersion_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList keys_ = emptyLongList();
      private void ensureKeysIsMutable() {
        if (!keys_.isModifiable()) {
          keys_ = makeMutableCopy(keys_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @return A list containing the keys.
       */
      public java.util.List<java.lang.Long>
          getKeysList() {
        keys_.makeImmutable();
        return keys_;
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public long getKeys(int index) {
        return keys_.getLong(index);
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, long value) {

        ensureKeysIsMutable();
        keys_.setLong(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(long value) {

        ensureKeysIsMutable();
        keys_.addLong(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          data_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData>(data_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder setData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder setData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder addData(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder addData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder addData(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder addData(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnData data = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnData.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private int pendingDataLimitSeconds_ ;
      /**
       * <code>optional uint32 pending_data_limit_seconds = 6;</code>
       * @return Whether the pendingDataLimitSeconds field is set.
       */
      @java.lang.Override
      public boolean hasPendingDataLimitSeconds() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 pending_data_limit_seconds = 6;</code>
       * @return The pendingDataLimitSeconds.
       */
      @java.lang.Override
      public int getPendingDataLimitSeconds() {
        return pendingDataLimitSeconds_;
      }
      /**
       * <code>optional uint32 pending_data_limit_seconds = 6;</code>
       * @param value The pendingDataLimitSeconds to set.
       * @return This builder for chaining.
       */
      public Builder setPendingDataLimitSeconds(int value) {

        pendingDataLimitSeconds_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pending_data_limit_seconds = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPendingDataLimitSeconds() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pendingDataLimitSeconds_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_SnapshotProject_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_SnapshotProject_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_SnapshotProject_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_SnapshotProject_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_SnapshotProject_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_SnapshotProject_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_SnapshotProject_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_SnapshotProject_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_SnapshotProject_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
     * @return Whether the snapshotResult field is set.
     */
    boolean hasSnapshotResult();
    /**
     * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
     * @return The snapshotResult.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult getSnapshotResult();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_SnapshotProject_Response}
   */
  public static final class CMsgSteamLearn_SnapshotProject_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_SnapshotProject_Response)
      CMsgSteamLearn_SnapshotProject_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_SnapshotProject_Response.class.getName());
    }
    // Use CMsgSteamLearn_SnapshotProject_Response.newBuilder() to construct.
    private CMsgSteamLearn_SnapshotProject_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_SnapshotProject_Response() {
      snapshotResult_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder.class);
    }

    private int bitField0_;
    public static final int SNAPSHOT_RESULT_FIELD_NUMBER = 1;
    private int snapshotResult_ = 0;
    /**
     * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
     * @return Whether the snapshotResult field is set.
     */
    @java.lang.Override public boolean hasSnapshotResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
     * @return The snapshotResult.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult getSnapshotResult() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult.forNumber(snapshotResult_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult.STEAMLEARN_SNAPSHOT_PROJECT_ERROR : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, snapshotResult_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, snapshotResult_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response) obj;

      if (hasSnapshotResult() != other.hasSnapshotResult()) return false;
      if (hasSnapshotResult()) {
        if (snapshotResult_ != other.snapshotResult_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSnapshotResult()) {
        hash = (37 * hash) + SNAPSHOT_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + snapshotResult_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_SnapshotProject_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_SnapshotProject_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        snapshotResult_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_SnapshotProject_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.snapshotResult_ = snapshotResult_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.getDefaultInstance()) return this;
        if (other.hasSnapshotResult()) {
          setSnapshotResult(other.getSnapshotResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  snapshotResult_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int snapshotResult_ = 0;
      /**
       * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
       * @return Whether the snapshotResult field is set.
       */
      @java.lang.Override public boolean hasSnapshotResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
       * @return The snapshotResult.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult getSnapshotResult() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult.forNumber(snapshotResult_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult.STEAMLEARN_SNAPSHOT_PROJECT_ERROR : result;
      }
      /**
       * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
       * @param value The snapshotResult to set.
       * @return This builder for chaining.
       */
      public Builder setSnapshotResult(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnSnapshotProjectResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        snapshotResult_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteamLearnSnapshotProjectResult snapshot_result = 1 [default = STEAMLEARN_SNAPSHOT_PROJECT_ERROR];</code>
       * @return This builder for chaining.
       */
      public Builder clearSnapshotResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        snapshotResult_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_SnapshotProject_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_SnapshotProject_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_SnapshotProject_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_SnapshotProject_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_SnapshotProject_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_SnapshotProject_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_SnapshotProject_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_BatchOperation_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_BatchOperation_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request> 
        getCacheDataRequestsList();
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request getCacheDataRequests(int index);
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    int getCacheDataRequestsCount();
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder> 
        getCacheDataRequestsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder getCacheDataRequestsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request> 
        getSnapshotRequestsList();
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request getSnapshotRequests(int index);
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    int getSnapshotRequestsCount();
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder> 
        getSnapshotRequestsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder getSnapshotRequestsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request> 
        getInferenceRequestsList();
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request getInferenceRequests(int index);
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    int getInferenceRequestsCount();
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder> 
        getInferenceRequestsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder getInferenceRequestsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_BatchOperation_Request}
   */
  public static final class CMsgSteamLearn_BatchOperation_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_BatchOperation_Request)
      CMsgSteamLearn_BatchOperation_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_BatchOperation_Request.class.getName());
    }
    // Use CMsgSteamLearn_BatchOperation_Request.newBuilder() to construct.
    private CMsgSteamLearn_BatchOperation_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_BatchOperation_Request() {
      cacheDataRequests_ = java.util.Collections.emptyList();
      snapshotRequests_ = java.util.Collections.emptyList();
      inferenceRequests_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.Builder.class);
    }

    public static final int CACHE_DATA_REQUESTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request> cacheDataRequests_;
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request> getCacheDataRequestsList() {
      return cacheDataRequests_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder> 
        getCacheDataRequestsOrBuilderList() {
      return cacheDataRequests_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    @java.lang.Override
    public int getCacheDataRequestsCount() {
      return cacheDataRequests_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request getCacheDataRequests(int index) {
      return cacheDataRequests_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder getCacheDataRequestsOrBuilder(
        int index) {
      return cacheDataRequests_.get(index);
    }

    public static final int SNAPSHOT_REQUESTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request> snapshotRequests_;
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request> getSnapshotRequestsList() {
      return snapshotRequests_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder> 
        getSnapshotRequestsOrBuilderList() {
      return snapshotRequests_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    @java.lang.Override
    public int getSnapshotRequestsCount() {
      return snapshotRequests_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request getSnapshotRequests(int index) {
      return snapshotRequests_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder getSnapshotRequestsOrBuilder(
        int index) {
      return snapshotRequests_.get(index);
    }

    public static final int INFERENCE_REQUESTS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request> inferenceRequests_;
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request> getInferenceRequestsList() {
      return inferenceRequests_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder> 
        getInferenceRequestsOrBuilderList() {
      return inferenceRequests_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    @java.lang.Override
    public int getInferenceRequestsCount() {
      return inferenceRequests_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request getInferenceRequests(int index) {
      return inferenceRequests_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder getInferenceRequestsOrBuilder(
        int index) {
      return inferenceRequests_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cacheDataRequests_.size(); i++) {
        output.writeMessage(1, cacheDataRequests_.get(i));
      }
      for (int i = 0; i < snapshotRequests_.size(); i++) {
        output.writeMessage(2, snapshotRequests_.get(i));
      }
      for (int i = 0; i < inferenceRequests_.size(); i++) {
        output.writeMessage(3, inferenceRequests_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cacheDataRequests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cacheDataRequests_.get(i));
      }
      for (int i = 0; i < snapshotRequests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, snapshotRequests_.get(i));
      }
      for (int i = 0; i < inferenceRequests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, inferenceRequests_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request) obj;

      if (!getCacheDataRequestsList()
          .equals(other.getCacheDataRequestsList())) return false;
      if (!getSnapshotRequestsList()
          .equals(other.getSnapshotRequestsList())) return false;
      if (!getInferenceRequestsList()
          .equals(other.getInferenceRequestsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCacheDataRequestsCount() > 0) {
        hash = (37 * hash) + CACHE_DATA_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getCacheDataRequestsList().hashCode();
      }
      if (getSnapshotRequestsCount() > 0) {
        hash = (37 * hash) + SNAPSHOT_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getSnapshotRequestsList().hashCode();
      }
      if (getInferenceRequestsCount() > 0) {
        hash = (37 * hash) + INFERENCE_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getInferenceRequestsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_BatchOperation_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_BatchOperation_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (cacheDataRequestsBuilder_ == null) {
          cacheDataRequests_ = java.util.Collections.emptyList();
        } else {
          cacheDataRequests_ = null;
          cacheDataRequestsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (snapshotRequestsBuilder_ == null) {
          snapshotRequests_ = java.util.Collections.emptyList();
        } else {
          snapshotRequests_ = null;
          snapshotRequestsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (inferenceRequestsBuilder_ == null) {
          inferenceRequests_ = java.util.Collections.emptyList();
        } else {
          inferenceRequests_ = null;
          inferenceRequestsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request result) {
        if (cacheDataRequestsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cacheDataRequests_ = java.util.Collections.unmodifiableList(cacheDataRequests_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cacheDataRequests_ = cacheDataRequests_;
        } else {
          result.cacheDataRequests_ = cacheDataRequestsBuilder_.build();
        }
        if (snapshotRequestsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            snapshotRequests_ = java.util.Collections.unmodifiableList(snapshotRequests_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.snapshotRequests_ = snapshotRequests_;
        } else {
          result.snapshotRequests_ = snapshotRequestsBuilder_.build();
        }
        if (inferenceRequestsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            inferenceRequests_ = java.util.Collections.unmodifiableList(inferenceRequests_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.inferenceRequests_ = inferenceRequests_;
        } else {
          result.inferenceRequests_ = inferenceRequestsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request.getDefaultInstance()) return this;
        if (cacheDataRequestsBuilder_ == null) {
          if (!other.cacheDataRequests_.isEmpty()) {
            if (cacheDataRequests_.isEmpty()) {
              cacheDataRequests_ = other.cacheDataRequests_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCacheDataRequestsIsMutable();
              cacheDataRequests_.addAll(other.cacheDataRequests_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheDataRequests_.isEmpty()) {
            if (cacheDataRequestsBuilder_.isEmpty()) {
              cacheDataRequestsBuilder_.dispose();
              cacheDataRequestsBuilder_ = null;
              cacheDataRequests_ = other.cacheDataRequests_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cacheDataRequestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheDataRequestsFieldBuilder() : null;
            } else {
              cacheDataRequestsBuilder_.addAllMessages(other.cacheDataRequests_);
            }
          }
        }
        if (snapshotRequestsBuilder_ == null) {
          if (!other.snapshotRequests_.isEmpty()) {
            if (snapshotRequests_.isEmpty()) {
              snapshotRequests_ = other.snapshotRequests_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSnapshotRequestsIsMutable();
              snapshotRequests_.addAll(other.snapshotRequests_);
            }
            onChanged();
          }
        } else {
          if (!other.snapshotRequests_.isEmpty()) {
            if (snapshotRequestsBuilder_.isEmpty()) {
              snapshotRequestsBuilder_.dispose();
              snapshotRequestsBuilder_ = null;
              snapshotRequests_ = other.snapshotRequests_;
              bitField0_ = (bitField0_ & ~0x00000002);
              snapshotRequestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSnapshotRequestsFieldBuilder() : null;
            } else {
              snapshotRequestsBuilder_.addAllMessages(other.snapshotRequests_);
            }
          }
        }
        if (inferenceRequestsBuilder_ == null) {
          if (!other.inferenceRequests_.isEmpty()) {
            if (inferenceRequests_.isEmpty()) {
              inferenceRequests_ = other.inferenceRequests_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInferenceRequestsIsMutable();
              inferenceRequests_.addAll(other.inferenceRequests_);
            }
            onChanged();
          }
        } else {
          if (!other.inferenceRequests_.isEmpty()) {
            if (inferenceRequestsBuilder_.isEmpty()) {
              inferenceRequestsBuilder_.dispose();
              inferenceRequestsBuilder_ = null;
              inferenceRequests_ = other.inferenceRequests_;
              bitField0_ = (bitField0_ & ~0x00000004);
              inferenceRequestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInferenceRequestsFieldBuilder() : null;
            } else {
              inferenceRequestsBuilder_.addAllMessages(other.inferenceRequests_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.parser(),
                        extensionRegistry);
                if (cacheDataRequestsBuilder_ == null) {
                  ensureCacheDataRequestsIsMutable();
                  cacheDataRequests_.add(m);
                } else {
                  cacheDataRequestsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.parser(),
                        extensionRegistry);
                if (snapshotRequestsBuilder_ == null) {
                  ensureSnapshotRequestsIsMutable();
                  snapshotRequests_.add(m);
                } else {
                  snapshotRequestsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.parser(),
                        extensionRegistry);
                if (inferenceRequestsBuilder_ == null) {
                  ensureInferenceRequestsIsMutable();
                  inferenceRequests_.add(m);
                } else {
                  inferenceRequestsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request> cacheDataRequests_ =
        java.util.Collections.emptyList();
      private void ensureCacheDataRequestsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cacheDataRequests_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request>(cacheDataRequests_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder> cacheDataRequestsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request> getCacheDataRequestsList() {
        if (cacheDataRequestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheDataRequests_);
        } else {
          return cacheDataRequestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public int getCacheDataRequestsCount() {
        if (cacheDataRequestsBuilder_ == null) {
          return cacheDataRequests_.size();
        } else {
          return cacheDataRequestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request getCacheDataRequests(int index) {
        if (cacheDataRequestsBuilder_ == null) {
          return cacheDataRequests_.get(index);
        } else {
          return cacheDataRequestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder setCacheDataRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request value) {
        if (cacheDataRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.set(index, value);
          onChanged();
        } else {
          cacheDataRequestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder setCacheDataRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder builderForValue) {
        if (cacheDataRequestsBuilder_ == null) {
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheDataRequestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder addCacheDataRequests(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request value) {
        if (cacheDataRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.add(value);
          onChanged();
        } else {
          cacheDataRequestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder addCacheDataRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request value) {
        if (cacheDataRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.add(index, value);
          onChanged();
        } else {
          cacheDataRequestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder addCacheDataRequests(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder builderForValue) {
        if (cacheDataRequestsBuilder_ == null) {
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.add(builderForValue.build());
          onChanged();
        } else {
          cacheDataRequestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder addCacheDataRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder builderForValue) {
        if (cacheDataRequestsBuilder_ == null) {
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheDataRequestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder addAllCacheDataRequests(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request> values) {
        if (cacheDataRequestsBuilder_ == null) {
          ensureCacheDataRequestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheDataRequests_);
          onChanged();
        } else {
          cacheDataRequestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder clearCacheDataRequests() {
        if (cacheDataRequestsBuilder_ == null) {
          cacheDataRequests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cacheDataRequestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public Builder removeCacheDataRequests(int index) {
        if (cacheDataRequestsBuilder_ == null) {
          ensureCacheDataRequestsIsMutable();
          cacheDataRequests_.remove(index);
          onChanged();
        } else {
          cacheDataRequestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder getCacheDataRequestsBuilder(
          int index) {
        return getCacheDataRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder getCacheDataRequestsOrBuilder(
          int index) {
        if (cacheDataRequestsBuilder_ == null) {
          return cacheDataRequests_.get(index);  } else {
          return cacheDataRequestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder> 
           getCacheDataRequestsOrBuilderList() {
        if (cacheDataRequestsBuilder_ != null) {
          return cacheDataRequestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheDataRequests_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder addCacheDataRequestsBuilder() {
        return getCacheDataRequestsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder addCacheDataRequestsBuilder(
          int index) {
        return getCacheDataRequestsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Request cache_data_requests = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder> 
           getCacheDataRequestsBuilderList() {
        return getCacheDataRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder> 
          getCacheDataRequestsFieldBuilder() {
        if (cacheDataRequestsBuilder_ == null) {
          cacheDataRequestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_RequestOrBuilder>(
                  cacheDataRequests_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cacheDataRequests_ = null;
        }
        return cacheDataRequestsBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request> snapshotRequests_ =
        java.util.Collections.emptyList();
      private void ensureSnapshotRequestsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          snapshotRequests_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request>(snapshotRequests_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder> snapshotRequestsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request> getSnapshotRequestsList() {
        if (snapshotRequestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(snapshotRequests_);
        } else {
          return snapshotRequestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public int getSnapshotRequestsCount() {
        if (snapshotRequestsBuilder_ == null) {
          return snapshotRequests_.size();
        } else {
          return snapshotRequestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request getSnapshotRequests(int index) {
        if (snapshotRequestsBuilder_ == null) {
          return snapshotRequests_.get(index);
        } else {
          return snapshotRequestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder setSnapshotRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request value) {
        if (snapshotRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.set(index, value);
          onChanged();
        } else {
          snapshotRequestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder setSnapshotRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder builderForValue) {
        if (snapshotRequestsBuilder_ == null) {
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.set(index, builderForValue.build());
          onChanged();
        } else {
          snapshotRequestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder addSnapshotRequests(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request value) {
        if (snapshotRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.add(value);
          onChanged();
        } else {
          snapshotRequestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder addSnapshotRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request value) {
        if (snapshotRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.add(index, value);
          onChanged();
        } else {
          snapshotRequestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder addSnapshotRequests(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder builderForValue) {
        if (snapshotRequestsBuilder_ == null) {
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.add(builderForValue.build());
          onChanged();
        } else {
          snapshotRequestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder addSnapshotRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder builderForValue) {
        if (snapshotRequestsBuilder_ == null) {
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.add(index, builderForValue.build());
          onChanged();
        } else {
          snapshotRequestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder addAllSnapshotRequests(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request> values) {
        if (snapshotRequestsBuilder_ == null) {
          ensureSnapshotRequestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, snapshotRequests_);
          onChanged();
        } else {
          snapshotRequestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder clearSnapshotRequests() {
        if (snapshotRequestsBuilder_ == null) {
          snapshotRequests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          snapshotRequestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public Builder removeSnapshotRequests(int index) {
        if (snapshotRequestsBuilder_ == null) {
          ensureSnapshotRequestsIsMutable();
          snapshotRequests_.remove(index);
          onChanged();
        } else {
          snapshotRequestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder getSnapshotRequestsBuilder(
          int index) {
        return getSnapshotRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder getSnapshotRequestsOrBuilder(
          int index) {
        if (snapshotRequestsBuilder_ == null) {
          return snapshotRequests_.get(index);  } else {
          return snapshotRequestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder> 
           getSnapshotRequestsOrBuilderList() {
        if (snapshotRequestsBuilder_ != null) {
          return snapshotRequestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(snapshotRequests_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder addSnapshotRequestsBuilder() {
        return getSnapshotRequestsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder addSnapshotRequestsBuilder(
          int index) {
        return getSnapshotRequestsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Request snapshot_requests = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder> 
           getSnapshotRequestsBuilderList() {
        return getSnapshotRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder> 
          getSnapshotRequestsFieldBuilder() {
        if (snapshotRequestsBuilder_ == null) {
          snapshotRequestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_RequestOrBuilder>(
                  snapshotRequests_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          snapshotRequests_ = null;
        }
        return snapshotRequestsBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request> inferenceRequests_ =
        java.util.Collections.emptyList();
      private void ensureInferenceRequestsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          inferenceRequests_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request>(inferenceRequests_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder> inferenceRequestsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request> getInferenceRequestsList() {
        if (inferenceRequestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inferenceRequests_);
        } else {
          return inferenceRequestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public int getInferenceRequestsCount() {
        if (inferenceRequestsBuilder_ == null) {
          return inferenceRequests_.size();
        } else {
          return inferenceRequestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request getInferenceRequests(int index) {
        if (inferenceRequestsBuilder_ == null) {
          return inferenceRequests_.get(index);
        } else {
          return inferenceRequestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder setInferenceRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request value) {
        if (inferenceRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.set(index, value);
          onChanged();
        } else {
          inferenceRequestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder setInferenceRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder builderForValue) {
        if (inferenceRequestsBuilder_ == null) {
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.set(index, builderForValue.build());
          onChanged();
        } else {
          inferenceRequestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder addInferenceRequests(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request value) {
        if (inferenceRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.add(value);
          onChanged();
        } else {
          inferenceRequestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder addInferenceRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request value) {
        if (inferenceRequestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.add(index, value);
          onChanged();
        } else {
          inferenceRequestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder addInferenceRequests(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder builderForValue) {
        if (inferenceRequestsBuilder_ == null) {
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.add(builderForValue.build());
          onChanged();
        } else {
          inferenceRequestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder addInferenceRequests(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder builderForValue) {
        if (inferenceRequestsBuilder_ == null) {
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.add(index, builderForValue.build());
          onChanged();
        } else {
          inferenceRequestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder addAllInferenceRequests(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request> values) {
        if (inferenceRequestsBuilder_ == null) {
          ensureInferenceRequestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inferenceRequests_);
          onChanged();
        } else {
          inferenceRequestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder clearInferenceRequests() {
        if (inferenceRequestsBuilder_ == null) {
          inferenceRequests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          inferenceRequestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public Builder removeInferenceRequests(int index) {
        if (inferenceRequestsBuilder_ == null) {
          ensureInferenceRequestsIsMutable();
          inferenceRequests_.remove(index);
          onChanged();
        } else {
          inferenceRequestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder getInferenceRequestsBuilder(
          int index) {
        return getInferenceRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder getInferenceRequestsOrBuilder(
          int index) {
        if (inferenceRequestsBuilder_ == null) {
          return inferenceRequests_.get(index);  } else {
          return inferenceRequestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder> 
           getInferenceRequestsOrBuilderList() {
        if (inferenceRequestsBuilder_ != null) {
          return inferenceRequestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inferenceRequests_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder addInferenceRequestsBuilder() {
        return getInferenceRequestsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder addInferenceRequestsBuilder(
          int index) {
        return getInferenceRequestsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Request inference_requests = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder> 
           getInferenceRequestsBuilderList() {
        return getInferenceRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder> 
          getInferenceRequestsFieldBuilder() {
        if (inferenceRequestsBuilder_ == null) {
          inferenceRequestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder>(
                  inferenceRequests_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          inferenceRequests_ = null;
        }
        return inferenceRequestsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_BatchOperation_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_BatchOperation_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_BatchOperation_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_BatchOperation_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_BatchOperation_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_BatchOperation_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_BatchOperation_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_BatchOperation_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_BatchOperation_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response> 
        getCacheDataResponsesList();
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response getCacheDataResponses(int index);
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    int getCacheDataResponsesCount();
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder> 
        getCacheDataResponsesOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder getCacheDataResponsesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response> 
        getSnapshotResponsesList();
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response getSnapshotResponses(int index);
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    int getSnapshotResponsesCount();
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder> 
        getSnapshotResponsesOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder getSnapshotResponsesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response> 
        getInferenceResponsesList();
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response getInferenceResponses(int index);
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    int getInferenceResponsesCount();
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder> 
        getInferenceResponsesOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder getInferenceResponsesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_BatchOperation_Response}
   */
  public static final class CMsgSteamLearn_BatchOperation_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_BatchOperation_Response)
      CMsgSteamLearn_BatchOperation_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_BatchOperation_Response.class.getName());
    }
    // Use CMsgSteamLearn_BatchOperation_Response.newBuilder() to construct.
    private CMsgSteamLearn_BatchOperation_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_BatchOperation_Response() {
      cacheDataResponses_ = java.util.Collections.emptyList();
      snapshotResponses_ = java.util.Collections.emptyList();
      inferenceResponses_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.Builder.class);
    }

    public static final int CACHE_DATA_RESPONSES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response> cacheDataResponses_;
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response> getCacheDataResponsesList() {
      return cacheDataResponses_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder> 
        getCacheDataResponsesOrBuilderList() {
      return cacheDataResponses_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    @java.lang.Override
    public int getCacheDataResponsesCount() {
      return cacheDataResponses_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response getCacheDataResponses(int index) {
      return cacheDataResponses_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder getCacheDataResponsesOrBuilder(
        int index) {
      return cacheDataResponses_.get(index);
    }

    public static final int SNAPSHOT_RESPONSES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response> snapshotResponses_;
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response> getSnapshotResponsesList() {
      return snapshotResponses_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder> 
        getSnapshotResponsesOrBuilderList() {
      return snapshotResponses_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    @java.lang.Override
    public int getSnapshotResponsesCount() {
      return snapshotResponses_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response getSnapshotResponses(int index) {
      return snapshotResponses_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder getSnapshotResponsesOrBuilder(
        int index) {
      return snapshotResponses_.get(index);
    }

    public static final int INFERENCE_RESPONSES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response> inferenceResponses_;
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response> getInferenceResponsesList() {
      return inferenceResponses_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder> 
        getInferenceResponsesOrBuilderList() {
      return inferenceResponses_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    @java.lang.Override
    public int getInferenceResponsesCount() {
      return inferenceResponses_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response getInferenceResponses(int index) {
      return inferenceResponses_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder getInferenceResponsesOrBuilder(
        int index) {
      return inferenceResponses_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cacheDataResponses_.size(); i++) {
        output.writeMessage(1, cacheDataResponses_.get(i));
      }
      for (int i = 0; i < snapshotResponses_.size(); i++) {
        output.writeMessage(2, snapshotResponses_.get(i));
      }
      for (int i = 0; i < inferenceResponses_.size(); i++) {
        output.writeMessage(3, inferenceResponses_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cacheDataResponses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cacheDataResponses_.get(i));
      }
      for (int i = 0; i < snapshotResponses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, snapshotResponses_.get(i));
      }
      for (int i = 0; i < inferenceResponses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, inferenceResponses_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response) obj;

      if (!getCacheDataResponsesList()
          .equals(other.getCacheDataResponsesList())) return false;
      if (!getSnapshotResponsesList()
          .equals(other.getSnapshotResponsesList())) return false;
      if (!getInferenceResponsesList()
          .equals(other.getInferenceResponsesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCacheDataResponsesCount() > 0) {
        hash = (37 * hash) + CACHE_DATA_RESPONSES_FIELD_NUMBER;
        hash = (53 * hash) + getCacheDataResponsesList().hashCode();
      }
      if (getSnapshotResponsesCount() > 0) {
        hash = (37 * hash) + SNAPSHOT_RESPONSES_FIELD_NUMBER;
        hash = (53 * hash) + getSnapshotResponsesList().hashCode();
      }
      if (getInferenceResponsesCount() > 0) {
        hash = (37 * hash) + INFERENCE_RESPONSES_FIELD_NUMBER;
        hash = (53 * hash) + getInferenceResponsesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_BatchOperation_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_BatchOperation_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (cacheDataResponsesBuilder_ == null) {
          cacheDataResponses_ = java.util.Collections.emptyList();
        } else {
          cacheDataResponses_ = null;
          cacheDataResponsesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (snapshotResponsesBuilder_ == null) {
          snapshotResponses_ = java.util.Collections.emptyList();
        } else {
          snapshotResponses_ = null;
          snapshotResponsesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (inferenceResponsesBuilder_ == null) {
          inferenceResponses_ = java.util.Collections.emptyList();
        } else {
          inferenceResponses_ = null;
          inferenceResponsesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_BatchOperation_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response result) {
        if (cacheDataResponsesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cacheDataResponses_ = java.util.Collections.unmodifiableList(cacheDataResponses_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cacheDataResponses_ = cacheDataResponses_;
        } else {
          result.cacheDataResponses_ = cacheDataResponsesBuilder_.build();
        }
        if (snapshotResponsesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            snapshotResponses_ = java.util.Collections.unmodifiableList(snapshotResponses_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.snapshotResponses_ = snapshotResponses_;
        } else {
          result.snapshotResponses_ = snapshotResponsesBuilder_.build();
        }
        if (inferenceResponsesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            inferenceResponses_ = java.util.Collections.unmodifiableList(inferenceResponses_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.inferenceResponses_ = inferenceResponses_;
        } else {
          result.inferenceResponses_ = inferenceResponsesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response.getDefaultInstance()) return this;
        if (cacheDataResponsesBuilder_ == null) {
          if (!other.cacheDataResponses_.isEmpty()) {
            if (cacheDataResponses_.isEmpty()) {
              cacheDataResponses_ = other.cacheDataResponses_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCacheDataResponsesIsMutable();
              cacheDataResponses_.addAll(other.cacheDataResponses_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheDataResponses_.isEmpty()) {
            if (cacheDataResponsesBuilder_.isEmpty()) {
              cacheDataResponsesBuilder_.dispose();
              cacheDataResponsesBuilder_ = null;
              cacheDataResponses_ = other.cacheDataResponses_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cacheDataResponsesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheDataResponsesFieldBuilder() : null;
            } else {
              cacheDataResponsesBuilder_.addAllMessages(other.cacheDataResponses_);
            }
          }
        }
        if (snapshotResponsesBuilder_ == null) {
          if (!other.snapshotResponses_.isEmpty()) {
            if (snapshotResponses_.isEmpty()) {
              snapshotResponses_ = other.snapshotResponses_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSnapshotResponsesIsMutable();
              snapshotResponses_.addAll(other.snapshotResponses_);
            }
            onChanged();
          }
        } else {
          if (!other.snapshotResponses_.isEmpty()) {
            if (snapshotResponsesBuilder_.isEmpty()) {
              snapshotResponsesBuilder_.dispose();
              snapshotResponsesBuilder_ = null;
              snapshotResponses_ = other.snapshotResponses_;
              bitField0_ = (bitField0_ & ~0x00000002);
              snapshotResponsesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSnapshotResponsesFieldBuilder() : null;
            } else {
              snapshotResponsesBuilder_.addAllMessages(other.snapshotResponses_);
            }
          }
        }
        if (inferenceResponsesBuilder_ == null) {
          if (!other.inferenceResponses_.isEmpty()) {
            if (inferenceResponses_.isEmpty()) {
              inferenceResponses_ = other.inferenceResponses_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInferenceResponsesIsMutable();
              inferenceResponses_.addAll(other.inferenceResponses_);
            }
            onChanged();
          }
        } else {
          if (!other.inferenceResponses_.isEmpty()) {
            if (inferenceResponsesBuilder_.isEmpty()) {
              inferenceResponsesBuilder_.dispose();
              inferenceResponsesBuilder_ = null;
              inferenceResponses_ = other.inferenceResponses_;
              bitField0_ = (bitField0_ & ~0x00000004);
              inferenceResponsesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInferenceResponsesFieldBuilder() : null;
            } else {
              inferenceResponsesBuilder_.addAllMessages(other.inferenceResponses_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.parser(),
                        extensionRegistry);
                if (cacheDataResponsesBuilder_ == null) {
                  ensureCacheDataResponsesIsMutable();
                  cacheDataResponses_.add(m);
                } else {
                  cacheDataResponsesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.parser(),
                        extensionRegistry);
                if (snapshotResponsesBuilder_ == null) {
                  ensureSnapshotResponsesIsMutable();
                  snapshotResponses_.add(m);
                } else {
                  snapshotResponsesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.parser(),
                        extensionRegistry);
                if (inferenceResponsesBuilder_ == null) {
                  ensureInferenceResponsesIsMutable();
                  inferenceResponses_.add(m);
                } else {
                  inferenceResponsesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response> cacheDataResponses_ =
        java.util.Collections.emptyList();
      private void ensureCacheDataResponsesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cacheDataResponses_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response>(cacheDataResponses_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder> cacheDataResponsesBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response> getCacheDataResponsesList() {
        if (cacheDataResponsesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheDataResponses_);
        } else {
          return cacheDataResponsesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public int getCacheDataResponsesCount() {
        if (cacheDataResponsesBuilder_ == null) {
          return cacheDataResponses_.size();
        } else {
          return cacheDataResponsesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response getCacheDataResponses(int index) {
        if (cacheDataResponsesBuilder_ == null) {
          return cacheDataResponses_.get(index);
        } else {
          return cacheDataResponsesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder setCacheDataResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response value) {
        if (cacheDataResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.set(index, value);
          onChanged();
        } else {
          cacheDataResponsesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder setCacheDataResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder builderForValue) {
        if (cacheDataResponsesBuilder_ == null) {
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheDataResponsesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder addCacheDataResponses(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response value) {
        if (cacheDataResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.add(value);
          onChanged();
        } else {
          cacheDataResponsesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder addCacheDataResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response value) {
        if (cacheDataResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.add(index, value);
          onChanged();
        } else {
          cacheDataResponsesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder addCacheDataResponses(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder builderForValue) {
        if (cacheDataResponsesBuilder_ == null) {
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.add(builderForValue.build());
          onChanged();
        } else {
          cacheDataResponsesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder addCacheDataResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder builderForValue) {
        if (cacheDataResponsesBuilder_ == null) {
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheDataResponsesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder addAllCacheDataResponses(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response> values) {
        if (cacheDataResponsesBuilder_ == null) {
          ensureCacheDataResponsesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheDataResponses_);
          onChanged();
        } else {
          cacheDataResponsesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder clearCacheDataResponses() {
        if (cacheDataResponsesBuilder_ == null) {
          cacheDataResponses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cacheDataResponsesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public Builder removeCacheDataResponses(int index) {
        if (cacheDataResponsesBuilder_ == null) {
          ensureCacheDataResponsesIsMutable();
          cacheDataResponses_.remove(index);
          onChanged();
        } else {
          cacheDataResponsesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder getCacheDataResponsesBuilder(
          int index) {
        return getCacheDataResponsesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder getCacheDataResponsesOrBuilder(
          int index) {
        if (cacheDataResponsesBuilder_ == null) {
          return cacheDataResponses_.get(index);  } else {
          return cacheDataResponsesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder> 
           getCacheDataResponsesOrBuilderList() {
        if (cacheDataResponsesBuilder_ != null) {
          return cacheDataResponsesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheDataResponses_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder addCacheDataResponsesBuilder() {
        return getCacheDataResponsesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder addCacheDataResponsesBuilder(
          int index) {
        return getCacheDataResponsesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_CacheData_Response cache_data_responses = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder> 
           getCacheDataResponsesBuilderList() {
        return getCacheDataResponsesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder> 
          getCacheDataResponsesFieldBuilder() {
        if (cacheDataResponsesBuilder_ == null) {
          cacheDataResponsesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_CacheData_ResponseOrBuilder>(
                  cacheDataResponses_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cacheDataResponses_ = null;
        }
        return cacheDataResponsesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response> snapshotResponses_ =
        java.util.Collections.emptyList();
      private void ensureSnapshotResponsesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          snapshotResponses_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response>(snapshotResponses_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder> snapshotResponsesBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response> getSnapshotResponsesList() {
        if (snapshotResponsesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(snapshotResponses_);
        } else {
          return snapshotResponsesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public int getSnapshotResponsesCount() {
        if (snapshotResponsesBuilder_ == null) {
          return snapshotResponses_.size();
        } else {
          return snapshotResponsesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response getSnapshotResponses(int index) {
        if (snapshotResponsesBuilder_ == null) {
          return snapshotResponses_.get(index);
        } else {
          return snapshotResponsesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder setSnapshotResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response value) {
        if (snapshotResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.set(index, value);
          onChanged();
        } else {
          snapshotResponsesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder setSnapshotResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder builderForValue) {
        if (snapshotResponsesBuilder_ == null) {
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.set(index, builderForValue.build());
          onChanged();
        } else {
          snapshotResponsesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder addSnapshotResponses(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response value) {
        if (snapshotResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.add(value);
          onChanged();
        } else {
          snapshotResponsesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder addSnapshotResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response value) {
        if (snapshotResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.add(index, value);
          onChanged();
        } else {
          snapshotResponsesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder addSnapshotResponses(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder builderForValue) {
        if (snapshotResponsesBuilder_ == null) {
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.add(builderForValue.build());
          onChanged();
        } else {
          snapshotResponsesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder addSnapshotResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder builderForValue) {
        if (snapshotResponsesBuilder_ == null) {
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.add(index, builderForValue.build());
          onChanged();
        } else {
          snapshotResponsesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder addAllSnapshotResponses(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response> values) {
        if (snapshotResponsesBuilder_ == null) {
          ensureSnapshotResponsesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, snapshotResponses_);
          onChanged();
        } else {
          snapshotResponsesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder clearSnapshotResponses() {
        if (snapshotResponsesBuilder_ == null) {
          snapshotResponses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          snapshotResponsesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public Builder removeSnapshotResponses(int index) {
        if (snapshotResponsesBuilder_ == null) {
          ensureSnapshotResponsesIsMutable();
          snapshotResponses_.remove(index);
          onChanged();
        } else {
          snapshotResponsesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder getSnapshotResponsesBuilder(
          int index) {
        return getSnapshotResponsesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder getSnapshotResponsesOrBuilder(
          int index) {
        if (snapshotResponsesBuilder_ == null) {
          return snapshotResponses_.get(index);  } else {
          return snapshotResponsesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder> 
           getSnapshotResponsesOrBuilderList() {
        if (snapshotResponsesBuilder_ != null) {
          return snapshotResponsesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(snapshotResponses_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder addSnapshotResponsesBuilder() {
        return getSnapshotResponsesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder addSnapshotResponsesBuilder(
          int index) {
        return getSnapshotResponsesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_SnapshotProject_Response snapshot_responses = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder> 
           getSnapshotResponsesBuilderList() {
        return getSnapshotResponsesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder> 
          getSnapshotResponsesFieldBuilder() {
        if (snapshotResponsesBuilder_ == null) {
          snapshotResponsesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_SnapshotProject_ResponseOrBuilder>(
                  snapshotResponses_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          snapshotResponses_ = null;
        }
        return snapshotResponsesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response> inferenceResponses_ =
        java.util.Collections.emptyList();
      private void ensureInferenceResponsesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          inferenceResponses_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response>(inferenceResponses_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder> inferenceResponsesBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response> getInferenceResponsesList() {
        if (inferenceResponsesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inferenceResponses_);
        } else {
          return inferenceResponsesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public int getInferenceResponsesCount() {
        if (inferenceResponsesBuilder_ == null) {
          return inferenceResponses_.size();
        } else {
          return inferenceResponsesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response getInferenceResponses(int index) {
        if (inferenceResponsesBuilder_ == null) {
          return inferenceResponses_.get(index);
        } else {
          return inferenceResponsesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder setInferenceResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response value) {
        if (inferenceResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.set(index, value);
          onChanged();
        } else {
          inferenceResponsesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder setInferenceResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder builderForValue) {
        if (inferenceResponsesBuilder_ == null) {
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.set(index, builderForValue.build());
          onChanged();
        } else {
          inferenceResponsesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder addInferenceResponses(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response value) {
        if (inferenceResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.add(value);
          onChanged();
        } else {
          inferenceResponsesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder addInferenceResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response value) {
        if (inferenceResponsesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.add(index, value);
          onChanged();
        } else {
          inferenceResponsesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder addInferenceResponses(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder builderForValue) {
        if (inferenceResponsesBuilder_ == null) {
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.add(builderForValue.build());
          onChanged();
        } else {
          inferenceResponsesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder addInferenceResponses(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder builderForValue) {
        if (inferenceResponsesBuilder_ == null) {
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.add(index, builderForValue.build());
          onChanged();
        } else {
          inferenceResponsesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder addAllInferenceResponses(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response> values) {
        if (inferenceResponsesBuilder_ == null) {
          ensureInferenceResponsesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inferenceResponses_);
          onChanged();
        } else {
          inferenceResponsesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder clearInferenceResponses() {
        if (inferenceResponsesBuilder_ == null) {
          inferenceResponses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          inferenceResponsesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public Builder removeInferenceResponses(int index) {
        if (inferenceResponsesBuilder_ == null) {
          ensureInferenceResponsesIsMutable();
          inferenceResponses_.remove(index);
          onChanged();
        } else {
          inferenceResponsesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder getInferenceResponsesBuilder(
          int index) {
        return getInferenceResponsesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder getInferenceResponsesOrBuilder(
          int index) {
        if (inferenceResponsesBuilder_ == null) {
          return inferenceResponses_.get(index);  } else {
          return inferenceResponsesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder> 
           getInferenceResponsesOrBuilderList() {
        if (inferenceResponsesBuilder_ != null) {
          return inferenceResponsesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inferenceResponses_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder addInferenceResponsesBuilder() {
        return getInferenceResponsesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder addInferenceResponsesBuilder(
          int index) {
        return getInferenceResponsesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_Inference_Response inference_responses = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder> 
           getInferenceResponsesBuilderList() {
        return getInferenceResponsesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder> 
          getInferenceResponsesFieldBuilder() {
        if (inferenceResponsesBuilder_ == null) {
          inferenceResponsesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder>(
                  inferenceResponses_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          inferenceResponses_ = null;
        }
        return inferenceResponsesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_BatchOperation_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_BatchOperation_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_BatchOperation_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_BatchOperation_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_BatchOperation_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_BatchOperation_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_BatchOperation_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_BatchOperation_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearnAccessTokensOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearnAccessTokens)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string register_data_source_access_token = 1;</code>
     * @return Whether the registerDataSourceAccessToken field is set.
     */
    boolean hasRegisterDataSourceAccessToken();
    /**
     * <code>optional string register_data_source_access_token = 1;</code>
     * @return The registerDataSourceAccessToken.
     */
    java.lang.String getRegisterDataSourceAccessToken();
    /**
     * <code>optional string register_data_source_access_token = 1;</code>
     * @return The bytes for registerDataSourceAccessToken.
     */
    com.google.protobuf.ByteString
        getRegisterDataSourceAccessTokenBytes();

    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken> 
        getCacheDataAccessTokensList();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken getCacheDataAccessTokens(int index);
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    int getCacheDataAccessTokensCount();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder> 
        getCacheDataAccessTokensOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder getCacheDataAccessTokensOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken> 
        getSnapshotProjectAccessTokensList();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken getSnapshotProjectAccessTokens(int index);
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    int getSnapshotProjectAccessTokensCount();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder> 
        getSnapshotProjectAccessTokensOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder getSnapshotProjectAccessTokensOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken> 
        getInferenceAccessTokensList();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken getInferenceAccessTokens(int index);
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    int getInferenceAccessTokensCount();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder> 
        getInferenceAccessTokensOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder getInferenceAccessTokensOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearnAccessTokens}
   */
  public static final class CMsgSteamLearnAccessTokens extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearnAccessTokens)
      CMsgSteamLearnAccessTokensOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearnAccessTokens.class.getName());
    }
    // Use CMsgSteamLearnAccessTokens.newBuilder() to construct.
    private CMsgSteamLearnAccessTokens(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearnAccessTokens() {
      registerDataSourceAccessToken_ = "";
      cacheDataAccessTokens_ = java.util.Collections.emptyList();
      snapshotProjectAccessTokens_ = java.util.Collections.emptyList();
      inferenceAccessTokens_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder.class);
    }

    public interface CacheDataAccessTokenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearnAccessTokens.CacheDataAccessToken)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return Whether the dataSourceId field is set.
       */
      boolean hasDataSourceId();
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return The dataSourceId.
       */
      int getDataSourceId();

      /**
       * <code>optional string access_token = 2;</code>
       * @return Whether the accessToken field is set.
       */
      boolean hasAccessToken();
      /**
       * <code>optional string access_token = 2;</code>
       * @return The accessToken.
       */
      java.lang.String getAccessToken();
      /**
       * <code>optional string access_token = 2;</code>
       * @return The bytes for accessToken.
       */
      com.google.protobuf.ByteString
          getAccessTokenBytes();
    }
    /**
     * Protobuf type {@code CMsgSteamLearnAccessTokens.CacheDataAccessToken}
     */
    public static final class CacheDataAccessToken extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearnAccessTokens.CacheDataAccessToken)
        CacheDataAccessTokenOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          CacheDataAccessToken.class.getName());
      }
      // Use CacheDataAccessToken.newBuilder() to construct.
      private CacheDataAccessToken(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private CacheDataAccessToken() {
        accessToken_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder.class);
      }

      private int bitField0_;
      public static final int DATA_SOURCE_ID_FIELD_NUMBER = 1;
      private int dataSourceId_ = 0;
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return Whether the dataSourceId field is set.
       */
      @java.lang.Override
      public boolean hasDataSourceId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 data_source_id = 1;</code>
       * @return The dataSourceId.
       */
      @java.lang.Override
      public int getDataSourceId() {
        return dataSourceId_;
      }

      public static final int ACCESS_TOKEN_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 2;</code>
       * @return Whether the accessToken field is set.
       */
      @java.lang.Override
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string access_token = 2;</code>
       * @return The accessToken.
       */
      @java.lang.Override
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string access_token = 2;</code>
       * @return The bytes for accessToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, dataSourceId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, accessToken_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, dataSourceId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, accessToken_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken) obj;

        if (hasDataSourceId() != other.hasDataSourceId()) return false;
        if (hasDataSourceId()) {
          if (getDataSourceId()
              != other.getDataSourceId()) return false;
        }
        if (hasAccessToken() != other.hasAccessToken()) return false;
        if (hasAccessToken()) {
          if (!getAccessToken()
              .equals(other.getAccessToken())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDataSourceId()) {
          hash = (37 * hash) + DATA_SOURCE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getDataSourceId();
        }
        if (hasAccessToken()) {
          hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + getAccessToken().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearnAccessTokens.CacheDataAccessToken}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearnAccessTokens.CacheDataAccessToken)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          dataSourceId_ = 0;
          accessToken_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.dataSourceId_ = dataSourceId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.accessToken_ = accessToken_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.getDefaultInstance()) return this;
          if (other.hasDataSourceId()) {
            setDataSourceId(other.getDataSourceId());
          }
          if (other.hasAccessToken()) {
            accessToken_ = other.accessToken_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  dataSourceId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  accessToken_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int dataSourceId_ ;
        /**
         * <code>optional uint32 data_source_id = 1;</code>
         * @return Whether the dataSourceId field is set.
         */
        @java.lang.Override
        public boolean hasDataSourceId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 data_source_id = 1;</code>
         * @return The dataSourceId.
         */
        @java.lang.Override
        public int getDataSourceId() {
          return dataSourceId_;
        }
        /**
         * <code>optional uint32 data_source_id = 1;</code>
         * @param value The dataSourceId to set.
         * @return This builder for chaining.
         */
        public Builder setDataSourceId(int value) {

          dataSourceId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 data_source_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDataSourceId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dataSourceId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object accessToken_ = "";
        /**
         * <code>optional string access_token = 2;</code>
         * @return Whether the accessToken field is set.
         */
        public boolean hasAccessToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return The accessToken.
         */
        public java.lang.String getAccessToken() {
          java.lang.Object ref = accessToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              accessToken_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return The bytes for accessToken.
         */
        public com.google.protobuf.ByteString
            getAccessTokenBytes() {
          java.lang.Object ref = accessToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            accessToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @param value The accessToken to set.
         * @return This builder for chaining.
         */
        public Builder setAccessToken(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          accessToken_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccessToken() {
          accessToken_ = getDefaultInstance().getAccessToken();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @param value The bytes for accessToken to set.
         * @return This builder for chaining.
         */
        public Builder setAccessTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          accessToken_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearnAccessTokens.CacheDataAccessToken)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearnAccessTokens.CacheDataAccessToken)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CacheDataAccessToken>
          PARSER = new com.google.protobuf.AbstractParser<CacheDataAccessToken>() {
        @java.lang.Override
        public CacheDataAccessToken parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<CacheDataAccessToken> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CacheDataAccessToken> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SnapshotProjectAccessTokenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return Whether the projectId field is set.
       */
      boolean hasProjectId();
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return The projectId.
       */
      int getProjectId();

      /**
       * <code>optional string access_token = 2;</code>
       * @return Whether the accessToken field is set.
       */
      boolean hasAccessToken();
      /**
       * <code>optional string access_token = 2;</code>
       * @return The accessToken.
       */
      java.lang.String getAccessToken();
      /**
       * <code>optional string access_token = 2;</code>
       * @return The bytes for accessToken.
       */
      com.google.protobuf.ByteString
          getAccessTokenBytes();
    }
    /**
     * Protobuf type {@code CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken}
     */
    public static final class SnapshotProjectAccessToken extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)
        SnapshotProjectAccessTokenOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          SnapshotProjectAccessToken.class.getName());
      }
      // Use SnapshotProjectAccessToken.newBuilder() to construct.
      private SnapshotProjectAccessToken(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private SnapshotProjectAccessToken() {
        accessToken_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder.class);
      }

      private int bitField0_;
      public static final int PROJECT_ID_FIELD_NUMBER = 1;
      private int projectId_ = 0;
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return Whether the projectId field is set.
       */
      @java.lang.Override
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }

      public static final int ACCESS_TOKEN_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 2;</code>
       * @return Whether the accessToken field is set.
       */
      @java.lang.Override
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string access_token = 2;</code>
       * @return The accessToken.
       */
      @java.lang.Override
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string access_token = 2;</code>
       * @return The bytes for accessToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, projectId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, accessToken_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, projectId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, accessToken_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken) obj;

        if (hasProjectId() != other.hasProjectId()) return false;
        if (hasProjectId()) {
          if (getProjectId()
              != other.getProjectId()) return false;
        }
        if (hasAccessToken() != other.hasAccessToken()) return false;
        if (hasAccessToken()) {
          if (!getAccessToken()
              .equals(other.getAccessToken())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasProjectId()) {
          hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getProjectId();
        }
        if (hasAccessToken()) {
          hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + getAccessToken().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          projectId_ = 0;
          accessToken_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.projectId_ = projectId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.accessToken_ = accessToken_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.getDefaultInstance()) return this;
          if (other.hasProjectId()) {
            setProjectId(other.getProjectId());
          }
          if (other.hasAccessToken()) {
            accessToken_ = other.accessToken_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  projectId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  accessToken_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int projectId_ ;
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @return Whether the projectId field is set.
         */
        @java.lang.Override
        public boolean hasProjectId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @return The projectId.
         */
        @java.lang.Override
        public int getProjectId() {
          return projectId_;
        }
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @param value The projectId to set.
         * @return This builder for chaining.
         */
        public Builder setProjectId(int value) {

          projectId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          projectId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object accessToken_ = "";
        /**
         * <code>optional string access_token = 2;</code>
         * @return Whether the accessToken field is set.
         */
        public boolean hasAccessToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return The accessToken.
         */
        public java.lang.String getAccessToken() {
          java.lang.Object ref = accessToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              accessToken_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return The bytes for accessToken.
         */
        public com.google.protobuf.ByteString
            getAccessTokenBytes() {
          java.lang.Object ref = accessToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            accessToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @param value The accessToken to set.
         * @return This builder for chaining.
         */
        public Builder setAccessToken(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          accessToken_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccessToken() {
          accessToken_ = getDefaultInstance().getAccessToken();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @param value The bytes for accessToken to set.
         * @return This builder for chaining.
         */
        public Builder setAccessTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          accessToken_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SnapshotProjectAccessToken>
          PARSER = new com.google.protobuf.AbstractParser<SnapshotProjectAccessToken>() {
        @java.lang.Override
        public SnapshotProjectAccessToken parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SnapshotProjectAccessToken> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SnapshotProjectAccessToken> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InferenceAccessTokenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearnAccessTokens.InferenceAccessToken)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return Whether the projectId field is set.
       */
      boolean hasProjectId();
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return The projectId.
       */
      int getProjectId();

      /**
       * <code>optional string access_token = 2;</code>
       * @return Whether the accessToken field is set.
       */
      boolean hasAccessToken();
      /**
       * <code>optional string access_token = 2;</code>
       * @return The accessToken.
       */
      java.lang.String getAccessToken();
      /**
       * <code>optional string access_token = 2;</code>
       * @return The bytes for accessToken.
       */
      com.google.protobuf.ByteString
          getAccessTokenBytes();
    }
    /**
     * Protobuf type {@code CMsgSteamLearnAccessTokens.InferenceAccessToken}
     */
    public static final class InferenceAccessToken extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearnAccessTokens.InferenceAccessToken)
        InferenceAccessTokenOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          InferenceAccessToken.class.getName());
      }
      // Use InferenceAccessToken.newBuilder() to construct.
      private InferenceAccessToken(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private InferenceAccessToken() {
        accessToken_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder.class);
      }

      private int bitField0_;
      public static final int PROJECT_ID_FIELD_NUMBER = 1;
      private int projectId_ = 0;
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return Whether the projectId field is set.
       */
      @java.lang.Override
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }

      public static final int ACCESS_TOKEN_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 2;</code>
       * @return Whether the accessToken field is set.
       */
      @java.lang.Override
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string access_token = 2;</code>
       * @return The accessToken.
       */
      @java.lang.Override
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string access_token = 2;</code>
       * @return The bytes for accessToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, projectId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, accessToken_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, projectId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, accessToken_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken) obj;

        if (hasProjectId() != other.hasProjectId()) return false;
        if (hasProjectId()) {
          if (getProjectId()
              != other.getProjectId()) return false;
        }
        if (hasAccessToken() != other.hasAccessToken()) return false;
        if (hasAccessToken()) {
          if (!getAccessToken()
              .equals(other.getAccessToken())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasProjectId()) {
          hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getProjectId();
        }
        if (hasAccessToken()) {
          hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + getAccessToken().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearnAccessTokens.InferenceAccessToken}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearnAccessTokens.InferenceAccessToken)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          projectId_ = 0;
          accessToken_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.projectId_ = projectId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.accessToken_ = accessToken_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.getDefaultInstance()) return this;
          if (other.hasProjectId()) {
            setProjectId(other.getProjectId());
          }
          if (other.hasAccessToken()) {
            accessToken_ = other.accessToken_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  projectId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  accessToken_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int projectId_ ;
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @return Whether the projectId field is set.
         */
        @java.lang.Override
        public boolean hasProjectId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @return The projectId.
         */
        @java.lang.Override
        public int getProjectId() {
          return projectId_;
        }
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @param value The projectId to set.
         * @return This builder for chaining.
         */
        public Builder setProjectId(int value) {

          projectId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 project_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          projectId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object accessToken_ = "";
        /**
         * <code>optional string access_token = 2;</code>
         * @return Whether the accessToken field is set.
         */
        public boolean hasAccessToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return The accessToken.
         */
        public java.lang.String getAccessToken() {
          java.lang.Object ref = accessToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              accessToken_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return The bytes for accessToken.
         */
        public com.google.protobuf.ByteString
            getAccessTokenBytes() {
          java.lang.Object ref = accessToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            accessToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @param value The accessToken to set.
         * @return This builder for chaining.
         */
        public Builder setAccessToken(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          accessToken_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccessToken() {
          accessToken_ = getDefaultInstance().getAccessToken();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string access_token = 2;</code>
         * @param value The bytes for accessToken to set.
         * @return This builder for chaining.
         */
        public Builder setAccessTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          accessToken_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearnAccessTokens.InferenceAccessToken)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearnAccessTokens.InferenceAccessToken)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InferenceAccessToken>
          PARSER = new com.google.protobuf.AbstractParser<InferenceAccessToken>() {
        @java.lang.Override
        public InferenceAccessToken parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<InferenceAccessToken> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InferenceAccessToken> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int REGISTER_DATA_SOURCE_ACCESS_TOKEN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object registerDataSourceAccessToken_ = "";
    /**
     * <code>optional string register_data_source_access_token = 1;</code>
     * @return Whether the registerDataSourceAccessToken field is set.
     */
    @java.lang.Override
    public boolean hasRegisterDataSourceAccessToken() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string register_data_source_access_token = 1;</code>
     * @return The registerDataSourceAccessToken.
     */
    @java.lang.Override
    public java.lang.String getRegisterDataSourceAccessToken() {
      java.lang.Object ref = registerDataSourceAccessToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          registerDataSourceAccessToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string register_data_source_access_token = 1;</code>
     * @return The bytes for registerDataSourceAccessToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRegisterDataSourceAccessTokenBytes() {
      java.lang.Object ref = registerDataSourceAccessToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        registerDataSourceAccessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CACHE_DATA_ACCESS_TOKENS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken> cacheDataAccessTokens_;
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken> getCacheDataAccessTokensList() {
      return cacheDataAccessTokens_;
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder> 
        getCacheDataAccessTokensOrBuilderList() {
      return cacheDataAccessTokens_;
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    @java.lang.Override
    public int getCacheDataAccessTokensCount() {
      return cacheDataAccessTokens_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken getCacheDataAccessTokens(int index) {
      return cacheDataAccessTokens_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder getCacheDataAccessTokensOrBuilder(
        int index) {
      return cacheDataAccessTokens_.get(index);
    }

    public static final int SNAPSHOT_PROJECT_ACCESS_TOKENS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken> snapshotProjectAccessTokens_;
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken> getSnapshotProjectAccessTokensList() {
      return snapshotProjectAccessTokens_;
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder> 
        getSnapshotProjectAccessTokensOrBuilderList() {
      return snapshotProjectAccessTokens_;
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    @java.lang.Override
    public int getSnapshotProjectAccessTokensCount() {
      return snapshotProjectAccessTokens_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken getSnapshotProjectAccessTokens(int index) {
      return snapshotProjectAccessTokens_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder getSnapshotProjectAccessTokensOrBuilder(
        int index) {
      return snapshotProjectAccessTokens_.get(index);
    }

    public static final int INFERENCE_ACCESS_TOKENS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken> inferenceAccessTokens_;
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken> getInferenceAccessTokensList() {
      return inferenceAccessTokens_;
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder> 
        getInferenceAccessTokensOrBuilderList() {
      return inferenceAccessTokens_;
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    @java.lang.Override
    public int getInferenceAccessTokensCount() {
      return inferenceAccessTokens_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken getInferenceAccessTokens(int index) {
      return inferenceAccessTokens_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder getInferenceAccessTokensOrBuilder(
        int index) {
      return inferenceAccessTokens_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, registerDataSourceAccessToken_);
      }
      for (int i = 0; i < cacheDataAccessTokens_.size(); i++) {
        output.writeMessage(2, cacheDataAccessTokens_.get(i));
      }
      for (int i = 0; i < snapshotProjectAccessTokens_.size(); i++) {
        output.writeMessage(3, snapshotProjectAccessTokens_.get(i));
      }
      for (int i = 0; i < inferenceAccessTokens_.size(); i++) {
        output.writeMessage(4, inferenceAccessTokens_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, registerDataSourceAccessToken_);
      }
      for (int i = 0; i < cacheDataAccessTokens_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cacheDataAccessTokens_.get(i));
      }
      for (int i = 0; i < snapshotProjectAccessTokens_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, snapshotProjectAccessTokens_.get(i));
      }
      for (int i = 0; i < inferenceAccessTokens_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, inferenceAccessTokens_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens) obj;

      if (hasRegisterDataSourceAccessToken() != other.hasRegisterDataSourceAccessToken()) return false;
      if (hasRegisterDataSourceAccessToken()) {
        if (!getRegisterDataSourceAccessToken()
            .equals(other.getRegisterDataSourceAccessToken())) return false;
      }
      if (!getCacheDataAccessTokensList()
          .equals(other.getCacheDataAccessTokensList())) return false;
      if (!getSnapshotProjectAccessTokensList()
          .equals(other.getSnapshotProjectAccessTokensList())) return false;
      if (!getInferenceAccessTokensList()
          .equals(other.getInferenceAccessTokensList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRegisterDataSourceAccessToken()) {
        hash = (37 * hash) + REGISTER_DATA_SOURCE_ACCESS_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getRegisterDataSourceAccessToken().hashCode();
      }
      if (getCacheDataAccessTokensCount() > 0) {
        hash = (37 * hash) + CACHE_DATA_ACCESS_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getCacheDataAccessTokensList().hashCode();
      }
      if (getSnapshotProjectAccessTokensCount() > 0) {
        hash = (37 * hash) + SNAPSHOT_PROJECT_ACCESS_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getSnapshotProjectAccessTokensList().hashCode();
      }
      if (getInferenceAccessTokensCount() > 0) {
        hash = (37 * hash) + INFERENCE_ACCESS_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getInferenceAccessTokensList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearnAccessTokens}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearnAccessTokens)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        registerDataSourceAccessToken_ = "";
        if (cacheDataAccessTokensBuilder_ == null) {
          cacheDataAccessTokens_ = java.util.Collections.emptyList();
        } else {
          cacheDataAccessTokens_ = null;
          cacheDataAccessTokensBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (snapshotProjectAccessTokensBuilder_ == null) {
          snapshotProjectAccessTokens_ = java.util.Collections.emptyList();
        } else {
          snapshotProjectAccessTokens_ = null;
          snapshotProjectAccessTokensBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (inferenceAccessTokensBuilder_ == null) {
          inferenceAccessTokens_ = java.util.Collections.emptyList();
        } else {
          inferenceAccessTokens_ = null;
          inferenceAccessTokensBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearnAccessTokens_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens result) {
        if (cacheDataAccessTokensBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            cacheDataAccessTokens_ = java.util.Collections.unmodifiableList(cacheDataAccessTokens_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cacheDataAccessTokens_ = cacheDataAccessTokens_;
        } else {
          result.cacheDataAccessTokens_ = cacheDataAccessTokensBuilder_.build();
        }
        if (snapshotProjectAccessTokensBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            snapshotProjectAccessTokens_ = java.util.Collections.unmodifiableList(snapshotProjectAccessTokens_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.snapshotProjectAccessTokens_ = snapshotProjectAccessTokens_;
        } else {
          result.snapshotProjectAccessTokens_ = snapshotProjectAccessTokensBuilder_.build();
        }
        if (inferenceAccessTokensBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            inferenceAccessTokens_ = java.util.Collections.unmodifiableList(inferenceAccessTokens_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.inferenceAccessTokens_ = inferenceAccessTokens_;
        } else {
          result.inferenceAccessTokens_ = inferenceAccessTokensBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.registerDataSourceAccessToken_ = registerDataSourceAccessToken_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance()) return this;
        if (other.hasRegisterDataSourceAccessToken()) {
          registerDataSourceAccessToken_ = other.registerDataSourceAccessToken_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (cacheDataAccessTokensBuilder_ == null) {
          if (!other.cacheDataAccessTokens_.isEmpty()) {
            if (cacheDataAccessTokens_.isEmpty()) {
              cacheDataAccessTokens_ = other.cacheDataAccessTokens_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCacheDataAccessTokensIsMutable();
              cacheDataAccessTokens_.addAll(other.cacheDataAccessTokens_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheDataAccessTokens_.isEmpty()) {
            if (cacheDataAccessTokensBuilder_.isEmpty()) {
              cacheDataAccessTokensBuilder_.dispose();
              cacheDataAccessTokensBuilder_ = null;
              cacheDataAccessTokens_ = other.cacheDataAccessTokens_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cacheDataAccessTokensBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheDataAccessTokensFieldBuilder() : null;
            } else {
              cacheDataAccessTokensBuilder_.addAllMessages(other.cacheDataAccessTokens_);
            }
          }
        }
        if (snapshotProjectAccessTokensBuilder_ == null) {
          if (!other.snapshotProjectAccessTokens_.isEmpty()) {
            if (snapshotProjectAccessTokens_.isEmpty()) {
              snapshotProjectAccessTokens_ = other.snapshotProjectAccessTokens_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSnapshotProjectAccessTokensIsMutable();
              snapshotProjectAccessTokens_.addAll(other.snapshotProjectAccessTokens_);
            }
            onChanged();
          }
        } else {
          if (!other.snapshotProjectAccessTokens_.isEmpty()) {
            if (snapshotProjectAccessTokensBuilder_.isEmpty()) {
              snapshotProjectAccessTokensBuilder_.dispose();
              snapshotProjectAccessTokensBuilder_ = null;
              snapshotProjectAccessTokens_ = other.snapshotProjectAccessTokens_;
              bitField0_ = (bitField0_ & ~0x00000004);
              snapshotProjectAccessTokensBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSnapshotProjectAccessTokensFieldBuilder() : null;
            } else {
              snapshotProjectAccessTokensBuilder_.addAllMessages(other.snapshotProjectAccessTokens_);
            }
          }
        }
        if (inferenceAccessTokensBuilder_ == null) {
          if (!other.inferenceAccessTokens_.isEmpty()) {
            if (inferenceAccessTokens_.isEmpty()) {
              inferenceAccessTokens_ = other.inferenceAccessTokens_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureInferenceAccessTokensIsMutable();
              inferenceAccessTokens_.addAll(other.inferenceAccessTokens_);
            }
            onChanged();
          }
        } else {
          if (!other.inferenceAccessTokens_.isEmpty()) {
            if (inferenceAccessTokensBuilder_.isEmpty()) {
              inferenceAccessTokensBuilder_.dispose();
              inferenceAccessTokensBuilder_ = null;
              inferenceAccessTokens_ = other.inferenceAccessTokens_;
              bitField0_ = (bitField0_ & ~0x00000008);
              inferenceAccessTokensBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInferenceAccessTokensFieldBuilder() : null;
            } else {
              inferenceAccessTokensBuilder_.addAllMessages(other.inferenceAccessTokens_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                registerDataSourceAccessToken_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.parser(),
                        extensionRegistry);
                if (cacheDataAccessTokensBuilder_ == null) {
                  ensureCacheDataAccessTokensIsMutable();
                  cacheDataAccessTokens_.add(m);
                } else {
                  cacheDataAccessTokensBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.parser(),
                        extensionRegistry);
                if (snapshotProjectAccessTokensBuilder_ == null) {
                  ensureSnapshotProjectAccessTokensIsMutable();
                  snapshotProjectAccessTokens_.add(m);
                } else {
                  snapshotProjectAccessTokensBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.parser(),
                        extensionRegistry);
                if (inferenceAccessTokensBuilder_ == null) {
                  ensureInferenceAccessTokensIsMutable();
                  inferenceAccessTokens_.add(m);
                } else {
                  inferenceAccessTokensBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object registerDataSourceAccessToken_ = "";
      /**
       * <code>optional string register_data_source_access_token = 1;</code>
       * @return Whether the registerDataSourceAccessToken field is set.
       */
      public boolean hasRegisterDataSourceAccessToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string register_data_source_access_token = 1;</code>
       * @return The registerDataSourceAccessToken.
       */
      public java.lang.String getRegisterDataSourceAccessToken() {
        java.lang.Object ref = registerDataSourceAccessToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            registerDataSourceAccessToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string register_data_source_access_token = 1;</code>
       * @return The bytes for registerDataSourceAccessToken.
       */
      public com.google.protobuf.ByteString
          getRegisterDataSourceAccessTokenBytes() {
        java.lang.Object ref = registerDataSourceAccessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          registerDataSourceAccessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string register_data_source_access_token = 1;</code>
       * @param value The registerDataSourceAccessToken to set.
       * @return This builder for chaining.
       */
      public Builder setRegisterDataSourceAccessToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        registerDataSourceAccessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string register_data_source_access_token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegisterDataSourceAccessToken() {
        registerDataSourceAccessToken_ = getDefaultInstance().getRegisterDataSourceAccessToken();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string register_data_source_access_token = 1;</code>
       * @param value The bytes for registerDataSourceAccessToken to set.
       * @return This builder for chaining.
       */
      public Builder setRegisterDataSourceAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        registerDataSourceAccessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken> cacheDataAccessTokens_ =
        java.util.Collections.emptyList();
      private void ensureCacheDataAccessTokensIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          cacheDataAccessTokens_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken>(cacheDataAccessTokens_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder> cacheDataAccessTokensBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken> getCacheDataAccessTokensList() {
        if (cacheDataAccessTokensBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheDataAccessTokens_);
        } else {
          return cacheDataAccessTokensBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public int getCacheDataAccessTokensCount() {
        if (cacheDataAccessTokensBuilder_ == null) {
          return cacheDataAccessTokens_.size();
        } else {
          return cacheDataAccessTokensBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken getCacheDataAccessTokens(int index) {
        if (cacheDataAccessTokensBuilder_ == null) {
          return cacheDataAccessTokens_.get(index);
        } else {
          return cacheDataAccessTokensBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder setCacheDataAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken value) {
        if (cacheDataAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.set(index, value);
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder setCacheDataAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder builderForValue) {
        if (cacheDataAccessTokensBuilder_ == null) {
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder addCacheDataAccessTokens(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken value) {
        if (cacheDataAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.add(value);
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder addCacheDataAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken value) {
        if (cacheDataAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.add(index, value);
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder addCacheDataAccessTokens(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder builderForValue) {
        if (cacheDataAccessTokensBuilder_ == null) {
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.add(builderForValue.build());
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder addCacheDataAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder builderForValue) {
        if (cacheDataAccessTokensBuilder_ == null) {
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder addAllCacheDataAccessTokens(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken> values) {
        if (cacheDataAccessTokensBuilder_ == null) {
          ensureCacheDataAccessTokensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheDataAccessTokens_);
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder clearCacheDataAccessTokens() {
        if (cacheDataAccessTokensBuilder_ == null) {
          cacheDataAccessTokens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public Builder removeCacheDataAccessTokens(int index) {
        if (cacheDataAccessTokensBuilder_ == null) {
          ensureCacheDataAccessTokensIsMutable();
          cacheDataAccessTokens_.remove(index);
          onChanged();
        } else {
          cacheDataAccessTokensBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder getCacheDataAccessTokensBuilder(
          int index) {
        return getCacheDataAccessTokensFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder getCacheDataAccessTokensOrBuilder(
          int index) {
        if (cacheDataAccessTokensBuilder_ == null) {
          return cacheDataAccessTokens_.get(index);  } else {
          return cacheDataAccessTokensBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder> 
           getCacheDataAccessTokensOrBuilderList() {
        if (cacheDataAccessTokensBuilder_ != null) {
          return cacheDataAccessTokensBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheDataAccessTokens_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder addCacheDataAccessTokensBuilder() {
        return getCacheDataAccessTokensFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder addCacheDataAccessTokensBuilder(
          int index) {
        return getCacheDataAccessTokensFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.CacheDataAccessToken cache_data_access_tokens = 2;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder> 
           getCacheDataAccessTokensBuilderList() {
        return getCacheDataAccessTokensFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder> 
          getCacheDataAccessTokensFieldBuilder() {
        if (cacheDataAccessTokensBuilder_ == null) {
          cacheDataAccessTokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.CacheDataAccessTokenOrBuilder>(
                  cacheDataAccessTokens_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          cacheDataAccessTokens_ = null;
        }
        return cacheDataAccessTokensBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken> snapshotProjectAccessTokens_ =
        java.util.Collections.emptyList();
      private void ensureSnapshotProjectAccessTokensIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          snapshotProjectAccessTokens_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken>(snapshotProjectAccessTokens_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder> snapshotProjectAccessTokensBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken> getSnapshotProjectAccessTokensList() {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          return java.util.Collections.unmodifiableList(snapshotProjectAccessTokens_);
        } else {
          return snapshotProjectAccessTokensBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public int getSnapshotProjectAccessTokensCount() {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          return snapshotProjectAccessTokens_.size();
        } else {
          return snapshotProjectAccessTokensBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken getSnapshotProjectAccessTokens(int index) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          return snapshotProjectAccessTokens_.get(index);
        } else {
          return snapshotProjectAccessTokensBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder setSnapshotProjectAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken value) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.set(index, value);
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder setSnapshotProjectAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder builderForValue) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.set(index, builderForValue.build());
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder addSnapshotProjectAccessTokens(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken value) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.add(value);
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder addSnapshotProjectAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken value) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.add(index, value);
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder addSnapshotProjectAccessTokens(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder builderForValue) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.add(builderForValue.build());
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder addSnapshotProjectAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder builderForValue) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.add(index, builderForValue.build());
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder addAllSnapshotProjectAccessTokens(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken> values) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          ensureSnapshotProjectAccessTokensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, snapshotProjectAccessTokens_);
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder clearSnapshotProjectAccessTokens() {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          snapshotProjectAccessTokens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public Builder removeSnapshotProjectAccessTokens(int index) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          ensureSnapshotProjectAccessTokensIsMutable();
          snapshotProjectAccessTokens_.remove(index);
          onChanged();
        } else {
          snapshotProjectAccessTokensBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder getSnapshotProjectAccessTokensBuilder(
          int index) {
        return getSnapshotProjectAccessTokensFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder getSnapshotProjectAccessTokensOrBuilder(
          int index) {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          return snapshotProjectAccessTokens_.get(index);  } else {
          return snapshotProjectAccessTokensBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder> 
           getSnapshotProjectAccessTokensOrBuilderList() {
        if (snapshotProjectAccessTokensBuilder_ != null) {
          return snapshotProjectAccessTokensBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(snapshotProjectAccessTokens_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder addSnapshotProjectAccessTokensBuilder() {
        return getSnapshotProjectAccessTokensFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder addSnapshotProjectAccessTokensBuilder(
          int index) {
        return getSnapshotProjectAccessTokensFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken snapshot_project_access_tokens = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder> 
           getSnapshotProjectAccessTokensBuilderList() {
        return getSnapshotProjectAccessTokensFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder> 
          getSnapshotProjectAccessTokensFieldBuilder() {
        if (snapshotProjectAccessTokensBuilder_ == null) {
          snapshotProjectAccessTokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenOrBuilder>(
                  snapshotProjectAccessTokens_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          snapshotProjectAccessTokens_ = null;
        }
        return snapshotProjectAccessTokensBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken> inferenceAccessTokens_ =
        java.util.Collections.emptyList();
      private void ensureInferenceAccessTokensIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          inferenceAccessTokens_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken>(inferenceAccessTokens_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder> inferenceAccessTokensBuilder_;

      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken> getInferenceAccessTokensList() {
        if (inferenceAccessTokensBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inferenceAccessTokens_);
        } else {
          return inferenceAccessTokensBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public int getInferenceAccessTokensCount() {
        if (inferenceAccessTokensBuilder_ == null) {
          return inferenceAccessTokens_.size();
        } else {
          return inferenceAccessTokensBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken getInferenceAccessTokens(int index) {
        if (inferenceAccessTokensBuilder_ == null) {
          return inferenceAccessTokens_.get(index);
        } else {
          return inferenceAccessTokensBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder setInferenceAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken value) {
        if (inferenceAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.set(index, value);
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder setInferenceAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder builderForValue) {
        if (inferenceAccessTokensBuilder_ == null) {
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.set(index, builderForValue.build());
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder addInferenceAccessTokens(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken value) {
        if (inferenceAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.add(value);
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder addInferenceAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken value) {
        if (inferenceAccessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.add(index, value);
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder addInferenceAccessTokens(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder builderForValue) {
        if (inferenceAccessTokensBuilder_ == null) {
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.add(builderForValue.build());
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder addInferenceAccessTokens(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder builderForValue) {
        if (inferenceAccessTokensBuilder_ == null) {
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.add(index, builderForValue.build());
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder addAllInferenceAccessTokens(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken> values) {
        if (inferenceAccessTokensBuilder_ == null) {
          ensureInferenceAccessTokensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inferenceAccessTokens_);
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder clearInferenceAccessTokens() {
        if (inferenceAccessTokensBuilder_ == null) {
          inferenceAccessTokens_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public Builder removeInferenceAccessTokens(int index) {
        if (inferenceAccessTokensBuilder_ == null) {
          ensureInferenceAccessTokensIsMutable();
          inferenceAccessTokens_.remove(index);
          onChanged();
        } else {
          inferenceAccessTokensBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder getInferenceAccessTokensBuilder(
          int index) {
        return getInferenceAccessTokensFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder getInferenceAccessTokensOrBuilder(
          int index) {
        if (inferenceAccessTokensBuilder_ == null) {
          return inferenceAccessTokens_.get(index);  } else {
          return inferenceAccessTokensBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder> 
           getInferenceAccessTokensOrBuilderList() {
        if (inferenceAccessTokensBuilder_ != null) {
          return inferenceAccessTokensBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inferenceAccessTokens_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder addInferenceAccessTokensBuilder() {
        return getInferenceAccessTokensFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder addInferenceAccessTokensBuilder(
          int index) {
        return getInferenceAccessTokensFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearnAccessTokens.InferenceAccessToken inference_access_tokens = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder> 
           getInferenceAccessTokensBuilderList() {
        return getInferenceAccessTokensFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder> 
          getInferenceAccessTokensFieldBuilder() {
        if (inferenceAccessTokensBuilder_ == null) {
          inferenceAccessTokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessToken.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.InferenceAccessTokenOrBuilder>(
                  inferenceAccessTokens_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          inferenceAccessTokens_ = null;
        }
        return inferenceAccessTokensBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearnAccessTokens)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearnAccessTokens)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearnAccessTokens>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearnAccessTokens>() {
      @java.lang.Override
      public CMsgSteamLearnAccessTokens parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearnAccessTokens> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearnAccessTokens> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_GetAccessTokens_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_GetAccessTokens_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 appid = 1;</code>
     * @return Whether the appid field is set.
     */
    boolean hasAppid();
    /**
     * <code>optional uint32 appid = 1;</code>
     * @return The appid.
     */
    int getAppid();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_GetAccessTokens_Request}
   */
  public static final class CMsgSteamLearn_GetAccessTokens_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_GetAccessTokens_Request)
      CMsgSteamLearn_GetAccessTokens_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_GetAccessTokens_Request.class.getName());
    }
    // Use CMsgSteamLearn_GetAccessTokens_Request.newBuilder() to construct.
    private CMsgSteamLearn_GetAccessTokens_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_GetAccessTokens_Request() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.Builder.class);
    }

    private int bitField0_;
    public static final int APPID_FIELD_NUMBER = 1;
    private int appid_ = 0;
    /**
     * <code>optional uint32 appid = 1;</code>
     * @return Whether the appid field is set.
     */
    @java.lang.Override
    public boolean hasAppid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 appid = 1;</code>
     * @return The appid.
     */
    @java.lang.Override
    public int getAppid() {
      return appid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appid_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request) obj;

      if (hasAppid() != other.hasAppid()) return false;
      if (hasAppid()) {
        if (getAppid()
            != other.getAppid()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppid()) {
        hash = (37 * hash) + APPID_FIELD_NUMBER;
        hash = (53 * hash) + getAppid();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_GetAccessTokens_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_GetAccessTokens_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        appid_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appid_ = appid_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request.getDefaultInstance()) return this;
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                appid_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int appid_ ;
      /**
       * <code>optional uint32 appid = 1;</code>
       * @return Whether the appid field is set.
       */
      @java.lang.Override
      public boolean hasAppid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 appid = 1;</code>
       * @return The appid.
       */
      @java.lang.Override
      public int getAppid() {
        return appid_;
      }
      /**
       * <code>optional uint32 appid = 1;</code>
       * @param value The appid to set.
       * @return This builder for chaining.
       */
      public Builder setAppid(int value) {

        appid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_GetAccessTokens_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_GetAccessTokens_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_GetAccessTokens_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_GetAccessTokens_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_GetAccessTokens_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_GetAccessTokens_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_GetAccessTokens_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_GetAccessTokens_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_GetAccessTokens_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult getResult();

    /**
     * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
     * @return Whether the accessTokens field is set.
     */
    boolean hasAccessTokens();
    /**
     * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
     * @return The accessTokens.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens getAccessTokens();
    /**
     * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder getAccessTokensOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_GetAccessTokens_Response}
   */
  public static final class CMsgSteamLearn_GetAccessTokens_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_GetAccessTokens_Response)
      CMsgSteamLearn_GetAccessTokens_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_GetAccessTokens_Response.class.getName());
    }
    // Use CMsgSteamLearn_GetAccessTokens_Response.newBuilder() to construct.
    private CMsgSteamLearn_GetAccessTokens_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_GetAccessTokens_Response() {
      result_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.Builder.class);
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult getResult() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult.STEAMLEARN_GET_ACCESS_TOKENS_ERROR : result;
    }

    public static final int ACCESS_TOKENS_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens accessTokens_;
    /**
     * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
     * @return Whether the accessTokens field is set.
     */
    @java.lang.Override
    public boolean hasAccessTokens() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
     * @return The accessTokens.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens getAccessTokens() {
      return accessTokens_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance() : accessTokens_;
    }
    /**
     * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder getAccessTokensOrBuilder() {
      return accessTokens_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance() : accessTokens_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getAccessTokens());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAccessTokens());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (hasAccessTokens() != other.hasAccessTokens()) return false;
      if (hasAccessTokens()) {
        if (!getAccessTokens()
            .equals(other.getAccessTokens())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasAccessTokens()) {
        hash = (37 * hash) + ACCESS_TOKENS_FIELD_NUMBER;
        hash = (53 * hash) + getAccessTokens().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_GetAccessTokens_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_GetAccessTokens_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getAccessTokensFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        accessTokens_ = null;
        if (accessTokensBuilder_ != null) {
          accessTokensBuilder_.dispose();
          accessTokensBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_GetAccessTokens_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.accessTokens_ = accessTokensBuilder_ == null
              ? accessTokens_
              : accessTokensBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasAccessTokens()) {
          mergeAccessTokens(other.getAccessTokens());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getAccessTokensFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult getResult() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult.STEAMLEARN_GET_ACCESS_TOKENS_ERROR : result;
      }
      /**
       * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnGetAccessTokensResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteamLearnGetAccessTokensResult result = 1 [default = STEAMLEARN_GET_ACCESS_TOKENS_ERROR];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens accessTokens_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder> accessTokensBuilder_;
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       * @return Whether the accessTokens field is set.
       */
      public boolean hasAccessTokens() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       * @return The accessTokens.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens getAccessTokens() {
        if (accessTokensBuilder_ == null) {
          return accessTokens_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance() : accessTokens_;
        } else {
          return accessTokensBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      public Builder setAccessTokens(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens value) {
        if (accessTokensBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accessTokens_ = value;
        } else {
          accessTokensBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      public Builder setAccessTokens(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder builderForValue) {
        if (accessTokensBuilder_ == null) {
          accessTokens_ = builderForValue.build();
        } else {
          accessTokensBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      public Builder mergeAccessTokens(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens value) {
        if (accessTokensBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            accessTokens_ != null &&
            accessTokens_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance()) {
            getAccessTokensBuilder().mergeFrom(value);
          } else {
            accessTokens_ = value;
          }
        } else {
          accessTokensBuilder_.mergeFrom(value);
        }
        if (accessTokens_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      public Builder clearAccessTokens() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accessTokens_ = null;
        if (accessTokensBuilder_ != null) {
          accessTokensBuilder_.dispose();
          accessTokensBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder getAccessTokensBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAccessTokensFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder getAccessTokensOrBuilder() {
        if (accessTokensBuilder_ != null) {
          return accessTokensBuilder_.getMessageOrBuilder();
        } else {
          return accessTokens_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.getDefaultInstance() : accessTokens_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnAccessTokens access_tokens = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder> 
          getAccessTokensFieldBuilder() {
        if (accessTokensBuilder_ == null) {
          accessTokensBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokens.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnAccessTokensOrBuilder>(
                  getAccessTokens(),
                  getParentForChildren(),
                  isClean());
          accessTokens_ = null;
        }
        return accessTokensBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_GetAccessTokens_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_GetAccessTokens_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_GetAccessTokens_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_GetAccessTokens_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_GetAccessTokens_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_GetAccessTokens_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_GetAccessTokens_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_GetAccessTokens_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_Inference_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_Inference_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    boolean hasAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    java.lang.String getAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    com.google.protobuf.ByteString
        getAccessTokenBytes();

    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return Whether the projectId field is set.
     */
    boolean hasProjectId();
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return The projectId.
     */
    int getProjectId();

    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return Whether the publishedVersion field is set.
     */
    boolean hasPublishedVersion();
    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return The publishedVersion.
     */
    int getPublishedVersion();

    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return Whether the overrideTrainId field is set.
     */
    boolean hasOverrideTrainId();
    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return The overrideTrainId.
     */
    int getOverrideTrainId();

    /**
     * <code>optional .CMsgSteamLearnDataList data = 6;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>optional .CMsgSteamLearnDataList data = 6;</code>
     * @return The data.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList getData();
    /**
     * <code>optional .CMsgSteamLearnDataList data = 6;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder getDataOrBuilder();

    /**
     * <code>repeated float additional_data = 7;</code>
     * @return A list containing the additionalData.
     */
    java.util.List<java.lang.Float> getAdditionalDataList();
    /**
     * <code>repeated float additional_data = 7;</code>
     * @return The count of additionalData.
     */
    int getAdditionalDataCount();
    /**
     * <code>repeated float additional_data = 7;</code>
     * @param index The index of the element to return.
     * @return The additionalData at the given index.
     */
    float getAdditionalData(int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_Inference_Request}
   */
  public static final class CMsgSteamLearn_Inference_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_Inference_Request)
      CMsgSteamLearn_Inference_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_Inference_Request.class.getName());
    }
    // Use CMsgSteamLearn_Inference_Request.newBuilder() to construct.
    private CMsgSteamLearn_Inference_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_Inference_Request() {
      accessToken_ = "";
      additionalData_ = emptyFloatList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder.class);
    }

    private int bitField0_;
    public static final int ACCESS_TOKEN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object accessToken_ = "";
    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    @java.lang.Override
    public boolean hasAccessToken() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    @java.lang.Override
    public java.lang.String getAccessToken() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accessToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccessTokenBytes() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECT_ID_FIELD_NUMBER = 3;
    private int projectId_ = 0;
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return Whether the projectId field is set.
     */
    @java.lang.Override
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public int getProjectId() {
      return projectId_;
    }

    public static final int PUBLISHED_VERSION_FIELD_NUMBER = 4;
    private int publishedVersion_ = 0;
    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return Whether the publishedVersion field is set.
     */
    @java.lang.Override
    public boolean hasPublishedVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return The publishedVersion.
     */
    @java.lang.Override
    public int getPublishedVersion() {
      return publishedVersion_;
    }

    public static final int OVERRIDE_TRAIN_ID_FIELD_NUMBER = 5;
    private int overrideTrainId_ = 0;
    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return Whether the overrideTrainId field is set.
     */
    @java.lang.Override
    public boolean hasOverrideTrainId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return The overrideTrainId.
     */
    @java.lang.Override
    public int getOverrideTrainId() {
      return overrideTrainId_;
    }

    public static final int DATA_FIELD_NUMBER = 6;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList data_;
    /**
     * <code>optional .CMsgSteamLearnDataList data = 6;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearnDataList data = 6;</code>
     * @return The data.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList getData() {
      return data_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance() : data_;
    }
    /**
     * <code>optional .CMsgSteamLearnDataList data = 6;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder getDataOrBuilder() {
      return data_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance() : data_;
    }

    public static final int ADDITIONAL_DATA_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList additionalData_ =
        emptyFloatList();
    /**
     * <code>repeated float additional_data = 7;</code>
     * @return A list containing the additionalData.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getAdditionalDataList() {
      return additionalData_;
    }
    /**
     * <code>repeated float additional_data = 7;</code>
     * @return The count of additionalData.
     */
    public int getAdditionalDataCount() {
      return additionalData_.size();
    }
    /**
     * <code>repeated float additional_data = 7;</code>
     * @param index The index of the element to return.
     * @return The additionalData at the given index.
     */
    public float getAdditionalData(int index) {
      return additionalData_.getFloat(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(3, projectId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, publishedVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(5, overrideTrainId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getData());
      }
      for (int i = 0; i < additionalData_.size(); i++) {
        output.writeFloat(7, additionalData_.getFloat(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, projectId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, publishedVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, overrideTrainId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getData());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getAdditionalDataList().size();
        size += dataSize;
        size += 1 * getAdditionalDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request) obj;

      if (hasAccessToken() != other.hasAccessToken()) return false;
      if (hasAccessToken()) {
        if (!getAccessToken()
            .equals(other.getAccessToken())) return false;
      }
      if (hasProjectId() != other.hasProjectId()) return false;
      if (hasProjectId()) {
        if (getProjectId()
            != other.getProjectId()) return false;
      }
      if (hasPublishedVersion() != other.hasPublishedVersion()) return false;
      if (hasPublishedVersion()) {
        if (getPublishedVersion()
            != other.getPublishedVersion()) return false;
      }
      if (hasOverrideTrainId() != other.hasOverrideTrainId()) return false;
      if (hasOverrideTrainId()) {
        if (getOverrideTrainId()
            != other.getOverrideTrainId()) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!getAdditionalDataList()
          .equals(other.getAdditionalDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccessToken()) {
        hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAccessToken().hashCode();
      }
      if (hasProjectId()) {
        hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProjectId();
      }
      if (hasPublishedVersion()) {
        hash = (37 * hash) + PUBLISHED_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getPublishedVersion();
      }
      if (hasOverrideTrainId()) {
        hash = (37 * hash) + OVERRIDE_TRAIN_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOverrideTrainId();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (getAdditionalDataCount() > 0) {
        hash = (37 * hash) + ADDITIONAL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_Inference_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_Inference_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accessToken_ = "";
        projectId_ = 0;
        publishedVersion_ = 0;
        overrideTrainId_ = 0;
        data_ = null;
        if (dataBuilder_ != null) {
          dataBuilder_.dispose();
          dataBuilder_ = null;
        }
        additionalData_ = emptyFloatList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accessToken_ = accessToken_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.projectId_ = projectId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.publishedVersion_ = publishedVersion_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.overrideTrainId_ = overrideTrainId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.data_ = dataBuilder_ == null
              ? data_
              : dataBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          additionalData_.makeImmutable();
          result.additionalData_ = additionalData_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request.getDefaultInstance()) return this;
        if (other.hasAccessToken()) {
          accessToken_ = other.accessToken_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        if (other.hasPublishedVersion()) {
          setPublishedVersion(other.getPublishedVersion());
        }
        if (other.hasOverrideTrainId()) {
          setOverrideTrainId(other.getOverrideTrainId());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (!other.additionalData_.isEmpty()) {
          if (additionalData_.isEmpty()) {
            additionalData_ = other.additionalData_;
            additionalData_.makeImmutable();
            bitField0_ |= 0x00000020;
          } else {
            ensureAdditionalDataIsMutable();
            additionalData_.addAll(other.additionalData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                accessToken_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 24: {
                projectId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 24
              case 32: {
                publishedVersion_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 32
              case 40: {
                overrideTrainId_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 40
              case 50: {
                input.readMessage(
                    getDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 50
              case 61: {
                float v = input.readFloat();
                ensureAdditionalDataIsMutable();
                additionalData_.addFloat(v);
                break;
              } // case 61
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureAdditionalDataIsMutable(alloc / 4);
                while (input.getBytesUntilLimit() > 0) {
                  additionalData_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 1;</code>
       * @return Whether the accessToken field is set.
       */
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The accessToken.
       */
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The bytes for accessToken.
       */
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessToken() {
        accessToken_ = getDefaultInstance().getAccessToken();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The bytes for accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int projectId_ ;
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return Whether the projectId field is set.
       */
      @java.lang.Override
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @param value The projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectId(int value) {

        projectId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        projectId_ = 0;
        onChanged();
        return this;
      }

      private int publishedVersion_ ;
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @return Whether the publishedVersion field is set.
       */
      @java.lang.Override
      public boolean hasPublishedVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @return The publishedVersion.
       */
      @java.lang.Override
      public int getPublishedVersion() {
        return publishedVersion_;
      }
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @param value The publishedVersion to set.
       * @return This builder for chaining.
       */
      public Builder setPublishedVersion(int value) {

        publishedVersion_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublishedVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        publishedVersion_ = 0;
        onChanged();
        return this;
      }

      private int overrideTrainId_ ;
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @return Whether the overrideTrainId field is set.
       */
      @java.lang.Override
      public boolean hasOverrideTrainId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @return The overrideTrainId.
       */
      @java.lang.Override
      public int getOverrideTrainId() {
        return overrideTrainId_;
      }
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @param value The overrideTrainId to set.
       * @return This builder for chaining.
       */
      public Builder setOverrideTrainId(int value) {

        overrideTrainId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverrideTrainId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        overrideTrainId_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList data_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder> dataBuilder_;
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       * @return The data.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      public Builder setData(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      public Builder setData(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      public Builder mergeData(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            data_ != null &&
            data_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance()) {
            getDataBuilder().mergeFrom(value);
          } else {
            data_ = value;
          }
        } else {
          dataBuilder_.mergeFrom(value);
        }
        if (data_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = null;
        if (dataBuilder_ != null) {
          dataBuilder_.dispose();
          dataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder getDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearnDataList data = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataList.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearnDataListOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private com.google.protobuf.Internal.FloatList additionalData_ = emptyFloatList();
      private void ensureAdditionalDataIsMutable() {
        if (!additionalData_.isModifiable()) {
          additionalData_ = makeMutableCopy(additionalData_);
        }
        bitField0_ |= 0x00000020;
      }
      private void ensureAdditionalDataIsMutable(int capacity) {
        if (!additionalData_.isModifiable()) {
          additionalData_ = makeMutableCopy(additionalData_, capacity);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @return A list containing the additionalData.
       */
      public java.util.List<java.lang.Float>
          getAdditionalDataList() {
        additionalData_.makeImmutable();
        return additionalData_;
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @return The count of additionalData.
       */
      public int getAdditionalDataCount() {
        return additionalData_.size();
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @param index The index of the element to return.
       * @return The additionalData at the given index.
       */
      public float getAdditionalData(int index) {
        return additionalData_.getFloat(index);
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @param index The index to set the value at.
       * @param value The additionalData to set.
       * @return This builder for chaining.
       */
      public Builder setAdditionalData(
          int index, float value) {

        ensureAdditionalDataIsMutable();
        additionalData_.setFloat(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @param value The additionalData to add.
       * @return This builder for chaining.
       */
      public Builder addAdditionalData(float value) {

        ensureAdditionalDataIsMutable();
        additionalData_.addFloat(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @param values The additionalData to add.
       * @return This builder for chaining.
       */
      public Builder addAllAdditionalData(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureAdditionalDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, additionalData_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float additional_data = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAdditionalData() {
        additionalData_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_Inference_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_Inference_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_Inference_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_Inference_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_Inference_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_Inference_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_Inference_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_InferenceMetadata_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    boolean hasAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    java.lang.String getAccessToken();
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    com.google.protobuf.ByteString
        getAccessTokenBytes();

    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return Whether the projectId field is set.
     */
    boolean hasProjectId();
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return The projectId.
     */
    int getProjectId();

    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return Whether the publishedVersion field is set.
     */
    boolean hasPublishedVersion();
    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return The publishedVersion.
     */
    int getPublishedVersion();

    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return Whether the overrideTrainId field is set.
     */
    boolean hasOverrideTrainId();
    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return The overrideTrainId.
     */
    int getOverrideTrainId();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Request}
   */
  public static final class CMsgSteamLearn_InferenceMetadata_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Request)
      CMsgSteamLearn_InferenceMetadata_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_InferenceMetadata_Request.class.getName());
    }
    // Use CMsgSteamLearn_InferenceMetadata_Request.newBuilder() to construct.
    private CMsgSteamLearn_InferenceMetadata_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_InferenceMetadata_Request() {
      accessToken_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.Builder.class);
    }

    private int bitField0_;
    public static final int ACCESS_TOKEN_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object accessToken_ = "";
    /**
     * <code>optional string access_token = 1;</code>
     * @return Whether the accessToken field is set.
     */
    @java.lang.Override
    public boolean hasAccessToken() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The accessToken.
     */
    @java.lang.Override
    public java.lang.String getAccessToken() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accessToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string access_token = 1;</code>
     * @return The bytes for accessToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccessTokenBytes() {
      java.lang.Object ref = accessToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECT_ID_FIELD_NUMBER = 3;
    private int projectId_ = 0;
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return Whether the projectId field is set.
     */
    @java.lang.Override
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 project_id = 3;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public int getProjectId() {
      return projectId_;
    }

    public static final int PUBLISHED_VERSION_FIELD_NUMBER = 4;
    private int publishedVersion_ = 0;
    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return Whether the publishedVersion field is set.
     */
    @java.lang.Override
    public boolean hasPublishedVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 published_version = 4;</code>
     * @return The publishedVersion.
     */
    @java.lang.Override
    public int getPublishedVersion() {
      return publishedVersion_;
    }

    public static final int OVERRIDE_TRAIN_ID_FIELD_NUMBER = 5;
    private int overrideTrainId_ = 0;
    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return Whether the overrideTrainId field is set.
     */
    @java.lang.Override
    public boolean hasOverrideTrainId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 override_train_id = 5;</code>
     * @return The overrideTrainId.
     */
    @java.lang.Override
    public int getOverrideTrainId() {
      return overrideTrainId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(3, projectId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, publishedVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(5, overrideTrainId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, accessToken_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, projectId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, publishedVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, overrideTrainId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request) obj;

      if (hasAccessToken() != other.hasAccessToken()) return false;
      if (hasAccessToken()) {
        if (!getAccessToken()
            .equals(other.getAccessToken())) return false;
      }
      if (hasProjectId() != other.hasProjectId()) return false;
      if (hasProjectId()) {
        if (getProjectId()
            != other.getProjectId()) return false;
      }
      if (hasPublishedVersion() != other.hasPublishedVersion()) return false;
      if (hasPublishedVersion()) {
        if (getPublishedVersion()
            != other.getPublishedVersion()) return false;
      }
      if (hasOverrideTrainId() != other.hasOverrideTrainId()) return false;
      if (hasOverrideTrainId()) {
        if (getOverrideTrainId()
            != other.getOverrideTrainId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccessToken()) {
        hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAccessToken().hashCode();
      }
      if (hasProjectId()) {
        hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProjectId();
      }
      if (hasPublishedVersion()) {
        hash = (37 * hash) + PUBLISHED_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getPublishedVersion();
      }
      if (hasOverrideTrainId()) {
        hash = (37 * hash) + OVERRIDE_TRAIN_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOverrideTrainId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        accessToken_ = "";
        projectId_ = 0;
        publishedVersion_ = 0;
        overrideTrainId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accessToken_ = accessToken_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.projectId_ = projectId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.publishedVersion_ = publishedVersion_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.overrideTrainId_ = overrideTrainId_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request.getDefaultInstance()) return this;
        if (other.hasAccessToken()) {
          accessToken_ = other.accessToken_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        if (other.hasPublishedVersion()) {
          setPublishedVersion(other.getPublishedVersion());
        }
        if (other.hasOverrideTrainId()) {
          setOverrideTrainId(other.getOverrideTrainId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                accessToken_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 24: {
                projectId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 24
              case 32: {
                publishedVersion_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 32
              case 40: {
                overrideTrainId_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object accessToken_ = "";
      /**
       * <code>optional string access_token = 1;</code>
       * @return Whether the accessToken field is set.
       */
      public boolean hasAccessToken() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The accessToken.
       */
      public java.lang.String getAccessToken() {
        java.lang.Object ref = accessToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accessToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return The bytes for accessToken.
       */
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        java.lang.Object ref = accessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessToken() {
        accessToken_ = getDefaultInstance().getAccessToken();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string access_token = 1;</code>
       * @param value The bytes for accessToken to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        accessToken_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int projectId_ ;
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return Whether the projectId field is set.
       */
      @java.lang.Override
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @param value The projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectId(int value) {

        projectId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 project_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        projectId_ = 0;
        onChanged();
        return this;
      }

      private int publishedVersion_ ;
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @return Whether the publishedVersion field is set.
       */
      @java.lang.Override
      public boolean hasPublishedVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @return The publishedVersion.
       */
      @java.lang.Override
      public int getPublishedVersion() {
        return publishedVersion_;
      }
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @param value The publishedVersion to set.
       * @return This builder for chaining.
       */
      public Builder setPublishedVersion(int value) {

        publishedVersion_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 published_version = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPublishedVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        publishedVersion_ = 0;
        onChanged();
        return this;
      }

      private int overrideTrainId_ ;
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @return Whether the overrideTrainId field is set.
       */
      @java.lang.Override
      public boolean hasOverrideTrainId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @return The overrideTrainId.
       */
      @java.lang.Override
      public int getOverrideTrainId() {
        return overrideTrainId_;
      }
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @param value The overrideTrainId to set.
       * @return This builder for chaining.
       */
      public Builder setOverrideTrainId(int value) {

        overrideTrainId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 override_train_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverrideTrainId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        overrideTrainId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadata_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_InferenceMetadata_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_InferenceMetadata_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadata_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadata_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_InferenceMetadataBackend_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadataBackend_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 project_id = 1;</code>
     * @return Whether the projectId field is set.
     */
    boolean hasProjectId();
    /**
     * <code>optional uint32 project_id = 1;</code>
     * @return The projectId.
     */
    int getProjectId();

    /**
     * <code>optional uint32 fetch_id = 2;</code>
     * @return Whether the fetchId field is set.
     */
    boolean hasFetchId();
    /**
     * <code>optional uint32 fetch_id = 2;</code>
     * @return The fetchId.
     */
    int getFetchId();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_InferenceMetadataBackend_Request}
   */
  public static final class CMsgSteamLearn_InferenceMetadataBackend_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadataBackend_Request)
      CMsgSteamLearn_InferenceMetadataBackend_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_InferenceMetadataBackend_Request.class.getName());
    }
    // Use CMsgSteamLearn_InferenceMetadataBackend_Request.newBuilder() to construct.
    private CMsgSteamLearn_InferenceMetadataBackend_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_InferenceMetadataBackend_Request() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.Builder.class);
    }

    private int bitField0_;
    public static final int PROJECT_ID_FIELD_NUMBER = 1;
    private int projectId_ = 0;
    /**
     * <code>optional uint32 project_id = 1;</code>
     * @return Whether the projectId field is set.
     */
    @java.lang.Override
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 project_id = 1;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public int getProjectId() {
      return projectId_;
    }

    public static final int FETCH_ID_FIELD_NUMBER = 2;
    private int fetchId_ = 0;
    /**
     * <code>optional uint32 fetch_id = 2;</code>
     * @return Whether the fetchId field is set.
     */
    @java.lang.Override
    public boolean hasFetchId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 fetch_id = 2;</code>
     * @return The fetchId.
     */
    @java.lang.Override
    public int getFetchId() {
      return fetchId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, projectId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, fetchId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, projectId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fetchId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request) obj;

      if (hasProjectId() != other.hasProjectId()) return false;
      if (hasProjectId()) {
        if (getProjectId()
            != other.getProjectId()) return false;
      }
      if (hasFetchId() != other.hasFetchId()) return false;
      if (hasFetchId()) {
        if (getFetchId()
            != other.getFetchId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProjectId()) {
        hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProjectId();
      }
      if (hasFetchId()) {
        hash = (37 * hash) + FETCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFetchId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadataBackend_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadataBackend_Request)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        projectId_ = 0;
        fetchId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.projectId_ = projectId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fetchId_ = fetchId_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request.getDefaultInstance()) return this;
        if (other.hasProjectId()) {
          setProjectId(other.getProjectId());
        }
        if (other.hasFetchId()) {
          setFetchId(other.getFetchId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                projectId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                fetchId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int projectId_ ;
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return Whether the projectId field is set.
       */
      @java.lang.Override
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @param value The projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectId(int value) {

        projectId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 project_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        projectId_ = 0;
        onChanged();
        return this;
      }

      private int fetchId_ ;
      /**
       * <code>optional uint32 fetch_id = 2;</code>
       * @return Whether the fetchId field is set.
       */
      @java.lang.Override
      public boolean hasFetchId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 fetch_id = 2;</code>
       * @return The fetchId.
       */
      @java.lang.Override
      public int getFetchId() {
        return fetchId_;
      }
      /**
       * <code>optional uint32 fetch_id = 2;</code>
       * @param value The fetchId to set.
       * @return This builder for chaining.
       */
      public Builder setFetchId(int value) {

        fetchId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fetch_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFetchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fetchId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadataBackend_Request)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadataBackend_Request)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadataBackend_Request>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_InferenceMetadataBackend_Request>() {
      @java.lang.Override
      public CMsgSteamLearn_InferenceMetadataBackend_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadataBackend_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadataBackend_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadataBackend_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_InferenceMetadata_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
     * @return Whether the inferenceMetadataResult field is set.
     */
    boolean hasInferenceMetadataResult();
    /**
     * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
     * @return The inferenceMetadataResult.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult getInferenceMetadataResult();

    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
     * @return Whether the rowRange field is set.
     */
    boolean hasRowRange();
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
     * @return The rowRange.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange getRowRange();
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder getRowRangeOrBuilder();

    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range> 
        getRangesList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range getRanges(int index);
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    int getRangesCount();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder> 
        getRangesOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder getRangesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev> 
        getStdDevsList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev getStdDevs(int index);
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    int getStdDevsCount();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder> 
        getStdDevsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder getStdDevsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable> 
        getCompactTablesList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable getCompactTables(int index);
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    int getCompactTablesCount();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder> 
        getCompactTablesOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder getCompactTablesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans> 
        getKmeansList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans getKmeans(int index);
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    int getKmeansCount();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder> 
        getKmeansOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder getKmeansOrBuilder(
        int index);

    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
     * @return Whether the snapshotHistogram field is set.
     */
    boolean hasSnapshotHistogram();
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
     * @return The snapshotHistogram.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram getSnapshotHistogram();
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder getSnapshotHistogramOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response}
   */
  public static final class CMsgSteamLearn_InferenceMetadata_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response)
      CMsgSteamLearn_InferenceMetadata_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_InferenceMetadata_Response.class.getName());
    }
    // Use CMsgSteamLearn_InferenceMetadata_Response.newBuilder() to construct.
    private CMsgSteamLearn_InferenceMetadata_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_InferenceMetadata_Response() {
      inferenceMetadataResult_ = 0;
      ranges_ = java.util.Collections.emptyList();
      stdDevs_ = java.util.Collections.emptyList();
      compactTables_ = java.util.Collections.emptyList();
      kmeans_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Builder.class);
    }

    public interface RowRangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.RowRange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 min_row = 1;</code>
       * @return Whether the minRow field is set.
       */
      boolean hasMinRow();
      /**
       * <code>optional uint64 min_row = 1;</code>
       * @return The minRow.
       */
      long getMinRow();

      /**
       * <code>optional uint64 max_row = 2;</code>
       * @return Whether the maxRow field is set.
       */
      boolean hasMaxRow();
      /**
       * <code>optional uint64 max_row = 2;</code>
       * @return The maxRow.
       */
      long getMaxRow();
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.RowRange}
     */
    public static final class RowRange extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.RowRange)
        RowRangeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          RowRange.class.getName());
      }
      // Use RowRange.newBuilder() to construct.
      private RowRange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private RowRange() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder.class);
      }

      private int bitField0_;
      public static final int MIN_ROW_FIELD_NUMBER = 1;
      private long minRow_ = 0L;
      /**
       * <code>optional uint64 min_row = 1;</code>
       * @return Whether the minRow field is set.
       */
      @java.lang.Override
      public boolean hasMinRow() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 min_row = 1;</code>
       * @return The minRow.
       */
      @java.lang.Override
      public long getMinRow() {
        return minRow_;
      }

      public static final int MAX_ROW_FIELD_NUMBER = 2;
      private long maxRow_ = 0L;
      /**
       * <code>optional uint64 max_row = 2;</code>
       * @return Whether the maxRow field is set.
       */
      @java.lang.Override
      public boolean hasMaxRow() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 max_row = 2;</code>
       * @return The maxRow.
       */
      @java.lang.Override
      public long getMaxRow() {
        return maxRow_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, minRow_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt64(2, maxRow_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, minRow_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, maxRow_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange) obj;

        if (hasMinRow() != other.hasMinRow()) return false;
        if (hasMinRow()) {
          if (getMinRow()
              != other.getMinRow()) return false;
        }
        if (hasMaxRow() != other.hasMaxRow()) return false;
        if (hasMaxRow()) {
          if (getMaxRow()
              != other.getMaxRow()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMinRow()) {
          hash = (37 * hash) + MIN_ROW_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMinRow());
        }
        if (hasMaxRow()) {
          hash = (37 * hash) + MAX_ROW_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMaxRow());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.RowRange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.RowRange)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          minRow_ = 0L;
          maxRow_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.minRow_ = minRow_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.maxRow_ = maxRow_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance()) return this;
          if (other.hasMinRow()) {
            setMinRow(other.getMinRow());
          }
          if (other.hasMaxRow()) {
            setMaxRow(other.getMaxRow());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  minRow_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  maxRow_ = input.readUInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long minRow_ ;
        /**
         * <code>optional uint64 min_row = 1;</code>
         * @return Whether the minRow field is set.
         */
        @java.lang.Override
        public boolean hasMinRow() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 min_row = 1;</code>
         * @return The minRow.
         */
        @java.lang.Override
        public long getMinRow() {
          return minRow_;
        }
        /**
         * <code>optional uint64 min_row = 1;</code>
         * @param value The minRow to set.
         * @return This builder for chaining.
         */
        public Builder setMinRow(long value) {

          minRow_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 min_row = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinRow() {
          bitField0_ = (bitField0_ & ~0x00000001);
          minRow_ = 0L;
          onChanged();
          return this;
        }

        private long maxRow_ ;
        /**
         * <code>optional uint64 max_row = 2;</code>
         * @return Whether the maxRow field is set.
         */
        @java.lang.Override
        public boolean hasMaxRow() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint64 max_row = 2;</code>
         * @return The maxRow.
         */
        @java.lang.Override
        public long getMaxRow() {
          return maxRow_;
        }
        /**
         * <code>optional uint64 max_row = 2;</code>
         * @param value The maxRow to set.
         * @return This builder for chaining.
         */
        public Builder setMaxRow(long value) {

          maxRow_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 max_row = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxRow() {
          bitField0_ = (bitField0_ & ~0x00000002);
          maxRow_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.RowRange)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.RowRange)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RowRange>
          PARSER = new com.google.protobuf.AbstractParser<RowRange>() {
        @java.lang.Override
        public RowRange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RowRange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RowRange> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.Range)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string data_element_path = 1;</code>
       * @return Whether the dataElementPath field is set.
       */
      boolean hasDataElementPath();
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The dataElementPath.
       */
      java.lang.String getDataElementPath();
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The bytes for dataElementPath.
       */
      com.google.protobuf.ByteString
          getDataElementPathBytes();

      /**
       * <code>optional float min_value = 2;</code>
       * @return Whether the minValue field is set.
       */
      boolean hasMinValue();
      /**
       * <code>optional float min_value = 2;</code>
       * @return The minValue.
       */
      float getMinValue();

      /**
       * <code>optional float max_value = 3;</code>
       * @return Whether the maxValue field is set.
       */
      boolean hasMaxValue();
      /**
       * <code>optional float max_value = 3;</code>
       * @return The maxValue.
       */
      float getMaxValue();
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.Range}
     */
    public static final class Range extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.Range)
        RangeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Range.class.getName());
      }
      // Use Range.newBuilder() to construct.
      private Range(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Range() {
        dataElementPath_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder.class);
      }

      private int bitField0_;
      public static final int DATA_ELEMENT_PATH_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object dataElementPath_ = "";
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return Whether the dataElementPath field is set.
       */
      @java.lang.Override
      public boolean hasDataElementPath() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The dataElementPath.
       */
      @java.lang.Override
      public java.lang.String getDataElementPath() {
        java.lang.Object ref = dataElementPath_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dataElementPath_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The bytes for dataElementPath.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDataElementPathBytes() {
        java.lang.Object ref = dataElementPath_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataElementPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MIN_VALUE_FIELD_NUMBER = 2;
      private float minValue_ = 0F;
      /**
       * <code>optional float min_value = 2;</code>
       * @return Whether the minValue field is set.
       */
      @java.lang.Override
      public boolean hasMinValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float min_value = 2;</code>
       * @return The minValue.
       */
      @java.lang.Override
      public float getMinValue() {
        return minValue_;
      }

      public static final int MAX_VALUE_FIELD_NUMBER = 3;
      private float maxValue_ = 0F;
      /**
       * <code>optional float max_value = 3;</code>
       * @return Whether the maxValue field is set.
       */
      @java.lang.Override
      public boolean hasMaxValue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_value = 3;</code>
       * @return The maxValue.
       */
      @java.lang.Override
      public float getMaxValue() {
        return maxValue_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, dataElementPath_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFloat(2, minValue_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeFloat(3, maxValue_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, dataElementPath_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, minValue_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, maxValue_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range) obj;

        if (hasDataElementPath() != other.hasDataElementPath()) return false;
        if (hasDataElementPath()) {
          if (!getDataElementPath()
              .equals(other.getDataElementPath())) return false;
        }
        if (hasMinValue() != other.hasMinValue()) return false;
        if (hasMinValue()) {
          if (java.lang.Float.floatToIntBits(getMinValue())
              != java.lang.Float.floatToIntBits(
                  other.getMinValue())) return false;
        }
        if (hasMaxValue() != other.hasMaxValue()) return false;
        if (hasMaxValue()) {
          if (java.lang.Float.floatToIntBits(getMaxValue())
              != java.lang.Float.floatToIntBits(
                  other.getMaxValue())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDataElementPath()) {
          hash = (37 * hash) + DATA_ELEMENT_PATH_FIELD_NUMBER;
          hash = (53 * hash) + getDataElementPath().hashCode();
        }
        if (hasMinValue()) {
          hash = (37 * hash) + MIN_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMinValue());
        }
        if (hasMaxValue()) {
          hash = (37 * hash) + MAX_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMaxValue());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.Range}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.Range)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          dataElementPath_ = "";
          minValue_ = 0F;
          maxValue_ = 0F;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.dataElementPath_ = dataElementPath_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.minValue_ = minValue_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.maxValue_ = maxValue_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.getDefaultInstance()) return this;
          if (other.hasDataElementPath()) {
            dataElementPath_ = other.dataElementPath_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasMinValue()) {
            setMinValue(other.getMinValue());
          }
          if (other.hasMaxValue()) {
            setMaxValue(other.getMaxValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  dataElementPath_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 21: {
                  minValue_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  maxValue_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object dataElementPath_ = "";
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return Whether the dataElementPath field is set.
         */
        public boolean hasDataElementPath() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return The dataElementPath.
         */
        public java.lang.String getDataElementPath() {
          java.lang.Object ref = dataElementPath_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dataElementPath_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return The bytes for dataElementPath.
         */
        public com.google.protobuf.ByteString
            getDataElementPathBytes() {
          java.lang.Object ref = dataElementPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataElementPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @param value The dataElementPath to set.
         * @return This builder for chaining.
         */
        public Builder setDataElementPath(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          dataElementPath_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDataElementPath() {
          dataElementPath_ = getDefaultInstance().getDataElementPath();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @param value The bytes for dataElementPath to set.
         * @return This builder for chaining.
         */
        public Builder setDataElementPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          dataElementPath_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private float minValue_ ;
        /**
         * <code>optional float min_value = 2;</code>
         * @return Whether the minValue field is set.
         */
        @java.lang.Override
        public boolean hasMinValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float min_value = 2;</code>
         * @return The minValue.
         */
        @java.lang.Override
        public float getMinValue() {
          return minValue_;
        }
        /**
         * <code>optional float min_value = 2;</code>
         * @param value The minValue to set.
         * @return This builder for chaining.
         */
        public Builder setMinValue(float value) {

          minValue_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional float min_value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          minValue_ = 0F;
          onChanged();
          return this;
        }

        private float maxValue_ ;
        /**
         * <code>optional float max_value = 3;</code>
         * @return Whether the maxValue field is set.
         */
        @java.lang.Override
        public boolean hasMaxValue() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float max_value = 3;</code>
         * @return The maxValue.
         */
        @java.lang.Override
        public float getMaxValue() {
          return maxValue_;
        }
        /**
         * <code>optional float max_value = 3;</code>
         * @param value The maxValue to set.
         * @return This builder for chaining.
         */
        public Builder setMaxValue(float value) {

          maxValue_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional float max_value = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          maxValue_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.Range)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.Range)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Range>
          PARSER = new com.google.protobuf.AbstractParser<Range>() {
        @java.lang.Override
        public Range parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Range> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Range> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StdDevOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.StdDev)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string data_element_path = 1;</code>
       * @return Whether the dataElementPath field is set.
       */
      boolean hasDataElementPath();
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The dataElementPath.
       */
      java.lang.String getDataElementPath();
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The bytes for dataElementPath.
       */
      com.google.protobuf.ByteString
          getDataElementPathBytes();

      /**
       * <code>optional float mean = 2;</code>
       * @return Whether the mean field is set.
       */
      boolean hasMean();
      /**
       * <code>optional float mean = 2;</code>
       * @return The mean.
       */
      float getMean();

      /**
       * <code>optional float std_dev = 3;</code>
       * @return Whether the stdDev field is set.
       */
      boolean hasStdDev();
      /**
       * <code>optional float std_dev = 3;</code>
       * @return The stdDev.
       */
      float getStdDev();
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.StdDev}
     */
    public static final class StdDev extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.StdDev)
        StdDevOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          StdDev.class.getName());
      }
      // Use StdDev.newBuilder() to construct.
      private StdDev(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private StdDev() {
        dataElementPath_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder.class);
      }

      private int bitField0_;
      public static final int DATA_ELEMENT_PATH_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object dataElementPath_ = "";
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return Whether the dataElementPath field is set.
       */
      @java.lang.Override
      public boolean hasDataElementPath() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The dataElementPath.
       */
      @java.lang.Override
      public java.lang.String getDataElementPath() {
        java.lang.Object ref = dataElementPath_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dataElementPath_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string data_element_path = 1;</code>
       * @return The bytes for dataElementPath.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDataElementPathBytes() {
        java.lang.Object ref = dataElementPath_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataElementPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MEAN_FIELD_NUMBER = 2;
      private float mean_ = 0F;
      /**
       * <code>optional float mean = 2;</code>
       * @return Whether the mean field is set.
       */
      @java.lang.Override
      public boolean hasMean() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float mean = 2;</code>
       * @return The mean.
       */
      @java.lang.Override
      public float getMean() {
        return mean_;
      }

      public static final int STD_DEV_FIELD_NUMBER = 3;
      private float stdDev_ = 0F;
      /**
       * <code>optional float std_dev = 3;</code>
       * @return Whether the stdDev field is set.
       */
      @java.lang.Override
      public boolean hasStdDev() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float std_dev = 3;</code>
       * @return The stdDev.
       */
      @java.lang.Override
      public float getStdDev() {
        return stdDev_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, dataElementPath_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFloat(2, mean_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeFloat(3, stdDev_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, dataElementPath_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, mean_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, stdDev_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev) obj;

        if (hasDataElementPath() != other.hasDataElementPath()) return false;
        if (hasDataElementPath()) {
          if (!getDataElementPath()
              .equals(other.getDataElementPath())) return false;
        }
        if (hasMean() != other.hasMean()) return false;
        if (hasMean()) {
          if (java.lang.Float.floatToIntBits(getMean())
              != java.lang.Float.floatToIntBits(
                  other.getMean())) return false;
        }
        if (hasStdDev() != other.hasStdDev()) return false;
        if (hasStdDev()) {
          if (java.lang.Float.floatToIntBits(getStdDev())
              != java.lang.Float.floatToIntBits(
                  other.getStdDev())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDataElementPath()) {
          hash = (37 * hash) + DATA_ELEMENT_PATH_FIELD_NUMBER;
          hash = (53 * hash) + getDataElementPath().hashCode();
        }
        if (hasMean()) {
          hash = (37 * hash) + MEAN_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMean());
        }
        if (hasStdDev()) {
          hash = (37 * hash) + STD_DEV_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getStdDev());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.StdDev}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.StdDev)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          dataElementPath_ = "";
          mean_ = 0F;
          stdDev_ = 0F;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.dataElementPath_ = dataElementPath_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.mean_ = mean_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.stdDev_ = stdDev_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.getDefaultInstance()) return this;
          if (other.hasDataElementPath()) {
            dataElementPath_ = other.dataElementPath_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasMean()) {
            setMean(other.getMean());
          }
          if (other.hasStdDev()) {
            setStdDev(other.getStdDev());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  dataElementPath_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 21: {
                  mean_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 29: {
                  stdDev_ = input.readFloat();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 29
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object dataElementPath_ = "";
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return Whether the dataElementPath field is set.
         */
        public boolean hasDataElementPath() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return The dataElementPath.
         */
        public java.lang.String getDataElementPath() {
          java.lang.Object ref = dataElementPath_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dataElementPath_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return The bytes for dataElementPath.
         */
        public com.google.protobuf.ByteString
            getDataElementPathBytes() {
          java.lang.Object ref = dataElementPath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataElementPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @param value The dataElementPath to set.
         * @return This builder for chaining.
         */
        public Builder setDataElementPath(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          dataElementPath_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDataElementPath() {
          dataElementPath_ = getDefaultInstance().getDataElementPath();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string data_element_path = 1;</code>
         * @param value The bytes for dataElementPath to set.
         * @return This builder for chaining.
         */
        public Builder setDataElementPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          dataElementPath_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private float mean_ ;
        /**
         * <code>optional float mean = 2;</code>
         * @return Whether the mean field is set.
         */
        @java.lang.Override
        public boolean hasMean() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float mean = 2;</code>
         * @return The mean.
         */
        @java.lang.Override
        public float getMean() {
          return mean_;
        }
        /**
         * <code>optional float mean = 2;</code>
         * @param value The mean to set.
         * @return This builder for chaining.
         */
        public Builder setMean(float value) {

          mean_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional float mean = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMean() {
          bitField0_ = (bitField0_ & ~0x00000002);
          mean_ = 0F;
          onChanged();
          return this;
        }

        private float stdDev_ ;
        /**
         * <code>optional float std_dev = 3;</code>
         * @return Whether the stdDev field is set.
         */
        @java.lang.Override
        public boolean hasStdDev() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float std_dev = 3;</code>
         * @return The stdDev.
         */
        @java.lang.Override
        public float getStdDev() {
          return stdDev_;
        }
        /**
         * <code>optional float std_dev = 3;</code>
         * @param value The stdDev to set.
         * @return This builder for chaining.
         */
        public Builder setStdDev(float value) {

          stdDev_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional float std_dev = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearStdDev() {
          bitField0_ = (bitField0_ & ~0x00000004);
          stdDev_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.StdDev)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.StdDev)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StdDev>
          PARSER = new com.google.protobuf.AbstractParser<StdDev>() {
        @java.lang.Override
        public StdDev parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<StdDev> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StdDev> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CompactTableOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.CompactTable)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry> 
          getMapValuesList();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry getMapValues(int index);
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      int getMapValuesCount();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder> 
          getMapValuesOrBuilderList();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder getMapValuesOrBuilder(
          int index);

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry> 
          getMapMappingsList();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry getMapMappings(int index);
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      int getMapMappingsCount();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder> 
          getMapMappingsOrBuilderList();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder getMapMappingsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable}
     */
    public static final class CompactTable extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable)
        CompactTableOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          CompactTable.class.getName());
      }
      // Use CompactTable.newBuilder() to construct.
      private CompactTable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private CompactTable() {
        name_ = "";
        mapValues_ = java.util.Collections.emptyList();
        mapMappings_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder.class);
      }

      public interface EntryOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 value = 1;</code>
         * @return Whether the value field is set.
         */
        boolean hasValue();
        /**
         * <code>optional uint32 value = 1;</code>
         * @return The value.
         */
        int getValue();

        /**
         * <code>optional uint32 mapping = 2;</code>
         * @return Whether the mapping field is set.
         */
        boolean hasMapping();
        /**
         * <code>optional uint32 mapping = 2;</code>
         * @return The mapping.
         */
        int getMapping();

        /**
         * <code>optional uint64 count = 3;</code>
         * @return Whether the count field is set.
         */
        boolean hasCount();
        /**
         * <code>optional uint64 count = 3;</code>
         * @return The count.
         */
        long getCount();
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry}
       */
      public static final class Entry extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)
          EntryOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 0,
            /* suffix= */ "",
            Entry.class.getName());
        }
        // Use Entry.newBuilder() to construct.
        private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private Entry() {
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder.class);
        }

        private int bitField0_;
        public static final int VALUE_FIELD_NUMBER = 1;
        private int value_ = 0;
        /**
         * <code>optional uint32 value = 1;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 value = 1;</code>
         * @return The value.
         */
        @java.lang.Override
        public int getValue() {
          return value_;
        }

        public static final int MAPPING_FIELD_NUMBER = 2;
        private int mapping_ = 0;
        /**
         * <code>optional uint32 mapping = 2;</code>
         * @return Whether the mapping field is set.
         */
        @java.lang.Override
        public boolean hasMapping() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 mapping = 2;</code>
         * @return The mapping.
         */
        @java.lang.Override
        public int getMapping() {
          return mapping_;
        }

        public static final int COUNT_FIELD_NUMBER = 3;
        private long count_ = 0L;
        /**
         * <code>optional uint64 count = 3;</code>
         * @return Whether the count field is set.
         */
        @java.lang.Override
        public boolean hasCount() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint64 count = 3;</code>
         * @return The count.
         */
        @java.lang.Override
        public long getCount() {
          return count_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, value_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeUInt32(2, mapping_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt64(3, count_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, value_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, mapping_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(3, count_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)) {
            return super.equals(obj);
          }
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry) obj;

          if (hasValue() != other.hasValue()) return false;
          if (hasValue()) {
            if (getValue()
                != other.getValue()) return false;
          }
          if (hasMapping() != other.hasMapping()) return false;
          if (hasMapping()) {
            if (getMapping()
                != other.getMapping()) return false;
          }
          if (hasCount() != other.hasCount()) return false;
          if (hasCount()) {
            if (getCount()
                != other.getCount()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasValue()) {
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getValue();
          }
          if (hasMapping()) {
            hash = (37 * hash) + MAPPING_FIELD_NUMBER;
            hash = (53 * hash) + getMapping();
          }
          if (hasCount()) {
            hash = (37 * hash) + COUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getCount());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder.class);
          }

          // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            value_ = 0;
            mapping_ = 0;
            count_ = 0L;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_descriptor;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getDefaultInstanceForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance();
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry build() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry buildPartial() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.value_ = value_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.mapping_ = mapping_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.count_ = count_;
              to_bitField0_ |= 0x00000004;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry) {
              return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry other) {
            if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance()) return this;
            if (other.hasValue()) {
              setValue(other.getValue());
            }
            if (other.hasMapping()) {
              setMapping(other.getMapping());
            }
            if (other.hasCount()) {
              setCount(other.getCount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    value_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    mapping_ = input.readUInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 24: {
                    count_ = input.readUInt64();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int value_ ;
          /**
           * <code>optional uint32 value = 1;</code>
           * @return Whether the value field is set.
           */
          @java.lang.Override
          public boolean hasValue() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional uint32 value = 1;</code>
           * @return The value.
           */
          @java.lang.Override
          public int getValue() {
            return value_;
          }
          /**
           * <code>optional uint32 value = 1;</code>
           * @param value The value to set.
           * @return This builder for chaining.
           */
          public Builder setValue(int value) {

            value_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 value = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000001);
            value_ = 0;
            onChanged();
            return this;
          }

          private int mapping_ ;
          /**
           * <code>optional uint32 mapping = 2;</code>
           * @return Whether the mapping field is set.
           */
          @java.lang.Override
          public boolean hasMapping() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional uint32 mapping = 2;</code>
           * @return The mapping.
           */
          @java.lang.Override
          public int getMapping() {
            return mapping_;
          }
          /**
           * <code>optional uint32 mapping = 2;</code>
           * @param value The mapping to set.
           * @return This builder for chaining.
           */
          public Builder setMapping(int value) {

            mapping_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 mapping = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearMapping() {
            bitField0_ = (bitField0_ & ~0x00000002);
            mapping_ = 0;
            onChanged();
            return this;
          }

          private long count_ ;
          /**
           * <code>optional uint64 count = 3;</code>
           * @return Whether the count field is set.
           */
          @java.lang.Override
          public boolean hasCount() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional uint64 count = 3;</code>
           * @return The count.
           */
          @java.lang.Override
          public long getCount() {
            return count_;
          }
          /**
           * <code>optional uint64 count = 3;</code>
           * @param value The count to set.
           * @return This builder for chaining.
           */
          public Builder setCount(long value) {

            count_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 count = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearCount() {
            bitField0_ = (bitField0_ & ~0x00000004);
            count_ = 0L;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)
        }

        // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry)
        private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry();
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Entry>
            PARSER = new com.google.protobuf.AbstractParser<Entry>() {
          @java.lang.Override
          public Entry parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Entry> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Entry> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MapValuesEntryOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        boolean hasKey();
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        int getKey();

        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return Whether the value field is set.
         */
        boolean hasValue();
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return The value.
         */
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getValue();
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         */
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder getValueOrBuilder();
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry}
       */
      public static final class MapValuesEntry extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)
          MapValuesEntryOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 0,
            /* suffix= */ "",
            MapValuesEntry.class.getName());
        }
        // Use MapValuesEntry.newBuilder() to construct.
        private MapValuesEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private MapValuesEntry() {
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder.class);
        }

        private int bitField0_;
        public static final int KEY_FIELD_NUMBER = 1;
        private int key_ = 0;
        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public int getKey() {
          return key_;
        }

        public static final int VALUE_FIELD_NUMBER = 2;
        private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value_;
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getValue() {
          return value_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
        }
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder getValueOrBuilder() {
          return value_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, key_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeMessage(2, getValue());
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, key_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getValue());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)) {
            return super.equals(obj);
          }
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry) obj;

          if (hasKey() != other.hasKey()) return false;
          if (hasKey()) {
            if (getKey()
                != other.getKey()) return false;
          }
          if (hasValue() != other.hasValue()) return false;
          if (hasValue()) {
            if (!getValue()
                .equals(other.getValue())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasKey()) {
            hash = (37 * hash) + KEY_FIELD_NUMBER;
            hash = (53 * hash) + getKey();
          }
          if (hasValue()) {
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getValue().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder.class);
          }

          // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage
                    .alwaysUseFieldBuilders) {
              getValueFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            key_ = 0;
            value_ = null;
            if (valueBuilder_ != null) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_descriptor;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry getDefaultInstanceForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.getDefaultInstance();
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry build() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry buildPartial() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.key_ = key_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.value_ = valueBuilder_ == null
                  ? value_
                  : valueBuilder_.build();
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry) {
              return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry other) {
            if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.getDefaultInstance()) return this;
            if (other.hasKey()) {
              setKey(other.getKey());
            }
            if (other.hasValue()) {
              mergeValue(other.getValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    key_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    input.readMessage(
                        getValueFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int key_ ;
          /**
           * <code>optional uint32 key = 1;</code>
           * @return Whether the key field is set.
           */
          @java.lang.Override
          public boolean hasKey() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional uint32 key = 1;</code>
           * @return The key.
           */
          @java.lang.Override
          public int getKey() {
            return key_;
          }
          /**
           * <code>optional uint32 key = 1;</code>
           * @param value The key to set.
           * @return This builder for chaining.
           */
          public Builder setKey(int value) {

            key_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 key = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearKey() {
            bitField0_ = (bitField0_ & ~0x00000001);
            key_ = 0;
            onChanged();
            return this;
          }

          private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value_;
          private com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder> valueBuilder_;
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           * @return Whether the value field is set.
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           * @return The value.
           */
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getValue() {
            if (valueBuilder_ == null) {
              return value_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
            } else {
              return valueBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder setValue(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value) {
            if (valueBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              value_ = value;
            } else {
              valueBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder setValue(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder builderForValue) {
            if (valueBuilder_ == null) {
              value_ = builderForValue.build();
            } else {
              valueBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder mergeValue(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value) {
            if (valueBuilder_ == null) {
              if (((bitField0_ & 0x00000002) != 0) &&
                value_ != null &&
                value_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance()) {
                getValueBuilder().mergeFrom(value);
              } else {
                value_ = value;
              }
            } else {
              valueBuilder_.mergeFrom(value);
            }
            if (value_ != null) {
              bitField0_ |= 0x00000002;
              onChanged();
            }
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            value_ = null;
            if (valueBuilder_ != null) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder getValueBuilder() {
            bitField0_ |= 0x00000002;
            onChanged();
            return getValueFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder getValueOrBuilder() {
            if (valueBuilder_ != null) {
              return valueBuilder_.getMessageOrBuilder();
            } else {
              return value_ == null ?
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
            }
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder> 
              getValueFieldBuilder() {
            if (valueBuilder_ == null) {
              valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder>(
                      getValue(),
                      getParentForChildren(),
                      isClean());
              value_ = null;
            }
            return valueBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)
        }

        // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry)
        private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry();
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MapValuesEntry>
            PARSER = new com.google.protobuf.AbstractParser<MapValuesEntry>() {
          @java.lang.Override
          public MapValuesEntry parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<MapValuesEntry> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MapValuesEntry> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MapMappingsEntryOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        boolean hasKey();
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        int getKey();

        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return Whether the value field is set.
         */
        boolean hasValue();
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return The value.
         */
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getValue();
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         */
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder getValueOrBuilder();
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry}
       */
      public static final class MapMappingsEntry extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)
          MapMappingsEntryOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 0,
            /* suffix= */ "",
            MapMappingsEntry.class.getName());
        }
        // Use MapMappingsEntry.newBuilder() to construct.
        private MapMappingsEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private MapMappingsEntry() {
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder.class);
        }

        private int bitField0_;
        public static final int KEY_FIELD_NUMBER = 1;
        private int key_ = 0;
        /**
         * <code>optional uint32 key = 1;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public int getKey() {
          return key_;
        }

        public static final int VALUE_FIELD_NUMBER = 2;
        private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value_;
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getValue() {
          return value_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
        }
        /**
         * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder getValueOrBuilder() {
          return value_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, key_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeMessage(2, getValue());
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, key_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getValue());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)) {
            return super.equals(obj);
          }
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry) obj;

          if (hasKey() != other.hasKey()) return false;
          if (hasKey()) {
            if (getKey()
                != other.getKey()) return false;
          }
          if (hasValue() != other.hasValue()) return false;
          if (hasValue()) {
            if (!getValue()
                .equals(other.getValue())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasKey()) {
            hash = (37 * hash) + KEY_FIELD_NUMBER;
            hash = (53 * hash) + getKey();
          }
          if (hasValue()) {
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getValue().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder.class);
          }

          // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage
                    .alwaysUseFieldBuilders) {
              getValueFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            key_ = 0;
            value_ = null;
            if (valueBuilder_ != null) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_descriptor;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry getDefaultInstanceForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.getDefaultInstance();
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry build() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry buildPartial() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.key_ = key_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.value_ = valueBuilder_ == null
                  ? value_
                  : valueBuilder_.build();
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry) {
              return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry other) {
            if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.getDefaultInstance()) return this;
            if (other.hasKey()) {
              setKey(other.getKey());
            }
            if (other.hasValue()) {
              mergeValue(other.getValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    key_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    input.readMessage(
                        getValueFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int key_ ;
          /**
           * <code>optional uint32 key = 1;</code>
           * @return Whether the key field is set.
           */
          @java.lang.Override
          public boolean hasKey() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional uint32 key = 1;</code>
           * @return The key.
           */
          @java.lang.Override
          public int getKey() {
            return key_;
          }
          /**
           * <code>optional uint32 key = 1;</code>
           * @param value The key to set.
           * @return This builder for chaining.
           */
          public Builder setKey(int value) {

            key_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 key = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearKey() {
            bitField0_ = (bitField0_ & ~0x00000001);
            key_ = 0;
            onChanged();
            return this;
          }

          private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value_;
          private com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder> valueBuilder_;
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           * @return Whether the value field is set.
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           * @return The value.
           */
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry getValue() {
            if (valueBuilder_ == null) {
              return value_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
            } else {
              return valueBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder setValue(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value) {
            if (valueBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              value_ = value;
            } else {
              valueBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder setValue(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder builderForValue) {
            if (valueBuilder_ == null) {
              value_ = builderForValue.build();
            } else {
              valueBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder mergeValue(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value) {
            if (valueBuilder_ == null) {
              if (((bitField0_ & 0x00000002) != 0) &&
                value_ != null &&
                value_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance()) {
                getValueBuilder().mergeFrom(value);
              } else {
                value_ = value;
              }
            } else {
              valueBuilder_.mergeFrom(value);
            }
            if (value_ != null) {
              bitField0_ |= 0x00000002;
              onChanged();
            }
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            value_ = null;
            if (valueBuilder_ != null) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder getValueBuilder() {
            bitField0_ |= 0x00000002;
            onChanged();
            return getValueFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder getValueOrBuilder() {
            if (valueBuilder_ != null) {
              return valueBuilder_.getMessageOrBuilder();
            } else {
              return value_ == null ?
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.getDefaultInstance() : value_;
            }
          }
          /**
           * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry value = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder> 
              getValueFieldBuilder() {
            if (valueBuilder_ == null) {
              valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryOrBuilder>(
                      getValue(),
                      getParentForChildren(),
                      isClean());
              value_ = null;
            }
            return valueBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)
        }

        // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry)
        private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry();
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MapMappingsEntry>
            PARSER = new com.google.protobuf.AbstractParser<MapMappingsEntry>() {
          @java.lang.Override
          public MapMappingsEntry parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<MapMappingsEntry> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MapMappingsEntry> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MAP_VALUES_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry> mapValues_;
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      @java.lang.Override
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry> getMapValuesList() {
        return mapValues_;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder> 
          getMapValuesOrBuilderList() {
        return mapValues_;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      @java.lang.Override
      public int getMapValuesCount() {
        return mapValues_.size();
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry getMapValues(int index) {
        return mapValues_.get(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder getMapValuesOrBuilder(
          int index) {
        return mapValues_.get(index);
      }

      public static final int MAP_MAPPINGS_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry> mapMappings_;
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      @java.lang.Override
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry> getMapMappingsList() {
        return mapMappings_;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder> 
          getMapMappingsOrBuilderList() {
        return mapMappings_;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      @java.lang.Override
      public int getMapMappingsCount() {
        return mapMappings_.size();
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry getMapMappings(int index) {
        return mapMappings_.get(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder getMapMappingsOrBuilder(
          int index) {
        return mapMappings_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
        }
        for (int i = 0; i < mapValues_.size(); i++) {
          output.writeMessage(2, mapValues_.get(i));
        }
        for (int i = 0; i < mapMappings_.size(); i++) {
          output.writeMessage(3, mapMappings_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
        }
        for (int i = 0; i < mapValues_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, mapValues_.get(i));
        }
        for (int i = 0; i < mapMappings_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, mapMappings_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (!getMapValuesList()
            .equals(other.getMapValuesList())) return false;
        if (!getMapMappingsList()
            .equals(other.getMapMappingsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (getMapValuesCount() > 0) {
          hash = (37 * hash) + MAP_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getMapValuesList().hashCode();
        }
        if (getMapMappingsCount() > 0) {
          hash = (37 * hash) + MAP_MAPPINGS_FIELD_NUMBER;
          hash = (53 * hash) + getMapMappingsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.CompactTable}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.CompactTable)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          if (mapValuesBuilder_ == null) {
            mapValues_ = java.util.Collections.emptyList();
          } else {
            mapValues_ = null;
            mapValuesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (mapMappingsBuilder_ == null) {
            mapMappings_ = java.util.Collections.emptyList();
          } else {
            mapMappings_ = null;
            mapMappingsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable result) {
          if (mapValuesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              mapValues_ = java.util.Collections.unmodifiableList(mapValues_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.mapValues_ = mapValues_;
          } else {
            result.mapValues_ = mapValuesBuilder_.build();
          }
          if (mapMappingsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0)) {
              mapMappings_ = java.util.Collections.unmodifiableList(mapMappings_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.mapMappings_ = mapMappings_;
          } else {
            result.mapMappings_ = mapMappingsBuilder_.build();
          }
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.getDefaultInstance()) return this;
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (mapValuesBuilder_ == null) {
            if (!other.mapValues_.isEmpty()) {
              if (mapValues_.isEmpty()) {
                mapValues_ = other.mapValues_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureMapValuesIsMutable();
                mapValues_.addAll(other.mapValues_);
              }
              onChanged();
            }
          } else {
            if (!other.mapValues_.isEmpty()) {
              if (mapValuesBuilder_.isEmpty()) {
                mapValuesBuilder_.dispose();
                mapValuesBuilder_ = null;
                mapValues_ = other.mapValues_;
                bitField0_ = (bitField0_ & ~0x00000002);
                mapValuesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMapValuesFieldBuilder() : null;
              } else {
                mapValuesBuilder_.addAllMessages(other.mapValues_);
              }
            }
          }
          if (mapMappingsBuilder_ == null) {
            if (!other.mapMappings_.isEmpty()) {
              if (mapMappings_.isEmpty()) {
                mapMappings_ = other.mapMappings_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureMapMappingsIsMutable();
                mapMappings_.addAll(other.mapMappings_);
              }
              onChanged();
            }
          } else {
            if (!other.mapMappings_.isEmpty()) {
              if (mapMappingsBuilder_.isEmpty()) {
                mapMappingsBuilder_.dispose();
                mapMappingsBuilder_ = null;
                mapMappings_ = other.mapMappings_;
                bitField0_ = (bitField0_ & ~0x00000004);
                mapMappingsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMapMappingsFieldBuilder() : null;
              } else {
                mapMappingsBuilder_.addAllMessages(other.mapMappings_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry m =
                      input.readMessage(
                          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.parser(),
                          extensionRegistry);
                  if (mapValuesBuilder_ == null) {
                    ensureMapValuesIsMutable();
                    mapValues_.add(m);
                  } else {
                    mapValuesBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                case 26: {
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry m =
                      input.readMessage(
                          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.parser(),
                          extensionRegistry);
                  if (mapMappingsBuilder_ == null) {
                    ensureMapMappingsIsMutable();
                    mapMappings_.add(m);
                  } else {
                    mapMappingsBuilder_.addMessage(m);
                  }
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry> mapValues_ =
          java.util.Collections.emptyList();
        private void ensureMapValuesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            mapValues_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry>(mapValues_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder> mapValuesBuilder_;

        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry> getMapValuesList() {
          if (mapValuesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(mapValues_);
          } else {
            return mapValuesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public int getMapValuesCount() {
          if (mapValuesBuilder_ == null) {
            return mapValues_.size();
          } else {
            return mapValuesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry getMapValues(int index) {
          if (mapValuesBuilder_ == null) {
            return mapValues_.get(index);
          } else {
            return mapValuesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder setMapValues(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry value) {
          if (mapValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMapValuesIsMutable();
            mapValues_.set(index, value);
            onChanged();
          } else {
            mapValuesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder setMapValues(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder builderForValue) {
          if (mapValuesBuilder_ == null) {
            ensureMapValuesIsMutable();
            mapValues_.set(index, builderForValue.build());
            onChanged();
          } else {
            mapValuesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder addMapValues(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry value) {
          if (mapValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMapValuesIsMutable();
            mapValues_.add(value);
            onChanged();
          } else {
            mapValuesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder addMapValues(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry value) {
          if (mapValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMapValuesIsMutable();
            mapValues_.add(index, value);
            onChanged();
          } else {
            mapValuesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder addMapValues(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder builderForValue) {
          if (mapValuesBuilder_ == null) {
            ensureMapValuesIsMutable();
            mapValues_.add(builderForValue.build());
            onChanged();
          } else {
            mapValuesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder addMapValues(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder builderForValue) {
          if (mapValuesBuilder_ == null) {
            ensureMapValuesIsMutable();
            mapValues_.add(index, builderForValue.build());
            onChanged();
          } else {
            mapValuesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder addAllMapValues(
            java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry> values) {
          if (mapValuesBuilder_ == null) {
            ensureMapValuesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mapValues_);
            onChanged();
          } else {
            mapValuesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder clearMapValues() {
          if (mapValuesBuilder_ == null) {
            mapValues_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            mapValuesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public Builder removeMapValues(int index) {
          if (mapValuesBuilder_ == null) {
            ensureMapValuesIsMutable();
            mapValues_.remove(index);
            onChanged();
          } else {
            mapValuesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder getMapValuesBuilder(
            int index) {
          return getMapValuesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder getMapValuesOrBuilder(
            int index) {
          if (mapValuesBuilder_ == null) {
            return mapValues_.get(index);  } else {
            return mapValuesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder> 
             getMapValuesOrBuilderList() {
          if (mapValuesBuilder_ != null) {
            return mapValuesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(mapValues_);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder addMapValuesBuilder() {
          return getMapValuesFieldBuilder().addBuilder(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder addMapValuesBuilder(
            int index) {
          return getMapValuesFieldBuilder().addBuilder(
              index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry map_values = 2;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder> 
             getMapValuesBuilderList() {
          return getMapValuesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder> 
            getMapValuesFieldBuilder() {
          if (mapValuesBuilder_ == null) {
            mapValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryOrBuilder>(
                    mapValues_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            mapValues_ = null;
          }
          return mapValuesBuilder_;
        }

        private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry> mapMappings_ =
          java.util.Collections.emptyList();
        private void ensureMapMappingsIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            mapMappings_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry>(mapMappings_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder> mapMappingsBuilder_;

        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry> getMapMappingsList() {
          if (mapMappingsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(mapMappings_);
          } else {
            return mapMappingsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public int getMapMappingsCount() {
          if (mapMappingsBuilder_ == null) {
            return mapMappings_.size();
          } else {
            return mapMappingsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry getMapMappings(int index) {
          if (mapMappingsBuilder_ == null) {
            return mapMappings_.get(index);
          } else {
            return mapMappingsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder setMapMappings(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry value) {
          if (mapMappingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMapMappingsIsMutable();
            mapMappings_.set(index, value);
            onChanged();
          } else {
            mapMappingsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder setMapMappings(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder builderForValue) {
          if (mapMappingsBuilder_ == null) {
            ensureMapMappingsIsMutable();
            mapMappings_.set(index, builderForValue.build());
            onChanged();
          } else {
            mapMappingsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder addMapMappings(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry value) {
          if (mapMappingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMapMappingsIsMutable();
            mapMappings_.add(value);
            onChanged();
          } else {
            mapMappingsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder addMapMappings(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry value) {
          if (mapMappingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMapMappingsIsMutable();
            mapMappings_.add(index, value);
            onChanged();
          } else {
            mapMappingsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder addMapMappings(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder builderForValue) {
          if (mapMappingsBuilder_ == null) {
            ensureMapMappingsIsMutable();
            mapMappings_.add(builderForValue.build());
            onChanged();
          } else {
            mapMappingsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder addMapMappings(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder builderForValue) {
          if (mapMappingsBuilder_ == null) {
            ensureMapMappingsIsMutable();
            mapMappings_.add(index, builderForValue.build());
            onChanged();
          } else {
            mapMappingsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder addAllMapMappings(
            java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry> values) {
          if (mapMappingsBuilder_ == null) {
            ensureMapMappingsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mapMappings_);
            onChanged();
          } else {
            mapMappingsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder clearMapMappings() {
          if (mapMappingsBuilder_ == null) {
            mapMappings_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            mapMappingsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public Builder removeMapMappings(int index) {
          if (mapMappingsBuilder_ == null) {
            ensureMapMappingsIsMutable();
            mapMappings_.remove(index);
            onChanged();
          } else {
            mapMappingsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder getMapMappingsBuilder(
            int index) {
          return getMapMappingsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder getMapMappingsOrBuilder(
            int index) {
          if (mapMappingsBuilder_ == null) {
            return mapMappings_.get(index);  } else {
            return mapMappingsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder> 
             getMapMappingsOrBuilderList() {
          if (mapMappingsBuilder_ != null) {
            return mapMappingsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(mapMappings_);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder addMapMappingsBuilder() {
          return getMapMappingsFieldBuilder().addBuilder(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder addMapMappingsBuilder(
            int index) {
          return getMapMappingsFieldBuilder().addBuilder(
              index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry map_mappings = 3;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder> 
             getMapMappingsBuilderList() {
          return getMapMappingsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder> 
            getMapMappingsFieldBuilder() {
          if (mapMappingsBuilder_ == null) {
            mapMappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryOrBuilder>(
                    mapMappings_,
                    ((bitField0_ & 0x00000004) != 0),
                    getParentForChildren(),
                    isClean());
            mapMappings_ = null;
          }
          return mapMappingsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.CompactTable)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CompactTable>
          PARSER = new com.google.protobuf.AbstractParser<CompactTable>() {
        @java.lang.Override
        public CompactTable parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<CompactTable> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CompactTable> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface KMeansOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.KMeans)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster> 
          getClustersList();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster getClusters(int index);
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      int getClustersCount();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder> 
          getClustersOrBuilderList();
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder getClustersOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.KMeans}
     */
    public static final class KMeans extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.KMeans)
        KMeansOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          KMeans.class.getName());
      }
      // Use KMeans.newBuilder() to construct.
      private KMeans(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private KMeans() {
        name_ = "";
        clusters_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder.class);
      }

      public interface ClusterOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float x = 1;</code>
         * @return Whether the x field is set.
         */
        boolean hasX();
        /**
         * <code>optional float x = 1;</code>
         * @return The x.
         */
        float getX();

        /**
         * <code>optional float y = 2;</code>
         * @return Whether the y field is set.
         */
        boolean hasY();
        /**
         * <code>optional float y = 2;</code>
         * @return The y.
         */
        float getY();

        /**
         * <code>optional float radius = 3;</code>
         * @return Whether the radius field is set.
         */
        boolean hasRadius();
        /**
         * <code>optional float radius = 3;</code>
         * @return The radius.
         */
        float getRadius();

        /**
         * <code>optional float radius_75pct = 4;</code>
         * @return Whether the radius75pct field is set.
         */
        boolean hasRadius75Pct();
        /**
         * <code>optional float radius_75pct = 4;</code>
         * @return The radius75pct.
         */
        float getRadius75Pct();

        /**
         * <code>optional float radius_50pct = 5;</code>
         * @return Whether the radius50pct field is set.
         */
        boolean hasRadius50Pct();
        /**
         * <code>optional float radius_50pct = 5;</code>
         * @return The radius50pct.
         */
        float getRadius50Pct();

        /**
         * <code>optional float radius_25pct = 6;</code>
         * @return Whether the radius25pct field is set.
         */
        boolean hasRadius25Pct();
        /**
         * <code>optional float radius_25pct = 6;</code>
         * @return The radius25pct.
         */
        float getRadius25Pct();
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster}
       */
      public static final class Cluster extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)
          ClusterOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 0,
            /* suffix= */ "",
            Cluster.class.getName());
        }
        // Use Cluster.newBuilder() to construct.
        private Cluster(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private Cluster() {
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder.class);
        }

        private int bitField0_;
        public static final int X_FIELD_NUMBER = 1;
        private float x_ = 0F;
        /**
         * <code>optional float x = 1;</code>
         * @return Whether the x field is set.
         */
        @java.lang.Override
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float x = 1;</code>
         * @return The x.
         */
        @java.lang.Override
        public float getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 2;
        private float y_ = 0F;
        /**
         * <code>optional float y = 2;</code>
         * @return Whether the y field is set.
         */
        @java.lang.Override
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float y = 2;</code>
         * @return The y.
         */
        @java.lang.Override
        public float getY() {
          return y_;
        }

        public static final int RADIUS_FIELD_NUMBER = 3;
        private float radius_ = 0F;
        /**
         * <code>optional float radius = 3;</code>
         * @return Whether the radius field is set.
         */
        @java.lang.Override
        public boolean hasRadius() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float radius = 3;</code>
         * @return The radius.
         */
        @java.lang.Override
        public float getRadius() {
          return radius_;
        }

        public static final int RADIUS_75PCT_FIELD_NUMBER = 4;
        private float radius75Pct_ = 0F;
        /**
         * <code>optional float radius_75pct = 4;</code>
         * @return Whether the radius75pct field is set.
         */
        @java.lang.Override
        public boolean hasRadius75Pct() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float radius_75pct = 4;</code>
         * @return The radius75pct.
         */
        @java.lang.Override
        public float getRadius75Pct() {
          return radius75Pct_;
        }

        public static final int RADIUS_50PCT_FIELD_NUMBER = 5;
        private float radius50Pct_ = 0F;
        /**
         * <code>optional float radius_50pct = 5;</code>
         * @return Whether the radius50pct field is set.
         */
        @java.lang.Override
        public boolean hasRadius50Pct() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float radius_50pct = 5;</code>
         * @return The radius50pct.
         */
        @java.lang.Override
        public float getRadius50Pct() {
          return radius50Pct_;
        }

        public static final int RADIUS_25PCT_FIELD_NUMBER = 6;
        private float radius25Pct_ = 0F;
        /**
         * <code>optional float radius_25pct = 6;</code>
         * @return Whether the radius25pct field is set.
         */
        @java.lang.Override
        public boolean hasRadius25Pct() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional float radius_25pct = 6;</code>
         * @return The radius25pct.
         */
        @java.lang.Override
        public float getRadius25Pct() {
          return radius25Pct_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, y_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(3, radius_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(4, radius75Pct_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeFloat(5, radius50Pct_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeFloat(6, radius25Pct_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, y_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, radius_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, radius75Pct_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, radius50Pct_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(6, radius25Pct_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)) {
            return super.equals(obj);
          }
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster) obj;

          if (hasX() != other.hasX()) return false;
          if (hasX()) {
            if (java.lang.Float.floatToIntBits(getX())
                != java.lang.Float.floatToIntBits(
                    other.getX())) return false;
          }
          if (hasY() != other.hasY()) return false;
          if (hasY()) {
            if (java.lang.Float.floatToIntBits(getY())
                != java.lang.Float.floatToIntBits(
                    other.getY())) return false;
          }
          if (hasRadius() != other.hasRadius()) return false;
          if (hasRadius()) {
            if (java.lang.Float.floatToIntBits(getRadius())
                != java.lang.Float.floatToIntBits(
                    other.getRadius())) return false;
          }
          if (hasRadius75Pct() != other.hasRadius75Pct()) return false;
          if (hasRadius75Pct()) {
            if (java.lang.Float.floatToIntBits(getRadius75Pct())
                != java.lang.Float.floatToIntBits(
                    other.getRadius75Pct())) return false;
          }
          if (hasRadius50Pct() != other.hasRadius50Pct()) return false;
          if (hasRadius50Pct()) {
            if (java.lang.Float.floatToIntBits(getRadius50Pct())
                != java.lang.Float.floatToIntBits(
                    other.getRadius50Pct())) return false;
          }
          if (hasRadius25Pct() != other.hasRadius25Pct()) return false;
          if (hasRadius25Pct()) {
            if (java.lang.Float.floatToIntBits(getRadius25Pct())
                != java.lang.Float.floatToIntBits(
                    other.getRadius25Pct())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasX()) {
            hash = (37 * hash) + X_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getX());
          }
          if (hasY()) {
            hash = (37 * hash) + Y_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getY());
          }
          if (hasRadius()) {
            hash = (37 * hash) + RADIUS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getRadius());
          }
          if (hasRadius75Pct()) {
            hash = (37 * hash) + RADIUS_75PCT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getRadius75Pct());
          }
          if (hasRadius50Pct()) {
            hash = (37 * hash) + RADIUS_50PCT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getRadius50Pct());
          }
          if (hasRadius25Pct()) {
            hash = (37 * hash) + RADIUS_25PCT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getRadius25Pct());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder.class);
          }

          // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            x_ = 0F;
            y_ = 0F;
            radius_ = 0F;
            radius75Pct_ = 0F;
            radius50Pct_ = 0F;
            radius25Pct_ = 0F;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_descriptor;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster getDefaultInstanceForType() {
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.getDefaultInstance();
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster build() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster buildPartial() {
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.x_ = x_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.y_ = y_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.radius_ = radius_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.radius75Pct_ = radius75Pct_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.radius50Pct_ = radius50Pct_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.radius25Pct_ = radius25Pct_;
              to_bitField0_ |= 0x00000020;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster) {
              return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster other) {
            if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasRadius()) {
              setRadius(other.getRadius());
            }
            if (other.hasRadius75Pct()) {
              setRadius75Pct(other.getRadius75Pct());
            }
            if (other.hasRadius50Pct()) {
              setRadius50Pct(other.getRadius50Pct());
            }
            if (other.hasRadius25Pct()) {
              setRadius25Pct(other.getRadius25Pct());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 13: {
                    x_ = input.readFloat();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 13
                  case 21: {
                    y_ = input.readFloat();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 21
                  case 29: {
                    radius_ = input.readFloat();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 29
                  case 37: {
                    radius75Pct_ = input.readFloat();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 37
                  case 45: {
                    radius50Pct_ = input.readFloat();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 45
                  case 53: {
                    radius25Pct_ = input.readFloat();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 53
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private float x_ ;
          /**
           * <code>optional float x = 1;</code>
           * @return Whether the x field is set.
           */
          @java.lang.Override
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float x = 1;</code>
           * @return The x.
           */
          @java.lang.Override
          public float getX() {
            return x_;
          }
          /**
           * <code>optional float x = 1;</code>
           * @param value The x to set.
           * @return This builder for chaining.
           */
          public Builder setX(float value) {

            x_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional float x = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            onChanged();
            return this;
          }

          private float y_ ;
          /**
           * <code>optional float y = 2;</code>
           * @return Whether the y field is set.
           */
          @java.lang.Override
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float y = 2;</code>
           * @return The y.
           */
          @java.lang.Override
          public float getY() {
            return y_;
          }
          /**
           * <code>optional float y = 2;</code>
           * @param value The y to set.
           * @return This builder for chaining.
           */
          public Builder setY(float value) {

            y_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional float y = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            onChanged();
            return this;
          }

          private float radius_ ;
          /**
           * <code>optional float radius = 3;</code>
           * @return Whether the radius field is set.
           */
          @java.lang.Override
          public boolean hasRadius() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float radius = 3;</code>
           * @return The radius.
           */
          @java.lang.Override
          public float getRadius() {
            return radius_;
          }
          /**
           * <code>optional float radius = 3;</code>
           * @param value The radius to set.
           * @return This builder for chaining.
           */
          public Builder setRadius(float value) {

            radius_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional float radius = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearRadius() {
            bitField0_ = (bitField0_ & ~0x00000004);
            radius_ = 0F;
            onChanged();
            return this;
          }

          private float radius75Pct_ ;
          /**
           * <code>optional float radius_75pct = 4;</code>
           * @return Whether the radius75pct field is set.
           */
          @java.lang.Override
          public boolean hasRadius75Pct() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float radius_75pct = 4;</code>
           * @return The radius75pct.
           */
          @java.lang.Override
          public float getRadius75Pct() {
            return radius75Pct_;
          }
          /**
           * <code>optional float radius_75pct = 4;</code>
           * @param value The radius75pct to set.
           * @return This builder for chaining.
           */
          public Builder setRadius75Pct(float value) {

            radius75Pct_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <code>optional float radius_75pct = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearRadius75Pct() {
            bitField0_ = (bitField0_ & ~0x00000008);
            radius75Pct_ = 0F;
            onChanged();
            return this;
          }

          private float radius50Pct_ ;
          /**
           * <code>optional float radius_50pct = 5;</code>
           * @return Whether the radius50pct field is set.
           */
          @java.lang.Override
          public boolean hasRadius50Pct() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional float radius_50pct = 5;</code>
           * @return The radius50pct.
           */
          @java.lang.Override
          public float getRadius50Pct() {
            return radius50Pct_;
          }
          /**
           * <code>optional float radius_50pct = 5;</code>
           * @param value The radius50pct to set.
           * @return This builder for chaining.
           */
          public Builder setRadius50Pct(float value) {

            radius50Pct_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <code>optional float radius_50pct = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearRadius50Pct() {
            bitField0_ = (bitField0_ & ~0x00000010);
            radius50Pct_ = 0F;
            onChanged();
            return this;
          }

          private float radius25Pct_ ;
          /**
           * <code>optional float radius_25pct = 6;</code>
           * @return Whether the radius25pct field is set.
           */
          @java.lang.Override
          public boolean hasRadius25Pct() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional float radius_25pct = 6;</code>
           * @return The radius25pct.
           */
          @java.lang.Override
          public float getRadius25Pct() {
            return radius25Pct_;
          }
          /**
           * <code>optional float radius_25pct = 6;</code>
           * @param value The radius25pct to set.
           * @return This builder for chaining.
           */
          public Builder setRadius25Pct(float value) {

            radius25Pct_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <code>optional float radius_25pct = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearRadius25Pct() {
            bitField0_ = (bitField0_ & ~0x00000020);
            radius25Pct_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)
        }

        // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster)
        private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster();
        }

        public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Cluster>
            PARSER = new com.google.protobuf.AbstractParser<Cluster>() {
          @java.lang.Override
          public Cluster parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Cluster> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Cluster> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CLUSTERS_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster> clusters_;
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      @java.lang.Override
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster> getClustersList() {
        return clusters_;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder> 
          getClustersOrBuilderList() {
        return clusters_;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      @java.lang.Override
      public int getClustersCount() {
        return clusters_.size();
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster getClusters(int index) {
        return clusters_.get(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder getClustersOrBuilder(
          int index) {
        return clusters_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
        }
        for (int i = 0; i < clusters_.size(); i++) {
          output.writeMessage(2, clusters_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
        }
        for (int i = 0; i < clusters_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, clusters_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (!getClustersList()
            .equals(other.getClustersList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (getClustersCount() > 0) {
          hash = (37 * hash) + CLUSTERS_FIELD_NUMBER;
          hash = (53 * hash) + getClustersList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.KMeans}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.KMeans)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          if (clustersBuilder_ == null) {
            clusters_ = java.util.Collections.emptyList();
          } else {
            clusters_ = null;
            clustersBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans result) {
          if (clustersBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              clusters_ = java.util.Collections.unmodifiableList(clusters_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.clusters_ = clusters_;
          } else {
            result.clusters_ = clustersBuilder_.build();
          }
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.getDefaultInstance()) return this;
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (clustersBuilder_ == null) {
            if (!other.clusters_.isEmpty()) {
              if (clusters_.isEmpty()) {
                clusters_ = other.clusters_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureClustersIsMutable();
                clusters_.addAll(other.clusters_);
              }
              onChanged();
            }
          } else {
            if (!other.clusters_.isEmpty()) {
              if (clustersBuilder_.isEmpty()) {
                clustersBuilder_.dispose();
                clustersBuilder_ = null;
                clusters_ = other.clusters_;
                bitField0_ = (bitField0_ & ~0x00000002);
                clustersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getClustersFieldBuilder() : null;
              } else {
                clustersBuilder_.addAllMessages(other.clusters_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster m =
                      input.readMessage(
                          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.parser(),
                          extensionRegistry);
                  if (clustersBuilder_ == null) {
                    ensureClustersIsMutable();
                    clusters_.add(m);
                  } else {
                    clustersBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster> clusters_ =
          java.util.Collections.emptyList();
        private void ensureClustersIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            clusters_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster>(clusters_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder> clustersBuilder_;

        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster> getClustersList() {
          if (clustersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(clusters_);
          } else {
            return clustersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public int getClustersCount() {
          if (clustersBuilder_ == null) {
            return clusters_.size();
          } else {
            return clustersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster getClusters(int index) {
          if (clustersBuilder_ == null) {
            return clusters_.get(index);
          } else {
            return clustersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder setClusters(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster value) {
          if (clustersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureClustersIsMutable();
            clusters_.set(index, value);
            onChanged();
          } else {
            clustersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder setClusters(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder builderForValue) {
          if (clustersBuilder_ == null) {
            ensureClustersIsMutable();
            clusters_.set(index, builderForValue.build());
            onChanged();
          } else {
            clustersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder addClusters(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster value) {
          if (clustersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureClustersIsMutable();
            clusters_.add(value);
            onChanged();
          } else {
            clustersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder addClusters(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster value) {
          if (clustersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureClustersIsMutable();
            clusters_.add(index, value);
            onChanged();
          } else {
            clustersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder addClusters(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder builderForValue) {
          if (clustersBuilder_ == null) {
            ensureClustersIsMutable();
            clusters_.add(builderForValue.build());
            onChanged();
          } else {
            clustersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder addClusters(
            int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder builderForValue) {
          if (clustersBuilder_ == null) {
            ensureClustersIsMutable();
            clusters_.add(index, builderForValue.build());
            onChanged();
          } else {
            clustersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder addAllClusters(
            java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster> values) {
          if (clustersBuilder_ == null) {
            ensureClustersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, clusters_);
            onChanged();
          } else {
            clustersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder clearClusters() {
          if (clustersBuilder_ == null) {
            clusters_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            clustersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public Builder removeClusters(int index) {
          if (clustersBuilder_ == null) {
            ensureClustersIsMutable();
            clusters_.remove(index);
            onChanged();
          } else {
            clustersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder getClustersBuilder(
            int index) {
          return getClustersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder getClustersOrBuilder(
            int index) {
          if (clustersBuilder_ == null) {
            return clusters_.get(index);  } else {
            return clustersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder> 
             getClustersOrBuilderList() {
          if (clustersBuilder_ != null) {
            return clustersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(clusters_);
          }
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder addClustersBuilder() {
          return getClustersFieldBuilder().addBuilder(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder addClustersBuilder(
            int index) {
          return getClustersFieldBuilder().addBuilder(
              index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster clusters = 2;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder> 
             getClustersBuilderList() {
          return getClustersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder> 
            getClustersFieldBuilder() {
          if (clustersBuilder_ == null) {
            clustersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterOrBuilder>(
                    clusters_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            clusters_ = null;
          }
          return clustersBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.KMeans)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.KMeans)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<KMeans>
          PARSER = new com.google.protobuf.AbstractParser<KMeans>() {
        @java.lang.Override
        public KMeans parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<KMeans> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<KMeans> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SnapshotHistogramOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float min_value = 1;</code>
       * @return Whether the minValue field is set.
       */
      boolean hasMinValue();
      /**
       * <code>optional float min_value = 1;</code>
       * @return The minValue.
       */
      float getMinValue();

      /**
       * <code>optional float max_value = 2;</code>
       * @return Whether the maxValue field is set.
       */
      boolean hasMaxValue();
      /**
       * <code>optional float max_value = 2;</code>
       * @return The maxValue.
       */
      float getMaxValue();

      /**
       * <code>optional uint32 num_buckets = 3;</code>
       * @return Whether the numBuckets field is set.
       */
      boolean hasNumBuckets();
      /**
       * <code>optional uint32 num_buckets = 3;</code>
       * @return The numBuckets.
       */
      int getNumBuckets();

      /**
       * <code>repeated uint32 bucket_counts = 4;</code>
       * @return A list containing the bucketCounts.
       */
      java.util.List<java.lang.Integer> getBucketCountsList();
      /**
       * <code>repeated uint32 bucket_counts = 4;</code>
       * @return The count of bucketCounts.
       */
      int getBucketCountsCount();
      /**
       * <code>repeated uint32 bucket_counts = 4;</code>
       * @param index The index of the element to return.
       * @return The bucketCounts at the given index.
       */
      int getBucketCounts(int index);
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram}
     */
    public static final class SnapshotHistogram extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)
        SnapshotHistogramOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          SnapshotHistogram.class.getName());
      }
      // Use SnapshotHistogram.newBuilder() to construct.
      private SnapshotHistogram(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private SnapshotHistogram() {
        bucketCounts_ = emptyIntList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder.class);
      }

      private int bitField0_;
      public static final int MIN_VALUE_FIELD_NUMBER = 1;
      private float minValue_ = 0F;
      /**
       * <code>optional float min_value = 1;</code>
       * @return Whether the minValue field is set.
       */
      @java.lang.Override
      public boolean hasMinValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float min_value = 1;</code>
       * @return The minValue.
       */
      @java.lang.Override
      public float getMinValue() {
        return minValue_;
      }

      public static final int MAX_VALUE_FIELD_NUMBER = 2;
      private float maxValue_ = 0F;
      /**
       * <code>optional float max_value = 2;</code>
       * @return Whether the maxValue field is set.
       */
      @java.lang.Override
      public boolean hasMaxValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float max_value = 2;</code>
       * @return The maxValue.
       */
      @java.lang.Override
      public float getMaxValue() {
        return maxValue_;
      }

      public static final int NUM_BUCKETS_FIELD_NUMBER = 3;
      private int numBuckets_ = 0;
      /**
       * <code>optional uint32 num_buckets = 3;</code>
       * @return Whether the numBuckets field is set.
       */
      @java.lang.Override
      public boolean hasNumBuckets() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 num_buckets = 3;</code>
       * @return The numBuckets.
       */
      @java.lang.Override
      public int getNumBuckets() {
        return numBuckets_;
      }

      public static final int BUCKET_COUNTS_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList bucketCounts_ =
          emptyIntList();
      /**
       * <code>repeated uint32 bucket_counts = 4;</code>
       * @return A list containing the bucketCounts.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getBucketCountsList() {
        return bucketCounts_;
      }
      /**
       * <code>repeated uint32 bucket_counts = 4;</code>
       * @return The count of bucketCounts.
       */
      public int getBucketCountsCount() {
        return bucketCounts_.size();
      }
      /**
       * <code>repeated uint32 bucket_counts = 4;</code>
       * @param index The index of the element to return.
       * @return The bucketCounts at the given index.
       */
      public int getBucketCounts(int index) {
        return bucketCounts_.getInt(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFloat(1, minValue_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFloat(2, maxValue_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, numBuckets_);
        }
        for (int i = 0; i < bucketCounts_.size(); i++) {
          output.writeUInt32(4, bucketCounts_.getInt(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, minValue_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, maxValue_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, numBuckets_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < bucketCounts_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(bucketCounts_.getInt(i));
          }
          size += dataSize;
          size += 1 * getBucketCountsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram) obj;

        if (hasMinValue() != other.hasMinValue()) return false;
        if (hasMinValue()) {
          if (java.lang.Float.floatToIntBits(getMinValue())
              != java.lang.Float.floatToIntBits(
                  other.getMinValue())) return false;
        }
        if (hasMaxValue() != other.hasMaxValue()) return false;
        if (hasMaxValue()) {
          if (java.lang.Float.floatToIntBits(getMaxValue())
              != java.lang.Float.floatToIntBits(
                  other.getMaxValue())) return false;
        }
        if (hasNumBuckets() != other.hasNumBuckets()) return false;
        if (hasNumBuckets()) {
          if (getNumBuckets()
              != other.getNumBuckets()) return false;
        }
        if (!getBucketCountsList()
            .equals(other.getBucketCountsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMinValue()) {
          hash = (37 * hash) + MIN_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMinValue());
        }
        if (hasMaxValue()) {
          hash = (37 * hash) + MAX_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getMaxValue());
        }
        if (hasNumBuckets()) {
          hash = (37 * hash) + NUM_BUCKETS_FIELD_NUMBER;
          hash = (53 * hash) + getNumBuckets();
        }
        if (getBucketCountsCount() > 0) {
          hash = (37 * hash) + BUCKET_COUNTS_FIELD_NUMBER;
          hash = (53 * hash) + getBucketCountsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          minValue_ = 0F;
          maxValue_ = 0F;
          numBuckets_ = 0;
          bucketCounts_ = emptyIntList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.minValue_ = minValue_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.maxValue_ = maxValue_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.numBuckets_ = numBuckets_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            bucketCounts_.makeImmutable();
            result.bucketCounts_ = bucketCounts_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance()) return this;
          if (other.hasMinValue()) {
            setMinValue(other.getMinValue());
          }
          if (other.hasMaxValue()) {
            setMaxValue(other.getMaxValue());
          }
          if (other.hasNumBuckets()) {
            setNumBuckets(other.getNumBuckets());
          }
          if (!other.bucketCounts_.isEmpty()) {
            if (bucketCounts_.isEmpty()) {
              bucketCounts_ = other.bucketCounts_;
              bucketCounts_.makeImmutable();
              bitField0_ |= 0x00000008;
            } else {
              ensureBucketCountsIsMutable();
              bucketCounts_.addAll(other.bucketCounts_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  minValue_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                case 21: {
                  maxValue_ = input.readFloat();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 21
                case 24: {
                  numBuckets_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  int v = input.readUInt32();
                  ensureBucketCountsIsMutable();
                  bucketCounts_.addInt(v);
                  break;
                } // case 32
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureBucketCountsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    bucketCounts_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float minValue_ ;
        /**
         * <code>optional float min_value = 1;</code>
         * @return Whether the minValue field is set.
         */
        @java.lang.Override
        public boolean hasMinValue() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float min_value = 1;</code>
         * @return The minValue.
         */
        @java.lang.Override
        public float getMinValue() {
          return minValue_;
        }
        /**
         * <code>optional float min_value = 1;</code>
         * @param value The minValue to set.
         * @return This builder for chaining.
         */
        public Builder setMinValue(float value) {

          minValue_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional float min_value = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinValue() {
          bitField0_ = (bitField0_ & ~0x00000001);
          minValue_ = 0F;
          onChanged();
          return this;
        }

        private float maxValue_ ;
        /**
         * <code>optional float max_value = 2;</code>
         * @return Whether the maxValue field is set.
         */
        @java.lang.Override
        public boolean hasMaxValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float max_value = 2;</code>
         * @return The maxValue.
         */
        @java.lang.Override
        public float getMaxValue() {
          return maxValue_;
        }
        /**
         * <code>optional float max_value = 2;</code>
         * @param value The maxValue to set.
         * @return This builder for chaining.
         */
        public Builder setMaxValue(float value) {

          maxValue_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional float max_value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          maxValue_ = 0F;
          onChanged();
          return this;
        }

        private int numBuckets_ ;
        /**
         * <code>optional uint32 num_buckets = 3;</code>
         * @return Whether the numBuckets field is set.
         */
        @java.lang.Override
        public boolean hasNumBuckets() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 num_buckets = 3;</code>
         * @return The numBuckets.
         */
        @java.lang.Override
        public int getNumBuckets() {
          return numBuckets_;
        }
        /**
         * <code>optional uint32 num_buckets = 3;</code>
         * @param value The numBuckets to set.
         * @return This builder for chaining.
         */
        public Builder setNumBuckets(int value) {

          numBuckets_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 num_buckets = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearNumBuckets() {
          bitField0_ = (bitField0_ & ~0x00000004);
          numBuckets_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList bucketCounts_ = emptyIntList();
        private void ensureBucketCountsIsMutable() {
          if (!bucketCounts_.isModifiable()) {
            bucketCounts_ = makeMutableCopy(bucketCounts_);
          }
          bitField0_ |= 0x00000008;
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @return A list containing the bucketCounts.
         */
        public java.util.List<java.lang.Integer>
            getBucketCountsList() {
          bucketCounts_.makeImmutable();
          return bucketCounts_;
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @return The count of bucketCounts.
         */
        public int getBucketCountsCount() {
          return bucketCounts_.size();
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @param index The index of the element to return.
         * @return The bucketCounts at the given index.
         */
        public int getBucketCounts(int index) {
          return bucketCounts_.getInt(index);
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @param index The index to set the value at.
         * @param value The bucketCounts to set.
         * @return This builder for chaining.
         */
        public Builder setBucketCounts(
            int index, int value) {

          ensureBucketCountsIsMutable();
          bucketCounts_.setInt(index, value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @param value The bucketCounts to add.
         * @return This builder for chaining.
         */
        public Builder addBucketCounts(int value) {

          ensureBucketCountsIsMutable();
          bucketCounts_.addInt(value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @param values The bucketCounts to add.
         * @return This builder for chaining.
         */
        public Builder addAllBucketCounts(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureBucketCountsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bucketCounts_);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 bucket_counts = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearBucketCounts() {
          bucketCounts_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SnapshotHistogram>
          PARSER = new com.google.protobuf.AbstractParser<SnapshotHistogram>() {
        @java.lang.Override
        public SnapshotHistogram parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SnapshotHistogram> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SnapshotHistogram> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int INFERENCE_METADATA_RESULT_FIELD_NUMBER = 1;
    private int inferenceMetadataResult_ = 0;
    /**
     * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
     * @return Whether the inferenceMetadataResult field is set.
     */
    @java.lang.Override public boolean hasInferenceMetadataResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
     * @return The inferenceMetadataResult.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult getInferenceMetadataResult() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult.forNumber(inferenceMetadataResult_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult.STEAMLEARN_INFERENCE_METADATA_ERROR : result;
    }

    public static final int ROW_RANGE_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange rowRange_;
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
     * @return Whether the rowRange field is set.
     */
    @java.lang.Override
    public boolean hasRowRange() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
     * @return The rowRange.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange getRowRange() {
      return rowRange_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance() : rowRange_;
    }
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder getRowRangeOrBuilder() {
      return rowRange_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance() : rowRange_;
    }

    public static final int RANGES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range> ranges_;
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range> getRangesList() {
      return ranges_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder> 
        getRangesOrBuilderList() {
      return ranges_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    @java.lang.Override
    public int getRangesCount() {
      return ranges_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range getRanges(int index) {
      return ranges_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder getRangesOrBuilder(
        int index) {
      return ranges_.get(index);
    }

    public static final int STD_DEVS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev> stdDevs_;
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev> getStdDevsList() {
      return stdDevs_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder> 
        getStdDevsOrBuilderList() {
      return stdDevs_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    @java.lang.Override
    public int getStdDevsCount() {
      return stdDevs_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev getStdDevs(int index) {
      return stdDevs_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder getStdDevsOrBuilder(
        int index) {
      return stdDevs_.get(index);
    }

    public static final int COMPACT_TABLES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable> compactTables_;
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable> getCompactTablesList() {
      return compactTables_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder> 
        getCompactTablesOrBuilderList() {
      return compactTables_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    @java.lang.Override
    public int getCompactTablesCount() {
      return compactTables_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable getCompactTables(int index) {
      return compactTables_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder getCompactTablesOrBuilder(
        int index) {
      return compactTables_.get(index);
    }

    public static final int KMEANS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans> kmeans_;
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans> getKmeansList() {
      return kmeans_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder> 
        getKmeansOrBuilderList() {
      return kmeans_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    @java.lang.Override
    public int getKmeansCount() {
      return kmeans_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans getKmeans(int index) {
      return kmeans_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder getKmeansOrBuilder(
        int index) {
      return kmeans_.get(index);
    }

    public static final int SNAPSHOT_HISTOGRAM_FIELD_NUMBER = 7;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshotHistogram_;
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
     * @return Whether the snapshotHistogram field is set.
     */
    @java.lang.Override
    public boolean hasSnapshotHistogram() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
     * @return The snapshotHistogram.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram getSnapshotHistogram() {
      return snapshotHistogram_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance() : snapshotHistogram_;
    }
    /**
     * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder getSnapshotHistogramOrBuilder() {
      return snapshotHistogram_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance() : snapshotHistogram_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, inferenceMetadataResult_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getRowRange());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        output.writeMessage(3, ranges_.get(i));
      }
      for (int i = 0; i < stdDevs_.size(); i++) {
        output.writeMessage(4, stdDevs_.get(i));
      }
      for (int i = 0; i < compactTables_.size(); i++) {
        output.writeMessage(5, compactTables_.get(i));
      }
      for (int i = 0; i < kmeans_.size(); i++) {
        output.writeMessage(6, kmeans_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(7, getSnapshotHistogram());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, inferenceMetadataResult_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRowRange());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, ranges_.get(i));
      }
      for (int i = 0; i < stdDevs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, stdDevs_.get(i));
      }
      for (int i = 0; i < compactTables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, compactTables_.get(i));
      }
      for (int i = 0; i < kmeans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, kmeans_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSnapshotHistogram());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response) obj;

      if (hasInferenceMetadataResult() != other.hasInferenceMetadataResult()) return false;
      if (hasInferenceMetadataResult()) {
        if (inferenceMetadataResult_ != other.inferenceMetadataResult_) return false;
      }
      if (hasRowRange() != other.hasRowRange()) return false;
      if (hasRowRange()) {
        if (!getRowRange()
            .equals(other.getRowRange())) return false;
      }
      if (!getRangesList()
          .equals(other.getRangesList())) return false;
      if (!getStdDevsList()
          .equals(other.getStdDevsList())) return false;
      if (!getCompactTablesList()
          .equals(other.getCompactTablesList())) return false;
      if (!getKmeansList()
          .equals(other.getKmeansList())) return false;
      if (hasSnapshotHistogram() != other.hasSnapshotHistogram()) return false;
      if (hasSnapshotHistogram()) {
        if (!getSnapshotHistogram()
            .equals(other.getSnapshotHistogram())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInferenceMetadataResult()) {
        hash = (37 * hash) + INFERENCE_METADATA_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + inferenceMetadataResult_;
      }
      if (hasRowRange()) {
        hash = (37 * hash) + ROW_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getRowRange().hashCode();
      }
      if (getRangesCount() > 0) {
        hash = (37 * hash) + RANGES_FIELD_NUMBER;
        hash = (53 * hash) + getRangesList().hashCode();
      }
      if (getStdDevsCount() > 0) {
        hash = (37 * hash) + STD_DEVS_FIELD_NUMBER;
        hash = (53 * hash) + getStdDevsList().hashCode();
      }
      if (getCompactTablesCount() > 0) {
        hash = (37 * hash) + COMPACT_TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getCompactTablesList().hashCode();
      }
      if (getKmeansCount() > 0) {
        hash = (37 * hash) + KMEANS_FIELD_NUMBER;
        hash = (53 * hash) + getKmeansList().hashCode();
      }
      if (hasSnapshotHistogram()) {
        hash = (37 * hash) + SNAPSHOT_HISTOGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getSnapshotHistogram().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceMetadata_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceMetadata_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getRowRangeFieldBuilder();
          getRangesFieldBuilder();
          getStdDevsFieldBuilder();
          getCompactTablesFieldBuilder();
          getKmeansFieldBuilder();
          getSnapshotHistogramFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        inferenceMetadataResult_ = 0;
        rowRange_ = null;
        if (rowRangeBuilder_ != null) {
          rowRangeBuilder_.dispose();
          rowRangeBuilder_ = null;
        }
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
        } else {
          ranges_ = null;
          rangesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stdDevsBuilder_ == null) {
          stdDevs_ = java.util.Collections.emptyList();
        } else {
          stdDevs_ = null;
          stdDevsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (compactTablesBuilder_ == null) {
          compactTables_ = java.util.Collections.emptyList();
        } else {
          compactTables_ = null;
          compactTablesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (kmeansBuilder_ == null) {
          kmeans_ = java.util.Collections.emptyList();
        } else {
          kmeans_ = null;
          kmeansBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        snapshotHistogram_ = null;
        if (snapshotHistogramBuilder_ != null) {
          snapshotHistogramBuilder_.dispose();
          snapshotHistogramBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response result) {
        if (rangesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            ranges_ = java.util.Collections.unmodifiableList(ranges_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.ranges_ = ranges_;
        } else {
          result.ranges_ = rangesBuilder_.build();
        }
        if (stdDevsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            stdDevs_ = java.util.Collections.unmodifiableList(stdDevs_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.stdDevs_ = stdDevs_;
        } else {
          result.stdDevs_ = stdDevsBuilder_.build();
        }
        if (compactTablesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            compactTables_ = java.util.Collections.unmodifiableList(compactTables_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.compactTables_ = compactTables_;
        } else {
          result.compactTables_ = compactTablesBuilder_.build();
        }
        if (kmeansBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            kmeans_ = java.util.Collections.unmodifiableList(kmeans_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.kmeans_ = kmeans_;
        } else {
          result.kmeans_ = kmeansBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.inferenceMetadataResult_ = inferenceMetadataResult_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rowRange_ = rowRangeBuilder_ == null
              ? rowRange_
              : rowRangeBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.snapshotHistogram_ = snapshotHistogramBuilder_ == null
              ? snapshotHistogram_
              : snapshotHistogramBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.getDefaultInstance()) return this;
        if (other.hasInferenceMetadataResult()) {
          setInferenceMetadataResult(other.getInferenceMetadataResult());
        }
        if (other.hasRowRange()) {
          mergeRowRange(other.getRowRange());
        }
        if (rangesBuilder_ == null) {
          if (!other.ranges_.isEmpty()) {
            if (ranges_.isEmpty()) {
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRangesIsMutable();
              ranges_.addAll(other.ranges_);
            }
            onChanged();
          }
        } else {
          if (!other.ranges_.isEmpty()) {
            if (rangesBuilder_.isEmpty()) {
              rangesBuilder_.dispose();
              rangesBuilder_ = null;
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rangesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRangesFieldBuilder() : null;
            } else {
              rangesBuilder_.addAllMessages(other.ranges_);
            }
          }
        }
        if (stdDevsBuilder_ == null) {
          if (!other.stdDevs_.isEmpty()) {
            if (stdDevs_.isEmpty()) {
              stdDevs_ = other.stdDevs_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStdDevsIsMutable();
              stdDevs_.addAll(other.stdDevs_);
            }
            onChanged();
          }
        } else {
          if (!other.stdDevs_.isEmpty()) {
            if (stdDevsBuilder_.isEmpty()) {
              stdDevsBuilder_.dispose();
              stdDevsBuilder_ = null;
              stdDevs_ = other.stdDevs_;
              bitField0_ = (bitField0_ & ~0x00000008);
              stdDevsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStdDevsFieldBuilder() : null;
            } else {
              stdDevsBuilder_.addAllMessages(other.stdDevs_);
            }
          }
        }
        if (compactTablesBuilder_ == null) {
          if (!other.compactTables_.isEmpty()) {
            if (compactTables_.isEmpty()) {
              compactTables_ = other.compactTables_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCompactTablesIsMutable();
              compactTables_.addAll(other.compactTables_);
            }
            onChanged();
          }
        } else {
          if (!other.compactTables_.isEmpty()) {
            if (compactTablesBuilder_.isEmpty()) {
              compactTablesBuilder_.dispose();
              compactTablesBuilder_ = null;
              compactTables_ = other.compactTables_;
              bitField0_ = (bitField0_ & ~0x00000010);
              compactTablesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCompactTablesFieldBuilder() : null;
            } else {
              compactTablesBuilder_.addAllMessages(other.compactTables_);
            }
          }
        }
        if (kmeansBuilder_ == null) {
          if (!other.kmeans_.isEmpty()) {
            if (kmeans_.isEmpty()) {
              kmeans_ = other.kmeans_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureKmeansIsMutable();
              kmeans_.addAll(other.kmeans_);
            }
            onChanged();
          }
        } else {
          if (!other.kmeans_.isEmpty()) {
            if (kmeansBuilder_.isEmpty()) {
              kmeansBuilder_.dispose();
              kmeansBuilder_ = null;
              kmeans_ = other.kmeans_;
              bitField0_ = (bitField0_ & ~0x00000020);
              kmeansBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKmeansFieldBuilder() : null;
            } else {
              kmeansBuilder_.addAllMessages(other.kmeans_);
            }
          }
        }
        if (other.hasSnapshotHistogram()) {
          mergeSnapshotHistogram(other.getSnapshotHistogram());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  inferenceMetadataResult_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getRowRangeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.parser(),
                        extensionRegistry);
                if (rangesBuilder_ == null) {
                  ensureRangesIsMutable();
                  ranges_.add(m);
                } else {
                  rangesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.parser(),
                        extensionRegistry);
                if (stdDevsBuilder_ == null) {
                  ensureStdDevsIsMutable();
                  stdDevs_.add(m);
                } else {
                  stdDevsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.parser(),
                        extensionRegistry);
                if (compactTablesBuilder_ == null) {
                  ensureCompactTablesIsMutable();
                  compactTables_.add(m);
                } else {
                  compactTablesBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 50: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.parser(),
                        extensionRegistry);
                if (kmeansBuilder_ == null) {
                  ensureKmeansIsMutable();
                  kmeans_.add(m);
                } else {
                  kmeansBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getSnapshotHistogramFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int inferenceMetadataResult_ = 0;
      /**
       * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
       * @return Whether the inferenceMetadataResult field is set.
       */
      @java.lang.Override public boolean hasInferenceMetadataResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
       * @return The inferenceMetadataResult.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult getInferenceMetadataResult() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult.forNumber(inferenceMetadataResult_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult.STEAMLEARN_INFERENCE_METADATA_ERROR : result;
      }
      /**
       * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
       * @param value The inferenceMetadataResult to set.
       * @return This builder for chaining.
       */
      public Builder setInferenceMetadataResult(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceMetadataResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        inferenceMetadataResult_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteamLearnInferenceMetadataResult inference_metadata_result = 1 [default = STEAMLEARN_INFERENCE_METADATA_ERROR];</code>
       * @return This builder for chaining.
       */
      public Builder clearInferenceMetadataResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        inferenceMetadataResult_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange rowRange_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder> rowRangeBuilder_;
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       * @return Whether the rowRange field is set.
       */
      public boolean hasRowRange() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       * @return The rowRange.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange getRowRange() {
        if (rowRangeBuilder_ == null) {
          return rowRange_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance() : rowRange_;
        } else {
          return rowRangeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      public Builder setRowRange(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange value) {
        if (rowRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rowRange_ = value;
        } else {
          rowRangeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      public Builder setRowRange(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder builderForValue) {
        if (rowRangeBuilder_ == null) {
          rowRange_ = builderForValue.build();
        } else {
          rowRangeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      public Builder mergeRowRange(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange value) {
        if (rowRangeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            rowRange_ != null &&
            rowRange_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance()) {
            getRowRangeBuilder().mergeFrom(value);
          } else {
            rowRange_ = value;
          }
        } else {
          rowRangeBuilder_.mergeFrom(value);
        }
        if (rowRange_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      public Builder clearRowRange() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rowRange_ = null;
        if (rowRangeBuilder_ != null) {
          rowRangeBuilder_.dispose();
          rowRangeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder getRowRangeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRowRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder getRowRangeOrBuilder() {
        if (rowRangeBuilder_ != null) {
          return rowRangeBuilder_.getMessageOrBuilder();
        } else {
          return rowRange_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.getDefaultInstance() : rowRange_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.RowRange row_range = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder> 
          getRowRangeFieldBuilder() {
        if (rowRangeBuilder_ == null) {
          rowRangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRange.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RowRangeOrBuilder>(
                  getRowRange(),
                  getParentForChildren(),
                  isClean());
          rowRange_ = null;
        }
        return rowRangeBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range> ranges_ =
        java.util.Collections.emptyList();
      private void ensureRangesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          ranges_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range>(ranges_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder> rangesBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range> getRangesList() {
        if (rangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranges_);
        } else {
          return rangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public int getRangesCount() {
        if (rangesBuilder_ == null) {
          return ranges_.size();
        } else {
          return rangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range getRanges(int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);
        } else {
          return rangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder setRanges(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.set(index, value);
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder setRanges(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder addRanges(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder addRanges(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(index, value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder addRanges(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder addRanges(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder addAllRanges(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range> values) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ranges_);
          onChanged();
        } else {
          rangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder clearRanges() {
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public Builder removeRanges(int index) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.remove(index);
          onChanged();
        } else {
          rangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder getRangesBuilder(
          int index) {
        return getRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder getRangesOrBuilder(
          int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);  } else {
          return rangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder> 
           getRangesOrBuilderList() {
        if (rangesBuilder_ != null) {
          return rangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranges_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder addRangesBuilder() {
        return getRangesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder addRangesBuilder(
          int index) {
        return getRangesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.Range ranges = 3;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder> 
           getRangesBuilderList() {
        return getRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder> 
          getRangesFieldBuilder() {
        if (rangesBuilder_ == null) {
          rangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.Range.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.RangeOrBuilder>(
                  ranges_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          ranges_ = null;
        }
        return rangesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev> stdDevs_ =
        java.util.Collections.emptyList();
      private void ensureStdDevsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          stdDevs_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev>(stdDevs_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder> stdDevsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev> getStdDevsList() {
        if (stdDevsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stdDevs_);
        } else {
          return stdDevsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public int getStdDevsCount() {
        if (stdDevsBuilder_ == null) {
          return stdDevs_.size();
        } else {
          return stdDevsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev getStdDevs(int index) {
        if (stdDevsBuilder_ == null) {
          return stdDevs_.get(index);
        } else {
          return stdDevsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder setStdDevs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev value) {
        if (stdDevsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStdDevsIsMutable();
          stdDevs_.set(index, value);
          onChanged();
        } else {
          stdDevsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder setStdDevs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder builderForValue) {
        if (stdDevsBuilder_ == null) {
          ensureStdDevsIsMutable();
          stdDevs_.set(index, builderForValue.build());
          onChanged();
        } else {
          stdDevsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder addStdDevs(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev value) {
        if (stdDevsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStdDevsIsMutable();
          stdDevs_.add(value);
          onChanged();
        } else {
          stdDevsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder addStdDevs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev value) {
        if (stdDevsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStdDevsIsMutable();
          stdDevs_.add(index, value);
          onChanged();
        } else {
          stdDevsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder addStdDevs(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder builderForValue) {
        if (stdDevsBuilder_ == null) {
          ensureStdDevsIsMutable();
          stdDevs_.add(builderForValue.build());
          onChanged();
        } else {
          stdDevsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder addStdDevs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder builderForValue) {
        if (stdDevsBuilder_ == null) {
          ensureStdDevsIsMutable();
          stdDevs_.add(index, builderForValue.build());
          onChanged();
        } else {
          stdDevsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder addAllStdDevs(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev> values) {
        if (stdDevsBuilder_ == null) {
          ensureStdDevsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stdDevs_);
          onChanged();
        } else {
          stdDevsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder clearStdDevs() {
        if (stdDevsBuilder_ == null) {
          stdDevs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          stdDevsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public Builder removeStdDevs(int index) {
        if (stdDevsBuilder_ == null) {
          ensureStdDevsIsMutable();
          stdDevs_.remove(index);
          onChanged();
        } else {
          stdDevsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder getStdDevsBuilder(
          int index) {
        return getStdDevsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder getStdDevsOrBuilder(
          int index) {
        if (stdDevsBuilder_ == null) {
          return stdDevs_.get(index);  } else {
          return stdDevsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder> 
           getStdDevsOrBuilderList() {
        if (stdDevsBuilder_ != null) {
          return stdDevsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stdDevs_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder addStdDevsBuilder() {
        return getStdDevsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder addStdDevsBuilder(
          int index) {
        return getStdDevsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.StdDev std_devs = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder> 
           getStdDevsBuilderList() {
        return getStdDevsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder> 
          getStdDevsFieldBuilder() {
        if (stdDevsBuilder_ == null) {
          stdDevsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDev.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.StdDevOrBuilder>(
                  stdDevs_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          stdDevs_ = null;
        }
        return stdDevsBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable> compactTables_ =
        java.util.Collections.emptyList();
      private void ensureCompactTablesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          compactTables_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable>(compactTables_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder> compactTablesBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable> getCompactTablesList() {
        if (compactTablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(compactTables_);
        } else {
          return compactTablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public int getCompactTablesCount() {
        if (compactTablesBuilder_ == null) {
          return compactTables_.size();
        } else {
          return compactTablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable getCompactTables(int index) {
        if (compactTablesBuilder_ == null) {
          return compactTables_.get(index);
        } else {
          return compactTablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder setCompactTables(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable value) {
        if (compactTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompactTablesIsMutable();
          compactTables_.set(index, value);
          onChanged();
        } else {
          compactTablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder setCompactTables(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder builderForValue) {
        if (compactTablesBuilder_ == null) {
          ensureCompactTablesIsMutable();
          compactTables_.set(index, builderForValue.build());
          onChanged();
        } else {
          compactTablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder addCompactTables(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable value) {
        if (compactTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompactTablesIsMutable();
          compactTables_.add(value);
          onChanged();
        } else {
          compactTablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder addCompactTables(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable value) {
        if (compactTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompactTablesIsMutable();
          compactTables_.add(index, value);
          onChanged();
        } else {
          compactTablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder addCompactTables(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder builderForValue) {
        if (compactTablesBuilder_ == null) {
          ensureCompactTablesIsMutable();
          compactTables_.add(builderForValue.build());
          onChanged();
        } else {
          compactTablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder addCompactTables(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder builderForValue) {
        if (compactTablesBuilder_ == null) {
          ensureCompactTablesIsMutable();
          compactTables_.add(index, builderForValue.build());
          onChanged();
        } else {
          compactTablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder addAllCompactTables(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable> values) {
        if (compactTablesBuilder_ == null) {
          ensureCompactTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, compactTables_);
          onChanged();
        } else {
          compactTablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder clearCompactTables() {
        if (compactTablesBuilder_ == null) {
          compactTables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          compactTablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public Builder removeCompactTables(int index) {
        if (compactTablesBuilder_ == null) {
          ensureCompactTablesIsMutable();
          compactTables_.remove(index);
          onChanged();
        } else {
          compactTablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder getCompactTablesBuilder(
          int index) {
        return getCompactTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder getCompactTablesOrBuilder(
          int index) {
        if (compactTablesBuilder_ == null) {
          return compactTables_.get(index);  } else {
          return compactTablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder> 
           getCompactTablesOrBuilderList() {
        if (compactTablesBuilder_ != null) {
          return compactTablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(compactTables_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder addCompactTablesBuilder() {
        return getCompactTablesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder addCompactTablesBuilder(
          int index) {
        return getCompactTablesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.CompactTable compact_tables = 5;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder> 
           getCompactTablesBuilderList() {
        return getCompactTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder> 
          getCompactTablesFieldBuilder() {
        if (compactTablesBuilder_ == null) {
          compactTablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.CompactTableOrBuilder>(
                  compactTables_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          compactTables_ = null;
        }
        return compactTablesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans> kmeans_ =
        java.util.Collections.emptyList();
      private void ensureKmeansIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          kmeans_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans>(kmeans_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder> kmeansBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans> getKmeansList() {
        if (kmeansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kmeans_);
        } else {
          return kmeansBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public int getKmeansCount() {
        if (kmeansBuilder_ == null) {
          return kmeans_.size();
        } else {
          return kmeansBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans getKmeans(int index) {
        if (kmeansBuilder_ == null) {
          return kmeans_.get(index);
        } else {
          return kmeansBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder setKmeans(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans value) {
        if (kmeansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKmeansIsMutable();
          kmeans_.set(index, value);
          onChanged();
        } else {
          kmeansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder setKmeans(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder builderForValue) {
        if (kmeansBuilder_ == null) {
          ensureKmeansIsMutable();
          kmeans_.set(index, builderForValue.build());
          onChanged();
        } else {
          kmeansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder addKmeans(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans value) {
        if (kmeansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKmeansIsMutable();
          kmeans_.add(value);
          onChanged();
        } else {
          kmeansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder addKmeans(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans value) {
        if (kmeansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKmeansIsMutable();
          kmeans_.add(index, value);
          onChanged();
        } else {
          kmeansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder addKmeans(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder builderForValue) {
        if (kmeansBuilder_ == null) {
          ensureKmeansIsMutable();
          kmeans_.add(builderForValue.build());
          onChanged();
        } else {
          kmeansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder addKmeans(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder builderForValue) {
        if (kmeansBuilder_ == null) {
          ensureKmeansIsMutable();
          kmeans_.add(index, builderForValue.build());
          onChanged();
        } else {
          kmeansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder addAllKmeans(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans> values) {
        if (kmeansBuilder_ == null) {
          ensureKmeansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kmeans_);
          onChanged();
        } else {
          kmeansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder clearKmeans() {
        if (kmeansBuilder_ == null) {
          kmeans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          kmeansBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public Builder removeKmeans(int index) {
        if (kmeansBuilder_ == null) {
          ensureKmeansIsMutable();
          kmeans_.remove(index);
          onChanged();
        } else {
          kmeansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder getKmeansBuilder(
          int index) {
        return getKmeansFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder getKmeansOrBuilder(
          int index) {
        if (kmeansBuilder_ == null) {
          return kmeans_.get(index);  } else {
          return kmeansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder> 
           getKmeansOrBuilderList() {
        if (kmeansBuilder_ != null) {
          return kmeansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kmeans_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder addKmeansBuilder() {
        return getKmeansFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder addKmeansBuilder(
          int index) {
        return getKmeansFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceMetadata_Response.KMeans kmeans = 6;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder> 
           getKmeansBuilderList() {
        return getKmeansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder> 
          getKmeansFieldBuilder() {
        if (kmeansBuilder_ == null) {
          kmeansBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.KMeansOrBuilder>(
                  kmeans_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          kmeans_ = null;
        }
        return kmeansBuilder_;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshotHistogram_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder> snapshotHistogramBuilder_;
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       * @return Whether the snapshotHistogram field is set.
       */
      public boolean hasSnapshotHistogram() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       * @return The snapshotHistogram.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram getSnapshotHistogram() {
        if (snapshotHistogramBuilder_ == null) {
          return snapshotHistogram_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance() : snapshotHistogram_;
        } else {
          return snapshotHistogramBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      public Builder setSnapshotHistogram(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram value) {
        if (snapshotHistogramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          snapshotHistogram_ = value;
        } else {
          snapshotHistogramBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      public Builder setSnapshotHistogram(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder builderForValue) {
        if (snapshotHistogramBuilder_ == null) {
          snapshotHistogram_ = builderForValue.build();
        } else {
          snapshotHistogramBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      public Builder mergeSnapshotHistogram(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram value) {
        if (snapshotHistogramBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            snapshotHistogram_ != null &&
            snapshotHistogram_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance()) {
            getSnapshotHistogramBuilder().mergeFrom(value);
          } else {
            snapshotHistogram_ = value;
          }
        } else {
          snapshotHistogramBuilder_.mergeFrom(value);
        }
        if (snapshotHistogram_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      public Builder clearSnapshotHistogram() {
        bitField0_ = (bitField0_ & ~0x00000040);
        snapshotHistogram_ = null;
        if (snapshotHistogramBuilder_ != null) {
          snapshotHistogramBuilder_.dispose();
          snapshotHistogramBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder getSnapshotHistogramBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getSnapshotHistogramFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder getSnapshotHistogramOrBuilder() {
        if (snapshotHistogramBuilder_ != null) {
          return snapshotHistogramBuilder_.getMessageOrBuilder();
        } else {
          return snapshotHistogram_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.getDefaultInstance() : snapshotHistogram_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram snapshot_histogram = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder> 
          getSnapshotHistogramFieldBuilder() {
        if (snapshotHistogramBuilder_ == null) {
          snapshotHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramOrBuilder>(
                  getSnapshotHistogram(),
                  getParentForChildren(),
                  isClean());
          snapshotHistogram_ = null;
        }
        return snapshotHistogramBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceMetadata_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceMetadata_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadata_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_InferenceMetadata_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_InferenceMetadata_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadata_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_InferenceMetadata_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceMetadata_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_InferenceBackend_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceBackend_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output> 
        getOutputsList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output getOutputs(int index);
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    int getOutputsCount();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder getOutputsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response}
   */
  public static final class CMsgSteamLearn_InferenceBackend_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceBackend_Response)
      CMsgSteamLearn_InferenceBackend_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_InferenceBackend_Response.class.getName());
    }
    // Use CMsgSteamLearn_InferenceBackend_Response.newBuilder() to construct.
    private CMsgSteamLearn_InferenceBackend_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_InferenceBackend_Response() {
      outputs_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder.class);
    }

    public interface RegressionOutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float value = 1;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>optional float value = 1;</code>
       * @return The value.
       */
      float getValue();
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.RegressionOutput}
     */
    public static final class RegressionOutput extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)
        RegressionOutputOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          RegressionOutput.class.getName());
      }
      // Use RegressionOutput.newBuilder() to construct.
      private RegressionOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private RegressionOutput() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder.class);
      }

      private int bitField0_;
      public static final int VALUE_FIELD_NUMBER = 1;
      private float value_ = 0F;
      /**
       * <code>optional float value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public float getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFloat(1, value_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) obj;

        if (hasValue() != other.hasValue()) return false;
        if (hasValue()) {
          if (java.lang.Float.floatToIntBits(getValue())
              != java.lang.Float.floatToIntBits(
                  other.getValue())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getValue());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.RegressionOutput}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          value_ = 0F;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.value_ = value_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance()) return this;
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  value_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float value_ ;
        /**
         * <code>optional float value = 1;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float value = 1;</code>
         * @return The value.
         */
        @java.lang.Override
        public float getValue() {
          return value_;
        }
        /**
         * <code>optional float value = 1;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(float value) {

          value_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional float value = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.RegressionOutput)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RegressionOutput>
          PARSER = new com.google.protobuf.AbstractParser<RegressionOutput>() {
        @java.lang.Override
        public RegressionOutput parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RegressionOutput> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RegressionOutput> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface BinaryCrossEntropyOutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float value = 1;</code>
       * @return Whether the value field is set.
       */
      boolean hasValue();
      /**
       * <code>optional float value = 1;</code>
       * @return The value.
       */
      float getValue();
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput}
     */
    public static final class BinaryCrossEntropyOutput extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)
        BinaryCrossEntropyOutputOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          BinaryCrossEntropyOutput.class.getName());
      }
      // Use BinaryCrossEntropyOutput.newBuilder() to construct.
      private BinaryCrossEntropyOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private BinaryCrossEntropyOutput() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder.class);
      }

      private int bitField0_;
      public static final int VALUE_FIELD_NUMBER = 1;
      private float value_ = 0F;
      /**
       * <code>optional float value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public float getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFloat(1, value_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) obj;

        if (hasValue() != other.hasValue()) return false;
        if (hasValue()) {
          if (java.lang.Float.floatToIntBits(getValue())
              != java.lang.Float.floatToIntBits(
                  other.getValue())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getValue());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          value_ = 0F;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.value_ = value_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance()) return this;
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  value_ = input.readFloat();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 13
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private float value_ ;
        /**
         * <code>optional float value = 1;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float value = 1;</code>
         * @return The value.
         */
        @java.lang.Override
        public float getValue() {
          return value_;
        }
        /**
         * <code>optional float value = 1;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(float value) {

          value_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional float value = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<BinaryCrossEntropyOutput>
          PARSER = new com.google.protobuf.AbstractParser<BinaryCrossEntropyOutput>() {
        @java.lang.Override
        public BinaryCrossEntropyOutput parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<BinaryCrossEntropyOutput> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<BinaryCrossEntropyOutput> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MutliBinaryCrossEntropyOutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float weight = 1;</code>
       * @return A list containing the weight.
       */
      java.util.List<java.lang.Float> getWeightList();
      /**
       * <code>repeated float weight = 1;</code>
       * @return The count of weight.
       */
      int getWeightCount();
      /**
       * <code>repeated float weight = 1;</code>
       * @param index The index of the element to return.
       * @return The weight at the given index.
       */
      float getWeight(int index);

      /**
       * <code>repeated float value = 2;</code>
       * @return A list containing the value.
       */
      java.util.List<java.lang.Float> getValueList();
      /**
       * <code>repeated float value = 2;</code>
       * @return The count of value.
       */
      int getValueCount();
      /**
       * <code>repeated float value = 2;</code>
       * @param index The index of the element to return.
       * @return The value at the given index.
       */
      float getValue(int index);
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput}
     */
    public static final class MutliBinaryCrossEntropyOutput extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)
        MutliBinaryCrossEntropyOutputOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          MutliBinaryCrossEntropyOutput.class.getName());
      }
      // Use MutliBinaryCrossEntropyOutput.newBuilder() to construct.
      private MutliBinaryCrossEntropyOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private MutliBinaryCrossEntropyOutput() {
        weight_ = emptyFloatList();
        value_ = emptyFloatList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder.class);
      }

      public static final int WEIGHT_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList weight_ =
          emptyFloatList();
      /**
       * <code>repeated float weight = 1;</code>
       * @return A list containing the weight.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getWeightList() {
        return weight_;
      }
      /**
       * <code>repeated float weight = 1;</code>
       * @return The count of weight.
       */
      public int getWeightCount() {
        return weight_.size();
      }
      /**
       * <code>repeated float weight = 1;</code>
       * @param index The index of the element to return.
       * @return The weight at the given index.
       */
      public float getWeight(int index) {
        return weight_.getFloat(index);
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList value_ =
          emptyFloatList();
      /**
       * <code>repeated float value = 2;</code>
       * @return A list containing the value.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated float value = 2;</code>
       * @return The count of value.
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated float value = 2;</code>
       * @param index The index of the element to return.
       * @return The value at the given index.
       */
      public float getValue(int index) {
        return value_.getFloat(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < weight_.size(); i++) {
          output.writeFloat(1, weight_.getFloat(i));
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeFloat(2, value_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getWeightList().size();
          size += dataSize;
          size += 1 * getWeightList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getValueList().size();
          size += dataSize;
          size += 1 * getValueList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) obj;

        if (!getWeightList()
            .equals(other.getWeightList())) return false;
        if (!getValueList()
            .equals(other.getValueList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getWeightCount() > 0) {
          hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getWeightList().hashCode();
        }
        if (getValueCount() > 0) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValueList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          weight_ = emptyFloatList();
          value_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            weight_.makeImmutable();
            result.weight_ = weight_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            value_.makeImmutable();
            result.value_ = value_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance()) return this;
          if (!other.weight_.isEmpty()) {
            if (weight_.isEmpty()) {
              weight_ = other.weight_;
              weight_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensureWeightIsMutable();
              weight_.addAll(other.weight_);
            }
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              value_.makeImmutable();
              bitField0_ |= 0x00000002;
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensureWeightIsMutable();
                  weight_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureWeightIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    weight_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                case 21: {
                  float v = input.readFloat();
                  ensureValueIsMutable();
                  value_.addFloat(v);
                  break;
                } // case 21
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureValueIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    value_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList weight_ = emptyFloatList();
        private void ensureWeightIsMutable() {
          if (!weight_.isModifiable()) {
            weight_ = makeMutableCopy(weight_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensureWeightIsMutable(int capacity) {
          if (!weight_.isModifiable()) {
            weight_ = makeMutableCopy(weight_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @return A list containing the weight.
         */
        public java.util.List<java.lang.Float>
            getWeightList() {
          weight_.makeImmutable();
          return weight_;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @return The count of weight.
         */
        public int getWeightCount() {
          return weight_.size();
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param index The index of the element to return.
         * @return The weight at the given index.
         */
        public float getWeight(int index) {
          return weight_.getFloat(index);
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param index The index to set the value at.
         * @param value The weight to set.
         * @return This builder for chaining.
         */
        public Builder setWeight(
            int index, float value) {

          ensureWeightIsMutable();
          weight_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param value The weight to add.
         * @return This builder for chaining.
         */
        public Builder addWeight(float value) {

          ensureWeightIsMutable();
          weight_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param values The weight to add.
         * @return This builder for chaining.
         */
        public Builder addAllWeight(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureWeightIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weight_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearWeight() {
          weight_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.FloatList value_ = emptyFloatList();
        private void ensureValueIsMutable() {
          if (!value_.isModifiable()) {
            value_ = makeMutableCopy(value_);
          }
          bitField0_ |= 0x00000002;
        }
        private void ensureValueIsMutable(int capacity) {
          if (!value_.isModifiable()) {
            value_ = makeMutableCopy(value_, capacity);
          }
          bitField0_ |= 0x00000002;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @return A list containing the value.
         */
        public java.util.List<java.lang.Float>
            getValueList() {
          value_.makeImmutable();
          return value_;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @return The count of value.
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param index The index of the element to return.
         * @return The value at the given index.
         */
        public float getValue(int index) {
          return value_.getFloat(index);
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param index The index to set the value at.
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            int index, float value) {

          ensureValueIsMutable();
          value_.setFloat(index, value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param value The value to add.
         * @return This builder for chaining.
         */
        public Builder addValue(float value) {

          ensureValueIsMutable();
          value_.addFloat(value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param values The value to add.
         * @return This builder for chaining.
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          value_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MutliBinaryCrossEntropyOutput>
          PARSER = new com.google.protobuf.AbstractParser<MutliBinaryCrossEntropyOutput>() {
        @java.lang.Override
        public MutliBinaryCrossEntropyOutput parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<MutliBinaryCrossEntropyOutput> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MutliBinaryCrossEntropyOutput> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CategoricalCrossEntropyOutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated float weight = 1;</code>
       * @return A list containing the weight.
       */
      java.util.List<java.lang.Float> getWeightList();
      /**
       * <code>repeated float weight = 1;</code>
       * @return The count of weight.
       */
      int getWeightCount();
      /**
       * <code>repeated float weight = 1;</code>
       * @param index The index of the element to return.
       * @return The weight at the given index.
       */
      float getWeight(int index);

      /**
       * <code>repeated float value = 2;</code>
       * @return A list containing the value.
       */
      java.util.List<java.lang.Float> getValueList();
      /**
       * <code>repeated float value = 2;</code>
       * @return The count of value.
       */
      int getValueCount();
      /**
       * <code>repeated float value = 2;</code>
       * @param index The index of the element to return.
       * @return The value at the given index.
       */
      float getValue(int index);
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput}
     */
    public static final class CategoricalCrossEntropyOutput extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)
        CategoricalCrossEntropyOutputOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          CategoricalCrossEntropyOutput.class.getName());
      }
      // Use CategoricalCrossEntropyOutput.newBuilder() to construct.
      private CategoricalCrossEntropyOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private CategoricalCrossEntropyOutput() {
        weight_ = emptyFloatList();
        value_ = emptyFloatList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder.class);
      }

      public static final int WEIGHT_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList weight_ =
          emptyFloatList();
      /**
       * <code>repeated float weight = 1;</code>
       * @return A list containing the weight.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getWeightList() {
        return weight_;
      }
      /**
       * <code>repeated float weight = 1;</code>
       * @return The count of weight.
       */
      public int getWeightCount() {
        return weight_.size();
      }
      /**
       * <code>repeated float weight = 1;</code>
       * @param index The index of the element to return.
       * @return The weight at the given index.
       */
      public float getWeight(int index) {
        return weight_.getFloat(index);
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList value_ =
          emptyFloatList();
      /**
       * <code>repeated float value = 2;</code>
       * @return A list containing the value.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated float value = 2;</code>
       * @return The count of value.
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated float value = 2;</code>
       * @param index The index of the element to return.
       * @return The value at the given index.
       */
      public float getValue(int index) {
        return value_.getFloat(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < weight_.size(); i++) {
          output.writeFloat(1, weight_.getFloat(i));
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeFloat(2, value_.getFloat(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 4 * getWeightList().size();
          size += dataSize;
          size += 1 * getWeightList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getValueList().size();
          size += dataSize;
          size += 1 * getValueList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) obj;

        if (!getWeightList()
            .equals(other.getWeightList())) return false;
        if (!getValueList()
            .equals(other.getValueList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getWeightCount() > 0) {
          hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getWeightList().hashCode();
        }
        if (getValueCount() > 0) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValueList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          weight_ = emptyFloatList();
          value_ = emptyFloatList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            weight_.makeImmutable();
            result.weight_ = weight_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            value_.makeImmutable();
            result.value_ = value_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance()) return this;
          if (!other.weight_.isEmpty()) {
            if (weight_.isEmpty()) {
              weight_ = other.weight_;
              weight_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensureWeightIsMutable();
              weight_.addAll(other.weight_);
            }
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              value_.makeImmutable();
              bitField0_ |= 0x00000002;
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  float v = input.readFloat();
                  ensureWeightIsMutable();
                  weight_.addFloat(v);
                  break;
                } // case 13
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureWeightIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    weight_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                case 21: {
                  float v = input.readFloat();
                  ensureValueIsMutable();
                  value_.addFloat(v);
                  break;
                } // case 21
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureValueIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    value_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.FloatList weight_ = emptyFloatList();
        private void ensureWeightIsMutable() {
          if (!weight_.isModifiable()) {
            weight_ = makeMutableCopy(weight_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensureWeightIsMutable(int capacity) {
          if (!weight_.isModifiable()) {
            weight_ = makeMutableCopy(weight_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @return A list containing the weight.
         */
        public java.util.List<java.lang.Float>
            getWeightList() {
          weight_.makeImmutable();
          return weight_;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @return The count of weight.
         */
        public int getWeightCount() {
          return weight_.size();
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param index The index of the element to return.
         * @return The weight at the given index.
         */
        public float getWeight(int index) {
          return weight_.getFloat(index);
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param index The index to set the value at.
         * @param value The weight to set.
         * @return This builder for chaining.
         */
        public Builder setWeight(
            int index, float value) {

          ensureWeightIsMutable();
          weight_.setFloat(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param value The weight to add.
         * @return This builder for chaining.
         */
        public Builder addWeight(float value) {

          ensureWeightIsMutable();
          weight_.addFloat(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @param values The weight to add.
         * @return This builder for chaining.
         */
        public Builder addAllWeight(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureWeightIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weight_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float weight = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearWeight() {
          weight_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.FloatList value_ = emptyFloatList();
        private void ensureValueIsMutable() {
          if (!value_.isModifiable()) {
            value_ = makeMutableCopy(value_);
          }
          bitField0_ |= 0x00000002;
        }
        private void ensureValueIsMutable(int capacity) {
          if (!value_.isModifiable()) {
            value_ = makeMutableCopy(value_, capacity);
          }
          bitField0_ |= 0x00000002;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @return A list containing the value.
         */
        public java.util.List<java.lang.Float>
            getValueList() {
          value_.makeImmutable();
          return value_;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @return The count of value.
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param index The index of the element to return.
         * @return The value at the given index.
         */
        public float getValue(int index) {
          return value_.getFloat(index);
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param index The index to set the value at.
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            int index, float value) {

          ensureValueIsMutable();
          value_.setFloat(index, value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param value The value to add.
         * @return This builder for chaining.
         */
        public Builder addValue(float value) {

          ensureValueIsMutable();
          value_.addFloat(value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @param values The value to add.
         * @return This builder for chaining.
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>repeated float value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          value_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CategoricalCrossEntropyOutput>
          PARSER = new com.google.protobuf.AbstractParser<CategoricalCrossEntropyOutput>() {
        @java.lang.Override
        public CategoricalCrossEntropyOutput parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<CategoricalCrossEntropyOutput> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CategoricalCrossEntropyOutput> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_InferenceBackend_Response.Output)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
       * @return Whether the binaryCrossentropy field is set.
       */
      boolean hasBinaryCrossentropy();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
       * @return The binaryCrossentropy.
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput getBinaryCrossentropy();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder getBinaryCrossentropyOrBuilder();

      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
       * @return Whether the categoricalCrossentropy field is set.
       */
      boolean hasCategoricalCrossentropy();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
       * @return The categoricalCrossentropy.
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput getCategoricalCrossentropy();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder getCategoricalCrossentropyOrBuilder();

      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
       * @return Whether the multiBinaryCrossentropy field is set.
       */
      boolean hasMultiBinaryCrossentropy();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
       * @return The multiBinaryCrossentropy.
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput getMultiBinaryCrossentropy();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder getMultiBinaryCrossentropyOrBuilder();

      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
       * @return Whether the regression field is set.
       */
      boolean hasRegression();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
       * @return The regression.
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput getRegression();
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
       */
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder getRegressionOrBuilder();

      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.ResponseTypeCase getResponseTypeCase();
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.Output}
     */
    public static final class Output extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgSteamLearn_InferenceBackend_Response.Output)
        OutputOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          Output.class.getName());
      }
      // Use Output.newBuilder() to construct.
      private Output(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Output() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder.class);
      }

      private int responseTypeCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object responseType_;
      public enum ResponseTypeCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        BINARY_CROSSENTROPY(1),
        CATEGORICAL_CROSSENTROPY(2),
        MULTI_BINARY_CROSSENTROPY(3),
        REGRESSION(4),
        RESPONSETYPE_NOT_SET(0);
        private final int value;
        private ResponseTypeCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ResponseTypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static ResponseTypeCase forNumber(int value) {
          switch (value) {
            case 1: return BINARY_CROSSENTROPY;
            case 2: return CATEGORICAL_CROSSENTROPY;
            case 3: return MULTI_BINARY_CROSSENTROPY;
            case 4: return REGRESSION;
            case 0: return RESPONSETYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ResponseTypeCase
      getResponseTypeCase() {
        return ResponseTypeCase.forNumber(
            responseTypeCase_);
      }

      public static final int BINARY_CROSSENTROPY_FIELD_NUMBER = 1;
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
       * @return Whether the binaryCrossentropy field is set.
       */
      @java.lang.Override
      public boolean hasBinaryCrossentropy() {
        return responseTypeCase_ == 1;
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
       * @return The binaryCrossentropy.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput getBinaryCrossentropy() {
        if (responseTypeCase_ == 1) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder getBinaryCrossentropyOrBuilder() {
        if (responseTypeCase_ == 1) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
      }

      public static final int CATEGORICAL_CROSSENTROPY_FIELD_NUMBER = 2;
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
       * @return Whether the categoricalCrossentropy field is set.
       */
      @java.lang.Override
      public boolean hasCategoricalCrossentropy() {
        return responseTypeCase_ == 2;
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
       * @return The categoricalCrossentropy.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput getCategoricalCrossentropy() {
        if (responseTypeCase_ == 2) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder getCategoricalCrossentropyOrBuilder() {
        if (responseTypeCase_ == 2) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
      }

      public static final int MULTI_BINARY_CROSSENTROPY_FIELD_NUMBER = 3;
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
       * @return Whether the multiBinaryCrossentropy field is set.
       */
      @java.lang.Override
      public boolean hasMultiBinaryCrossentropy() {
        return responseTypeCase_ == 3;
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
       * @return The multiBinaryCrossentropy.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput getMultiBinaryCrossentropy() {
        if (responseTypeCase_ == 3) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder getMultiBinaryCrossentropyOrBuilder() {
        if (responseTypeCase_ == 3) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
      }

      public static final int REGRESSION_FIELD_NUMBER = 4;
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
       * @return Whether the regression field is set.
       */
      @java.lang.Override
      public boolean hasRegression() {
        return responseTypeCase_ == 4;
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
       * @return The regression.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput getRegression() {
        if (responseTypeCase_ == 4) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
      }
      /**
       * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder getRegressionOrBuilder() {
        if (responseTypeCase_ == 4) {
           return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_;
        }
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (responseTypeCase_ == 1) {
          output.writeMessage(1, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_);
        }
        if (responseTypeCase_ == 2) {
          output.writeMessage(2, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_);
        }
        if (responseTypeCase_ == 3) {
          output.writeMessage(3, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_);
        }
        if (responseTypeCase_ == 4) {
          output.writeMessage(4, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (responseTypeCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_);
        }
        if (responseTypeCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_);
        }
        if (responseTypeCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_);
        }
        if (responseTypeCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output) obj;

        if (!getResponseTypeCase().equals(other.getResponseTypeCase())) return false;
        switch (responseTypeCase_) {
          case 1:
            if (!getBinaryCrossentropy()
                .equals(other.getBinaryCrossentropy())) return false;
            break;
          case 2:
            if (!getCategoricalCrossentropy()
                .equals(other.getCategoricalCrossentropy())) return false;
            break;
          case 3:
            if (!getMultiBinaryCrossentropy()
                .equals(other.getMultiBinaryCrossentropy())) return false;
            break;
          case 4:
            if (!getRegression()
                .equals(other.getRegression())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (responseTypeCase_) {
          case 1:
            hash = (37 * hash) + BINARY_CROSSENTROPY_FIELD_NUMBER;
            hash = (53 * hash) + getBinaryCrossentropy().hashCode();
            break;
          case 2:
            hash = (37 * hash) + CATEGORICAL_CROSSENTROPY_FIELD_NUMBER;
            hash = (53 * hash) + getCategoricalCrossentropy().hashCode();
            break;
          case 3:
            hash = (37 * hash) + MULTI_BINARY_CROSSENTROPY_FIELD_NUMBER;
            hash = (53 * hash) + getMultiBinaryCrossentropy().hashCode();
            break;
          case 4:
            hash = (37 * hash) + REGRESSION_FIELD_NUMBER;
            hash = (53 * hash) + getRegression().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response.Output}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceBackend_Response.Output)
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (binaryCrossentropyBuilder_ != null) {
            binaryCrossentropyBuilder_.clear();
          }
          if (categoricalCrossentropyBuilder_ != null) {
            categoricalCrossentropyBuilder_.clear();
          }
          if (multiBinaryCrossentropyBuilder_ != null) {
            multiBinaryCrossentropyBuilder_.clear();
          }
          if (regressionBuilder_ != null) {
            regressionBuilder_.clear();
          }
          responseTypeCase_ = 0;
          responseType_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output build() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output buildPartial() {
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output result) {
          result.responseTypeCase_ = responseTypeCase_;
          result.responseType_ = this.responseType_;
          if (responseTypeCase_ == 1 &&
              binaryCrossentropyBuilder_ != null) {
            result.responseType_ = binaryCrossentropyBuilder_.build();
          }
          if (responseTypeCase_ == 2 &&
              categoricalCrossentropyBuilder_ != null) {
            result.responseType_ = categoricalCrossentropyBuilder_.build();
          }
          if (responseTypeCase_ == 3 &&
              multiBinaryCrossentropyBuilder_ != null) {
            result.responseType_ = multiBinaryCrossentropyBuilder_.build();
          }
          if (responseTypeCase_ == 4 &&
              regressionBuilder_ != null) {
            result.responseType_ = regressionBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output) {
            return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output other) {
          if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.getDefaultInstance()) return this;
          switch (other.getResponseTypeCase()) {
            case BINARY_CROSSENTROPY: {
              mergeBinaryCrossentropy(other.getBinaryCrossentropy());
              break;
            }
            case CATEGORICAL_CROSSENTROPY: {
              mergeCategoricalCrossentropy(other.getCategoricalCrossentropy());
              break;
            }
            case MULTI_BINARY_CROSSENTROPY: {
              mergeMultiBinaryCrossentropy(other.getMultiBinaryCrossentropy());
              break;
            }
            case REGRESSION: {
              mergeRegression(other.getRegression());
              break;
            }
            case RESPONSETYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getBinaryCrossentropyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  responseTypeCase_ = 1;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getCategoricalCrossentropyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  responseTypeCase_ = 2;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getMultiBinaryCrossentropyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  responseTypeCase_ = 3;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getRegressionFieldBuilder().getBuilder(),
                      extensionRegistry);
                  responseTypeCase_ = 4;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int responseTypeCase_ = 0;
        private java.lang.Object responseType_;
        public ResponseTypeCase
            getResponseTypeCase() {
          return ResponseTypeCase.forNumber(
              responseTypeCase_);
        }

        public Builder clearResponseType() {
          responseTypeCase_ = 0;
          responseType_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder> binaryCrossentropyBuilder_;
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         * @return Whether the binaryCrossentropy field is set.
         */
        @java.lang.Override
        public boolean hasBinaryCrossentropy() {
          return responseTypeCase_ == 1;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         * @return The binaryCrossentropy.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput getBinaryCrossentropy() {
          if (binaryCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 1) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
          } else {
            if (responseTypeCase_ == 1) {
              return binaryCrossentropyBuilder_.getMessage();
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        public Builder setBinaryCrossentropy(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput value) {
          if (binaryCrossentropyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            responseType_ = value;
            onChanged();
          } else {
            binaryCrossentropyBuilder_.setMessage(value);
          }
          responseTypeCase_ = 1;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        public Builder setBinaryCrossentropy(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder builderForValue) {
          if (binaryCrossentropyBuilder_ == null) {
            responseType_ = builderForValue.build();
            onChanged();
          } else {
            binaryCrossentropyBuilder_.setMessage(builderForValue.build());
          }
          responseTypeCase_ = 1;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        public Builder mergeBinaryCrossentropy(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput value) {
          if (binaryCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 1 &&
                responseType_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance()) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.newBuilder((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_)
                  .mergeFrom(value).buildPartial();
            } else {
              responseType_ = value;
            }
            onChanged();
          } else {
            if (responseTypeCase_ == 1) {
              binaryCrossentropyBuilder_.mergeFrom(value);
            } else {
              binaryCrossentropyBuilder_.setMessage(value);
            }
          }
          responseTypeCase_ = 1;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        public Builder clearBinaryCrossentropy() {
          if (binaryCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 1) {
              responseTypeCase_ = 0;
              responseType_ = null;
              onChanged();
            }
          } else {
            if (responseTypeCase_ == 1) {
              responseTypeCase_ = 0;
              responseType_ = null;
            }
            binaryCrossentropyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder getBinaryCrossentropyBuilder() {
          return getBinaryCrossentropyFieldBuilder().getBuilder();
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder getBinaryCrossentropyOrBuilder() {
          if ((responseTypeCase_ == 1) && (binaryCrossentropyBuilder_ != null)) {
            return binaryCrossentropyBuilder_.getMessageOrBuilder();
          } else {
            if (responseTypeCase_ == 1) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput binary_crossentropy = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder> 
            getBinaryCrossentropyFieldBuilder() {
          if (binaryCrossentropyBuilder_ == null) {
            if (!(responseTypeCase_ == 1)) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.getDefaultInstance();
            }
            binaryCrossentropyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputOrBuilder>(
                    (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput) responseType_,
                    getParentForChildren(),
                    isClean());
            responseType_ = null;
          }
          responseTypeCase_ = 1;
          onChanged();
          return binaryCrossentropyBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder> categoricalCrossentropyBuilder_;
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         * @return Whether the categoricalCrossentropy field is set.
         */
        @java.lang.Override
        public boolean hasCategoricalCrossentropy() {
          return responseTypeCase_ == 2;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         * @return The categoricalCrossentropy.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput getCategoricalCrossentropy() {
          if (categoricalCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 2) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
          } else {
            if (responseTypeCase_ == 2) {
              return categoricalCrossentropyBuilder_.getMessage();
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        public Builder setCategoricalCrossentropy(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput value) {
          if (categoricalCrossentropyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            responseType_ = value;
            onChanged();
          } else {
            categoricalCrossentropyBuilder_.setMessage(value);
          }
          responseTypeCase_ = 2;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        public Builder setCategoricalCrossentropy(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder builderForValue) {
          if (categoricalCrossentropyBuilder_ == null) {
            responseType_ = builderForValue.build();
            onChanged();
          } else {
            categoricalCrossentropyBuilder_.setMessage(builderForValue.build());
          }
          responseTypeCase_ = 2;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        public Builder mergeCategoricalCrossentropy(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput value) {
          if (categoricalCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 2 &&
                responseType_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance()) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.newBuilder((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_)
                  .mergeFrom(value).buildPartial();
            } else {
              responseType_ = value;
            }
            onChanged();
          } else {
            if (responseTypeCase_ == 2) {
              categoricalCrossentropyBuilder_.mergeFrom(value);
            } else {
              categoricalCrossentropyBuilder_.setMessage(value);
            }
          }
          responseTypeCase_ = 2;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        public Builder clearCategoricalCrossentropy() {
          if (categoricalCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 2) {
              responseTypeCase_ = 0;
              responseType_ = null;
              onChanged();
            }
          } else {
            if (responseTypeCase_ == 2) {
              responseTypeCase_ = 0;
              responseType_ = null;
            }
            categoricalCrossentropyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder getCategoricalCrossentropyBuilder() {
          return getCategoricalCrossentropyFieldBuilder().getBuilder();
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder getCategoricalCrossentropyOrBuilder() {
          if ((responseTypeCase_ == 2) && (categoricalCrossentropyBuilder_ != null)) {
            return categoricalCrossentropyBuilder_.getMessageOrBuilder();
          } else {
            if (responseTypeCase_ == 2) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput categorical_crossentropy = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder> 
            getCategoricalCrossentropyFieldBuilder() {
          if (categoricalCrossentropyBuilder_ == null) {
            if (!(responseTypeCase_ == 2)) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.getDefaultInstance();
            }
            categoricalCrossentropyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputOrBuilder>(
                    (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput) responseType_,
                    getParentForChildren(),
                    isClean());
            responseType_ = null;
          }
          responseTypeCase_ = 2;
          onChanged();
          return categoricalCrossentropyBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder> multiBinaryCrossentropyBuilder_;
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         * @return Whether the multiBinaryCrossentropy field is set.
         */
        @java.lang.Override
        public boolean hasMultiBinaryCrossentropy() {
          return responseTypeCase_ == 3;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         * @return The multiBinaryCrossentropy.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput getMultiBinaryCrossentropy() {
          if (multiBinaryCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 3) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
          } else {
            if (responseTypeCase_ == 3) {
              return multiBinaryCrossentropyBuilder_.getMessage();
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        public Builder setMultiBinaryCrossentropy(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput value) {
          if (multiBinaryCrossentropyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            responseType_ = value;
            onChanged();
          } else {
            multiBinaryCrossentropyBuilder_.setMessage(value);
          }
          responseTypeCase_ = 3;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        public Builder setMultiBinaryCrossentropy(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder builderForValue) {
          if (multiBinaryCrossentropyBuilder_ == null) {
            responseType_ = builderForValue.build();
            onChanged();
          } else {
            multiBinaryCrossentropyBuilder_.setMessage(builderForValue.build());
          }
          responseTypeCase_ = 3;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        public Builder mergeMultiBinaryCrossentropy(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput value) {
          if (multiBinaryCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 3 &&
                responseType_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance()) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.newBuilder((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_)
                  .mergeFrom(value).buildPartial();
            } else {
              responseType_ = value;
            }
            onChanged();
          } else {
            if (responseTypeCase_ == 3) {
              multiBinaryCrossentropyBuilder_.mergeFrom(value);
            } else {
              multiBinaryCrossentropyBuilder_.setMessage(value);
            }
          }
          responseTypeCase_ = 3;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        public Builder clearMultiBinaryCrossentropy() {
          if (multiBinaryCrossentropyBuilder_ == null) {
            if (responseTypeCase_ == 3) {
              responseTypeCase_ = 0;
              responseType_ = null;
              onChanged();
            }
          } else {
            if (responseTypeCase_ == 3) {
              responseTypeCase_ = 0;
              responseType_ = null;
            }
            multiBinaryCrossentropyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder getMultiBinaryCrossentropyBuilder() {
          return getMultiBinaryCrossentropyFieldBuilder().getBuilder();
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder getMultiBinaryCrossentropyOrBuilder() {
          if ((responseTypeCase_ == 3) && (multiBinaryCrossentropyBuilder_ != null)) {
            return multiBinaryCrossentropyBuilder_.getMessageOrBuilder();
          } else {
            if (responseTypeCase_ == 3) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput multi_binary_crossentropy = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder> 
            getMultiBinaryCrossentropyFieldBuilder() {
          if (multiBinaryCrossentropyBuilder_ == null) {
            if (!(responseTypeCase_ == 3)) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.getDefaultInstance();
            }
            multiBinaryCrossentropyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputOrBuilder>(
                    (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput) responseType_,
                    getParentForChildren(),
                    isClean());
            responseType_ = null;
          }
          responseTypeCase_ = 3;
          onChanged();
          return multiBinaryCrossentropyBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder> regressionBuilder_;
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         * @return Whether the regression field is set.
         */
        @java.lang.Override
        public boolean hasRegression() {
          return responseTypeCase_ == 4;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         * @return The regression.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput getRegression() {
          if (regressionBuilder_ == null) {
            if (responseTypeCase_ == 4) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
          } else {
            if (responseTypeCase_ == 4) {
              return regressionBuilder_.getMessage();
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        public Builder setRegression(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput value) {
          if (regressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            responseType_ = value;
            onChanged();
          } else {
            regressionBuilder_.setMessage(value);
          }
          responseTypeCase_ = 4;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        public Builder setRegression(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder builderForValue) {
          if (regressionBuilder_ == null) {
            responseType_ = builderForValue.build();
            onChanged();
          } else {
            regressionBuilder_.setMessage(builderForValue.build());
          }
          responseTypeCase_ = 4;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        public Builder mergeRegression(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput value) {
          if (regressionBuilder_ == null) {
            if (responseTypeCase_ == 4 &&
                responseType_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance()) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.newBuilder((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_)
                  .mergeFrom(value).buildPartial();
            } else {
              responseType_ = value;
            }
            onChanged();
          } else {
            if (responseTypeCase_ == 4) {
              regressionBuilder_.mergeFrom(value);
            } else {
              regressionBuilder_.setMessage(value);
            }
          }
          responseTypeCase_ = 4;
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        public Builder clearRegression() {
          if (regressionBuilder_ == null) {
            if (responseTypeCase_ == 4) {
              responseTypeCase_ = 0;
              responseType_ = null;
              onChanged();
            }
          } else {
            if (responseTypeCase_ == 4) {
              responseTypeCase_ = 0;
              responseType_ = null;
            }
            regressionBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder getRegressionBuilder() {
          return getRegressionFieldBuilder().getBuilder();
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder getRegressionOrBuilder() {
          if ((responseTypeCase_ == 4) && (regressionBuilder_ != null)) {
            return regressionBuilder_.getMessageOrBuilder();
          } else {
            if (responseTypeCase_ == 4) {
              return (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_;
            }
            return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
          }
        }
        /**
         * <code>.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput regression = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder> 
            getRegressionFieldBuilder() {
          if (regressionBuilder_ == null) {
            if (!(responseTypeCase_ == 4)) {
              responseType_ = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.getDefaultInstance();
            }
            regressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputOrBuilder>(
                    (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput) responseType_,
                    getParentForChildren(),
                    isClean());
            responseType_ = null;
          }
          responseTypeCase_ = 4;
          onChanged();
          return regressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceBackend_Response.Output)
      }

      // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response.Output)
      private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output();
      }

      public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Output>
          PARSER = new com.google.protobuf.AbstractParser<Output>() {
        @java.lang.Override
        public Output parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Output> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Output> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int OUTPUTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output> outputs_;
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(1, outputs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, outputs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response) obj;

      if (!getOutputsList()
          .equals(other.getOutputsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_InferenceBackend_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_InferenceBackend_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
        } else {
          outputs_ = null;
          outputsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response result) {
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance()) return this;
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.parser(),
                        extensionRegistry);
                if (outputsBuilder_ == null) {
                  ensureOutputsIsMutable();
                  outputs_.add(m);
                } else {
                  outputsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          outputs_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output>(outputs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder setOutputs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder setOutputs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder addOutputs(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder addOutputs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder addOutputs(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder addOutputs(
          int index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgSteamLearn_InferenceBackend_Response.Output outputs = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Output.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.OutputOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_InferenceBackend_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_InferenceBackend_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_InferenceBackend_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_InferenceBackend_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_InferenceBackend_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_InferenceBackend_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_InferenceBackend_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamLearn_Inference_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamLearn_Inference_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
     * @return Whether the inferenceResult field is set.
     */
    boolean hasInferenceResult();
    /**
     * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
     * @return The inferenceResult.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult getInferenceResult();

    /**
     * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
     * @return Whether the backendResponse field is set.
     */
    boolean hasBackendResponse();
    /**
     * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
     * @return The backendResponse.
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response getBackendResponse();
    /**
     * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
     */
    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder getBackendResponseOrBuilder();

    /**
     * <code>repeated uint64 keys = 3;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Long> getKeysList();
    /**
     * <code>repeated uint64 keys = 3;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <code>repeated uint64 keys = 3;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    long getKeys(int index);
  }
  /**
   * Protobuf type {@code CMsgSteamLearn_Inference_Response}
   */
  public static final class CMsgSteamLearn_Inference_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgSteamLearn_Inference_Response)
      CMsgSteamLearn_Inference_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgSteamLearn_Inference_Response.class.getName());
    }
    // Use CMsgSteamLearn_Inference_Response.newBuilder() to construct.
    private CMsgSteamLearn_Inference_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamLearn_Inference_Response() {
      inferenceResult_ = 0;
      keys_ = emptyLongList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder.class);
    }

    private int bitField0_;
    public static final int INFERENCE_RESULT_FIELD_NUMBER = 1;
    private int inferenceResult_ = 0;
    /**
     * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
     * @return Whether the inferenceResult field is set.
     */
    @java.lang.Override public boolean hasInferenceResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
     * @return The inferenceResult.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult getInferenceResult() {
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult.forNumber(inferenceResult_);
      return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult.STEAMLEARN_INFERENCE_ERROR : result;
    }

    public static final int BACKEND_RESPONSE_FIELD_NUMBER = 2;
    private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response backendResponse_;
    /**
     * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
     * @return Whether the backendResponse field is set.
     */
    @java.lang.Override
    public boolean hasBackendResponse() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
     * @return The backendResponse.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response getBackendResponse() {
      return backendResponse_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance() : backendResponse_;
    }
    /**
     * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder getBackendResponseOrBuilder() {
      return backendResponse_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance() : backendResponse_;
    }

    public static final int KEYS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList keys_ =
        emptyLongList();
    /**
     * <code>repeated uint64 keys = 3;</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated uint64 keys = 3;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated uint64 keys = 3;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public long getKeys(int index) {
      return keys_.getLong(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, inferenceResult_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getBackendResponse());
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeUInt64(3, keys_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, inferenceResult_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBackendResponse());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(keys_.getLong(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response other = (kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response) obj;

      if (hasInferenceResult() != other.hasInferenceResult()) return false;
      if (hasInferenceResult()) {
        if (inferenceResult_ != other.inferenceResult_) return false;
      }
      if (hasBackendResponse() != other.hasBackendResponse()) return false;
      if (hasBackendResponse()) {
        if (!getBackendResponse()
            .equals(other.getBackendResponse())) return false;
      }
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInferenceResult()) {
        hash = (37 * hash) + INFERENCE_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + inferenceResult_;
      }
      if (hasBackendResponse()) {
        hash = (37 * hash) + BACKEND_RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getBackendResponse().hashCode();
      }
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamLearn_Inference_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamLearn_Inference_Response)
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.class, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getBackendResponseFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        inferenceResult_ = 0;
        backendResponse_ = null;
        if (backendResponseBuilder_ != null) {
          backendResponseBuilder_.dispose();
          backendResponseBuilder_ = null;
        }
        keys_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.internal_static_CMsgSteamLearn_Inference_Response_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response build() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response buildPartial() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response result = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.inferenceResult_ = inferenceResult_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.backendResponse_ = backendResponseBuilder_ == null
              ? backendResponse_
              : backendResponseBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          keys_.makeImmutable();
          result.keys_ = keys_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response) {
          return mergeFrom((kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response other) {
        if (other == kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response.getDefaultInstance()) return this;
        if (other.hasInferenceResult()) {
          setInferenceResult(other.getInferenceResult());
        }
        if (other.hasBackendResponse()) {
          mergeBackendResponse(other.getBackendResponse());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            keys_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult tmpValue =
                    kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  inferenceResult_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getBackendResponseFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                long v = input.readUInt64();
                ensureKeysIsMutable();
                keys_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureKeysIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  keys_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int inferenceResult_ = 0;
      /**
       * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
       * @return Whether the inferenceResult field is set.
       */
      @java.lang.Override public boolean hasInferenceResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
       * @return The inferenceResult.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult getInferenceResult() {
        kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult result = kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult.forNumber(inferenceResult_);
        return result == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult.STEAMLEARN_INFERENCE_ERROR : result;
      }
      /**
       * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
       * @param value The inferenceResult to set.
       * @return This builder for chaining.
       */
      public Builder setInferenceResult(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.ESteamLearnInferenceResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        inferenceResult_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ESteamLearnInferenceResult inference_result = 1 [default = STEAMLEARN_INFERENCE_ERROR];</code>
       * @return This builder for chaining.
       */
      public Builder clearInferenceResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        inferenceResult_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response backendResponse_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder> backendResponseBuilder_;
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       * @return Whether the backendResponse field is set.
       */
      public boolean hasBackendResponse() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       * @return The backendResponse.
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response getBackendResponse() {
        if (backendResponseBuilder_ == null) {
          return backendResponse_ == null ? kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance() : backendResponse_;
        } else {
          return backendResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      public Builder setBackendResponse(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response value) {
        if (backendResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backendResponse_ = value;
        } else {
          backendResponseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      public Builder setBackendResponse(
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder builderForValue) {
        if (backendResponseBuilder_ == null) {
          backendResponse_ = builderForValue.build();
        } else {
          backendResponseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      public Builder mergeBackendResponse(kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response value) {
        if (backendResponseBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            backendResponse_ != null &&
            backendResponse_ != kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance()) {
            getBackendResponseBuilder().mergeFrom(value);
          } else {
            backendResponse_ = value;
          }
        } else {
          backendResponseBuilder_.mergeFrom(value);
        }
        if (backendResponse_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      public Builder clearBackendResponse() {
        bitField0_ = (bitField0_ & ~0x00000002);
        backendResponse_ = null;
        if (backendResponseBuilder_ != null) {
          backendResponseBuilder_.dispose();
          backendResponseBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder getBackendResponseBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBackendResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder getBackendResponseOrBuilder() {
        if (backendResponseBuilder_ != null) {
          return backendResponseBuilder_.getMessageOrBuilder();
        } else {
          return backendResponse_ == null ?
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.getDefaultInstance() : backendResponse_;
        }
      }
      /**
       * <code>optional .CMsgSteamLearn_InferenceBackend_Response backend_response = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder> 
          getBackendResponseFieldBuilder() {
        if (backendResponseBuilder_ == null) {
          backendResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_Response.Builder, kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_InferenceBackend_ResponseOrBuilder>(
                  getBackendResponse(),
                  getParentForChildren(),
                  isClean());
          backendResponse_ = null;
        }
        return backendResponseBuilder_;
      }

      private com.google.protobuf.Internal.LongList keys_ = emptyLongList();
      private void ensureKeysIsMutable() {
        if (!keys_.isModifiable()) {
          keys_ = makeMutableCopy(keys_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @return A list containing the keys.
       */
      public java.util.List<java.lang.Long>
          getKeysList() {
        keys_.makeImmutable();
        return keys_;
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public long getKeys(int index) {
        return keys_.getLong(index);
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, long value) {

        ensureKeysIsMutable();
        keys_.setLong(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(long value) {

        ensureKeysIsMutable();
        keys_.addLong(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 keys = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgSteamLearn_Inference_Response)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamLearn_Inference_Response)
    private static final kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response();
    }

    public static kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamLearn_Inference_Response>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamLearn_Inference_Response>() {
      @java.lang.Override
      public CMsgSteamLearn_Inference_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamLearn_Inference_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamLearn_Inference_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.SteammessagesSteamlearnSteamworkssdk.CMsgSteamLearn_Inference_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnDataSourceDescObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnDataSourceDescObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnDataSourceDescElement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnDataSourceDescElement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnDataSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnDataSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnDataObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnDataObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnDataElement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnDataElement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnDataList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnDataList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_RegisterDataSource_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_RegisterDataSource_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_RegisterDataSource_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_RegisterDataSource_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_CacheData_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_CacheData_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_CacheData_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_CacheData_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_SnapshotProject_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_SnapshotProject_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_SnapshotProject_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_SnapshotProject_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_BatchOperation_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_BatchOperation_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_BatchOperation_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_BatchOperation_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnAccessTokens_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnAccessTokens_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_GetAccessTokens_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_GetAccessTokens_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_GetAccessTokens_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_GetAccessTokens_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_Inference_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_Inference_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceBackend_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamLearn_Inference_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgSteamLearn_Inference_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,steammessages_steamlearn.steamworkssdk" +
      ".proto\032.steammessages_unified_base.steam" +
      "workssdk.proto\"\\\n\"CMsgSteamLearnDataSour" +
      "ceDescObject\0226\n\010elements\030\001 \003(\0132$.CMsgSte" +
      "amLearnDataSourceDescElement\"\275\001\n#CMsgSte" +
      "amLearnDataSourceDescElement\022\014\n\004name\030\001 \001" +
      "(\t\022D\n\tdata_type\030\002 \001(\0162\024.ESteamLearnDataT" +
      "ype:\033STEAMLEARN_DATATYPE_INVALID\0223\n\006obje" +
      "ct\030\003 \001(\0132#.CMsgSteamLearnDataSourceDescO" +
      "bject\022\r\n\005count\030\004 \001(\r\"\320\001\n\030CMsgSteamLearnD" +
      "ataSource\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\017\n\007v" +
      "ersion\030\003 \001(\r\022\032\n\022source_description\030\004 \001(\t" +
      "\0226\n\tstructure\030\005 \001(\0132#.CMsgSteamLearnData" +
      "SourceDescObject\022\025\n\rstructure_crc\030\006 \001(\r\022" +
      "\036\n\026cache_duration_seconds\030\007 \001(\r\"H\n\030CMsgS" +
      "teamLearnDataObject\022,\n\010elements\030\001 \003(\0132\032." +
      "CMsgSteamLearnDataElement\"\256\001\n\031CMsgSteamL" +
      "earnDataElement\022\014\n\004name\030\001 \001(\t\022\023\n\013data_in" +
      "t32s\030\024 \003(\005\022\023\n\013data_floats\030\025 \003(\002\022\022\n\ndata_" +
      "bools\030\026 \003(\010\022\024\n\014data_strings\030\027 \003(\t\022/\n\014dat" +
      "a_objects\030\030 \003(\0132\031.CMsgSteamLearnDataObje" +
      "ct\"j\n\022CMsgSteamLearnData\022\026\n\016data_source_" +
      "id\030\001 \001(\r\022\014\n\004keys\030\002 \003(\004\022.\n\013data_object\030\003 " +
      "\001(\0132\031.CMsgSteamLearnDataObject\";\n\026CMsgSt" +
      "eamLearnDataList\022!\n\004data\030\001 \003(\0132\023.CMsgSte" +
      "amLearnData\"q\n)CMsgSteamLearn_RegisterDa" +
      "taSource_Request\022\024\n\014access_token\030\001 \001(\t\022." +
      "\n\013data_source\030\003 \001(\0132\031.CMsgSteamLearnData" +
      "Source\"\301\001\n*CMsgSteamLearn_RegisterDataSo" +
      "urce_Response\022c\n\006result\030\001 \001(\0162%.ESteammL" +
      "earnRegisterDataSourceResult:,STEAMLEARN" +
      "_REGISTER_DATA_SOURCE_RESULT_ERROR\022.\n\013da" +
      "ta_source\030\002 \001(\0132\031.CMsgSteamLearnDataSour" +
      "ce\"[\n CMsgSteamLearn_CacheData_Request\022\024" +
      "\n\014access_token\030\001 \001(\t\022!\n\004data\030\003 \001(\0132\023.CMs" +
      "gSteamLearnData\"x\n!CMsgSteamLearn_CacheD" +
      "ata_Response\022S\n\021cache_data_result\030\001 \001(\0162" +
      "\033.ESteamLearnCacheDataResult:\033STEAMLEARN" +
      "_CACHE_DATA_ERROR\"\302\001\n&CMsgSteamLearn_Sna" +
      "pshotProject_Request\022\024\n\014access_token\030\001 \001" +
      "(\t\022\022\n\nproject_id\030\003 \001(\r\022\031\n\021published_vers" +
      "ion\030\007 \001(\r\022\014\n\004keys\030\004 \003(\004\022!\n\004data\030\005 \003(\0132\023." +
      "CMsgSteamLearnData\022\"\n\032pending_data_limit" +
      "_seconds\030\006 \001(\r\"\210\001\n\'CMsgSteamLearn_Snapsh" +
      "otProject_Response\022]\n\017snapshot_result\030\001 " +
      "\001(\0162!.ESteamLearnSnapshotProjectResult:!" +
      "STEAMLEARN_SNAPSHOT_PROJECT_ERROR\"\352\001\n%CM" +
      "sgSteamLearn_BatchOperation_Request\022>\n\023c" +
      "ache_data_requests\030\001 \003(\0132!.CMsgSteamLear" +
      "n_CacheData_Request\022B\n\021snapshot_requests" +
      "\030\002 \003(\0132\'.CMsgSteamLearn_SnapshotProject_" +
      "Request\022=\n\022inference_requests\030\003 \003(\0132!.CM" +
      "sgSteamLearn_Inference_Request\"\361\001\n&CMsgS" +
      "teamLearn_BatchOperation_Response\022@\n\024cac" +
      "he_data_responses\030\001 \003(\0132\".CMsgSteamLearn" +
      "_CacheData_Response\022D\n\022snapshot_response" +
      "s\030\002 \003(\0132(.CMsgSteamLearn_SnapshotProject" +
      "_Response\022?\n\023inference_responses\030\003 \003(\0132\"" +
      ".CMsgSteamLearn_Inference_Response\"\236\004\n\032C" +
      "MsgSteamLearnAccessTokens\022)\n!register_da" +
      "ta_source_access_token\030\001 \001(\t\022R\n\030cache_da" +
      "ta_access_tokens\030\002 \003(\01320.CMsgSteamLearnA" +
      "ccessTokens.CacheDataAccessToken\022^\n\036snap" +
      "shot_project_access_tokens\030\003 \003(\01326.CMsgS" +
      "teamLearnAccessTokens.SnapshotProjectAcc" +
      "essToken\022Q\n\027inference_access_tokens\030\004 \003(" +
      "\01320.CMsgSteamLearnAccessTokens.Inference" +
      "AccessToken\032D\n\024CacheDataAccessToken\022\026\n\016d" +
      "ata_source_id\030\001 \001(\r\022\024\n\014access_token\030\002 \001(" +
      "\t\032F\n\032SnapshotProjectAccessToken\022\022\n\nproje" +
      "ct_id\030\001 \001(\r\022\024\n\014access_token\030\002 \001(\t\032@\n\024Inf" +
      "erenceAccessToken\022\022\n\nproject_id\030\001 \001(\r\022\024\n" +
      "\014access_token\030\002 \001(\t\"7\n&CMsgSteamLearn_Ge" +
      "tAccessTokens_Request\022\r\n\005appid\030\001 \001(\r\"\264\001\n" +
      "\'CMsgSteamLearn_GetAccessTokens_Response" +
      "\022U\n\006result\030\001 \001(\0162!.ESteamLearnGetAccessT" +
      "okensResult:\"STEAMLEARN_GET_ACCESS_TOKEN" +
      "S_ERROR\0222\n\raccess_tokens\030\002 \001(\0132\033.CMsgSte" +
      "amLearnAccessTokens\"\302\001\n CMsgSteamLearn_I" +
      "nference_Request\022\024\n\014access_token\030\001 \001(\t\022\022" +
      "\n\nproject_id\030\003 \001(\r\022\031\n\021published_version\030" +
      "\004 \001(\r\022\031\n\021override_train_id\030\005 \001(\r\022%\n\004data" +
      "\030\006 \001(\0132\027.CMsgSteamLearnDataList\022\027\n\017addit" +
      "ional_data\030\007 \003(\002\"\212\001\n(CMsgSteamLearn_Infe" +
      "renceMetadata_Request\022\024\n\014access_token\030\001 " +
      "\001(\t\022\022\n\nproject_id\030\003 \001(\r\022\031\n\021published_ver" +
      "sion\030\004 \001(\r\022\031\n\021override_train_id\030\005 \001(\r\"W\n" +
      "/CMsgSteamLearn_InferenceMetadataBackend" +
      "_Request\022\022\n\nproject_id\030\001 \001(\r\022\020\n\010fetch_id" +
      "\030\002 \001(\r\"\300\014\n)CMsgSteamLearn_InferenceMetad" +
      "ata_Response\022k\n\031inference_metadata_resul" +
      "t\030\001 \001(\0162#.ESteamLearnInferenceMetadataRe" +
      "sult:#STEAMLEARN_INFERENCE_METADATA_ERRO" +
      "R\022F\n\trow_range\030\002 \001(\01323.CMsgSteamLearn_In" +
      "ferenceMetadata_Response.RowRange\022@\n\006ran" +
      "ges\030\003 \003(\01320.CMsgSteamLearn_InferenceMeta" +
      "data_Response.Range\022C\n\010std_devs\030\004 \003(\01321." +
      "CMsgSteamLearn_InferenceMetadata_Respons" +
      "e.StdDev\022O\n\016compact_tables\030\005 \003(\01327.CMsgS" +
      "teamLearn_InferenceMetadata_Response.Com" +
      "pactTable\022A\n\006kmeans\030\006 \003(\01321.CMsgSteamLea" +
      "rn_InferenceMetadata_Response.KMeans\022X\n\022" +
      "snapshot_histogram\030\007 \001(\0132<.CMsgSteamLear" +
      "n_InferenceMetadata_Response.SnapshotHis" +
      "togram\032,\n\010RowRange\022\017\n\007min_row\030\001 \001(\004\022\017\n\007m" +
      "ax_row\030\002 \001(\004\032H\n\005Range\022\031\n\021data_element_pa" +
      "th\030\001 \001(\t\022\021\n\tmin_value\030\002 \001(\002\022\021\n\tmax_value" +
      "\030\003 \001(\002\032B\n\006StdDev\022\031\n\021data_element_path\030\001 " +
      "\001(\t\022\014\n\004mean\030\002 \001(\002\022\017\n\007std_dev\030\003 \001(\002\032\354\003\n\014C" +
      "ompactTable\022\014\n\004name\030\001 \001(\t\022Z\n\nmap_values\030" +
      "\002 \003(\0132F.CMsgSteamLearn_InferenceMetadata" +
      "_Response.CompactTable.MapValuesEntry\022^\n" +
      "\014map_mappings\030\003 \003(\0132H.CMsgSteamLearn_Inf" +
      "erenceMetadata_Response.CompactTable.Map" +
      "MappingsEntry\0326\n\005Entry\022\r\n\005value\030\001 \001(\r\022\017\n" +
      "\007mapping\030\002 \001(\r\022\r\n\005count\030\003 \001(\004\032k\n\016MapValu" +
      "esEntry\022\013\n\003key\030\001 \001(\r\022L\n\005value\030\002 \001(\0132=.CM" +
      "sgSteamLearn_InferenceMetadata_Response." +
      "CompactTable.Entry\032m\n\020MapMappingsEntry\022\013" +
      "\n\003key\030\001 \001(\r\022L\n\005value\030\002 \001(\0132=.CMsgSteamLe" +
      "arn_InferenceMetadata_Response.CompactTa" +
      "ble.Entry\032\326\001\n\006KMeans\022\014\n\004name\030\001 \001(\t\022K\n\010cl" +
      "usters\030\002 \003(\01329.CMsgSteamLearn_InferenceM" +
      "etadata_Response.KMeans.Cluster\032q\n\007Clust" +
      "er\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\016\n\006radius\030\003 \001(\002" +
      "\022\024\n\014radius_75pct\030\004 \001(\002\022\024\n\014radius_50pct\030\005" +
      " \001(\002\022\024\n\014radius_25pct\030\006 \001(\002\032e\n\021SnapshotHi" +
      "stogram\022\021\n\tmin_value\030\001 \001(\002\022\021\n\tmax_value\030" +
      "\002 \001(\002\022\023\n\013num_buckets\030\003 \001(\r\022\025\n\rbucket_cou" +
      "nts\030\004 \003(\r\"\346\005\n(CMsgSteamLearn_InferenceBa" +
      "ckend_Response\022A\n\007outputs\030\001 \003(\01320.CMsgSt" +
      "eamLearn_InferenceBackend_Response.Outpu" +
      "t\032!\n\020RegressionOutput\022\r\n\005value\030\001 \001(\002\032)\n\030" +
      "BinaryCrossEntropyOutput\022\r\n\005value\030\001 \001(\002\032" +
      ">\n\035MutliBinaryCrossEntropyOutput\022\016\n\006weig" +
      "ht\030\001 \003(\002\022\r\n\005value\030\002 \003(\002\032>\n\035CategoricalCr" +
      "ossEntropyOutput\022\016\n\006weight\030\001 \003(\002\022\r\n\005valu" +
      "e\030\002 \003(\002\032\250\003\n\006Output\022a\n\023binary_crossentrop" +
      "y\030\001 \001(\0132B.CMsgSteamLearn_InferenceBacken" +
      "d_Response.BinaryCrossEntropyOutputH\000\022k\n" +
      "\030categorical_crossentropy\030\002 \001(\0132G.CMsgSt" +
      "eamLearn_InferenceBackend_Response.Categ" +
      "oricalCrossEntropyOutputH\000\022l\n\031multi_bina" +
      "ry_crossentropy\030\003 \001(\0132G.CMsgSteamLearn_I" +
      "nferenceBackend_Response.MutliBinaryCros" +
      "sEntropyOutputH\000\022P\n\nregression\030\004 \001(\0132:.C" +
      "MsgSteamLearn_InferenceBackend_Response." +
      "RegressionOutputH\000B\016\n\014ResponseType\"\311\001\n!C" +
      "MsgSteamLearn_Inference_Response\022Q\n\020infe" +
      "rence_result\030\001 \001(\0162\033.ESteamLearnInferenc" +
      "eResult:\032STEAMLEARN_INFERENCE_ERROR\022C\n\020b" +
      "ackend_response\030\002 \001(\0132).CMsgSteamLearn_I" +
      "nferenceBackend_Response\022\014\n\004keys\030\003 \003(\004*\324" +
      "\001\n\023ESteamLearnDataType\022\037\n\033STEAMLEARN_DAT" +
      "ATYPE_INVALID\020\000\022\035\n\031STEAMLEARN_DATATYPE_I" +
      "NT32\020\001\022\037\n\033STEAMLEARN_DATATYPE_FLOAT32\020\002\022" +
      "\034\n\030STEAMLEARN_DATATYPE_BOOL\020\003\022\036\n\032STEAMLE" +
      "ARN_DATATYPE_STRING\020\004\022\036\n\032STEAMLEARN_DATA" +
      "TYPE_OBJECT\020\005*\274\005\n$ESteammLearnRegisterDa" +
      "taSourceResult\0220\n,STEAMLEARN_REGISTER_DA" +
      "TA_SOURCE_RESULT_ERROR\020\000\022:\n6STEAMLEARN_R" +
      "EGISTER_DATA_SOURCE_RESULT_SUCCESS_CREAT" +
      "ED\020\001\0228\n4STEAMLEARN_REGISTER_DATA_SOURCE_" +
      "RESULT_SUCCESS_FOUND\020\002\0228\n4STEAMLEARN_REG" +
      "ISTER_DATA_SOURCE_RESULT_ERROR_GENERIC\020\003" +
      "\022=\n9STEAMLEARN_REGISTER_DATA_SOURCE_RESU" +
      "LT_ERROR_INVALID_NAME\020\004\022@\n<STEAMLEARN_RE" +
      "GISTER_DATA_SOURCE_RESULT_ERROR_INVALID_" +
      "VERSION\020\005\022=\n9STEAMLEARN_REGISTER_DATA_SO" +
      "URCE_RESULT_ERROR_DATA_CHANGED\020\006\022=\n9STEA" +
      "MLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR" +
      "_DATA_INVALID\020\007\022:\n6STEAMLEARN_REGISTER_D" +
      "ATA_SOURCE_RESULT_ERROR_FORBIDDEN\020\010\022B\n>S" +
      "TEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ER" +
      "ROR_INVALID_TIMESTAMP\020\t\0223\n/STEAMLEARN_RE" +
      "GISTER_DATA_SOURCE_RESULT_DISABLED\020\n*\373\002\n" +
      "\032ESteamLearnCacheDataResult\022\037\n\033STEAMLEAR" +
      "N_CACHE_DATA_ERROR\020\000\022!\n\035STEAMLEARN_CACHE" +
      "_DATA_SUCCESS\020\001\0223\n/STEAMLEARN_CACHE_DATA" +
      "_ERROR_UNKNOWN_DATA_SOURCE\020\002\0224\n0STEAMLEA" +
      "RN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE" +
      "\020\003\022,\n(STEAMLEARN_CACHE_DATA_ERROR_INVALI" +
      "D_KEYS\020\004\022)\n%STEAMLEARN_CACHE_DATA_ERROR_" +
      "FORBIDDEN\020\005\0221\n-STEAMLEARN_CACHE_DATA_ERR" +
      "OR_INVALID_TIMESTAMP\020\006\022\"\n\036STEAMLEARN_CAC" +
      "HE_DATA_DISABLED\020\007*\355\005\n ESteamLearnSnapsh" +
      "otProjectResult\022%\n!STEAMLEARN_SNAPSHOT_P" +
      "ROJECT_ERROR\020\000\022.\n*STEAMLEARN_SNAPSHOT_PR" +
      "OJECT_SUCCESS_STORED\020\001\022.\n*STEAMLEARN_SNA" +
      "PSHOT_PROJECT_SUCCESS_QUEUED\020\002\0228\n4STEAML" +
      "EARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJ" +
      "ECT_ID\020\003\0229\n5STEAMLEARN_SNAPSHOT_PROJECT_" +
      "ERROR_UNKNOWN_DATA_SOURCE\020\004\022=\n9STEAMLEAR" +
      "N_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SO" +
      "URCE_KEY\020\005\022<\n8STEAMLEARN_SNAPSHOT_PROJEC" +
      "T_ERROR_MISSING_CACHE_DURATION\020\006\0229\n5STEA" +
      "MLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISH" +
      "ED_CONFIG\020\007\022/\n+STEAMLEARN_SNAPSHOT_PROJE" +
      "CT_ERROR_FORBIDDEN\020\010\0227\n3STEAMLEARN_SNAPS" +
      "HOT_PROJECT_ERROR_INVALID_TIMESTAMP\020\t\022@\n" +
      "<STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTER" +
      "NAL_DATA_SOURCE_ERROR\020\n\022(\n$STEAMLEARN_SN" +
      "APSHOT_PROJECT_DISABLED\020\013\022?\n;STEAMLEARN_" +
      "SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED" +
      "_VERSION\020\014*t\n ESteamLearnGetAccessTokens" +
      "Result\022&\n\"STEAMLEARN_GET_ACCESS_TOKENS_E" +
      "RROR\020\000\022(\n$STEAMLEARN_GET_ACCESS_TOKENS_S" +
      "UCCESS\020\001*\361\003\n\032ESteamLearnInferenceResult\022" +
      "\036\n\032STEAMLEARN_INFERENCE_ERROR\020\000\022 \n\034STEAM" +
      "LEARN_INFERENCE_SUCCESS\020\001\0221\n-STEAMLEARN_" +
      "INFERENCE_ERROR_INVALID_PROJECT_ID\020\002\0229\n5" +
      "STEAMLEARN_INFERENCE_ERROR_MISSING_CACHE" +
      "D_SCHEMA_DATA\020\003\0222\n.STEAMLEARN_INFERENCE_" +
      "ERROR_NO_PUBLISHED_CONFIG\020\004\022(\n$STEAMLEAR" +
      "N_INFERENCE_ERROR_FORBIDDEN\020\005\0220\n,STEAMLE" +
      "ARN_INFERENCE_ERROR_INVALID_TIMESTAMP\020\006\022" +
      "8\n4STEAMLEARN_INFERENCE_ERROR_INVALID_PU" +
      "BLISHED_VERSION\020\007\0220\n,STEAMLEARN_INFERENC" +
      "E_ERROR_NO_FETCH_ID_FOUND\020\010\022\'\n#STEAMLEAR" +
      "N_INFERENCE_ERROR_TOO_BUSY\020\t*\335\003\n\"ESteamL" +
      "earnInferenceMetadataResult\022\'\n#STEAMLEAR" +
      "N_INFERENCE_METADATA_ERROR\020\000\022)\n%STEAMLEA" +
      "RN_INFERENCE_METADATA_SUCCESS\020\001\022:\n6STEAM" +
      "LEARN_INFERENCE_METADATA_ERROR_INVALID_P" +
      "ROJECT_ID\020\002\022;\n7STEAMLEARN_INFERENCE_META" +
      "DATA_ERROR_NO_PUBLISHED_CONFIG\020\003\0221\n-STEA" +
      "MLEARN_INFERENCE_METADATA_ERROR_FORBIDDE" +
      "N\020\004\0229\n5STEAMLEARN_INFERENCE_METADATA_ERR" +
      "OR_INVALID_TIMESTAMP\020\005\022A\n=STEAMLEARN_INF" +
      "ERENCE_METADATA_ERROR_INVALID_PUBLISHED_" +
      "VERSION\020\006\0229\n5STEAMLEARN_INFERENCE_METADA" +
      "TA_ERROR_NO_FETCH_ID_FOUND\020\0072\223\n\n\nSteamLe" +
      "arn\022\273\001\n\022RegisterDataSource\022*.CMsgSteamLe" +
      "arn_RegisterDataSource_Request\032+.CMsgSte" +
      "amLearn_RegisterDataSource_Response\"L\202\265\030" +
      "HRegisters a data desc (or finds a data " +
      "desc if it\'s already registered).\022t\n\tCac" +
      "heData\022!.CMsgSteamLearn_CacheData_Reques" +
      "t\032\".CMsgSteamLearn_CacheData_Response\" \202" +
      "\265\030\034Updates a cached data entry.\022\223\001\n\017Snap" +
      "shotProject\022\'.CMsgSteamLearn_SnapshotPro" +
      "ject_Request\032(.CMsgSteamLearn_SnapshotPr" +
      "oject_Response\"-\202\265\030)Snapshots the curren" +
      "t data for a project.\022\272\001\n\016BatchOperation" +
      "\022&.CMsgSteamLearn_BatchOperation_Request" +
      "\032\'.CMsgSteamLearn_BatchOperation_Respons" +
      "e\"W\202\265\030SBatches multiple data updates, sn" +
      "apshots, and inference requests into a s" +
      "ingle call\022\330\001\n\017GetAccessTokens\022\'.CMsgSte" +
      "amLearn_GetAccessTokens_Request\032(.CMsgSt" +
      "eamLearn_GetAccessTokens_Response\"r\202\265\030nG" +
      "ets the access tokens needed for registe" +
      "ring data sources, submitting data to th" +
      "em, and snapshotting projects\022\242\001\n\tInfere" +
      "nce\022!.CMsgSteamLearn_Inference_Request\032\"" +
      ".CMsgSteamLearn_Inference_Response\"N\202\265\030J" +
      "Inferences using supplied data, or data " +
      "associated with the specified key.\022\260\001\n\021I" +
      "nferenceMetadata\022).CMsgSteamLearn_Infere" +
      "nceMetadata_Request\032*.CMsgSteamLearn_Inf" +
      "erenceMetadata_Response\"D\202\265\030@Requests th" +
      "e metadata that was generated from a spe" +
      "cified fetch.\032K\202\265\030GService for submittin" +
      "g data, training, and inferencing with S" +
      "teamLearn.B\032\n\030kz.moltenhaze.proto.dota"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.moltenhaze.proto.dota.SteammessagesUnifiedBaseSteamworkssdk.getDescriptor(),
        });
    internal_static_CMsgSteamLearnDataSourceDescObject_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgSteamLearnDataSourceDescObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnDataSourceDescObject_descriptor,
        new java.lang.String[] { "Elements", });
    internal_static_CMsgSteamLearnDataSourceDescElement_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgSteamLearnDataSourceDescElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnDataSourceDescElement_descriptor,
        new java.lang.String[] { "Name", "DataType", "Object", "Count", });
    internal_static_CMsgSteamLearnDataSource_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgSteamLearnDataSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnDataSource_descriptor,
        new java.lang.String[] { "Id", "Name", "Version", "SourceDescription", "Structure", "StructureCrc", "CacheDurationSeconds", });
    internal_static_CMsgSteamLearnDataObject_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgSteamLearnDataObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnDataObject_descriptor,
        new java.lang.String[] { "Elements", });
    internal_static_CMsgSteamLearnDataElement_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgSteamLearnDataElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnDataElement_descriptor,
        new java.lang.String[] { "Name", "DataInt32S", "DataFloats", "DataBools", "DataStrings", "DataObjects", });
    internal_static_CMsgSteamLearnData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgSteamLearnData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnData_descriptor,
        new java.lang.String[] { "DataSourceId", "Keys", "DataObject", });
    internal_static_CMsgSteamLearnDataList_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgSteamLearnDataList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnDataList_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_CMsgSteamLearn_RegisterDataSource_Request_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgSteamLearn_RegisterDataSource_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_RegisterDataSource_Request_descriptor,
        new java.lang.String[] { "AccessToken", "DataSource", });
    internal_static_CMsgSteamLearn_RegisterDataSource_Response_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgSteamLearn_RegisterDataSource_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_RegisterDataSource_Response_descriptor,
        new java.lang.String[] { "Result", "DataSource", });
    internal_static_CMsgSteamLearn_CacheData_Request_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgSteamLearn_CacheData_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_CacheData_Request_descriptor,
        new java.lang.String[] { "AccessToken", "Data", });
    internal_static_CMsgSteamLearn_CacheData_Response_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgSteamLearn_CacheData_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_CacheData_Response_descriptor,
        new java.lang.String[] { "CacheDataResult", });
    internal_static_CMsgSteamLearn_SnapshotProject_Request_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgSteamLearn_SnapshotProject_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_SnapshotProject_Request_descriptor,
        new java.lang.String[] { "AccessToken", "ProjectId", "PublishedVersion", "Keys", "Data", "PendingDataLimitSeconds", });
    internal_static_CMsgSteamLearn_SnapshotProject_Response_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgSteamLearn_SnapshotProject_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_SnapshotProject_Response_descriptor,
        new java.lang.String[] { "SnapshotResult", });
    internal_static_CMsgSteamLearn_BatchOperation_Request_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgSteamLearn_BatchOperation_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_BatchOperation_Request_descriptor,
        new java.lang.String[] { "CacheDataRequests", "SnapshotRequests", "InferenceRequests", });
    internal_static_CMsgSteamLearn_BatchOperation_Response_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CMsgSteamLearn_BatchOperation_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_BatchOperation_Response_descriptor,
        new java.lang.String[] { "CacheDataResponses", "SnapshotResponses", "InferenceResponses", });
    internal_static_CMsgSteamLearnAccessTokens_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CMsgSteamLearnAccessTokens_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnAccessTokens_descriptor,
        new java.lang.String[] { "RegisterDataSourceAccessToken", "CacheDataAccessTokens", "SnapshotProjectAccessTokens", "InferenceAccessTokens", });
    internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_descriptor =
      internal_static_CMsgSteamLearnAccessTokens_descriptor.getNestedTypes().get(0);
    internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnAccessTokens_CacheDataAccessToken_descriptor,
        new java.lang.String[] { "DataSourceId", "AccessToken", });
    internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_descriptor =
      internal_static_CMsgSteamLearnAccessTokens_descriptor.getNestedTypes().get(1);
    internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken_descriptor,
        new java.lang.String[] { "ProjectId", "AccessToken", });
    internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_descriptor =
      internal_static_CMsgSteamLearnAccessTokens_descriptor.getNestedTypes().get(2);
    internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearnAccessTokens_InferenceAccessToken_descriptor,
        new java.lang.String[] { "ProjectId", "AccessToken", });
    internal_static_CMsgSteamLearn_GetAccessTokens_Request_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CMsgSteamLearn_GetAccessTokens_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_GetAccessTokens_Request_descriptor,
        new java.lang.String[] { "Appid", });
    internal_static_CMsgSteamLearn_GetAccessTokens_Response_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CMsgSteamLearn_GetAccessTokens_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_GetAccessTokens_Response_descriptor,
        new java.lang.String[] { "Result", "AccessTokens", });
    internal_static_CMsgSteamLearn_Inference_Request_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CMsgSteamLearn_Inference_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_Inference_Request_descriptor,
        new java.lang.String[] { "AccessToken", "ProjectId", "PublishedVersion", "OverrideTrainId", "Data", "AdditionalData", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Request_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_CMsgSteamLearn_InferenceMetadata_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Request_descriptor,
        new java.lang.String[] { "AccessToken", "ProjectId", "PublishedVersion", "OverrideTrainId", });
    internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadataBackend_Request_descriptor,
        new java.lang.String[] { "ProjectId", "FetchId", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor,
        new java.lang.String[] { "InferenceMetadataResult", "RowRange", "Ranges", "StdDevs", "CompactTables", "Kmeans", "SnapshotHistogram", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor.getNestedTypes().get(0);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_RowRange_descriptor,
        new java.lang.String[] { "MinRow", "MaxRow", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor.getNestedTypes().get(1);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_Range_descriptor,
        new java.lang.String[] { "DataElementPath", "MinValue", "MaxValue", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor.getNestedTypes().get(2);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_StdDev_descriptor,
        new java.lang.String[] { "DataElementPath", "Mean", "StdDev", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor.getNestedTypes().get(3);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor,
        new java.lang.String[] { "Name", "MapValues", "MapMappings", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor.getNestedTypes().get(0);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry_descriptor,
        new java.lang.String[] { "Value", "Mapping", "Count", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor.getNestedTypes().get(1);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_descriptor.getNestedTypes().get(2);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor.getNestedTypes().get(4);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor,
        new java.lang.String[] { "Name", "Clusters", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_descriptor.getNestedTypes().get(0);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster_descriptor,
        new java.lang.String[] { "X", "Y", "Radius", "Radius75Pct", "Radius50Pct", "Radius25Pct", });
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_descriptor =
      internal_static_CMsgSteamLearn_InferenceMetadata_Response_descriptor.getNestedTypes().get(5);
    internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram_descriptor,
        new java.lang.String[] { "MinValue", "MaxValue", "NumBuckets", "BucketCounts", });
    internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_CMsgSteamLearn_InferenceBackend_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor,
        new java.lang.String[] { "Outputs", });
    internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_descriptor =
      internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor.getNestedTypes().get(0);
    internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceBackend_Response_RegressionOutput_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_descriptor =
      internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor.getNestedTypes().get(1);
    internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_descriptor =
      internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor.getNestedTypes().get(2);
    internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput_descriptor,
        new java.lang.String[] { "Weight", "Value", });
    internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_descriptor =
      internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor.getNestedTypes().get(3);
    internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput_descriptor,
        new java.lang.String[] { "Weight", "Value", });
    internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_descriptor =
      internal_static_CMsgSteamLearn_InferenceBackend_Response_descriptor.getNestedTypes().get(4);
    internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_InferenceBackend_Response_Output_descriptor,
        new java.lang.String[] { "BinaryCrossentropy", "CategoricalCrossentropy", "MultiBinaryCrossentropy", "Regression", "ResponseType", });
    internal_static_CMsgSteamLearn_Inference_Response_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_CMsgSteamLearn_Inference_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgSteamLearn_Inference_Response_descriptor,
        new java.lang.String[] { "InferenceResult", "BackendResponse", "Keys", });
    descriptor.resolveAllFeaturesImmutable();
    kz.moltenhaze.proto.dota.SteammessagesUnifiedBaseSteamworkssdk.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(kz.moltenhaze.proto.dota.SteammessagesUnifiedBaseSteamworkssdk.methodDescription);
    registry.add(kz.moltenhaze.proto.dota.SteammessagesUnifiedBaseSteamworkssdk.serviceDescription);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
