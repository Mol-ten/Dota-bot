// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dota_gcmessages_common_match_management.proto
// Protobuf Java Version: 4.28.0

package kz.moltenhaze.proto.dota;

public final class DotaGcmessagesCommonMatchManagement {
  private DotaGcmessagesCommonMatchManagement() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 0,
      /* suffix= */ "",
      DotaGcmessagesCommonMatchManagement.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ELaneSelection}
   */
  public enum ELaneSelection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ELaneSelection_SAFELANE = 0;</code>
     */
    k_ELaneSelection_SAFELANE(0),
    /**
     * <code>k_ELaneSelection_OFFLANE = 1;</code>
     */
    k_ELaneSelection_OFFLANE(1),
    /**
     * <code>k_ELaneSelection_MIDLANE = 2;</code>
     */
    k_ELaneSelection_MIDLANE(2),
    /**
     * <code>k_ELaneSelection_SUPPORT = 3;</code>
     */
    k_ELaneSelection_SUPPORT(3),
    /**
     * <code>k_ELaneSelection_HARDSUPPORT = 4;</code>
     */
    k_ELaneSelection_HARDSUPPORT(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ELaneSelection.class.getName());
    }
    /**
     * <code>k_ELaneSelection_SAFELANE = 0;</code>
     */
    public static final int k_ELaneSelection_SAFELANE_VALUE = 0;
    /**
     * <code>k_ELaneSelection_OFFLANE = 1;</code>
     */
    public static final int k_ELaneSelection_OFFLANE_VALUE = 1;
    /**
     * <code>k_ELaneSelection_MIDLANE = 2;</code>
     */
    public static final int k_ELaneSelection_MIDLANE_VALUE = 2;
    /**
     * <code>k_ELaneSelection_SUPPORT = 3;</code>
     */
    public static final int k_ELaneSelection_SUPPORT_VALUE = 3;
    /**
     * <code>k_ELaneSelection_HARDSUPPORT = 4;</code>
     */
    public static final int k_ELaneSelection_HARDSUPPORT_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELaneSelection valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELaneSelection forNumber(int value) {
      switch (value) {
        case 0: return k_ELaneSelection_SAFELANE;
        case 1: return k_ELaneSelection_OFFLANE;
        case 2: return k_ELaneSelection_MIDLANE;
        case 3: return k_ELaneSelection_SUPPORT;
        case 4: return k_ELaneSelection_HARDSUPPORT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELaneSelection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELaneSelection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELaneSelection>() {
            public ELaneSelection findValueByNumber(int number) {
              return ELaneSelection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(0);
    }

    private static final ELaneSelection[] VALUES = values();

    public static ELaneSelection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELaneSelection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ELaneSelection)
  }

  /**
   * Protobuf enum {@code ELaneSelectionFlags}
   */
  public enum ELaneSelectionFlags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ELaneSelectionFlags_SAFELANE = 1;</code>
     */
    k_ELaneSelectionFlags_SAFELANE(1),
    /**
     * <code>k_ELaneSelectionFlags_OFFLANE = 2;</code>
     */
    k_ELaneSelectionFlags_OFFLANE(2),
    /**
     * <code>k_ELaneSelectionFlags_MIDLANE = 4;</code>
     */
    k_ELaneSelectionFlags_MIDLANE(4),
    /**
     * <code>k_ELaneSelectionFlags_SUPPORT = 8;</code>
     */
    k_ELaneSelectionFlags_SUPPORT(8),
    /**
     * <code>k_ELaneSelectionFlags_HARDSUPPORT = 16;</code>
     */
    k_ELaneSelectionFlags_HARDSUPPORT(16),
    /**
     * <code>k_ELaneSelectionFlagGroup_None = 0;</code>
     */
    k_ELaneSelectionFlagGroup_None(0),
    /**
     * <code>k_ELaneSelectionFlagGroup_CORE = 7;</code>
     */
    k_ELaneSelectionFlagGroup_CORE(7),
    /**
     * <code>k_ELaneSelectionFlagGroup_SUPPORT = 24;</code>
     */
    k_ELaneSelectionFlagGroup_SUPPORT(24),
    /**
     * <code>k_ELaneSelectionFlagGroup_ALL = 31;</code>
     */
    k_ELaneSelectionFlagGroup_ALL(31),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        ELaneSelectionFlags.class.getName());
    }
    /**
     * <code>k_ELaneSelectionFlags_SAFELANE = 1;</code>
     */
    public static final int k_ELaneSelectionFlags_SAFELANE_VALUE = 1;
    /**
     * <code>k_ELaneSelectionFlags_OFFLANE = 2;</code>
     */
    public static final int k_ELaneSelectionFlags_OFFLANE_VALUE = 2;
    /**
     * <code>k_ELaneSelectionFlags_MIDLANE = 4;</code>
     */
    public static final int k_ELaneSelectionFlags_MIDLANE_VALUE = 4;
    /**
     * <code>k_ELaneSelectionFlags_SUPPORT = 8;</code>
     */
    public static final int k_ELaneSelectionFlags_SUPPORT_VALUE = 8;
    /**
     * <code>k_ELaneSelectionFlags_HARDSUPPORT = 16;</code>
     */
    public static final int k_ELaneSelectionFlags_HARDSUPPORT_VALUE = 16;
    /**
     * <code>k_ELaneSelectionFlagGroup_None = 0;</code>
     */
    public static final int k_ELaneSelectionFlagGroup_None_VALUE = 0;
    /**
     * <code>k_ELaneSelectionFlagGroup_CORE = 7;</code>
     */
    public static final int k_ELaneSelectionFlagGroup_CORE_VALUE = 7;
    /**
     * <code>k_ELaneSelectionFlagGroup_SUPPORT = 24;</code>
     */
    public static final int k_ELaneSelectionFlagGroup_SUPPORT_VALUE = 24;
    /**
     * <code>k_ELaneSelectionFlagGroup_ALL = 31;</code>
     */
    public static final int k_ELaneSelectionFlagGroup_ALL_VALUE = 31;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELaneSelectionFlags valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELaneSelectionFlags forNumber(int value) {
      switch (value) {
        case 1: return k_ELaneSelectionFlags_SAFELANE;
        case 2: return k_ELaneSelectionFlags_OFFLANE;
        case 4: return k_ELaneSelectionFlags_MIDLANE;
        case 8: return k_ELaneSelectionFlags_SUPPORT;
        case 16: return k_ELaneSelectionFlags_HARDSUPPORT;
        case 0: return k_ELaneSelectionFlagGroup_None;
        case 7: return k_ELaneSelectionFlagGroup_CORE;
        case 24: return k_ELaneSelectionFlagGroup_SUPPORT;
        case 31: return k_ELaneSelectionFlagGroup_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELaneSelectionFlags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELaneSelectionFlags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELaneSelectionFlags>() {
            public ELaneSelectionFlags findValueByNumber(int number) {
              return ELaneSelectionFlags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(1);
    }

    private static final ELaneSelectionFlags[] VALUES = values();

    public static ELaneSelectionFlags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELaneSelectionFlags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ELaneSelectionFlags)
  }

  /**
   * Protobuf enum {@code EPartyMatchmakingFlags}
   */
  public enum EPartyMatchmakingFlags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EPartyMatchmakingFlags_None = 0;</code>
     */
    k_EPartyMatchmakingFlags_None(0),
    /**
     * <code>k_EPartyMatchmakingFlags_LargeRankSpread = 1;</code>
     */
    k_EPartyMatchmakingFlags_LargeRankSpread(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        EPartyMatchmakingFlags.class.getName());
    }
    /**
     * <code>k_EPartyMatchmakingFlags_None = 0;</code>
     */
    public static final int k_EPartyMatchmakingFlags_None_VALUE = 0;
    /**
     * <code>k_EPartyMatchmakingFlags_LargeRankSpread = 1;</code>
     */
    public static final int k_EPartyMatchmakingFlags_LargeRankSpread_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EPartyMatchmakingFlags valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EPartyMatchmakingFlags forNumber(int value) {
      switch (value) {
        case 0: return k_EPartyMatchmakingFlags_None;
        case 1: return k_EPartyMatchmakingFlags_LargeRankSpread;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EPartyMatchmakingFlags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EPartyMatchmakingFlags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EPartyMatchmakingFlags>() {
            public EPartyMatchmakingFlags findValueByNumber(int number) {
              return EPartyMatchmakingFlags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(2);
    }

    private static final EPartyMatchmakingFlags[] VALUES = values();

    public static EPartyMatchmakingFlags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EPartyMatchmakingFlags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EPartyMatchmakingFlags)
  }

  /**
   * Protobuf enum {@code EHighPriorityMMState}
   */
  public enum EHighPriorityMMState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EHighPriorityMM_Unknown = 0;</code>
     */
    k_EHighPriorityMM_Unknown(0),
    /**
     * <code>k_EHighPriorityMM_MissingMMData = 1;</code>
     */
    k_EHighPriorityMM_MissingMMData(1),
    /**
     * <code>k_EHighPriorityMM_ResourceMissing = 2;</code>
     */
    k_EHighPriorityMM_ResourceMissing(2),
    /**
     * <code>k_EHighPriorityMM_ManuallyDisabled = 3;</code>
     */
    k_EHighPriorityMM_ManuallyDisabled(3),
    /**
     * <code>k_EHighPriorityMM_Min_Enabled = 64;</code>
     */
    k_EHighPriorityMM_Min_Enabled(64),
    /**
     * <code>k_EHighPriorityMM_AllRolesSelected = 65;</code>
     */
    k_EHighPriorityMM_AllRolesSelected(65),
    /**
     * <code>k_EHighPriorityMM_UsingResource = 66;</code>
     */
    k_EHighPriorityMM_UsingResource(66),
    /**
     * <code>k_EHighPriorityMM_FiveStack = 67;</code>
     */
    k_EHighPriorityMM_FiveStack(67),
    /**
     * <code>k_EHighPriorityMM_HighDemand = 68;</code>
     */
    k_EHighPriorityMM_HighDemand(68),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        EHighPriorityMMState.class.getName());
    }
    /**
     * <code>k_EHighPriorityMM_Unknown = 0;</code>
     */
    public static final int k_EHighPriorityMM_Unknown_VALUE = 0;
    /**
     * <code>k_EHighPriorityMM_MissingMMData = 1;</code>
     */
    public static final int k_EHighPriorityMM_MissingMMData_VALUE = 1;
    /**
     * <code>k_EHighPriorityMM_ResourceMissing = 2;</code>
     */
    public static final int k_EHighPriorityMM_ResourceMissing_VALUE = 2;
    /**
     * <code>k_EHighPriorityMM_ManuallyDisabled = 3;</code>
     */
    public static final int k_EHighPriorityMM_ManuallyDisabled_VALUE = 3;
    /**
     * <code>k_EHighPriorityMM_Min_Enabled = 64;</code>
     */
    public static final int k_EHighPriorityMM_Min_Enabled_VALUE = 64;
    /**
     * <code>k_EHighPriorityMM_AllRolesSelected = 65;</code>
     */
    public static final int k_EHighPriorityMM_AllRolesSelected_VALUE = 65;
    /**
     * <code>k_EHighPriorityMM_UsingResource = 66;</code>
     */
    public static final int k_EHighPriorityMM_UsingResource_VALUE = 66;
    /**
     * <code>k_EHighPriorityMM_FiveStack = 67;</code>
     */
    public static final int k_EHighPriorityMM_FiveStack_VALUE = 67;
    /**
     * <code>k_EHighPriorityMM_HighDemand = 68;</code>
     */
    public static final int k_EHighPriorityMM_HighDemand_VALUE = 68;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EHighPriorityMMState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EHighPriorityMMState forNumber(int value) {
      switch (value) {
        case 0: return k_EHighPriorityMM_Unknown;
        case 1: return k_EHighPriorityMM_MissingMMData;
        case 2: return k_EHighPriorityMM_ResourceMissing;
        case 3: return k_EHighPriorityMM_ManuallyDisabled;
        case 64: return k_EHighPriorityMM_Min_Enabled;
        case 65: return k_EHighPriorityMM_AllRolesSelected;
        case 66: return k_EHighPriorityMM_UsingResource;
        case 67: return k_EHighPriorityMM_FiveStack;
        case 68: return k_EHighPriorityMM_HighDemand;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EHighPriorityMMState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EHighPriorityMMState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EHighPriorityMMState>() {
            public EHighPriorityMMState findValueByNumber(int number) {
              return EHighPriorityMMState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(3);
    }

    private static final EHighPriorityMMState[] VALUES = values();

    public static EHighPriorityMMState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EHighPriorityMMState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EHighPriorityMMState)
  }

  /**
   * Protobuf enum {@code EReadyCheckStatus}
   */
  public enum EReadyCheckStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EReadyCheckStatus_Unknown = 0;</code>
     */
    k_EReadyCheckStatus_Unknown(0),
    /**
     * <code>k_EReadyCheckStatus_NotReady = 1;</code>
     */
    k_EReadyCheckStatus_NotReady(1),
    /**
     * <code>k_EReadyCheckStatus_Ready = 2;</code>
     */
    k_EReadyCheckStatus_Ready(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        EReadyCheckStatus.class.getName());
    }
    /**
     * <code>k_EReadyCheckStatus_Unknown = 0;</code>
     */
    public static final int k_EReadyCheckStatus_Unknown_VALUE = 0;
    /**
     * <code>k_EReadyCheckStatus_NotReady = 1;</code>
     */
    public static final int k_EReadyCheckStatus_NotReady_VALUE = 1;
    /**
     * <code>k_EReadyCheckStatus_Ready = 2;</code>
     */
    public static final int k_EReadyCheckStatus_Ready_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EReadyCheckStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EReadyCheckStatus forNumber(int value) {
      switch (value) {
        case 0: return k_EReadyCheckStatus_Unknown;
        case 1: return k_EReadyCheckStatus_NotReady;
        case 2: return k_EReadyCheckStatus_Ready;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EReadyCheckStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EReadyCheckStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EReadyCheckStatus>() {
            public EReadyCheckStatus findValueByNumber(int number) {
              return EReadyCheckStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(4);
    }

    private static final EReadyCheckStatus[] VALUES = values();

    public static EReadyCheckStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EReadyCheckStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EReadyCheckStatus)
  }

  /**
   * Protobuf enum {@code EReadyCheckRequestResult}
   */
  public enum EReadyCheckRequestResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EReadyCheckRequestResult_Success = 0;</code>
     */
    k_EReadyCheckRequestResult_Success(0),
    /**
     * <code>k_EReadyCheckRequestResult_AlreadyInProgress = 1;</code>
     */
    k_EReadyCheckRequestResult_AlreadyInProgress(1),
    /**
     * <code>k_EReadyCheckRequestResult_NotInParty = 2;</code>
     */
    k_EReadyCheckRequestResult_NotInParty(2),
    /**
     * <code>k_EReadyCheckRequestResult_SendError = 3;</code>
     */
    k_EReadyCheckRequestResult_SendError(3),
    /**
     * <code>k_EReadyCheckRequestResult_UnknownError = 4;</code>
     */
    k_EReadyCheckRequestResult_UnknownError(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        EReadyCheckRequestResult.class.getName());
    }
    /**
     * <code>k_EReadyCheckRequestResult_Success = 0;</code>
     */
    public static final int k_EReadyCheckRequestResult_Success_VALUE = 0;
    /**
     * <code>k_EReadyCheckRequestResult_AlreadyInProgress = 1;</code>
     */
    public static final int k_EReadyCheckRequestResult_AlreadyInProgress_VALUE = 1;
    /**
     * <code>k_EReadyCheckRequestResult_NotInParty = 2;</code>
     */
    public static final int k_EReadyCheckRequestResult_NotInParty_VALUE = 2;
    /**
     * <code>k_EReadyCheckRequestResult_SendError = 3;</code>
     */
    public static final int k_EReadyCheckRequestResult_SendError_VALUE = 3;
    /**
     * <code>k_EReadyCheckRequestResult_UnknownError = 4;</code>
     */
    public static final int k_EReadyCheckRequestResult_UnknownError_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EReadyCheckRequestResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EReadyCheckRequestResult forNumber(int value) {
      switch (value) {
        case 0: return k_EReadyCheckRequestResult_Success;
        case 1: return k_EReadyCheckRequestResult_AlreadyInProgress;
        case 2: return k_EReadyCheckRequestResult_NotInParty;
        case 3: return k_EReadyCheckRequestResult_SendError;
        case 4: return k_EReadyCheckRequestResult_UnknownError;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EReadyCheckRequestResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EReadyCheckRequestResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EReadyCheckRequestResult>() {
            public EReadyCheckRequestResult findValueByNumber(int number) {
              return EReadyCheckRequestResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(5);
    }

    private static final EReadyCheckRequestResult[] VALUES = values();

    public static EReadyCheckRequestResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EReadyCheckRequestResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EReadyCheckRequestResult)
  }

  /**
   * Protobuf enum {@code EMatchBehaviorScoreVariance}
   */
  public enum EMatchBehaviorScoreVariance
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchBehaviorScoreVariance_Invalid = 0;</code>
     */
    k_EMatchBehaviorScoreVariance_Invalid(0),
    /**
     * <code>k_EMatchBehaviorScoreVariance_Low = 1;</code>
     */
    k_EMatchBehaviorScoreVariance_Low(1),
    /**
     * <code>k_EMatchBehaviorScoreVariance_Medium = 2;</code>
     */
    k_EMatchBehaviorScoreVariance_Medium(2),
    /**
     * <code>k_EMatchBehaviorScoreVariance_High = 3;</code>
     */
    k_EMatchBehaviorScoreVariance_High(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        EMatchBehaviorScoreVariance.class.getName());
    }
    /**
     * <code>k_EMatchBehaviorScoreVariance_Invalid = 0;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_Invalid_VALUE = 0;
    /**
     * <code>k_EMatchBehaviorScoreVariance_Low = 1;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_Low_VALUE = 1;
    /**
     * <code>k_EMatchBehaviorScoreVariance_Medium = 2;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_Medium_VALUE = 2;
    /**
     * <code>k_EMatchBehaviorScoreVariance_High = 3;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_High_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMatchBehaviorScoreVariance valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EMatchBehaviorScoreVariance forNumber(int value) {
      switch (value) {
        case 0: return k_EMatchBehaviorScoreVariance_Invalid;
        case 1: return k_EMatchBehaviorScoreVariance_Low;
        case 2: return k_EMatchBehaviorScoreVariance_Medium;
        case 3: return k_EMatchBehaviorScoreVariance_High;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchBehaviorScoreVariance>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMatchBehaviorScoreVariance> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchBehaviorScoreVariance>() {
            public EMatchBehaviorScoreVariance findValueByNumber(int number) {
              return EMatchBehaviorScoreVariance.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.getDescriptor().getEnumTypes().get(6);
    }

    private static final EMatchBehaviorScoreVariance[] VALUES = values();

    public static EMatchBehaviorScoreVariance valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EMatchBehaviorScoreVariance(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMatchBehaviorScoreVariance)
  }

  public interface CSODOTAPartyMemberOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSODOTAPartyMember)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool is_coach = 2;</code>
     * @return Whether the isCoach field is set.
     */
    boolean hasIsCoach();
    /**
     * <code>optional bool is_coach = 2;</code>
     * @return The isCoach.
     */
    boolean getIsCoach();

    /**
     * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
     * @return A list containing the regionPingCodes.
     */
    java.util.List<java.lang.Integer> getRegionPingCodesList();
    /**
     * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
     * @return The count of regionPingCodes.
     */
    int getRegionPingCodesCount();
    /**
     * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The regionPingCodes at the given index.
     */
    int getRegionPingCodes(int index);

    /**
     * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
     * @return A list containing the regionPingTimes.
     */
    java.util.List<java.lang.Integer> getRegionPingTimesList();
    /**
     * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
     * @return The count of regionPingTimes.
     */
    int getRegionPingTimesCount();
    /**
     * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The regionPingTimes at the given index.
     */
    int getRegionPingTimes(int index);

    /**
     * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
     * @return Whether the regionPingFailedBitmask field is set.
     */
    boolean hasRegionPingFailedBitmask();
    /**
     * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
     * @return The regionPingFailedBitmask.
     */
    int getRegionPingFailedBitmask();

    /**
     * <code>optional bool is_plus_subscriber = 10;</code>
     * @return Whether the isPlusSubscriber field is set.
     */
    boolean hasIsPlusSubscriber();
    /**
     * <code>optional bool is_plus_subscriber = 10;</code>
     * @return The isPlusSubscriber.
     */
    boolean getIsPlusSubscriber();

    /**
     * <code>optional uint32 tourney_skill_level = 7;</code>
     * @return Whether the tourneySkillLevel field is set.
     */
    boolean hasTourneySkillLevel();
    /**
     * <code>optional uint32 tourney_skill_level = 7;</code>
     * @return The tourneySkillLevel.
     */
    int getTourneySkillLevel();

    /**
     * <code>optional uint32 tourney_buyin = 8;</code>
     * @return Whether the tourneyBuyin field is set.
     */
    boolean hasTourneyBuyin();
    /**
     * <code>optional uint32 tourney_buyin = 8;</code>
     * @return The tourneyBuyin.
     */
    int getTourneyBuyin();

    /**
     * <code>optional uint32 tourney_prevent_until = 9;</code>
     * @return Whether the tourneyPreventUntil field is set.
     */
    boolean hasTourneyPreventUntil();
    /**
     * <code>optional uint32 tourney_prevent_until = 9;</code>
     * @return The tourneyPreventUntil.
     */
    int getTourneyPreventUntil();

    /**
     * <code>optional bool mm_data_valid = 13;</code>
     * @return Whether the mmDataValid field is set.
     */
    boolean hasMmDataValid();
    /**
     * <code>optional bool mm_data_valid = 13;</code>
     * @return The mmDataValid.
     */
    boolean getMmDataValid();

    /**
     * <code>optional uint32 lane_selection_flags = 11;</code>
     * @return Whether the laneSelectionFlags field is set.
     */
    boolean hasLaneSelectionFlags();
    /**
     * <code>optional uint32 lane_selection_flags = 11;</code>
     * @return The laneSelectionFlags.
     */
    int getLaneSelectionFlags();

    /**
     * <code>optional bool high_priority_disabled = 14;</code>
     * @return Whether the highPriorityDisabled field is set.
     */
    boolean hasHighPriorityDisabled();
    /**
     * <code>optional bool high_priority_disabled = 14;</code>
     * @return The highPriorityDisabled.
     */
    boolean getHighPriorityDisabled();

    /**
     * <code>optional bool has_hp_resource = 15;</code>
     * @return Whether the hasHpResource field is set.
     */
    boolean hasHasHpResource();
    /**
     * <code>optional bool has_hp_resource = 15;</code>
     * @return The hasHpResource.
     */
    boolean getHasHpResource();

    /**
     * <code>optional bool joined_from_partyfinder = 12;</code>
     * @return Whether the joinedFromPartyfinder field is set.
     */
    boolean hasJoinedFromPartyfinder();
    /**
     * <code>optional bool joined_from_partyfinder = 12;</code>
     * @return The joinedFromPartyfinder.
     */
    boolean getJoinedFromPartyfinder();

    /**
     * <code>optional bool is_steam_china = 16;</code>
     * @return Whether the isSteamChina field is set.
     */
    boolean hasIsSteamChina();
    /**
     * <code>optional bool is_steam_china = 16;</code>
     * @return The isSteamChina.
     */
    boolean getIsSteamChina();

    /**
     * <code>repeated int32 banned_hero_ids = 17;</code>
     * @return A list containing the bannedHeroIds.
     */
    java.util.List<java.lang.Integer> getBannedHeroIdsList();
    /**
     * <code>repeated int32 banned_hero_ids = 17;</code>
     * @return The count of bannedHeroIds.
     */
    int getBannedHeroIdsCount();
    /**
     * <code>repeated int32 banned_hero_ids = 17;</code>
     * @param index The index of the element to return.
     * @return The bannedHeroIds at the given index.
     */
    int getBannedHeroIds(int index);
  }
  /**
   * Protobuf type {@code CSODOTAPartyMember}
   */
  public static final class CSODOTAPartyMember extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CSODOTAPartyMember)
      CSODOTAPartyMemberOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CSODOTAPartyMember.class.getName());
    }
    // Use CSODOTAPartyMember.newBuilder() to construct.
    private CSODOTAPartyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSODOTAPartyMember() {
      regionPingCodes_ = emptyIntList();
      regionPingTimes_ = emptyIntList();
      bannedHeroIds_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyMember_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyMember_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder.class);
    }

    private int bitField0_;
    public static final int IS_COACH_FIELD_NUMBER = 2;
    private boolean isCoach_ = false;
    /**
     * <code>optional bool is_coach = 2;</code>
     * @return Whether the isCoach field is set.
     */
    @java.lang.Override
    public boolean hasIsCoach() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool is_coach = 2;</code>
     * @return The isCoach.
     */
    @java.lang.Override
    public boolean getIsCoach() {
      return isCoach_;
    }

    public static final int REGION_PING_CODES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList regionPingCodes_ =
        emptyIntList();
    /**
     * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
     * @return A list containing the regionPingCodes.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRegionPingCodesList() {
      return regionPingCodes_;
    }
    /**
     * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
     * @return The count of regionPingCodes.
     */
    public int getRegionPingCodesCount() {
      return regionPingCodes_.size();
    }
    /**
     * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The regionPingCodes at the given index.
     */
    public int getRegionPingCodes(int index) {
      return regionPingCodes_.getInt(index);
    }
    private int regionPingCodesMemoizedSerializedSize = -1;

    public static final int REGION_PING_TIMES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList regionPingTimes_ =
        emptyIntList();
    /**
     * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
     * @return A list containing the regionPingTimes.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRegionPingTimesList() {
      return regionPingTimes_;
    }
    /**
     * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
     * @return The count of regionPingTimes.
     */
    public int getRegionPingTimesCount() {
      return regionPingTimes_.size();
    }
    /**
     * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The regionPingTimes at the given index.
     */
    public int getRegionPingTimes(int index) {
      return regionPingTimes_.getInt(index);
    }
    private int regionPingTimesMemoizedSerializedSize = -1;

    public static final int REGION_PING_FAILED_BITMASK_FIELD_NUMBER = 6;
    private int regionPingFailedBitmask_ = 0;
    /**
     * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
     * @return Whether the regionPingFailedBitmask field is set.
     */
    @java.lang.Override
    public boolean hasRegionPingFailedBitmask() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
     * @return The regionPingFailedBitmask.
     */
    @java.lang.Override
    public int getRegionPingFailedBitmask() {
      return regionPingFailedBitmask_;
    }

    public static final int IS_PLUS_SUBSCRIBER_FIELD_NUMBER = 10;
    private boolean isPlusSubscriber_ = false;
    /**
     * <code>optional bool is_plus_subscriber = 10;</code>
     * @return Whether the isPlusSubscriber field is set.
     */
    @java.lang.Override
    public boolean hasIsPlusSubscriber() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool is_plus_subscriber = 10;</code>
     * @return The isPlusSubscriber.
     */
    @java.lang.Override
    public boolean getIsPlusSubscriber() {
      return isPlusSubscriber_;
    }

    public static final int TOURNEY_SKILL_LEVEL_FIELD_NUMBER = 7;
    private int tourneySkillLevel_ = 0;
    /**
     * <code>optional uint32 tourney_skill_level = 7;</code>
     * @return Whether the tourneySkillLevel field is set.
     */
    @java.lang.Override
    public boolean hasTourneySkillLevel() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 tourney_skill_level = 7;</code>
     * @return The tourneySkillLevel.
     */
    @java.lang.Override
    public int getTourneySkillLevel() {
      return tourneySkillLevel_;
    }

    public static final int TOURNEY_BUYIN_FIELD_NUMBER = 8;
    private int tourneyBuyin_ = 0;
    /**
     * <code>optional uint32 tourney_buyin = 8;</code>
     * @return Whether the tourneyBuyin field is set.
     */
    @java.lang.Override
    public boolean hasTourneyBuyin() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 tourney_buyin = 8;</code>
     * @return The tourneyBuyin.
     */
    @java.lang.Override
    public int getTourneyBuyin() {
      return tourneyBuyin_;
    }

    public static final int TOURNEY_PREVENT_UNTIL_FIELD_NUMBER = 9;
    private int tourneyPreventUntil_ = 0;
    /**
     * <code>optional uint32 tourney_prevent_until = 9;</code>
     * @return Whether the tourneyPreventUntil field is set.
     */
    @java.lang.Override
    public boolean hasTourneyPreventUntil() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 tourney_prevent_until = 9;</code>
     * @return The tourneyPreventUntil.
     */
    @java.lang.Override
    public int getTourneyPreventUntil() {
      return tourneyPreventUntil_;
    }

    public static final int MM_DATA_VALID_FIELD_NUMBER = 13;
    private boolean mmDataValid_ = false;
    /**
     * <code>optional bool mm_data_valid = 13;</code>
     * @return Whether the mmDataValid field is set.
     */
    @java.lang.Override
    public boolean hasMmDataValid() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool mm_data_valid = 13;</code>
     * @return The mmDataValid.
     */
    @java.lang.Override
    public boolean getMmDataValid() {
      return mmDataValid_;
    }

    public static final int LANE_SELECTION_FLAGS_FIELD_NUMBER = 11;
    private int laneSelectionFlags_ = 0;
    /**
     * <code>optional uint32 lane_selection_flags = 11;</code>
     * @return Whether the laneSelectionFlags field is set.
     */
    @java.lang.Override
    public boolean hasLaneSelectionFlags() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 lane_selection_flags = 11;</code>
     * @return The laneSelectionFlags.
     */
    @java.lang.Override
    public int getLaneSelectionFlags() {
      return laneSelectionFlags_;
    }

    public static final int HIGH_PRIORITY_DISABLED_FIELD_NUMBER = 14;
    private boolean highPriorityDisabled_ = false;
    /**
     * <code>optional bool high_priority_disabled = 14;</code>
     * @return Whether the highPriorityDisabled field is set.
     */
    @java.lang.Override
    public boolean hasHighPriorityDisabled() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool high_priority_disabled = 14;</code>
     * @return The highPriorityDisabled.
     */
    @java.lang.Override
    public boolean getHighPriorityDisabled() {
      return highPriorityDisabled_;
    }

    public static final int HAS_HP_RESOURCE_FIELD_NUMBER = 15;
    private boolean hasHpResource_ = false;
    /**
     * <code>optional bool has_hp_resource = 15;</code>
     * @return Whether the hasHpResource field is set.
     */
    @java.lang.Override
    public boolean hasHasHpResource() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool has_hp_resource = 15;</code>
     * @return The hasHpResource.
     */
    @java.lang.Override
    public boolean getHasHpResource() {
      return hasHpResource_;
    }

    public static final int JOINED_FROM_PARTYFINDER_FIELD_NUMBER = 12;
    private boolean joinedFromPartyfinder_ = false;
    /**
     * <code>optional bool joined_from_partyfinder = 12;</code>
     * @return Whether the joinedFromPartyfinder field is set.
     */
    @java.lang.Override
    public boolean hasJoinedFromPartyfinder() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional bool joined_from_partyfinder = 12;</code>
     * @return The joinedFromPartyfinder.
     */
    @java.lang.Override
    public boolean getJoinedFromPartyfinder() {
      return joinedFromPartyfinder_;
    }

    public static final int IS_STEAM_CHINA_FIELD_NUMBER = 16;
    private boolean isSteamChina_ = false;
    /**
     * <code>optional bool is_steam_china = 16;</code>
     * @return Whether the isSteamChina field is set.
     */
    @java.lang.Override
    public boolean hasIsSteamChina() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional bool is_steam_china = 16;</code>
     * @return The isSteamChina.
     */
    @java.lang.Override
    public boolean getIsSteamChina() {
      return isSteamChina_;
    }

    public static final int BANNED_HERO_IDS_FIELD_NUMBER = 17;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList bannedHeroIds_ =
        emptyIntList();
    /**
     * <code>repeated int32 banned_hero_ids = 17;</code>
     * @return A list containing the bannedHeroIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getBannedHeroIdsList() {
      return bannedHeroIds_;
    }
    /**
     * <code>repeated int32 banned_hero_ids = 17;</code>
     * @return The count of bannedHeroIds.
     */
    public int getBannedHeroIdsCount() {
      return bannedHeroIds_.size();
    }
    /**
     * <code>repeated int32 banned_hero_ids = 17;</code>
     * @param index The index of the element to return.
     * @return The bannedHeroIds at the given index.
     */
    public int getBannedHeroIds(int index) {
      return bannedHeroIds_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(2, isCoach_);
      }
      if (getRegionPingCodesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(regionPingCodesMemoizedSerializedSize);
      }
      for (int i = 0; i < regionPingCodes_.size(); i++) {
        output.writeUInt32NoTag(regionPingCodes_.getInt(i));
      }
      if (getRegionPingTimesList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(regionPingTimesMemoizedSerializedSize);
      }
      for (int i = 0; i < regionPingTimes_.size(); i++) {
        output.writeUInt32NoTag(regionPingTimes_.getInt(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(6, regionPingFailedBitmask_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(7, tourneySkillLevel_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(8, tourneyBuyin_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(9, tourneyPreventUntil_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(10, isPlusSubscriber_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(11, laneSelectionFlags_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeBool(12, joinedFromPartyfinder_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(13, mmDataValid_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(14, highPriorityDisabled_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(15, hasHpResource_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(16, isSteamChina_);
      }
      for (int i = 0; i < bannedHeroIds_.size(); i++) {
        output.writeInt32(17, bannedHeroIds_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isCoach_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < regionPingCodes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(regionPingCodes_.getInt(i));
        }
        size += dataSize;
        if (!getRegionPingCodesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        regionPingCodesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < regionPingTimes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(regionPingTimes_.getInt(i));
        }
        size += dataSize;
        if (!getRegionPingTimesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        regionPingTimesMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, regionPingFailedBitmask_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, tourneySkillLevel_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, tourneyBuyin_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, tourneyPreventUntil_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isPlusSubscriber_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, laneSelectionFlags_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, joinedFromPartyfinder_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, mmDataValid_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, highPriorityDisabled_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, hasHpResource_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, isSteamChina_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bannedHeroIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bannedHeroIds_.getInt(i));
        }
        size += dataSize;
        size += 2 * getBannedHeroIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember) obj;

      if (hasIsCoach() != other.hasIsCoach()) return false;
      if (hasIsCoach()) {
        if (getIsCoach()
            != other.getIsCoach()) return false;
      }
      if (!getRegionPingCodesList()
          .equals(other.getRegionPingCodesList())) return false;
      if (!getRegionPingTimesList()
          .equals(other.getRegionPingTimesList())) return false;
      if (hasRegionPingFailedBitmask() != other.hasRegionPingFailedBitmask()) return false;
      if (hasRegionPingFailedBitmask()) {
        if (getRegionPingFailedBitmask()
            != other.getRegionPingFailedBitmask()) return false;
      }
      if (hasIsPlusSubscriber() != other.hasIsPlusSubscriber()) return false;
      if (hasIsPlusSubscriber()) {
        if (getIsPlusSubscriber()
            != other.getIsPlusSubscriber()) return false;
      }
      if (hasTourneySkillLevel() != other.hasTourneySkillLevel()) return false;
      if (hasTourneySkillLevel()) {
        if (getTourneySkillLevel()
            != other.getTourneySkillLevel()) return false;
      }
      if (hasTourneyBuyin() != other.hasTourneyBuyin()) return false;
      if (hasTourneyBuyin()) {
        if (getTourneyBuyin()
            != other.getTourneyBuyin()) return false;
      }
      if (hasTourneyPreventUntil() != other.hasTourneyPreventUntil()) return false;
      if (hasTourneyPreventUntil()) {
        if (getTourneyPreventUntil()
            != other.getTourneyPreventUntil()) return false;
      }
      if (hasMmDataValid() != other.hasMmDataValid()) return false;
      if (hasMmDataValid()) {
        if (getMmDataValid()
            != other.getMmDataValid()) return false;
      }
      if (hasLaneSelectionFlags() != other.hasLaneSelectionFlags()) return false;
      if (hasLaneSelectionFlags()) {
        if (getLaneSelectionFlags()
            != other.getLaneSelectionFlags()) return false;
      }
      if (hasHighPriorityDisabled() != other.hasHighPriorityDisabled()) return false;
      if (hasHighPriorityDisabled()) {
        if (getHighPriorityDisabled()
            != other.getHighPriorityDisabled()) return false;
      }
      if (hasHasHpResource() != other.hasHasHpResource()) return false;
      if (hasHasHpResource()) {
        if (getHasHpResource()
            != other.getHasHpResource()) return false;
      }
      if (hasJoinedFromPartyfinder() != other.hasJoinedFromPartyfinder()) return false;
      if (hasJoinedFromPartyfinder()) {
        if (getJoinedFromPartyfinder()
            != other.getJoinedFromPartyfinder()) return false;
      }
      if (hasIsSteamChina() != other.hasIsSteamChina()) return false;
      if (hasIsSteamChina()) {
        if (getIsSteamChina()
            != other.getIsSteamChina()) return false;
      }
      if (!getBannedHeroIdsList()
          .equals(other.getBannedHeroIdsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIsCoach()) {
        hash = (37 * hash) + IS_COACH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsCoach());
      }
      if (getRegionPingCodesCount() > 0) {
        hash = (37 * hash) + REGION_PING_CODES_FIELD_NUMBER;
        hash = (53 * hash) + getRegionPingCodesList().hashCode();
      }
      if (getRegionPingTimesCount() > 0) {
        hash = (37 * hash) + REGION_PING_TIMES_FIELD_NUMBER;
        hash = (53 * hash) + getRegionPingTimesList().hashCode();
      }
      if (hasRegionPingFailedBitmask()) {
        hash = (37 * hash) + REGION_PING_FAILED_BITMASK_FIELD_NUMBER;
        hash = (53 * hash) + getRegionPingFailedBitmask();
      }
      if (hasIsPlusSubscriber()) {
        hash = (37 * hash) + IS_PLUS_SUBSCRIBER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsPlusSubscriber());
      }
      if (hasTourneySkillLevel()) {
        hash = (37 * hash) + TOURNEY_SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getTourneySkillLevel();
      }
      if (hasTourneyBuyin()) {
        hash = (37 * hash) + TOURNEY_BUYIN_FIELD_NUMBER;
        hash = (53 * hash) + getTourneyBuyin();
      }
      if (hasTourneyPreventUntil()) {
        hash = (37 * hash) + TOURNEY_PREVENT_UNTIL_FIELD_NUMBER;
        hash = (53 * hash) + getTourneyPreventUntil();
      }
      if (hasMmDataValid()) {
        hash = (37 * hash) + MM_DATA_VALID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMmDataValid());
      }
      if (hasLaneSelectionFlags()) {
        hash = (37 * hash) + LANE_SELECTION_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getLaneSelectionFlags();
      }
      if (hasHighPriorityDisabled()) {
        hash = (37 * hash) + HIGH_PRIORITY_DISABLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHighPriorityDisabled());
      }
      if (hasHasHpResource()) {
        hash = (37 * hash) + HAS_HP_RESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHasHpResource());
      }
      if (hasJoinedFromPartyfinder()) {
        hash = (37 * hash) + JOINED_FROM_PARTYFINDER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getJoinedFromPartyfinder());
      }
      if (hasIsSteamChina()) {
        hash = (37 * hash) + IS_STEAM_CHINA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsSteamChina());
      }
      if (getBannedHeroIdsCount() > 0) {
        hash = (37 * hash) + BANNED_HERO_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getBannedHeroIdsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAPartyMember}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSODOTAPartyMember)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyMember_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        isCoach_ = false;
        regionPingCodes_ = emptyIntList();
        regionPingTimes_ = emptyIntList();
        regionPingFailedBitmask_ = 0;
        isPlusSubscriber_ = false;
        tourneySkillLevel_ = 0;
        tourneyBuyin_ = 0;
        tourneyPreventUntil_ = 0;
        mmDataValid_ = false;
        laneSelectionFlags_ = 0;
        highPriorityDisabled_ = false;
        hasHpResource_ = false;
        joinedFromPartyfinder_ = false;
        isSteamChina_ = false;
        bannedHeroIds_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyMember_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.isCoach_ = isCoach_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          regionPingCodes_.makeImmutable();
          result.regionPingCodes_ = regionPingCodes_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          regionPingTimes_.makeImmutable();
          result.regionPingTimes_ = regionPingTimes_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.regionPingFailedBitmask_ = regionPingFailedBitmask_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.isPlusSubscriber_ = isPlusSubscriber_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.tourneySkillLevel_ = tourneySkillLevel_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.tourneyBuyin_ = tourneyBuyin_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.tourneyPreventUntil_ = tourneyPreventUntil_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.mmDataValid_ = mmDataValid_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.laneSelectionFlags_ = laneSelectionFlags_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.highPriorityDisabled_ = highPriorityDisabled_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.hasHpResource_ = hasHpResource_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.joinedFromPartyfinder_ = joinedFromPartyfinder_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.isSteamChina_ = isSteamChina_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          bannedHeroIds_.makeImmutable();
          result.bannedHeroIds_ = bannedHeroIds_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.getDefaultInstance()) return this;
        if (other.hasIsCoach()) {
          setIsCoach(other.getIsCoach());
        }
        if (!other.regionPingCodes_.isEmpty()) {
          if (regionPingCodes_.isEmpty()) {
            regionPingCodes_ = other.regionPingCodes_;
            regionPingCodes_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureRegionPingCodesIsMutable();
            regionPingCodes_.addAll(other.regionPingCodes_);
          }
          onChanged();
        }
        if (!other.regionPingTimes_.isEmpty()) {
          if (regionPingTimes_.isEmpty()) {
            regionPingTimes_ = other.regionPingTimes_;
            regionPingTimes_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureRegionPingTimesIsMutable();
            regionPingTimes_.addAll(other.regionPingTimes_);
          }
          onChanged();
        }
        if (other.hasRegionPingFailedBitmask()) {
          setRegionPingFailedBitmask(other.getRegionPingFailedBitmask());
        }
        if (other.hasIsPlusSubscriber()) {
          setIsPlusSubscriber(other.getIsPlusSubscriber());
        }
        if (other.hasTourneySkillLevel()) {
          setTourneySkillLevel(other.getTourneySkillLevel());
        }
        if (other.hasTourneyBuyin()) {
          setTourneyBuyin(other.getTourneyBuyin());
        }
        if (other.hasTourneyPreventUntil()) {
          setTourneyPreventUntil(other.getTourneyPreventUntil());
        }
        if (other.hasMmDataValid()) {
          setMmDataValid(other.getMmDataValid());
        }
        if (other.hasLaneSelectionFlags()) {
          setLaneSelectionFlags(other.getLaneSelectionFlags());
        }
        if (other.hasHighPriorityDisabled()) {
          setHighPriorityDisabled(other.getHighPriorityDisabled());
        }
        if (other.hasHasHpResource()) {
          setHasHpResource(other.getHasHpResource());
        }
        if (other.hasJoinedFromPartyfinder()) {
          setJoinedFromPartyfinder(other.getJoinedFromPartyfinder());
        }
        if (other.hasIsSteamChina()) {
          setIsSteamChina(other.getIsSteamChina());
        }
        if (!other.bannedHeroIds_.isEmpty()) {
          if (bannedHeroIds_.isEmpty()) {
            bannedHeroIds_ = other.bannedHeroIds_;
            bannedHeroIds_.makeImmutable();
            bitField0_ |= 0x00004000;
          } else {
            ensureBannedHeroIdsIsMutable();
            bannedHeroIds_.addAll(other.bannedHeroIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16: {
                isCoach_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 16
              case 32: {
                int v = input.readUInt32();
                ensureRegionPingCodesIsMutable();
                regionPingCodes_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRegionPingCodesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  regionPingCodes_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                int v = input.readUInt32();
                ensureRegionPingTimesIsMutable();
                regionPingTimes_.addInt(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRegionPingTimesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  regionPingTimes_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 48: {
                regionPingFailedBitmask_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 48
              case 56: {
                tourneySkillLevel_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 56
              case 64: {
                tourneyBuyin_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 64
              case 72: {
                tourneyPreventUntil_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 72
              case 80: {
                isPlusSubscriber_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 80
              case 88: {
                laneSelectionFlags_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 88
              case 96: {
                joinedFromPartyfinder_ = input.readBool();
                bitField0_ |= 0x00001000;
                break;
              } // case 96
              case 104: {
                mmDataValid_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 104
              case 112: {
                highPriorityDisabled_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 112
              case 120: {
                hasHpResource_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 120
              case 128: {
                isSteamChina_ = input.readBool();
                bitField0_ |= 0x00002000;
                break;
              } // case 128
              case 136: {
                int v = input.readInt32();
                ensureBannedHeroIdsIsMutable();
                bannedHeroIds_.addInt(v);
                break;
              } // case 136
              case 138: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureBannedHeroIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  bannedHeroIds_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 138
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean isCoach_ ;
      /**
       * <code>optional bool is_coach = 2;</code>
       * @return Whether the isCoach field is set.
       */
      @java.lang.Override
      public boolean hasIsCoach() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool is_coach = 2;</code>
       * @return The isCoach.
       */
      @java.lang.Override
      public boolean getIsCoach() {
        return isCoach_;
      }
      /**
       * <code>optional bool is_coach = 2;</code>
       * @param value The isCoach to set.
       * @return This builder for chaining.
       */
      public Builder setIsCoach(boolean value) {

        isCoach_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_coach = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsCoach() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isCoach_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList regionPingCodes_ = emptyIntList();
      private void ensureRegionPingCodesIsMutable() {
        if (!regionPingCodes_.isModifiable()) {
          regionPingCodes_ = makeMutableCopy(regionPingCodes_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @return A list containing the regionPingCodes.
       */
      public java.util.List<java.lang.Integer>
          getRegionPingCodesList() {
        regionPingCodes_.makeImmutable();
        return regionPingCodes_;
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @return The count of regionPingCodes.
       */
      public int getRegionPingCodesCount() {
        return regionPingCodes_.size();
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The regionPingCodes at the given index.
       */
      public int getRegionPingCodes(int index) {
        return regionPingCodes_.getInt(index);
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The regionPingCodes to set.
       * @return This builder for chaining.
       */
      public Builder setRegionPingCodes(
          int index, int value) {

        ensureRegionPingCodesIsMutable();
        regionPingCodes_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @param value The regionPingCodes to add.
       * @return This builder for chaining.
       */
      public Builder addRegionPingCodes(int value) {

        ensureRegionPingCodesIsMutable();
        regionPingCodes_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @param values The regionPingCodes to add.
       * @return This builder for chaining.
       */
      public Builder addAllRegionPingCodes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRegionPingCodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, regionPingCodes_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 region_ping_codes = 4 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearRegionPingCodes() {
        regionPingCodes_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList regionPingTimes_ = emptyIntList();
      private void ensureRegionPingTimesIsMutable() {
        if (!regionPingTimes_.isModifiable()) {
          regionPingTimes_ = makeMutableCopy(regionPingTimes_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @return A list containing the regionPingTimes.
       */
      public java.util.List<java.lang.Integer>
          getRegionPingTimesList() {
        regionPingTimes_.makeImmutable();
        return regionPingTimes_;
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @return The count of regionPingTimes.
       */
      public int getRegionPingTimesCount() {
        return regionPingTimes_.size();
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The regionPingTimes at the given index.
       */
      public int getRegionPingTimes(int index) {
        return regionPingTimes_.getInt(index);
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The regionPingTimes to set.
       * @return This builder for chaining.
       */
      public Builder setRegionPingTimes(
          int index, int value) {

        ensureRegionPingTimesIsMutable();
        regionPingTimes_.setInt(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @param value The regionPingTimes to add.
       * @return This builder for chaining.
       */
      public Builder addRegionPingTimes(int value) {

        ensureRegionPingTimesIsMutable();
        regionPingTimes_.addInt(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @param values The regionPingTimes to add.
       * @return This builder for chaining.
       */
      public Builder addAllRegionPingTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRegionPingTimesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, regionPingTimes_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 region_ping_times = 5 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearRegionPingTimes() {
        regionPingTimes_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int regionPingFailedBitmask_ ;
      /**
       * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
       * @return Whether the regionPingFailedBitmask field is set.
       */
      @java.lang.Override
      public boolean hasRegionPingFailedBitmask() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
       * @return The regionPingFailedBitmask.
       */
      @java.lang.Override
      public int getRegionPingFailedBitmask() {
        return regionPingFailedBitmask_;
      }
      /**
       * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
       * @param value The regionPingFailedBitmask to set.
       * @return This builder for chaining.
       */
      public Builder setRegionPingFailedBitmask(int value) {

        regionPingFailedBitmask_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 region_ping_failed_bitmask = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegionPingFailedBitmask() {
        bitField0_ = (bitField0_ & ~0x00000008);
        regionPingFailedBitmask_ = 0;
        onChanged();
        return this;
      }

      private boolean isPlusSubscriber_ ;
      /**
       * <code>optional bool is_plus_subscriber = 10;</code>
       * @return Whether the isPlusSubscriber field is set.
       */
      @java.lang.Override
      public boolean hasIsPlusSubscriber() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool is_plus_subscriber = 10;</code>
       * @return The isPlusSubscriber.
       */
      @java.lang.Override
      public boolean getIsPlusSubscriber() {
        return isPlusSubscriber_;
      }
      /**
       * <code>optional bool is_plus_subscriber = 10;</code>
       * @param value The isPlusSubscriber to set.
       * @return This builder for chaining.
       */
      public Builder setIsPlusSubscriber(boolean value) {

        isPlusSubscriber_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_plus_subscriber = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPlusSubscriber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isPlusSubscriber_ = false;
        onChanged();
        return this;
      }

      private int tourneySkillLevel_ ;
      /**
       * <code>optional uint32 tourney_skill_level = 7;</code>
       * @return Whether the tourneySkillLevel field is set.
       */
      @java.lang.Override
      public boolean hasTourneySkillLevel() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 tourney_skill_level = 7;</code>
       * @return The tourneySkillLevel.
       */
      @java.lang.Override
      public int getTourneySkillLevel() {
        return tourneySkillLevel_;
      }
      /**
       * <code>optional uint32 tourney_skill_level = 7;</code>
       * @param value The tourneySkillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTourneySkillLevel(int value) {

        tourneySkillLevel_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_skill_level = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneySkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tourneySkillLevel_ = 0;
        onChanged();
        return this;
      }

      private int tourneyBuyin_ ;
      /**
       * <code>optional uint32 tourney_buyin = 8;</code>
       * @return Whether the tourneyBuyin field is set.
       */
      @java.lang.Override
      public boolean hasTourneyBuyin() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 tourney_buyin = 8;</code>
       * @return The tourneyBuyin.
       */
      @java.lang.Override
      public int getTourneyBuyin() {
        return tourneyBuyin_;
      }
      /**
       * <code>optional uint32 tourney_buyin = 8;</code>
       * @param value The tourneyBuyin to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyBuyin(int value) {

        tourneyBuyin_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_buyin = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyBuyin() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tourneyBuyin_ = 0;
        onChanged();
        return this;
      }

      private int tourneyPreventUntil_ ;
      /**
       * <code>optional uint32 tourney_prevent_until = 9;</code>
       * @return Whether the tourneyPreventUntil field is set.
       */
      @java.lang.Override
      public boolean hasTourneyPreventUntil() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 tourney_prevent_until = 9;</code>
       * @return The tourneyPreventUntil.
       */
      @java.lang.Override
      public int getTourneyPreventUntil() {
        return tourneyPreventUntil_;
      }
      /**
       * <code>optional uint32 tourney_prevent_until = 9;</code>
       * @param value The tourneyPreventUntil to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyPreventUntil(int value) {

        tourneyPreventUntil_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_prevent_until = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyPreventUntil() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tourneyPreventUntil_ = 0;
        onChanged();
        return this;
      }

      private boolean mmDataValid_ ;
      /**
       * <code>optional bool mm_data_valid = 13;</code>
       * @return Whether the mmDataValid field is set.
       */
      @java.lang.Override
      public boolean hasMmDataValid() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool mm_data_valid = 13;</code>
       * @return The mmDataValid.
       */
      @java.lang.Override
      public boolean getMmDataValid() {
        return mmDataValid_;
      }
      /**
       * <code>optional bool mm_data_valid = 13;</code>
       * @param value The mmDataValid to set.
       * @return This builder for chaining.
       */
      public Builder setMmDataValid(boolean value) {

        mmDataValid_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool mm_data_valid = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMmDataValid() {
        bitField0_ = (bitField0_ & ~0x00000100);
        mmDataValid_ = false;
        onChanged();
        return this;
      }

      private int laneSelectionFlags_ ;
      /**
       * <code>optional uint32 lane_selection_flags = 11;</code>
       * @return Whether the laneSelectionFlags field is set.
       */
      @java.lang.Override
      public boolean hasLaneSelectionFlags() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 lane_selection_flags = 11;</code>
       * @return The laneSelectionFlags.
       */
      @java.lang.Override
      public int getLaneSelectionFlags() {
        return laneSelectionFlags_;
      }
      /**
       * <code>optional uint32 lane_selection_flags = 11;</code>
       * @param value The laneSelectionFlags to set.
       * @return This builder for chaining.
       */
      public Builder setLaneSelectionFlags(int value) {

        laneSelectionFlags_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lane_selection_flags = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneSelectionFlags() {
        bitField0_ = (bitField0_ & ~0x00000200);
        laneSelectionFlags_ = 0;
        onChanged();
        return this;
      }

      private boolean highPriorityDisabled_ ;
      /**
       * <code>optional bool high_priority_disabled = 14;</code>
       * @return Whether the highPriorityDisabled field is set.
       */
      @java.lang.Override
      public boolean hasHighPriorityDisabled() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool high_priority_disabled = 14;</code>
       * @return The highPriorityDisabled.
       */
      @java.lang.Override
      public boolean getHighPriorityDisabled() {
        return highPriorityDisabled_;
      }
      /**
       * <code>optional bool high_priority_disabled = 14;</code>
       * @param value The highPriorityDisabled to set.
       * @return This builder for chaining.
       */
      public Builder setHighPriorityDisabled(boolean value) {

        highPriorityDisabled_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool high_priority_disabled = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighPriorityDisabled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        highPriorityDisabled_ = false;
        onChanged();
        return this;
      }

      private boolean hasHpResource_ ;
      /**
       * <code>optional bool has_hp_resource = 15;</code>
       * @return Whether the hasHpResource field is set.
       */
      @java.lang.Override
      public boolean hasHasHpResource() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional bool has_hp_resource = 15;</code>
       * @return The hasHpResource.
       */
      @java.lang.Override
      public boolean getHasHpResource() {
        return hasHpResource_;
      }
      /**
       * <code>optional bool has_hp_resource = 15;</code>
       * @param value The hasHpResource to set.
       * @return This builder for chaining.
       */
      public Builder setHasHpResource(boolean value) {

        hasHpResource_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_hp_resource = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasHpResource() {
        bitField0_ = (bitField0_ & ~0x00000800);
        hasHpResource_ = false;
        onChanged();
        return this;
      }

      private boolean joinedFromPartyfinder_ ;
      /**
       * <code>optional bool joined_from_partyfinder = 12;</code>
       * @return Whether the joinedFromPartyfinder field is set.
       */
      @java.lang.Override
      public boolean hasJoinedFromPartyfinder() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional bool joined_from_partyfinder = 12;</code>
       * @return The joinedFromPartyfinder.
       */
      @java.lang.Override
      public boolean getJoinedFromPartyfinder() {
        return joinedFromPartyfinder_;
      }
      /**
       * <code>optional bool joined_from_partyfinder = 12;</code>
       * @param value The joinedFromPartyfinder to set.
       * @return This builder for chaining.
       */
      public Builder setJoinedFromPartyfinder(boolean value) {

        joinedFromPartyfinder_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool joined_from_partyfinder = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearJoinedFromPartyfinder() {
        bitField0_ = (bitField0_ & ~0x00001000);
        joinedFromPartyfinder_ = false;
        onChanged();
        return this;
      }

      private boolean isSteamChina_ ;
      /**
       * <code>optional bool is_steam_china = 16;</code>
       * @return Whether the isSteamChina field is set.
       */
      @java.lang.Override
      public boolean hasIsSteamChina() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional bool is_steam_china = 16;</code>
       * @return The isSteamChina.
       */
      @java.lang.Override
      public boolean getIsSteamChina() {
        return isSteamChina_;
      }
      /**
       * <code>optional bool is_steam_china = 16;</code>
       * @param value The isSteamChina to set.
       * @return This builder for chaining.
       */
      public Builder setIsSteamChina(boolean value) {

        isSteamChina_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_steam_china = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSteamChina() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isSteamChina_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList bannedHeroIds_ = emptyIntList();
      private void ensureBannedHeroIdsIsMutable() {
        if (!bannedHeroIds_.isModifiable()) {
          bannedHeroIds_ = makeMutableCopy(bannedHeroIds_);
        }
        bitField0_ |= 0x00004000;
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @return A list containing the bannedHeroIds.
       */
      public java.util.List<java.lang.Integer>
          getBannedHeroIdsList() {
        bannedHeroIds_.makeImmutable();
        return bannedHeroIds_;
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @return The count of bannedHeroIds.
       */
      public int getBannedHeroIdsCount() {
        return bannedHeroIds_.size();
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @param index The index of the element to return.
       * @return The bannedHeroIds at the given index.
       */
      public int getBannedHeroIds(int index) {
        return bannedHeroIds_.getInt(index);
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @param index The index to set the value at.
       * @param value The bannedHeroIds to set.
       * @return This builder for chaining.
       */
      public Builder setBannedHeroIds(
          int index, int value) {

        ensureBannedHeroIdsIsMutable();
        bannedHeroIds_.setInt(index, value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @param value The bannedHeroIds to add.
       * @return This builder for chaining.
       */
      public Builder addBannedHeroIds(int value) {

        ensureBannedHeroIdsIsMutable();
        bannedHeroIds_.addInt(value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @param values The bannedHeroIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllBannedHeroIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBannedHeroIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bannedHeroIds_);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banned_hero_ids = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearBannedHeroIds() {
        bannedHeroIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAPartyMember)
    }

    // @@protoc_insertion_point(class_scope:CSODOTAPartyMember)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSODOTAPartyMember>
        PARSER = new com.google.protobuf.AbstractParser<CSODOTAPartyMember>() {
      @java.lang.Override
      public CSODOTAPartyMember parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSODOTAPartyMember> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAPartyMember> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSODOTAPartyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSODOTAParty)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
     * @return Whether the partyId field is set.
     */
    boolean hasPartyId();
    /**
     * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
     * @return The partyId.
     */
    long getPartyId();

    /**
     * <code>optional fixed64 leader_id = 2;</code>
     * @return Whether the leaderId field is set.
     */
    boolean hasLeaderId();
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     * @return The leaderId.
     */
    long getLeaderId();

    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     * @return A list containing the memberIds.
     */
    java.util.List<java.lang.Long> getMemberIdsList();
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     * @return The count of memberIds.
     */
    int getMemberIdsCount();
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     * @param index The index of the element to return.
     * @return The memberIds at the given index.
     */
    long getMemberIds(int index);

    /**
     * <code>optional uint32 game_modes = 4;</code>
     * @return Whether the gameModes field is set.
     */
    boolean hasGameModes();
    /**
     * <code>optional uint32 game_modes = 4;</code>
     * @return The gameModes.
     */
    int getGameModes();

    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     * @return Whether the state field is set.
     */
    boolean hasState();
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     * @return The state.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State getState();

    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     * @return Whether the effectiveStartedMatchmakingTime field is set.
     */
    boolean hasEffectiveStartedMatchmakingTime();
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     * @return The effectiveStartedMatchmakingTime.
     */
    int getEffectiveStartedMatchmakingTime();

    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     * @return Whether the rawStartedMatchmakingTime field is set.
     */
    boolean hasRawStartedMatchmakingTime();
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     * @return The rawStartedMatchmakingTime.
     */
    int getRawStartedMatchmakingTime();

    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     * @return Whether the attemptStartTime field is set.
     */
    boolean hasAttemptStartTime();
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     * @return The attemptStartTime.
     */
    int getAttemptStartTime();

    /**
     * <code>optional uint32 attempt_num = 34;</code>
     * @return Whether the attemptNum field is set.
     */
    boolean hasAttemptNum();
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     * @return The attemptNum.
     */
    int getAttemptNum();

    /**
     * <code>optional uint32 matchgroups = 11;</code>
     * @return Whether the matchgroups field is set.
     */
    boolean hasMatchgroups();
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     * @return The matchgroups.
     */
    int getMatchgroups();

    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     * @return Whether the lowPriorityAccountId field is set.
     */
    boolean hasLowPriorityAccountId();
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     * @return The lowPriorityAccountId.
     */
    int getLowPriorityAccountId();

    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     * @return Whether the matchType field is set.
     */
    boolean hasMatchType();
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     * @return The matchType.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType getMatchType();

    /**
     * <code>optional uint32 team_id = 23;</code>
     * @return Whether the teamId field is set.
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 23;</code>
     * @return The teamId.
     */
    int getTeamId();

    /**
     * <code>optional string team_name = 51;</code>
     * @return Whether the teamName field is set.
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 51;</code>
     * @return The teamName.
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 51;</code>
     * @return The bytes for teamName.
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 team_ui_logo = 52;</code>
     * @return Whether the teamUiLogo field is set.
     */
    boolean hasTeamUiLogo();
    /**
     * <code>optional uint64 team_ui_logo = 52;</code>
     * @return The teamUiLogo.
     */
    long getTeamUiLogo();

    /**
     * <code>optional uint64 team_base_logo = 53;</code>
     * @return Whether the teamBaseLogo field is set.
     */
    boolean hasTeamBaseLogo();
    /**
     * <code>optional uint64 team_base_logo = 53;</code>
     * @return The teamBaseLogo.
     */
    long getTeamBaseLogo();

    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     * @return Whether the matchDisabledUntilDate field is set.
     */
    boolean hasMatchDisabledUntilDate();
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     * @return The matchDisabledUntilDate.
     */
    int getMatchDisabledUntilDate();

    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     * @return Whether the matchDisabledAccountId field is set.
     */
    boolean hasMatchDisabledAccountId();
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     * @return The matchDisabledAccountId.
     */
    int getMatchDisabledAccountId();

    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     * @return Whether the matchmakingMaxRangeMinutes field is set.
     */
    boolean hasMatchmakingMaxRangeMinutes();
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     * @return The matchmakingMaxRangeMinutes.
     */
    int getMatchmakingMaxRangeMinutes();

    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     * @return Whether the matchlanguages field is set.
     */
    boolean hasMatchlanguages();
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     * @return The matchlanguages.
     */
    int getMatchlanguages();

    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember> 
        getMembersList();
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember getMembers(int index);
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder getMembersOrBuilder(
        int index);

    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     * @return Whether the lowPriorityGamesRemaining field is set.
     */
    boolean hasLowPriorityGamesRemaining();
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     * @return The lowPriorityGamesRemaining.
     */
    int getLowPriorityGamesRemaining();

    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     * @return Whether the openForJoinRequests field is set.
     */
    boolean hasOpenForJoinRequests();
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     * @return The openForJoinRequests.
     */
    boolean getOpenForJoinRequests();

    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> 
        getSentInvitesList();
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getSentInvites(int index);
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    int getSentInvitesCount();
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
        getSentInvitesOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder getSentInvitesOrBuilder(
        int index);

    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> 
        getRecvInvitesList();
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getRecvInvites(int index);
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    int getRecvInvitesCount();
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
        getRecvInvitesOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder getRecvInvitesOrBuilder(
        int index);

    /**
     * <code>optional uint32 account_flags = 43;</code>
     * @return Whether the accountFlags field is set.
     */
    boolean hasAccountFlags();
    /**
     * <code>optional uint32 account_flags = 43;</code>
     * @return The accountFlags.
     */
    int getAccountFlags();

    /**
     * <code>optional uint32 region_select_flags = 44;</code>
     * @return Whether the regionSelectFlags field is set.
     */
    boolean hasRegionSelectFlags();
    /**
     * <code>optional uint32 region_select_flags = 44;</code>
     * @return The regionSelectFlags.
     */
    int getRegionSelectFlags();

    /**
     * <code>optional uint32 exclusive_tournament_id = 45;</code>
     * @return Whether the exclusiveTournamentId field is set.
     */
    boolean hasExclusiveTournamentId();
    /**
     * <code>optional uint32 exclusive_tournament_id = 45;</code>
     * @return The exclusiveTournamentId.
     */
    int getExclusiveTournamentId();

    /**
     * <code>optional uint32 tourney_division_id = 47;</code>
     * @return Whether the tourneyDivisionId field is set.
     */
    boolean hasTourneyDivisionId();
    /**
     * <code>optional uint32 tourney_division_id = 47;</code>
     * @return The tourneyDivisionId.
     */
    int getTourneyDivisionId();

    /**
     * <code>optional uint32 tourney_schedule_time = 48;</code>
     * @return Whether the tourneyScheduleTime field is set.
     */
    boolean hasTourneyScheduleTime();
    /**
     * <code>optional uint32 tourney_schedule_time = 48;</code>
     * @return The tourneyScheduleTime.
     */
    int getTourneyScheduleTime();

    /**
     * <code>optional uint32 tourney_skill_level = 49;</code>
     * @return Whether the tourneySkillLevel field is set.
     */
    boolean hasTourneySkillLevel();
    /**
     * <code>optional uint32 tourney_skill_level = 49;</code>
     * @return The tourneySkillLevel.
     */
    int getTourneySkillLevel();

    /**
     * <code>optional uint32 tourney_bracket_round = 50;</code>
     * @return Whether the tourneyBracketRound field is set.
     */
    boolean hasTourneyBracketRound();
    /**
     * <code>optional uint32 tourney_bracket_round = 50;</code>
     * @return The tourneyBracketRound.
     */
    int getTourneyBracketRound();

    /**
     * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
     * @return Whether the tourneyQueueDeadlineTime field is set.
     */
    boolean hasTourneyQueueDeadlineTime();
    /**
     * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
     * @return The tourneyQueueDeadlineTime.
     */
    int getTourneyQueueDeadlineTime();

    /**
     * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
     * @return Whether the tourneyQueueDeadlineState field is set.
     */
    boolean hasTourneyQueueDeadlineState();
    /**
     * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
     * @return The tourneyQueueDeadlineState.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState getTourneyQueueDeadlineState();

    /**
     * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
     * @return Whether the partyBuilderSlotsToFill field is set.
     */
    boolean hasPartyBuilderSlotsToFill();
    /**
     * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
     * @return The partyBuilderSlotsToFill.
     */
    int getPartyBuilderSlotsToFill();

    /**
     * <code>optional uint32 party_builder_match_groups = 57;</code>
     * @return Whether the partyBuilderMatchGroups field is set.
     */
    boolean hasPartyBuilderMatchGroups();
    /**
     * <code>optional uint32 party_builder_match_groups = 57;</code>
     * @return The partyBuilderMatchGroups.
     */
    int getPartyBuilderMatchGroups();

    /**
     * <code>optional uint32 party_builder_start_time = 58;</code>
     * @return Whether the partyBuilderStartTime field is set.
     */
    boolean hasPartyBuilderStartTime();
    /**
     * <code>optional uint32 party_builder_start_time = 58;</code>
     * @return The partyBuilderStartTime.
     */
    int getPartyBuilderStartTime();

    /**
     * <code>optional bool solo_queue = 59;</code>
     * @return Whether the soloQueue field is set.
     */
    boolean hasSoloQueue();
    /**
     * <code>optional bool solo_queue = 59;</code>
     * @return The soloQueue.
     */
    boolean getSoloQueue();

    /**
     * <code>optional uint32 steam_clan_account_id = 61;</code>
     * @return Whether the steamClanAccountId field is set.
     */
    boolean hasSteamClanAccountId();
    /**
     * <code>optional uint32 steam_clan_account_id = 61;</code>
     * @return The steamClanAccountId.
     */
    int getSteamClanAccountId();

    /**
     * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
     * @return Whether the readyCheck field is set.
     */
    boolean hasReadyCheck();
    /**
     * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
     * @return The readyCheck.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus getReadyCheck();
    /**
     * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder getReadyCheckOrBuilder();

    /**
     * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
     * @return Whether the customGameDisabledUntilDate field is set.
     */
    boolean hasCustomGameDisabledUntilDate();
    /**
     * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
     * @return The customGameDisabledUntilDate.
     */
    int getCustomGameDisabledUntilDate();

    /**
     * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
     * @return Whether the customGameDisabledAccountId field is set.
     */
    boolean hasCustomGameDisabledAccountId();
    /**
     * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
     * @return The customGameDisabledAccountId.
     */
    int getCustomGameDisabledAccountId();

    /**
     * <code>optional bool is_challenge_match = 65;</code>
     * @return Whether the isChallengeMatch field is set.
     */
    boolean hasIsChallengeMatch();
    /**
     * <code>optional bool is_challenge_match = 65;</code>
     * @return The isChallengeMatch.
     */
    boolean getIsChallengeMatch();

    /**
     * <code>optional bool party_search_beacon_active = 66;</code>
     * @return Whether the partySearchBeaconActive field is set.
     */
    boolean hasPartySearchBeaconActive();
    /**
     * <code>optional bool party_search_beacon_active = 66;</code>
     * @return The partySearchBeaconActive.
     */
    boolean getPartySearchBeaconActive();

    /**
     * <code>optional uint32 matchmaking_flags = 67;</code>
     * @return Whether the matchmakingFlags field is set.
     */
    boolean hasMatchmakingFlags();
    /**
     * <code>optional uint32 matchmaking_flags = 67;</code>
     * @return The matchmakingFlags.
     */
    int getMatchmakingFlags();

    /**
     * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
     * @return Whether the highPriorityState field is set.
     */
    boolean hasHighPriorityState();
    /**
     * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
     * @return The highPriorityState.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState getHighPriorityState();

    /**
     * <code>optional bool lane_selections_enabled = 69;</code>
     * @return Whether the laneSelectionsEnabled field is set.
     */
    boolean hasLaneSelectionsEnabled();
    /**
     * <code>optional bool lane_selections_enabled = 69;</code>
     * @return The laneSelectionsEnabled.
     */
    boolean getLaneSelectionsEnabled();

    /**
     * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
     * @return Whether the customGameDifficultyMask field is set.
     */
    boolean hasCustomGameDifficultyMask();
    /**
     * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
     * @return The customGameDifficultyMask.
     */
    int getCustomGameDifficultyMask();

    /**
     * <code>optional bool is_steam_china = 71;</code>
     * @return Whether the isSteamChina field is set.
     */
    boolean hasIsSteamChina();
    /**
     * <code>optional bool is_steam_china = 71;</code>
     * @return The isSteamChina.
     */
    boolean getIsSteamChina();

    /**
     * <code>optional uint32 bot_difficulty_mask = 72;</code>
     * @return Whether the botDifficultyMask field is set.
     */
    boolean hasBotDifficultyMask();
    /**
     * <code>optional uint32 bot_difficulty_mask = 72;</code>
     * @return The botDifficultyMask.
     */
    int getBotDifficultyMask();

    /**
     * <code>optional uint32 bot_script_index_mask = 73;</code>
     * @return Whether the botScriptIndexMask field is set.
     */
    boolean hasBotScriptIndexMask();
    /**
     * <code>optional uint32 bot_script_index_mask = 73;</code>
     * @return The botScriptIndexMask.
     */
    int getBotScriptIndexMask();

    /**
     * <code>optional bool restricted_from_ranked = 74;</code>
     * @return Whether the restrictedFromRanked field is set.
     */
    boolean hasRestrictedFromRanked();
    /**
     * <code>optional bool restricted_from_ranked = 74;</code>
     * @return The restrictedFromRanked.
     */
    boolean getRestrictedFromRanked();

    /**
     * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
     * @return Whether the restrictedFromRankedAccountId field is set.
     */
    boolean hasRestrictedFromRankedAccountId();
    /**
     * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
     * @return The restrictedFromRankedAccountId.
     */
    int getRestrictedFromRankedAccountId();

    /**
     * <code>optional uint32 rank_spread_likert_scale = 76;</code>
     * @return Whether the rankSpreadLikertScale field is set.
     */
    boolean hasRankSpreadLikertScale();
    /**
     * <code>optional uint32 rank_spread_likert_scale = 76;</code>
     * @return The rankSpreadLikertScale.
     */
    int getRankSpreadLikertScale();

    /**
     * <code>optional uint32 behavior_score_likert_scale = 77;</code>
     * @return Whether the behaviorScoreLikertScale field is set.
     */
    boolean hasBehaviorScoreLikertScale();
    /**
     * <code>optional uint32 behavior_score_likert_scale = 77;</code>
     * @return The behaviorScoreLikertScale.
     */
    int getBehaviorScoreLikertScale();
  }
  /**
   * Protobuf type {@code CSODOTAParty}
   */
  public static final class CSODOTAParty extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CSODOTAParty)
      CSODOTAPartyOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CSODOTAParty.class.getName());
    }
    // Use CSODOTAParty.newBuilder() to construct.
    private CSODOTAParty(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSODOTAParty() {
      memberIds_ = emptyLongList();
      state_ = 0;
      matchType_ = 0;
      teamName_ = "";
      members_ = java.util.Collections.emptyList();
      sentInvites_ = java.util.Collections.emptyList();
      recvInvites_ = java.util.Collections.emptyList();
      tourneyQueueDeadlineState_ = 0;
      highPriorityState_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAParty_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAParty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.Builder.class);
    }

    /**
     * Protobuf enum {@code CSODOTAParty.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UI = 0;</code>
       */
      UI(0),
      /**
       * <code>FINDING_MATCH = 1;</code>
       */
      FINDING_MATCH(1),
      /**
       * <code>IN_MATCH = 2;</code>
       */
      IN_MATCH(2),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          State.class.getName());
      }
      /**
       * <code>UI = 0;</code>
       */
      public static final int UI_VALUE = 0;
      /**
       * <code>FINDING_MATCH = 1;</code>
       */
      public static final int FINDING_MATCH_VALUE = 1;
      /**
       * <code>IN_MATCH = 2;</code>
       */
      public static final int IN_MATCH_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static State valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static State forNumber(int value) {
        switch (value) {
          case 0: return UI;
          case 1: return FINDING_MATCH;
          case 2: return IN_MATCH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          State> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private State(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CSODOTAParty.State)
    }

    private int bitField0_;
    private int bitField1_;
    public static final int PARTY_ID_FIELD_NUMBER = 1;
    private long partyId_ = 0L;
    /**
     * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
     * @return Whether the partyId field is set.
     */
    @java.lang.Override
    public boolean hasPartyId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
     * @return The partyId.
     */
    @java.lang.Override
    public long getPartyId() {
      return partyId_;
    }

    public static final int LEADER_ID_FIELD_NUMBER = 2;
    private long leaderId_ = 0L;
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     * @return Whether the leaderId field is set.
     */
    @java.lang.Override
    public boolean hasLeaderId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     * @return The leaderId.
     */
    @java.lang.Override
    public long getLeaderId() {
      return leaderId_;
    }

    public static final int MEMBER_IDS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList memberIds_ =
        emptyLongList();
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     * @return A list containing the memberIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getMemberIdsList() {
      return memberIds_;
    }
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     * @return The count of memberIds.
     */
    public int getMemberIdsCount() {
      return memberIds_.size();
    }
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     * @param index The index of the element to return.
     * @return The memberIds at the given index.
     */
    public long getMemberIds(int index) {
      return memberIds_.getLong(index);
    }

    public static final int GAME_MODES_FIELD_NUMBER = 4;
    private int gameModes_ = 0;
    /**
     * <code>optional uint32 game_modes = 4;</code>
     * @return Whether the gameModes field is set.
     */
    @java.lang.Override
    public boolean hasGameModes() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 game_modes = 4;</code>
     * @return The gameModes.
     */
    @java.lang.Override
    public int getGameModes() {
      return gameModes_;
    }

    public static final int STATE_FIELD_NUMBER = 6;
    private int state_ = 0;
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override public boolean hasState() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     * @return The state.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State getState() {
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State.forNumber(state_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State.UI : result;
    }

    public static final int EFFECTIVE_STARTED_MATCHMAKING_TIME_FIELD_NUMBER = 7;
    private int effectiveStartedMatchmakingTime_ = 0;
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     * @return Whether the effectiveStartedMatchmakingTime field is set.
     */
    @java.lang.Override
    public boolean hasEffectiveStartedMatchmakingTime() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     * @return The effectiveStartedMatchmakingTime.
     */
    @java.lang.Override
    public int getEffectiveStartedMatchmakingTime() {
      return effectiveStartedMatchmakingTime_;
    }

    public static final int RAW_STARTED_MATCHMAKING_TIME_FIELD_NUMBER = 32;
    private int rawStartedMatchmakingTime_ = 0;
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     * @return Whether the rawStartedMatchmakingTime field is set.
     */
    @java.lang.Override
    public boolean hasRawStartedMatchmakingTime() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     * @return The rawStartedMatchmakingTime.
     */
    @java.lang.Override
    public int getRawStartedMatchmakingTime() {
      return rawStartedMatchmakingTime_;
    }

    public static final int ATTEMPT_START_TIME_FIELD_NUMBER = 33;
    private int attemptStartTime_ = 0;
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     * @return Whether the attemptStartTime field is set.
     */
    @java.lang.Override
    public boolean hasAttemptStartTime() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     * @return The attemptStartTime.
     */
    @java.lang.Override
    public int getAttemptStartTime() {
      return attemptStartTime_;
    }

    public static final int ATTEMPT_NUM_FIELD_NUMBER = 34;
    private int attemptNum_ = 0;
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     * @return Whether the attemptNum field is set.
     */
    @java.lang.Override
    public boolean hasAttemptNum() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     * @return The attemptNum.
     */
    @java.lang.Override
    public int getAttemptNum() {
      return attemptNum_;
    }

    public static final int MATCHGROUPS_FIELD_NUMBER = 11;
    private int matchgroups_ = 0;
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     * @return Whether the matchgroups field is set.
     */
    @java.lang.Override
    public boolean hasMatchgroups() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     * @return The matchgroups.
     */
    @java.lang.Override
    public int getMatchgroups() {
      return matchgroups_;
    }

    public static final int LOW_PRIORITY_ACCOUNT_ID_FIELD_NUMBER = 19;
    private int lowPriorityAccountId_ = 0;
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     * @return Whether the lowPriorityAccountId field is set.
     */
    @java.lang.Override
    public boolean hasLowPriorityAccountId() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     * @return The lowPriorityAccountId.
     */
    @java.lang.Override
    public int getLowPriorityAccountId() {
      return lowPriorityAccountId_;
    }

    public static final int MATCH_TYPE_FIELD_NUMBER = 21;
    private int matchType_ = 0;
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     * @return Whether the matchType field is set.
     */
    @java.lang.Override public boolean hasMatchType() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     * @return The matchType.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType getMatchType() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType result = kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType.forNumber(matchType_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType.MATCH_TYPE_CASUAL : result;
    }

    public static final int TEAM_ID_FIELD_NUMBER = 23;
    private int teamId_ = 0;
    /**
     * <code>optional uint32 team_id = 23;</code>
     * @return Whether the teamId field is set.
     */
    @java.lang.Override
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint32 team_id = 23;</code>
     * @return The teamId.
     */
    @java.lang.Override
    public int getTeamId() {
      return teamId_;
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 51;
    @SuppressWarnings("serial")
    private volatile java.lang.Object teamName_ = "";
    /**
     * <code>optional string team_name = 51;</code>
     * @return Whether the teamName field is set.
     */
    @java.lang.Override
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional string team_name = 51;</code>
     * @return The teamName.
     */
    @java.lang.Override
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 51;</code>
     * @return The bytes for teamName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_UI_LOGO_FIELD_NUMBER = 52;
    private long teamUiLogo_ = 0L;
    /**
     * <code>optional uint64 team_ui_logo = 52;</code>
     * @return Whether the teamUiLogo field is set.
     */
    @java.lang.Override
    public boolean hasTeamUiLogo() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional uint64 team_ui_logo = 52;</code>
     * @return The teamUiLogo.
     */
    @java.lang.Override
    public long getTeamUiLogo() {
      return teamUiLogo_;
    }

    public static final int TEAM_BASE_LOGO_FIELD_NUMBER = 53;
    private long teamBaseLogo_ = 0L;
    /**
     * <code>optional uint64 team_base_logo = 53;</code>
     * @return Whether the teamBaseLogo field is set.
     */
    @java.lang.Override
    public boolean hasTeamBaseLogo() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional uint64 team_base_logo = 53;</code>
     * @return The teamBaseLogo.
     */
    @java.lang.Override
    public long getTeamBaseLogo() {
      return teamBaseLogo_;
    }

    public static final int MATCH_DISABLED_UNTIL_DATE_FIELD_NUMBER = 24;
    private int matchDisabledUntilDate_ = 0;
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     * @return Whether the matchDisabledUntilDate field is set.
     */
    @java.lang.Override
    public boolean hasMatchDisabledUntilDate() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     * @return The matchDisabledUntilDate.
     */
    @java.lang.Override
    public int getMatchDisabledUntilDate() {
      return matchDisabledUntilDate_;
    }

    public static final int MATCH_DISABLED_ACCOUNT_ID_FIELD_NUMBER = 25;
    private int matchDisabledAccountId_ = 0;
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     * @return Whether the matchDisabledAccountId field is set.
     */
    @java.lang.Override
    public boolean hasMatchDisabledAccountId() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     * @return The matchDisabledAccountId.
     */
    @java.lang.Override
    public int getMatchDisabledAccountId() {
      return matchDisabledAccountId_;
    }

    public static final int MATCHMAKING_MAX_RANGE_MINUTES_FIELD_NUMBER = 26;
    private int matchmakingMaxRangeMinutes_ = 0;
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     * @return Whether the matchmakingMaxRangeMinutes field is set.
     */
    @java.lang.Override
    public boolean hasMatchmakingMaxRangeMinutes() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     * @return The matchmakingMaxRangeMinutes.
     */
    @java.lang.Override
    public int getMatchmakingMaxRangeMinutes() {
      return matchmakingMaxRangeMinutes_;
    }

    public static final int MATCHLANGUAGES_FIELD_NUMBER = 27;
    private int matchlanguages_ = 0;
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     * @return Whether the matchlanguages field is set.
     */
    @java.lang.Override
    public boolean hasMatchlanguages() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     * @return The matchlanguages.
     */
    @java.lang.Override
    public int getMatchlanguages() {
      return matchlanguages_;
    }

    public static final int MEMBERS_FIELD_NUMBER = 29;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember> members_;
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    @java.lang.Override
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    public static final int LOW_PRIORITY_GAMES_REMAINING_FIELD_NUMBER = 35;
    private int lowPriorityGamesRemaining_ = 0;
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     * @return Whether the lowPriorityGamesRemaining field is set.
     */
    @java.lang.Override
    public boolean hasLowPriorityGamesRemaining() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     * @return The lowPriorityGamesRemaining.
     */
    @java.lang.Override
    public int getLowPriorityGamesRemaining() {
      return lowPriorityGamesRemaining_;
    }

    public static final int OPEN_FOR_JOIN_REQUESTS_FIELD_NUMBER = 40;
    private boolean openForJoinRequests_ = false;
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     * @return Whether the openForJoinRequests field is set.
     */
    @java.lang.Override
    public boolean hasOpenForJoinRequests() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     * @return The openForJoinRequests.
     */
    @java.lang.Override
    public boolean getOpenForJoinRequests() {
      return openForJoinRequests_;
    }

    public static final int SENT_INVITES_FIELD_NUMBER = 41;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> sentInvites_;
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> getSentInvitesList() {
      return sentInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
        getSentInvitesOrBuilderList() {
      return sentInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    @java.lang.Override
    public int getSentInvitesCount() {
      return sentInvites_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getSentInvites(int index) {
      return sentInvites_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder getSentInvitesOrBuilder(
        int index) {
      return sentInvites_.get(index);
    }

    public static final int RECV_INVITES_FIELD_NUMBER = 42;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> recvInvites_;
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> getRecvInvitesList() {
      return recvInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
        getRecvInvitesOrBuilderList() {
      return recvInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    @java.lang.Override
    public int getRecvInvitesCount() {
      return recvInvites_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getRecvInvites(int index) {
      return recvInvites_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder getRecvInvitesOrBuilder(
        int index) {
      return recvInvites_.get(index);
    }

    public static final int ACCOUNT_FLAGS_FIELD_NUMBER = 43;
    private int accountFlags_ = 0;
    /**
     * <code>optional uint32 account_flags = 43;</code>
     * @return Whether the accountFlags field is set.
     */
    @java.lang.Override
    public boolean hasAccountFlags() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>optional uint32 account_flags = 43;</code>
     * @return The accountFlags.
     */
    @java.lang.Override
    public int getAccountFlags() {
      return accountFlags_;
    }

    public static final int REGION_SELECT_FLAGS_FIELD_NUMBER = 44;
    private int regionSelectFlags_ = 0;
    /**
     * <code>optional uint32 region_select_flags = 44;</code>
     * @return Whether the regionSelectFlags field is set.
     */
    @java.lang.Override
    public boolean hasRegionSelectFlags() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <code>optional uint32 region_select_flags = 44;</code>
     * @return The regionSelectFlags.
     */
    @java.lang.Override
    public int getRegionSelectFlags() {
      return regionSelectFlags_;
    }

    public static final int EXCLUSIVE_TOURNAMENT_ID_FIELD_NUMBER = 45;
    private int exclusiveTournamentId_ = 0;
    /**
     * <code>optional uint32 exclusive_tournament_id = 45;</code>
     * @return Whether the exclusiveTournamentId field is set.
     */
    @java.lang.Override
    public boolean hasExclusiveTournamentId() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <code>optional uint32 exclusive_tournament_id = 45;</code>
     * @return The exclusiveTournamentId.
     */
    @java.lang.Override
    public int getExclusiveTournamentId() {
      return exclusiveTournamentId_;
    }

    public static final int TOURNEY_DIVISION_ID_FIELD_NUMBER = 47;
    private int tourneyDivisionId_ = 0;
    /**
     * <code>optional uint32 tourney_division_id = 47;</code>
     * @return Whether the tourneyDivisionId field is set.
     */
    @java.lang.Override
    public boolean hasTourneyDivisionId() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <code>optional uint32 tourney_division_id = 47;</code>
     * @return The tourneyDivisionId.
     */
    @java.lang.Override
    public int getTourneyDivisionId() {
      return tourneyDivisionId_;
    }

    public static final int TOURNEY_SCHEDULE_TIME_FIELD_NUMBER = 48;
    private int tourneyScheduleTime_ = 0;
    /**
     * <code>optional uint32 tourney_schedule_time = 48;</code>
     * @return Whether the tourneyScheduleTime field is set.
     */
    @java.lang.Override
    public boolean hasTourneyScheduleTime() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <code>optional uint32 tourney_schedule_time = 48;</code>
     * @return The tourneyScheduleTime.
     */
    @java.lang.Override
    public int getTourneyScheduleTime() {
      return tourneyScheduleTime_;
    }

    public static final int TOURNEY_SKILL_LEVEL_FIELD_NUMBER = 49;
    private int tourneySkillLevel_ = 0;
    /**
     * <code>optional uint32 tourney_skill_level = 49;</code>
     * @return Whether the tourneySkillLevel field is set.
     */
    @java.lang.Override
    public boolean hasTourneySkillLevel() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <code>optional uint32 tourney_skill_level = 49;</code>
     * @return The tourneySkillLevel.
     */
    @java.lang.Override
    public int getTourneySkillLevel() {
      return tourneySkillLevel_;
    }

    public static final int TOURNEY_BRACKET_ROUND_FIELD_NUMBER = 50;
    private int tourneyBracketRound_ = 0;
    /**
     * <code>optional uint32 tourney_bracket_round = 50;</code>
     * @return Whether the tourneyBracketRound field is set.
     */
    @java.lang.Override
    public boolean hasTourneyBracketRound() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <code>optional uint32 tourney_bracket_round = 50;</code>
     * @return The tourneyBracketRound.
     */
    @java.lang.Override
    public int getTourneyBracketRound() {
      return tourneyBracketRound_;
    }

    public static final int TOURNEY_QUEUE_DEADLINE_TIME_FIELD_NUMBER = 54;
    private int tourneyQueueDeadlineTime_ = 0;
    /**
     * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
     * @return Whether the tourneyQueueDeadlineTime field is set.
     */
    @java.lang.Override
    public boolean hasTourneyQueueDeadlineTime() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
     * @return The tourneyQueueDeadlineTime.
     */
    @java.lang.Override
    public int getTourneyQueueDeadlineTime() {
      return tourneyQueueDeadlineTime_;
    }

    public static final int TOURNEY_QUEUE_DEADLINE_STATE_FIELD_NUMBER = 55;
    private int tourneyQueueDeadlineState_ = 0;
    /**
     * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
     * @return Whether the tourneyQueueDeadlineState field is set.
     */
    @java.lang.Override public boolean hasTourneyQueueDeadlineState() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
     * @return The tourneyQueueDeadlineState.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState getTourneyQueueDeadlineState() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState result = kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState.forNumber(tourneyQueueDeadlineState_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState.k_ETourneyQueueDeadlineState_Normal : result;
    }

    public static final int PARTY_BUILDER_SLOTS_TO_FILL_FIELD_NUMBER = 56;
    private int partyBuilderSlotsToFill_ = 0;
    /**
     * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
     * @return Whether the partyBuilderSlotsToFill field is set.
     */
    @java.lang.Override
    public boolean hasPartyBuilderSlotsToFill() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
     * @return The partyBuilderSlotsToFill.
     */
    @java.lang.Override
    public int getPartyBuilderSlotsToFill() {
      return partyBuilderSlotsToFill_;
    }

    public static final int PARTY_BUILDER_MATCH_GROUPS_FIELD_NUMBER = 57;
    private int partyBuilderMatchGroups_ = 0;
    /**
     * <code>optional uint32 party_builder_match_groups = 57;</code>
     * @return Whether the partyBuilderMatchGroups field is set.
     */
    @java.lang.Override
    public boolean hasPartyBuilderMatchGroups() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <code>optional uint32 party_builder_match_groups = 57;</code>
     * @return The partyBuilderMatchGroups.
     */
    @java.lang.Override
    public int getPartyBuilderMatchGroups() {
      return partyBuilderMatchGroups_;
    }

    public static final int PARTY_BUILDER_START_TIME_FIELD_NUMBER = 58;
    private int partyBuilderStartTime_ = 0;
    /**
     * <code>optional uint32 party_builder_start_time = 58;</code>
     * @return Whether the partyBuilderStartTime field is set.
     */
    @java.lang.Override
    public boolean hasPartyBuilderStartTime() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 party_builder_start_time = 58;</code>
     * @return The partyBuilderStartTime.
     */
    @java.lang.Override
    public int getPartyBuilderStartTime() {
      return partyBuilderStartTime_;
    }

    public static final int SOLO_QUEUE_FIELD_NUMBER = 59;
    private boolean soloQueue_ = false;
    /**
     * <code>optional bool solo_queue = 59;</code>
     * @return Whether the soloQueue field is set.
     */
    @java.lang.Override
    public boolean hasSoloQueue() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool solo_queue = 59;</code>
     * @return The soloQueue.
     */
    @java.lang.Override
    public boolean getSoloQueue() {
      return soloQueue_;
    }

    public static final int STEAM_CLAN_ACCOUNT_ID_FIELD_NUMBER = 61;
    private int steamClanAccountId_ = 0;
    /**
     * <code>optional uint32 steam_clan_account_id = 61;</code>
     * @return Whether the steamClanAccountId field is set.
     */
    @java.lang.Override
    public boolean hasSteamClanAccountId() {
      return ((bitField1_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 steam_clan_account_id = 61;</code>
     * @return The steamClanAccountId.
     */
    @java.lang.Override
    public int getSteamClanAccountId() {
      return steamClanAccountId_;
    }

    public static final int READY_CHECK_FIELD_NUMBER = 62;
    private kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus readyCheck_;
    /**
     * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
     * @return Whether the readyCheck field is set.
     */
    @java.lang.Override
    public boolean hasReadyCheck() {
      return ((bitField1_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
     * @return The readyCheck.
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus getReadyCheck() {
      return readyCheck_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance() : readyCheck_;
    }
    /**
     * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder getReadyCheckOrBuilder() {
      return readyCheck_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance() : readyCheck_;
    }

    public static final int CUSTOM_GAME_DISABLED_UNTIL_DATE_FIELD_NUMBER = 63;
    private int customGameDisabledUntilDate_ = 0;
    /**
     * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
     * @return Whether the customGameDisabledUntilDate field is set.
     */
    @java.lang.Override
    public boolean hasCustomGameDisabledUntilDate() {
      return ((bitField1_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
     * @return The customGameDisabledUntilDate.
     */
    @java.lang.Override
    public int getCustomGameDisabledUntilDate() {
      return customGameDisabledUntilDate_;
    }

    public static final int CUSTOM_GAME_DISABLED_ACCOUNT_ID_FIELD_NUMBER = 64;
    private int customGameDisabledAccountId_ = 0;
    /**
     * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
     * @return Whether the customGameDisabledAccountId field is set.
     */
    @java.lang.Override
    public boolean hasCustomGameDisabledAccountId() {
      return ((bitField1_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
     * @return The customGameDisabledAccountId.
     */
    @java.lang.Override
    public int getCustomGameDisabledAccountId() {
      return customGameDisabledAccountId_;
    }

    public static final int IS_CHALLENGE_MATCH_FIELD_NUMBER = 65;
    private boolean isChallengeMatch_ = false;
    /**
     * <code>optional bool is_challenge_match = 65;</code>
     * @return Whether the isChallengeMatch field is set.
     */
    @java.lang.Override
    public boolean hasIsChallengeMatch() {
      return ((bitField1_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool is_challenge_match = 65;</code>
     * @return The isChallengeMatch.
     */
    @java.lang.Override
    public boolean getIsChallengeMatch() {
      return isChallengeMatch_;
    }

    public static final int PARTY_SEARCH_BEACON_ACTIVE_FIELD_NUMBER = 66;
    private boolean partySearchBeaconActive_ = false;
    /**
     * <code>optional bool party_search_beacon_active = 66;</code>
     * @return Whether the partySearchBeaconActive field is set.
     */
    @java.lang.Override
    public boolean hasPartySearchBeaconActive() {
      return ((bitField1_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool party_search_beacon_active = 66;</code>
     * @return The partySearchBeaconActive.
     */
    @java.lang.Override
    public boolean getPartySearchBeaconActive() {
      return partySearchBeaconActive_;
    }

    public static final int MATCHMAKING_FLAGS_FIELD_NUMBER = 67;
    private int matchmakingFlags_ = 0;
    /**
     * <code>optional uint32 matchmaking_flags = 67;</code>
     * @return Whether the matchmakingFlags field is set.
     */
    @java.lang.Override
    public boolean hasMatchmakingFlags() {
      return ((bitField1_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 matchmaking_flags = 67;</code>
     * @return The matchmakingFlags.
     */
    @java.lang.Override
    public int getMatchmakingFlags() {
      return matchmakingFlags_;
    }

    public static final int HIGH_PRIORITY_STATE_FIELD_NUMBER = 68;
    private int highPriorityState_ = 0;
    /**
     * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
     * @return Whether the highPriorityState field is set.
     */
    @java.lang.Override public boolean hasHighPriorityState() {
      return ((bitField1_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
     * @return The highPriorityState.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState getHighPriorityState() {
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState.forNumber(highPriorityState_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState.k_EHighPriorityMM_Unknown : result;
    }

    public static final int LANE_SELECTIONS_ENABLED_FIELD_NUMBER = 69;
    private boolean laneSelectionsEnabled_ = false;
    /**
     * <code>optional bool lane_selections_enabled = 69;</code>
     * @return Whether the laneSelectionsEnabled field is set.
     */
    @java.lang.Override
    public boolean hasLaneSelectionsEnabled() {
      return ((bitField1_ & 0x00000400) != 0);
    }
    /**
     * <code>optional bool lane_selections_enabled = 69;</code>
     * @return The laneSelectionsEnabled.
     */
    @java.lang.Override
    public boolean getLaneSelectionsEnabled() {
      return laneSelectionsEnabled_;
    }

    public static final int CUSTOM_GAME_DIFFICULTY_MASK_FIELD_NUMBER = 70;
    private int customGameDifficultyMask_ = 0;
    /**
     * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
     * @return Whether the customGameDifficultyMask field is set.
     */
    @java.lang.Override
    public boolean hasCustomGameDifficultyMask() {
      return ((bitField1_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
     * @return The customGameDifficultyMask.
     */
    @java.lang.Override
    public int getCustomGameDifficultyMask() {
      return customGameDifficultyMask_;
    }

    public static final int IS_STEAM_CHINA_FIELD_NUMBER = 71;
    private boolean isSteamChina_ = false;
    /**
     * <code>optional bool is_steam_china = 71;</code>
     * @return Whether the isSteamChina field is set.
     */
    @java.lang.Override
    public boolean hasIsSteamChina() {
      return ((bitField1_ & 0x00001000) != 0);
    }
    /**
     * <code>optional bool is_steam_china = 71;</code>
     * @return The isSteamChina.
     */
    @java.lang.Override
    public boolean getIsSteamChina() {
      return isSteamChina_;
    }

    public static final int BOT_DIFFICULTY_MASK_FIELD_NUMBER = 72;
    private int botDifficultyMask_ = 0;
    /**
     * <code>optional uint32 bot_difficulty_mask = 72;</code>
     * @return Whether the botDifficultyMask field is set.
     */
    @java.lang.Override
    public boolean hasBotDifficultyMask() {
      return ((bitField1_ & 0x00002000) != 0);
    }
    /**
     * <code>optional uint32 bot_difficulty_mask = 72;</code>
     * @return The botDifficultyMask.
     */
    @java.lang.Override
    public int getBotDifficultyMask() {
      return botDifficultyMask_;
    }

    public static final int BOT_SCRIPT_INDEX_MASK_FIELD_NUMBER = 73;
    private int botScriptIndexMask_ = 0;
    /**
     * <code>optional uint32 bot_script_index_mask = 73;</code>
     * @return Whether the botScriptIndexMask field is set.
     */
    @java.lang.Override
    public boolean hasBotScriptIndexMask() {
      return ((bitField1_ & 0x00004000) != 0);
    }
    /**
     * <code>optional uint32 bot_script_index_mask = 73;</code>
     * @return The botScriptIndexMask.
     */
    @java.lang.Override
    public int getBotScriptIndexMask() {
      return botScriptIndexMask_;
    }

    public static final int RESTRICTED_FROM_RANKED_FIELD_NUMBER = 74;
    private boolean restrictedFromRanked_ = false;
    /**
     * <code>optional bool restricted_from_ranked = 74;</code>
     * @return Whether the restrictedFromRanked field is set.
     */
    @java.lang.Override
    public boolean hasRestrictedFromRanked() {
      return ((bitField1_ & 0x00008000) != 0);
    }
    /**
     * <code>optional bool restricted_from_ranked = 74;</code>
     * @return The restrictedFromRanked.
     */
    @java.lang.Override
    public boolean getRestrictedFromRanked() {
      return restrictedFromRanked_;
    }

    public static final int RESTRICTED_FROM_RANKED_ACCOUNT_ID_FIELD_NUMBER = 75;
    private int restrictedFromRankedAccountId_ = 0;
    /**
     * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
     * @return Whether the restrictedFromRankedAccountId field is set.
     */
    @java.lang.Override
    public boolean hasRestrictedFromRankedAccountId() {
      return ((bitField1_ & 0x00010000) != 0);
    }
    /**
     * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
     * @return The restrictedFromRankedAccountId.
     */
    @java.lang.Override
    public int getRestrictedFromRankedAccountId() {
      return restrictedFromRankedAccountId_;
    }

    public static final int RANK_SPREAD_LIKERT_SCALE_FIELD_NUMBER = 76;
    private int rankSpreadLikertScale_ = 0;
    /**
     * <code>optional uint32 rank_spread_likert_scale = 76;</code>
     * @return Whether the rankSpreadLikertScale field is set.
     */
    @java.lang.Override
    public boolean hasRankSpreadLikertScale() {
      return ((bitField1_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint32 rank_spread_likert_scale = 76;</code>
     * @return The rankSpreadLikertScale.
     */
    @java.lang.Override
    public int getRankSpreadLikertScale() {
      return rankSpreadLikertScale_;
    }

    public static final int BEHAVIOR_SCORE_LIKERT_SCALE_FIELD_NUMBER = 77;
    private int behaviorScoreLikertScale_ = 0;
    /**
     * <code>optional uint32 behavior_score_likert_scale = 77;</code>
     * @return Whether the behaviorScoreLikertScale field is set.
     */
    @java.lang.Override
    public boolean hasBehaviorScoreLikertScale() {
      return ((bitField1_ & 0x00040000) != 0);
    }
    /**
     * <code>optional uint32 behavior_score_likert_scale = 77;</code>
     * @return The behaviorScoreLikertScale.
     */
    @java.lang.Override
    public int getBehaviorScoreLikertScale() {
      return behaviorScoreLikertScale_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, partyId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, leaderId_);
      }
      for (int i = 0; i < memberIds_.size(); i++) {
        output.writeFixed64(3, memberIds_.getLong(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, gameModes_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(6, state_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(7, effectiveStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(11, matchgroups_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(19, lowPriorityAccountId_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeEnum(21, matchType_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(23, teamId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeUInt32(24, matchDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeUInt32(25, matchDisabledAccountId_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeUInt32(26, matchmakingMaxRangeMinutes_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeUInt32(27, matchlanguages_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(29, members_.get(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(32, rawStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(33, attemptStartTime_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(34, attemptNum_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeUInt32(35, lowPriorityGamesRemaining_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeBool(40, openForJoinRequests_);
      }
      for (int i = 0; i < sentInvites_.size(); i++) {
        output.writeMessage(41, sentInvites_.get(i));
      }
      for (int i = 0; i < recvInvites_.size(); i++) {
        output.writeMessage(42, recvInvites_.get(i));
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeUInt32(43, accountFlags_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeUInt32(44, regionSelectFlags_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        output.writeUInt32(45, exclusiveTournamentId_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        output.writeUInt32(47, tourneyDivisionId_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        output.writeUInt32(48, tourneyScheduleTime_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        output.writeUInt32(49, tourneySkillLevel_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        output.writeUInt32(50, tourneyBracketRound_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 51, teamName_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt64(52, teamUiLogo_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt64(53, teamBaseLogo_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        output.writeUInt32(54, tourneyQueueDeadlineTime_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        output.writeEnum(55, tourneyQueueDeadlineState_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        output.writeUInt32(56, partyBuilderSlotsToFill_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        output.writeUInt32(57, partyBuilderMatchGroups_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        output.writeUInt32(58, partyBuilderStartTime_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        output.writeBool(59, soloQueue_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        output.writeUInt32(61, steamClanAccountId_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        output.writeMessage(62, getReadyCheck());
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        output.writeUInt32(63, customGameDisabledUntilDate_);
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        output.writeUInt32(64, customGameDisabledAccountId_);
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        output.writeBool(65, isChallengeMatch_);
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        output.writeBool(66, partySearchBeaconActive_);
      }
      if (((bitField1_ & 0x00000100) != 0)) {
        output.writeUInt32(67, matchmakingFlags_);
      }
      if (((bitField1_ & 0x00000200) != 0)) {
        output.writeEnum(68, highPriorityState_);
      }
      if (((bitField1_ & 0x00000400) != 0)) {
        output.writeBool(69, laneSelectionsEnabled_);
      }
      if (((bitField1_ & 0x00000800) != 0)) {
        output.writeUInt32(70, customGameDifficultyMask_);
      }
      if (((bitField1_ & 0x00001000) != 0)) {
        output.writeBool(71, isSteamChina_);
      }
      if (((bitField1_ & 0x00002000) != 0)) {
        output.writeUInt32(72, botDifficultyMask_);
      }
      if (((bitField1_ & 0x00004000) != 0)) {
        output.writeUInt32(73, botScriptIndexMask_);
      }
      if (((bitField1_ & 0x00008000) != 0)) {
        output.writeBool(74, restrictedFromRanked_);
      }
      if (((bitField1_ & 0x00010000) != 0)) {
        output.writeUInt32(75, restrictedFromRankedAccountId_);
      }
      if (((bitField1_ & 0x00020000) != 0)) {
        output.writeUInt32(76, rankSpreadLikertScale_);
      }
      if (((bitField1_ & 0x00040000) != 0)) {
        output.writeUInt32(77, behaviorScoreLikertScale_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, partyId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, leaderId_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getMemberIdsList().size();
        size += dataSize;
        size += 1 * getMemberIdsList().size();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gameModes_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, state_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, effectiveStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, matchgroups_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, lowPriorityAccountId_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, matchType_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, teamId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, matchDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, matchDisabledAccountId_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, matchmakingMaxRangeMinutes_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, matchlanguages_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, members_.get(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, rawStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, attemptStartTime_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, attemptNum_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, lowPriorityGamesRemaining_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(40, openForJoinRequests_);
      }
      for (int i = 0; i < sentInvites_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, sentInvites_.get(i));
      }
      for (int i = 0; i < recvInvites_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, recvInvites_.get(i));
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(43, accountFlags_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(44, regionSelectFlags_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(45, exclusiveTournamentId_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(47, tourneyDivisionId_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(48, tourneyScheduleTime_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(49, tourneySkillLevel_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(50, tourneyBracketRound_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(51, teamName_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(52, teamUiLogo_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(53, teamBaseLogo_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(54, tourneyQueueDeadlineTime_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(55, tourneyQueueDeadlineState_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(56, partyBuilderSlotsToFill_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(57, partyBuilderMatchGroups_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(58, partyBuilderStartTime_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(59, soloQueue_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, steamClanAccountId_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getReadyCheck());
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(63, customGameDisabledUntilDate_);
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(64, customGameDisabledAccountId_);
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(65, isChallengeMatch_);
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(66, partySearchBeaconActive_);
      }
      if (((bitField1_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(67, matchmakingFlags_);
      }
      if (((bitField1_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(68, highPriorityState_);
      }
      if (((bitField1_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(69, laneSelectionsEnabled_);
      }
      if (((bitField1_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(70, customGameDifficultyMask_);
      }
      if (((bitField1_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(71, isSteamChina_);
      }
      if (((bitField1_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(72, botDifficultyMask_);
      }
      if (((bitField1_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(73, botScriptIndexMask_);
      }
      if (((bitField1_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(74, restrictedFromRanked_);
      }
      if (((bitField1_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(75, restrictedFromRankedAccountId_);
      }
      if (((bitField1_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(76, rankSpreadLikertScale_);
      }
      if (((bitField1_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(77, behaviorScoreLikertScale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty) obj;

      if (hasPartyId() != other.hasPartyId()) return false;
      if (hasPartyId()) {
        if (getPartyId()
            != other.getPartyId()) return false;
      }
      if (hasLeaderId() != other.hasLeaderId()) return false;
      if (hasLeaderId()) {
        if (getLeaderId()
            != other.getLeaderId()) return false;
      }
      if (!getMemberIdsList()
          .equals(other.getMemberIdsList())) return false;
      if (hasGameModes() != other.hasGameModes()) return false;
      if (hasGameModes()) {
        if (getGameModes()
            != other.getGameModes()) return false;
      }
      if (hasState() != other.hasState()) return false;
      if (hasState()) {
        if (state_ != other.state_) return false;
      }
      if (hasEffectiveStartedMatchmakingTime() != other.hasEffectiveStartedMatchmakingTime()) return false;
      if (hasEffectiveStartedMatchmakingTime()) {
        if (getEffectiveStartedMatchmakingTime()
            != other.getEffectiveStartedMatchmakingTime()) return false;
      }
      if (hasRawStartedMatchmakingTime() != other.hasRawStartedMatchmakingTime()) return false;
      if (hasRawStartedMatchmakingTime()) {
        if (getRawStartedMatchmakingTime()
            != other.getRawStartedMatchmakingTime()) return false;
      }
      if (hasAttemptStartTime() != other.hasAttemptStartTime()) return false;
      if (hasAttemptStartTime()) {
        if (getAttemptStartTime()
            != other.getAttemptStartTime()) return false;
      }
      if (hasAttemptNum() != other.hasAttemptNum()) return false;
      if (hasAttemptNum()) {
        if (getAttemptNum()
            != other.getAttemptNum()) return false;
      }
      if (hasMatchgroups() != other.hasMatchgroups()) return false;
      if (hasMatchgroups()) {
        if (getMatchgroups()
            != other.getMatchgroups()) return false;
      }
      if (hasLowPriorityAccountId() != other.hasLowPriorityAccountId()) return false;
      if (hasLowPriorityAccountId()) {
        if (getLowPriorityAccountId()
            != other.getLowPriorityAccountId()) return false;
      }
      if (hasMatchType() != other.hasMatchType()) return false;
      if (hasMatchType()) {
        if (matchType_ != other.matchType_) return false;
      }
      if (hasTeamId() != other.hasTeamId()) return false;
      if (hasTeamId()) {
        if (getTeamId()
            != other.getTeamId()) return false;
      }
      if (hasTeamName() != other.hasTeamName()) return false;
      if (hasTeamName()) {
        if (!getTeamName()
            .equals(other.getTeamName())) return false;
      }
      if (hasTeamUiLogo() != other.hasTeamUiLogo()) return false;
      if (hasTeamUiLogo()) {
        if (getTeamUiLogo()
            != other.getTeamUiLogo()) return false;
      }
      if (hasTeamBaseLogo() != other.hasTeamBaseLogo()) return false;
      if (hasTeamBaseLogo()) {
        if (getTeamBaseLogo()
            != other.getTeamBaseLogo()) return false;
      }
      if (hasMatchDisabledUntilDate() != other.hasMatchDisabledUntilDate()) return false;
      if (hasMatchDisabledUntilDate()) {
        if (getMatchDisabledUntilDate()
            != other.getMatchDisabledUntilDate()) return false;
      }
      if (hasMatchDisabledAccountId() != other.hasMatchDisabledAccountId()) return false;
      if (hasMatchDisabledAccountId()) {
        if (getMatchDisabledAccountId()
            != other.getMatchDisabledAccountId()) return false;
      }
      if (hasMatchmakingMaxRangeMinutes() != other.hasMatchmakingMaxRangeMinutes()) return false;
      if (hasMatchmakingMaxRangeMinutes()) {
        if (getMatchmakingMaxRangeMinutes()
            != other.getMatchmakingMaxRangeMinutes()) return false;
      }
      if (hasMatchlanguages() != other.hasMatchlanguages()) return false;
      if (hasMatchlanguages()) {
        if (getMatchlanguages()
            != other.getMatchlanguages()) return false;
      }
      if (!getMembersList()
          .equals(other.getMembersList())) return false;
      if (hasLowPriorityGamesRemaining() != other.hasLowPriorityGamesRemaining()) return false;
      if (hasLowPriorityGamesRemaining()) {
        if (getLowPriorityGamesRemaining()
            != other.getLowPriorityGamesRemaining()) return false;
      }
      if (hasOpenForJoinRequests() != other.hasOpenForJoinRequests()) return false;
      if (hasOpenForJoinRequests()) {
        if (getOpenForJoinRequests()
            != other.getOpenForJoinRequests()) return false;
      }
      if (!getSentInvitesList()
          .equals(other.getSentInvitesList())) return false;
      if (!getRecvInvitesList()
          .equals(other.getRecvInvitesList())) return false;
      if (hasAccountFlags() != other.hasAccountFlags()) return false;
      if (hasAccountFlags()) {
        if (getAccountFlags()
            != other.getAccountFlags()) return false;
      }
      if (hasRegionSelectFlags() != other.hasRegionSelectFlags()) return false;
      if (hasRegionSelectFlags()) {
        if (getRegionSelectFlags()
            != other.getRegionSelectFlags()) return false;
      }
      if (hasExclusiveTournamentId() != other.hasExclusiveTournamentId()) return false;
      if (hasExclusiveTournamentId()) {
        if (getExclusiveTournamentId()
            != other.getExclusiveTournamentId()) return false;
      }
      if (hasTourneyDivisionId() != other.hasTourneyDivisionId()) return false;
      if (hasTourneyDivisionId()) {
        if (getTourneyDivisionId()
            != other.getTourneyDivisionId()) return false;
      }
      if (hasTourneyScheduleTime() != other.hasTourneyScheduleTime()) return false;
      if (hasTourneyScheduleTime()) {
        if (getTourneyScheduleTime()
            != other.getTourneyScheduleTime()) return false;
      }
      if (hasTourneySkillLevel() != other.hasTourneySkillLevel()) return false;
      if (hasTourneySkillLevel()) {
        if (getTourneySkillLevel()
            != other.getTourneySkillLevel()) return false;
      }
      if (hasTourneyBracketRound() != other.hasTourneyBracketRound()) return false;
      if (hasTourneyBracketRound()) {
        if (getTourneyBracketRound()
            != other.getTourneyBracketRound()) return false;
      }
      if (hasTourneyQueueDeadlineTime() != other.hasTourneyQueueDeadlineTime()) return false;
      if (hasTourneyQueueDeadlineTime()) {
        if (getTourneyQueueDeadlineTime()
            != other.getTourneyQueueDeadlineTime()) return false;
      }
      if (hasTourneyQueueDeadlineState() != other.hasTourneyQueueDeadlineState()) return false;
      if (hasTourneyQueueDeadlineState()) {
        if (tourneyQueueDeadlineState_ != other.tourneyQueueDeadlineState_) return false;
      }
      if (hasPartyBuilderSlotsToFill() != other.hasPartyBuilderSlotsToFill()) return false;
      if (hasPartyBuilderSlotsToFill()) {
        if (getPartyBuilderSlotsToFill()
            != other.getPartyBuilderSlotsToFill()) return false;
      }
      if (hasPartyBuilderMatchGroups() != other.hasPartyBuilderMatchGroups()) return false;
      if (hasPartyBuilderMatchGroups()) {
        if (getPartyBuilderMatchGroups()
            != other.getPartyBuilderMatchGroups()) return false;
      }
      if (hasPartyBuilderStartTime() != other.hasPartyBuilderStartTime()) return false;
      if (hasPartyBuilderStartTime()) {
        if (getPartyBuilderStartTime()
            != other.getPartyBuilderStartTime()) return false;
      }
      if (hasSoloQueue() != other.hasSoloQueue()) return false;
      if (hasSoloQueue()) {
        if (getSoloQueue()
            != other.getSoloQueue()) return false;
      }
      if (hasSteamClanAccountId() != other.hasSteamClanAccountId()) return false;
      if (hasSteamClanAccountId()) {
        if (getSteamClanAccountId()
            != other.getSteamClanAccountId()) return false;
      }
      if (hasReadyCheck() != other.hasReadyCheck()) return false;
      if (hasReadyCheck()) {
        if (!getReadyCheck()
            .equals(other.getReadyCheck())) return false;
      }
      if (hasCustomGameDisabledUntilDate() != other.hasCustomGameDisabledUntilDate()) return false;
      if (hasCustomGameDisabledUntilDate()) {
        if (getCustomGameDisabledUntilDate()
            != other.getCustomGameDisabledUntilDate()) return false;
      }
      if (hasCustomGameDisabledAccountId() != other.hasCustomGameDisabledAccountId()) return false;
      if (hasCustomGameDisabledAccountId()) {
        if (getCustomGameDisabledAccountId()
            != other.getCustomGameDisabledAccountId()) return false;
      }
      if (hasIsChallengeMatch() != other.hasIsChallengeMatch()) return false;
      if (hasIsChallengeMatch()) {
        if (getIsChallengeMatch()
            != other.getIsChallengeMatch()) return false;
      }
      if (hasPartySearchBeaconActive() != other.hasPartySearchBeaconActive()) return false;
      if (hasPartySearchBeaconActive()) {
        if (getPartySearchBeaconActive()
            != other.getPartySearchBeaconActive()) return false;
      }
      if (hasMatchmakingFlags() != other.hasMatchmakingFlags()) return false;
      if (hasMatchmakingFlags()) {
        if (getMatchmakingFlags()
            != other.getMatchmakingFlags()) return false;
      }
      if (hasHighPriorityState() != other.hasHighPriorityState()) return false;
      if (hasHighPriorityState()) {
        if (highPriorityState_ != other.highPriorityState_) return false;
      }
      if (hasLaneSelectionsEnabled() != other.hasLaneSelectionsEnabled()) return false;
      if (hasLaneSelectionsEnabled()) {
        if (getLaneSelectionsEnabled()
            != other.getLaneSelectionsEnabled()) return false;
      }
      if (hasCustomGameDifficultyMask() != other.hasCustomGameDifficultyMask()) return false;
      if (hasCustomGameDifficultyMask()) {
        if (getCustomGameDifficultyMask()
            != other.getCustomGameDifficultyMask()) return false;
      }
      if (hasIsSteamChina() != other.hasIsSteamChina()) return false;
      if (hasIsSteamChina()) {
        if (getIsSteamChina()
            != other.getIsSteamChina()) return false;
      }
      if (hasBotDifficultyMask() != other.hasBotDifficultyMask()) return false;
      if (hasBotDifficultyMask()) {
        if (getBotDifficultyMask()
            != other.getBotDifficultyMask()) return false;
      }
      if (hasBotScriptIndexMask() != other.hasBotScriptIndexMask()) return false;
      if (hasBotScriptIndexMask()) {
        if (getBotScriptIndexMask()
            != other.getBotScriptIndexMask()) return false;
      }
      if (hasRestrictedFromRanked() != other.hasRestrictedFromRanked()) return false;
      if (hasRestrictedFromRanked()) {
        if (getRestrictedFromRanked()
            != other.getRestrictedFromRanked()) return false;
      }
      if (hasRestrictedFromRankedAccountId() != other.hasRestrictedFromRankedAccountId()) return false;
      if (hasRestrictedFromRankedAccountId()) {
        if (getRestrictedFromRankedAccountId()
            != other.getRestrictedFromRankedAccountId()) return false;
      }
      if (hasRankSpreadLikertScale() != other.hasRankSpreadLikertScale()) return false;
      if (hasRankSpreadLikertScale()) {
        if (getRankSpreadLikertScale()
            != other.getRankSpreadLikertScale()) return false;
      }
      if (hasBehaviorScoreLikertScale() != other.hasBehaviorScoreLikertScale()) return false;
      if (hasBehaviorScoreLikertScale()) {
        if (getBehaviorScoreLikertScale()
            != other.getBehaviorScoreLikertScale()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPartyId()) {
        hash = (37 * hash) + PARTY_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPartyId());
      }
      if (hasLeaderId()) {
        hash = (37 * hash) + LEADER_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLeaderId());
      }
      if (getMemberIdsCount() > 0) {
        hash = (37 * hash) + MEMBER_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getMemberIdsList().hashCode();
      }
      if (hasGameModes()) {
        hash = (37 * hash) + GAME_MODES_FIELD_NUMBER;
        hash = (53 * hash) + getGameModes();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + state_;
      }
      if (hasEffectiveStartedMatchmakingTime()) {
        hash = (37 * hash) + EFFECTIVE_STARTED_MATCHMAKING_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveStartedMatchmakingTime();
      }
      if (hasRawStartedMatchmakingTime()) {
        hash = (37 * hash) + RAW_STARTED_MATCHMAKING_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getRawStartedMatchmakingTime();
      }
      if (hasAttemptStartTime()) {
        hash = (37 * hash) + ATTEMPT_START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getAttemptStartTime();
      }
      if (hasAttemptNum()) {
        hash = (37 * hash) + ATTEMPT_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getAttemptNum();
      }
      if (hasMatchgroups()) {
        hash = (37 * hash) + MATCHGROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getMatchgroups();
      }
      if (hasLowPriorityAccountId()) {
        hash = (37 * hash) + LOW_PRIORITY_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLowPriorityAccountId();
      }
      if (hasMatchType()) {
        hash = (37 * hash) + MATCH_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + matchType_;
      }
      if (hasTeamId()) {
        hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTeamId();
      }
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasTeamUiLogo()) {
        hash = (37 * hash) + TEAM_UI_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTeamUiLogo());
      }
      if (hasTeamBaseLogo()) {
        hash = (37 * hash) + TEAM_BASE_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTeamBaseLogo());
      }
      if (hasMatchDisabledUntilDate()) {
        hash = (37 * hash) + MATCH_DISABLED_UNTIL_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getMatchDisabledUntilDate();
      }
      if (hasMatchDisabledAccountId()) {
        hash = (37 * hash) + MATCH_DISABLED_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getMatchDisabledAccountId();
      }
      if (hasMatchmakingMaxRangeMinutes()) {
        hash = (37 * hash) + MATCHMAKING_MAX_RANGE_MINUTES_FIELD_NUMBER;
        hash = (53 * hash) + getMatchmakingMaxRangeMinutes();
      }
      if (hasMatchlanguages()) {
        hash = (37 * hash) + MATCHLANGUAGES_FIELD_NUMBER;
        hash = (53 * hash) + getMatchlanguages();
      }
      if (getMembersCount() > 0) {
        hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getMembersList().hashCode();
      }
      if (hasLowPriorityGamesRemaining()) {
        hash = (37 * hash) + LOW_PRIORITY_GAMES_REMAINING_FIELD_NUMBER;
        hash = (53 * hash) + getLowPriorityGamesRemaining();
      }
      if (hasOpenForJoinRequests()) {
        hash = (37 * hash) + OPEN_FOR_JOIN_REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getOpenForJoinRequests());
      }
      if (getSentInvitesCount() > 0) {
        hash = (37 * hash) + SENT_INVITES_FIELD_NUMBER;
        hash = (53 * hash) + getSentInvitesList().hashCode();
      }
      if (getRecvInvitesCount() > 0) {
        hash = (37 * hash) + RECV_INVITES_FIELD_NUMBER;
        hash = (53 * hash) + getRecvInvitesList().hashCode();
      }
      if (hasAccountFlags()) {
        hash = (37 * hash) + ACCOUNT_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getAccountFlags();
      }
      if (hasRegionSelectFlags()) {
        hash = (37 * hash) + REGION_SELECT_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getRegionSelectFlags();
      }
      if (hasExclusiveTournamentId()) {
        hash = (37 * hash) + EXCLUSIVE_TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getExclusiveTournamentId();
      }
      if (hasTourneyDivisionId()) {
        hash = (37 * hash) + TOURNEY_DIVISION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTourneyDivisionId();
      }
      if (hasTourneyScheduleTime()) {
        hash = (37 * hash) + TOURNEY_SCHEDULE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTourneyScheduleTime();
      }
      if (hasTourneySkillLevel()) {
        hash = (37 * hash) + TOURNEY_SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getTourneySkillLevel();
      }
      if (hasTourneyBracketRound()) {
        hash = (37 * hash) + TOURNEY_BRACKET_ROUND_FIELD_NUMBER;
        hash = (53 * hash) + getTourneyBracketRound();
      }
      if (hasTourneyQueueDeadlineTime()) {
        hash = (37 * hash) + TOURNEY_QUEUE_DEADLINE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTourneyQueueDeadlineTime();
      }
      if (hasTourneyQueueDeadlineState()) {
        hash = (37 * hash) + TOURNEY_QUEUE_DEADLINE_STATE_FIELD_NUMBER;
        hash = (53 * hash) + tourneyQueueDeadlineState_;
      }
      if (hasPartyBuilderSlotsToFill()) {
        hash = (37 * hash) + PARTY_BUILDER_SLOTS_TO_FILL_FIELD_NUMBER;
        hash = (53 * hash) + getPartyBuilderSlotsToFill();
      }
      if (hasPartyBuilderMatchGroups()) {
        hash = (37 * hash) + PARTY_BUILDER_MATCH_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getPartyBuilderMatchGroups();
      }
      if (hasPartyBuilderStartTime()) {
        hash = (37 * hash) + PARTY_BUILDER_START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getPartyBuilderStartTime();
      }
      if (hasSoloQueue()) {
        hash = (37 * hash) + SOLO_QUEUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSoloQueue());
      }
      if (hasSteamClanAccountId()) {
        hash = (37 * hash) + STEAM_CLAN_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSteamClanAccountId();
      }
      if (hasReadyCheck()) {
        hash = (37 * hash) + READY_CHECK_FIELD_NUMBER;
        hash = (53 * hash) + getReadyCheck().hashCode();
      }
      if (hasCustomGameDisabledUntilDate()) {
        hash = (37 * hash) + CUSTOM_GAME_DISABLED_UNTIL_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getCustomGameDisabledUntilDate();
      }
      if (hasCustomGameDisabledAccountId()) {
        hash = (37 * hash) + CUSTOM_GAME_DISABLED_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCustomGameDisabledAccountId();
      }
      if (hasIsChallengeMatch()) {
        hash = (37 * hash) + IS_CHALLENGE_MATCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsChallengeMatch());
      }
      if (hasPartySearchBeaconActive()) {
        hash = (37 * hash) + PARTY_SEARCH_BEACON_ACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPartySearchBeaconActive());
      }
      if (hasMatchmakingFlags()) {
        hash = (37 * hash) + MATCHMAKING_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getMatchmakingFlags();
      }
      if (hasHighPriorityState()) {
        hash = (37 * hash) + HIGH_PRIORITY_STATE_FIELD_NUMBER;
        hash = (53 * hash) + highPriorityState_;
      }
      if (hasLaneSelectionsEnabled()) {
        hash = (37 * hash) + LANE_SELECTIONS_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLaneSelectionsEnabled());
      }
      if (hasCustomGameDifficultyMask()) {
        hash = (37 * hash) + CUSTOM_GAME_DIFFICULTY_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getCustomGameDifficultyMask();
      }
      if (hasIsSteamChina()) {
        hash = (37 * hash) + IS_STEAM_CHINA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsSteamChina());
      }
      if (hasBotDifficultyMask()) {
        hash = (37 * hash) + BOT_DIFFICULTY_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getBotDifficultyMask();
      }
      if (hasBotScriptIndexMask()) {
        hash = (37 * hash) + BOT_SCRIPT_INDEX_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getBotScriptIndexMask();
      }
      if (hasRestrictedFromRanked()) {
        hash = (37 * hash) + RESTRICTED_FROM_RANKED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRestrictedFromRanked());
      }
      if (hasRestrictedFromRankedAccountId()) {
        hash = (37 * hash) + RESTRICTED_FROM_RANKED_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRestrictedFromRankedAccountId();
      }
      if (hasRankSpreadLikertScale()) {
        hash = (37 * hash) + RANK_SPREAD_LIKERT_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + getRankSpreadLikertScale();
      }
      if (hasBehaviorScoreLikertScale()) {
        hash = (37 * hash) + BEHAVIOR_SCORE_LIKERT_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + getBehaviorScoreLikertScale();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAParty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSODOTAParty)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAParty_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAParty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMembersFieldBuilder();
          getSentInvitesFieldBuilder();
          getRecvInvitesFieldBuilder();
          getReadyCheckFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        partyId_ = 0L;
        leaderId_ = 0L;
        memberIds_ = emptyLongList();
        gameModes_ = 0;
        state_ = 0;
        effectiveStartedMatchmakingTime_ = 0;
        rawStartedMatchmakingTime_ = 0;
        attemptStartTime_ = 0;
        attemptNum_ = 0;
        matchgroups_ = 0;
        lowPriorityAccountId_ = 0;
        matchType_ = 0;
        teamId_ = 0;
        teamName_ = "";
        teamUiLogo_ = 0L;
        teamBaseLogo_ = 0L;
        matchDisabledUntilDate_ = 0;
        matchDisabledAccountId_ = 0;
        matchmakingMaxRangeMinutes_ = 0;
        matchlanguages_ = 0;
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
        } else {
          members_ = null;
          membersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        lowPriorityGamesRemaining_ = 0;
        openForJoinRequests_ = false;
        if (sentInvitesBuilder_ == null) {
          sentInvites_ = java.util.Collections.emptyList();
        } else {
          sentInvites_ = null;
          sentInvitesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        if (recvInvitesBuilder_ == null) {
          recvInvites_ = java.util.Collections.emptyList();
        } else {
          recvInvites_ = null;
          recvInvitesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        accountFlags_ = 0;
        regionSelectFlags_ = 0;
        exclusiveTournamentId_ = 0;
        tourneyDivisionId_ = 0;
        tourneyScheduleTime_ = 0;
        tourneySkillLevel_ = 0;
        tourneyBracketRound_ = 0;
        tourneyQueueDeadlineTime_ = 0;
        tourneyQueueDeadlineState_ = 0;
        partyBuilderSlotsToFill_ = 0;
        partyBuilderMatchGroups_ = 0;
        partyBuilderStartTime_ = 0;
        soloQueue_ = false;
        steamClanAccountId_ = 0;
        readyCheck_ = null;
        if (readyCheckBuilder_ != null) {
          readyCheckBuilder_.dispose();
          readyCheckBuilder_ = null;
        }
        customGameDisabledUntilDate_ = 0;
        customGameDisabledAccountId_ = 0;
        isChallengeMatch_ = false;
        partySearchBeaconActive_ = false;
        matchmakingFlags_ = 0;
        highPriorityState_ = 0;
        laneSelectionsEnabled_ = false;
        customGameDifficultyMask_ = 0;
        isSteamChina_ = false;
        botDifficultyMask_ = 0;
        botScriptIndexMask_ = 0;
        restrictedFromRanked_ = false;
        restrictedFromRankedAccountId_ = 0;
        rankSpreadLikertScale_ = 0;
        behaviorScoreLikertScale_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAParty_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty result) {
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00100000) != 0)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00100000);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
        if (sentInvitesBuilder_ == null) {
          if (((bitField0_ & 0x00800000) != 0)) {
            sentInvites_ = java.util.Collections.unmodifiableList(sentInvites_);
            bitField0_ = (bitField0_ & ~0x00800000);
          }
          result.sentInvites_ = sentInvites_;
        } else {
          result.sentInvites_ = sentInvitesBuilder_.build();
        }
        if (recvInvitesBuilder_ == null) {
          if (((bitField0_ & 0x01000000) != 0)) {
            recvInvites_ = java.util.Collections.unmodifiableList(recvInvites_);
            bitField0_ = (bitField0_ & ~0x01000000);
          }
          result.recvInvites_ = recvInvites_;
        } else {
          result.recvInvites_ = recvInvitesBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.partyId_ = partyId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.leaderId_ = leaderId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          memberIds_.makeImmutable();
          result.memberIds_ = memberIds_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.gameModes_ = gameModes_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.state_ = state_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.effectiveStartedMatchmakingTime_ = effectiveStartedMatchmakingTime_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.rawStartedMatchmakingTime_ = rawStartedMatchmakingTime_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.attemptStartTime_ = attemptStartTime_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.attemptNum_ = attemptNum_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.matchgroups_ = matchgroups_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.lowPriorityAccountId_ = lowPriorityAccountId_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.matchType_ = matchType_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.teamId_ = teamId_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.teamName_ = teamName_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.teamUiLogo_ = teamUiLogo_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.teamBaseLogo_ = teamBaseLogo_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.matchDisabledUntilDate_ = matchDisabledUntilDate_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.matchDisabledAccountId_ = matchDisabledAccountId_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.matchmakingMaxRangeMinutes_ = matchmakingMaxRangeMinutes_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.matchlanguages_ = matchlanguages_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.lowPriorityGamesRemaining_ = lowPriorityGamesRemaining_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.openForJoinRequests_ = openForJoinRequests_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.accountFlags_ = accountFlags_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.regionSelectFlags_ = regionSelectFlags_;
          to_bitField0_ |= 0x00400000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.exclusiveTournamentId_ = exclusiveTournamentId_;
          to_bitField0_ |= 0x00800000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.tourneyDivisionId_ = tourneyDivisionId_;
          to_bitField0_ |= 0x01000000;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.tourneyScheduleTime_ = tourneyScheduleTime_;
          to_bitField0_ |= 0x02000000;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.tourneySkillLevel_ = tourneySkillLevel_;
          to_bitField0_ |= 0x04000000;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.tourneyBracketRound_ = tourneyBracketRound_;
          to_bitField0_ |= 0x08000000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartial1(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty result) {
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.tourneyQueueDeadlineTime_ = tourneyQueueDeadlineTime_;
          to_bitField0_ |= 0x10000000;
        }
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.tourneyQueueDeadlineState_ = tourneyQueueDeadlineState_;
          to_bitField0_ |= 0x20000000;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.partyBuilderSlotsToFill_ = partyBuilderSlotsToFill_;
          to_bitField0_ |= 0x40000000;
        }
        if (((from_bitField1_ & 0x00000008) != 0)) {
          result.partyBuilderMatchGroups_ = partyBuilderMatchGroups_;
          to_bitField0_ |= 0x80000000;
        }
        int to_bitField1_ = 0;
        if (((from_bitField1_ & 0x00000010) != 0)) {
          result.partyBuilderStartTime_ = partyBuilderStartTime_;
          to_bitField1_ |= 0x00000001;
        }
        if (((from_bitField1_ & 0x00000020) != 0)) {
          result.soloQueue_ = soloQueue_;
          to_bitField1_ |= 0x00000002;
        }
        if (((from_bitField1_ & 0x00000040) != 0)) {
          result.steamClanAccountId_ = steamClanAccountId_;
          to_bitField1_ |= 0x00000004;
        }
        if (((from_bitField1_ & 0x00000080) != 0)) {
          result.readyCheck_ = readyCheckBuilder_ == null
              ? readyCheck_
              : readyCheckBuilder_.build();
          to_bitField1_ |= 0x00000008;
        }
        if (((from_bitField1_ & 0x00000100) != 0)) {
          result.customGameDisabledUntilDate_ = customGameDisabledUntilDate_;
          to_bitField1_ |= 0x00000010;
        }
        if (((from_bitField1_ & 0x00000200) != 0)) {
          result.customGameDisabledAccountId_ = customGameDisabledAccountId_;
          to_bitField1_ |= 0x00000020;
        }
        if (((from_bitField1_ & 0x00000400) != 0)) {
          result.isChallengeMatch_ = isChallengeMatch_;
          to_bitField1_ |= 0x00000040;
        }
        if (((from_bitField1_ & 0x00000800) != 0)) {
          result.partySearchBeaconActive_ = partySearchBeaconActive_;
          to_bitField1_ |= 0x00000080;
        }
        if (((from_bitField1_ & 0x00001000) != 0)) {
          result.matchmakingFlags_ = matchmakingFlags_;
          to_bitField1_ |= 0x00000100;
        }
        if (((from_bitField1_ & 0x00002000) != 0)) {
          result.highPriorityState_ = highPriorityState_;
          to_bitField1_ |= 0x00000200;
        }
        if (((from_bitField1_ & 0x00004000) != 0)) {
          result.laneSelectionsEnabled_ = laneSelectionsEnabled_;
          to_bitField1_ |= 0x00000400;
        }
        if (((from_bitField1_ & 0x00008000) != 0)) {
          result.customGameDifficultyMask_ = customGameDifficultyMask_;
          to_bitField1_ |= 0x00000800;
        }
        if (((from_bitField1_ & 0x00010000) != 0)) {
          result.isSteamChina_ = isSteamChina_;
          to_bitField1_ |= 0x00001000;
        }
        if (((from_bitField1_ & 0x00020000) != 0)) {
          result.botDifficultyMask_ = botDifficultyMask_;
          to_bitField1_ |= 0x00002000;
        }
        if (((from_bitField1_ & 0x00040000) != 0)) {
          result.botScriptIndexMask_ = botScriptIndexMask_;
          to_bitField1_ |= 0x00004000;
        }
        if (((from_bitField1_ & 0x00080000) != 0)) {
          result.restrictedFromRanked_ = restrictedFromRanked_;
          to_bitField1_ |= 0x00008000;
        }
        if (((from_bitField1_ & 0x00100000) != 0)) {
          result.restrictedFromRankedAccountId_ = restrictedFromRankedAccountId_;
          to_bitField1_ |= 0x00010000;
        }
        if (((from_bitField1_ & 0x00200000) != 0)) {
          result.rankSpreadLikertScale_ = rankSpreadLikertScale_;
          to_bitField1_ |= 0x00020000;
        }
        if (((from_bitField1_ & 0x00400000) != 0)) {
          result.behaviorScoreLikertScale_ = behaviorScoreLikertScale_;
          to_bitField1_ |= 0x00040000;
        }
        result.bitField0_ |= to_bitField0_;
        result.bitField1_ |= to_bitField1_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.getDefaultInstance()) return this;
        if (other.hasPartyId()) {
          setPartyId(other.getPartyId());
        }
        if (other.hasLeaderId()) {
          setLeaderId(other.getLeaderId());
        }
        if (!other.memberIds_.isEmpty()) {
          if (memberIds_.isEmpty()) {
            memberIds_ = other.memberIds_;
            memberIds_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureMemberIdsIsMutable();
            memberIds_.addAll(other.memberIds_);
          }
          onChanged();
        }
        if (other.hasGameModes()) {
          setGameModes(other.getGameModes());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasEffectiveStartedMatchmakingTime()) {
          setEffectiveStartedMatchmakingTime(other.getEffectiveStartedMatchmakingTime());
        }
        if (other.hasRawStartedMatchmakingTime()) {
          setRawStartedMatchmakingTime(other.getRawStartedMatchmakingTime());
        }
        if (other.hasAttemptStartTime()) {
          setAttemptStartTime(other.getAttemptStartTime());
        }
        if (other.hasAttemptNum()) {
          setAttemptNum(other.getAttemptNum());
        }
        if (other.hasMatchgroups()) {
          setMatchgroups(other.getMatchgroups());
        }
        if (other.hasLowPriorityAccountId()) {
          setLowPriorityAccountId(other.getLowPriorityAccountId());
        }
        if (other.hasMatchType()) {
          setMatchType(other.getMatchType());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasTeamName()) {
          teamName_ = other.teamName_;
          bitField0_ |= 0x00002000;
          onChanged();
        }
        if (other.hasTeamUiLogo()) {
          setTeamUiLogo(other.getTeamUiLogo());
        }
        if (other.hasTeamBaseLogo()) {
          setTeamBaseLogo(other.getTeamBaseLogo());
        }
        if (other.hasMatchDisabledUntilDate()) {
          setMatchDisabledUntilDate(other.getMatchDisabledUntilDate());
        }
        if (other.hasMatchDisabledAccountId()) {
          setMatchDisabledAccountId(other.getMatchDisabledAccountId());
        }
        if (other.hasMatchmakingMaxRangeMinutes()) {
          setMatchmakingMaxRangeMinutes(other.getMatchmakingMaxRangeMinutes());
        }
        if (other.hasMatchlanguages()) {
          setMatchlanguages(other.getMatchlanguages());
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00100000);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00100000);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (other.hasLowPriorityGamesRemaining()) {
          setLowPriorityGamesRemaining(other.getLowPriorityGamesRemaining());
        }
        if (other.hasOpenForJoinRequests()) {
          setOpenForJoinRequests(other.getOpenForJoinRequests());
        }
        if (sentInvitesBuilder_ == null) {
          if (!other.sentInvites_.isEmpty()) {
            if (sentInvites_.isEmpty()) {
              sentInvites_ = other.sentInvites_;
              bitField0_ = (bitField0_ & ~0x00800000);
            } else {
              ensureSentInvitesIsMutable();
              sentInvites_.addAll(other.sentInvites_);
            }
            onChanged();
          }
        } else {
          if (!other.sentInvites_.isEmpty()) {
            if (sentInvitesBuilder_.isEmpty()) {
              sentInvitesBuilder_.dispose();
              sentInvitesBuilder_ = null;
              sentInvites_ = other.sentInvites_;
              bitField0_ = (bitField0_ & ~0x00800000);
              sentInvitesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSentInvitesFieldBuilder() : null;
            } else {
              sentInvitesBuilder_.addAllMessages(other.sentInvites_);
            }
          }
        }
        if (recvInvitesBuilder_ == null) {
          if (!other.recvInvites_.isEmpty()) {
            if (recvInvites_.isEmpty()) {
              recvInvites_ = other.recvInvites_;
              bitField0_ = (bitField0_ & ~0x01000000);
            } else {
              ensureRecvInvitesIsMutable();
              recvInvites_.addAll(other.recvInvites_);
            }
            onChanged();
          }
        } else {
          if (!other.recvInvites_.isEmpty()) {
            if (recvInvitesBuilder_.isEmpty()) {
              recvInvitesBuilder_.dispose();
              recvInvitesBuilder_ = null;
              recvInvites_ = other.recvInvites_;
              bitField0_ = (bitField0_ & ~0x01000000);
              recvInvitesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecvInvitesFieldBuilder() : null;
            } else {
              recvInvitesBuilder_.addAllMessages(other.recvInvites_);
            }
          }
        }
        if (other.hasAccountFlags()) {
          setAccountFlags(other.getAccountFlags());
        }
        if (other.hasRegionSelectFlags()) {
          setRegionSelectFlags(other.getRegionSelectFlags());
        }
        if (other.hasExclusiveTournamentId()) {
          setExclusiveTournamentId(other.getExclusiveTournamentId());
        }
        if (other.hasTourneyDivisionId()) {
          setTourneyDivisionId(other.getTourneyDivisionId());
        }
        if (other.hasTourneyScheduleTime()) {
          setTourneyScheduleTime(other.getTourneyScheduleTime());
        }
        if (other.hasTourneySkillLevel()) {
          setTourneySkillLevel(other.getTourneySkillLevel());
        }
        if (other.hasTourneyBracketRound()) {
          setTourneyBracketRound(other.getTourneyBracketRound());
        }
        if (other.hasTourneyQueueDeadlineTime()) {
          setTourneyQueueDeadlineTime(other.getTourneyQueueDeadlineTime());
        }
        if (other.hasTourneyQueueDeadlineState()) {
          setTourneyQueueDeadlineState(other.getTourneyQueueDeadlineState());
        }
        if (other.hasPartyBuilderSlotsToFill()) {
          setPartyBuilderSlotsToFill(other.getPartyBuilderSlotsToFill());
        }
        if (other.hasPartyBuilderMatchGroups()) {
          setPartyBuilderMatchGroups(other.getPartyBuilderMatchGroups());
        }
        if (other.hasPartyBuilderStartTime()) {
          setPartyBuilderStartTime(other.getPartyBuilderStartTime());
        }
        if (other.hasSoloQueue()) {
          setSoloQueue(other.getSoloQueue());
        }
        if (other.hasSteamClanAccountId()) {
          setSteamClanAccountId(other.getSteamClanAccountId());
        }
        if (other.hasReadyCheck()) {
          mergeReadyCheck(other.getReadyCheck());
        }
        if (other.hasCustomGameDisabledUntilDate()) {
          setCustomGameDisabledUntilDate(other.getCustomGameDisabledUntilDate());
        }
        if (other.hasCustomGameDisabledAccountId()) {
          setCustomGameDisabledAccountId(other.getCustomGameDisabledAccountId());
        }
        if (other.hasIsChallengeMatch()) {
          setIsChallengeMatch(other.getIsChallengeMatch());
        }
        if (other.hasPartySearchBeaconActive()) {
          setPartySearchBeaconActive(other.getPartySearchBeaconActive());
        }
        if (other.hasMatchmakingFlags()) {
          setMatchmakingFlags(other.getMatchmakingFlags());
        }
        if (other.hasHighPriorityState()) {
          setHighPriorityState(other.getHighPriorityState());
        }
        if (other.hasLaneSelectionsEnabled()) {
          setLaneSelectionsEnabled(other.getLaneSelectionsEnabled());
        }
        if (other.hasCustomGameDifficultyMask()) {
          setCustomGameDifficultyMask(other.getCustomGameDifficultyMask());
        }
        if (other.hasIsSteamChina()) {
          setIsSteamChina(other.getIsSteamChina());
        }
        if (other.hasBotDifficultyMask()) {
          setBotDifficultyMask(other.getBotDifficultyMask());
        }
        if (other.hasBotScriptIndexMask()) {
          setBotScriptIndexMask(other.getBotScriptIndexMask());
        }
        if (other.hasRestrictedFromRanked()) {
          setRestrictedFromRanked(other.getRestrictedFromRanked());
        }
        if (other.hasRestrictedFromRankedAccountId()) {
          setRestrictedFromRankedAccountId(other.getRestrictedFromRankedAccountId());
        }
        if (other.hasRankSpreadLikertScale()) {
          setRankSpreadLikertScale(other.getRankSpreadLikertScale());
        }
        if (other.hasBehaviorScoreLikertScale()) {
          setBehaviorScoreLikertScale(other.getBehaviorScoreLikertScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                partyId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 17: {
                leaderId_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                long v = input.readFixed64();
                ensureMemberIdsIsMutable();
                memberIds_.addLong(v);
                break;
              } // case 25
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureMemberIdsIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  memberIds_.addLong(input.readFixed64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                gameModes_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 48: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(6, tmpRaw);
                } else {
                  state_ = tmpRaw;
                  bitField0_ |= 0x00000010;
                }
                break;
              } // case 48
              case 56: {
                effectiveStartedMatchmakingTime_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 56
              case 88: {
                matchgroups_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 88
              case 152: {
                lowPriorityAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 152
              case 168: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(21, tmpRaw);
                } else {
                  matchType_ = tmpRaw;
                  bitField0_ |= 0x00000800;
                }
                break;
              } // case 168
              case 184: {
                teamId_ = input.readUInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 184
              case 192: {
                matchDisabledUntilDate_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 192
              case 200: {
                matchDisabledAccountId_ = input.readUInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 200
              case 208: {
                matchmakingMaxRangeMinutes_ = input.readUInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 208
              case 216: {
                matchlanguages_ = input.readUInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 216
              case 234: {
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.parser(),
                        extensionRegistry);
                if (membersBuilder_ == null) {
                  ensureMembersIsMutable();
                  members_.add(m);
                } else {
                  membersBuilder_.addMessage(m);
                }
                break;
              } // case 234
              case 256: {
                rawStartedMatchmakingTime_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 256
              case 264: {
                attemptStartTime_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 264
              case 272: {
                attemptNum_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 272
              case 280: {
                lowPriorityGamesRemaining_ = input.readUInt32();
                bitField0_ |= 0x00200000;
                break;
              } // case 280
              case 320: {
                openForJoinRequests_ = input.readBool();
                bitField0_ |= 0x00400000;
                break;
              } // case 320
              case 330: {
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.parser(),
                        extensionRegistry);
                if (sentInvitesBuilder_ == null) {
                  ensureSentInvitesIsMutable();
                  sentInvites_.add(m);
                } else {
                  sentInvitesBuilder_.addMessage(m);
                }
                break;
              } // case 330
              case 338: {
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.parser(),
                        extensionRegistry);
                if (recvInvitesBuilder_ == null) {
                  ensureRecvInvitesIsMutable();
                  recvInvites_.add(m);
                } else {
                  recvInvitesBuilder_.addMessage(m);
                }
                break;
              } // case 338
              case 344: {
                accountFlags_ = input.readUInt32();
                bitField0_ |= 0x02000000;
                break;
              } // case 344
              case 352: {
                regionSelectFlags_ = input.readUInt32();
                bitField0_ |= 0x04000000;
                break;
              } // case 352
              case 360: {
                exclusiveTournamentId_ = input.readUInt32();
                bitField0_ |= 0x08000000;
                break;
              } // case 360
              case 376: {
                tourneyDivisionId_ = input.readUInt32();
                bitField0_ |= 0x10000000;
                break;
              } // case 376
              case 384: {
                tourneyScheduleTime_ = input.readUInt32();
                bitField0_ |= 0x20000000;
                break;
              } // case 384
              case 392: {
                tourneySkillLevel_ = input.readUInt32();
                bitField0_ |= 0x40000000;
                break;
              } // case 392
              case 400: {
                tourneyBracketRound_ = input.readUInt32();
                bitField0_ |= 0x80000000;
                break;
              } // case 400
              case 410: {
                teamName_ = input.readBytes();
                bitField0_ |= 0x00002000;
                break;
              } // case 410
              case 416: {
                teamUiLogo_ = input.readUInt64();
                bitField0_ |= 0x00004000;
                break;
              } // case 416
              case 424: {
                teamBaseLogo_ = input.readUInt64();
                bitField0_ |= 0x00008000;
                break;
              } // case 424
              case 432: {
                tourneyQueueDeadlineTime_ = input.readUInt32();
                bitField1_ |= 0x00000001;
                break;
              } // case 432
              case 440: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(55, tmpRaw);
                } else {
                  tourneyQueueDeadlineState_ = tmpRaw;
                  bitField1_ |= 0x00000002;
                }
                break;
              } // case 440
              case 448: {
                partyBuilderSlotsToFill_ = input.readUInt32();
                bitField1_ |= 0x00000004;
                break;
              } // case 448
              case 456: {
                partyBuilderMatchGroups_ = input.readUInt32();
                bitField1_ |= 0x00000008;
                break;
              } // case 456
              case 464: {
                partyBuilderStartTime_ = input.readUInt32();
                bitField1_ |= 0x00000010;
                break;
              } // case 464
              case 472: {
                soloQueue_ = input.readBool();
                bitField1_ |= 0x00000020;
                break;
              } // case 472
              case 488: {
                steamClanAccountId_ = input.readUInt32();
                bitField1_ |= 0x00000040;
                break;
              } // case 488
              case 498: {
                input.readMessage(
                    getReadyCheckFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00000080;
                break;
              } // case 498
              case 504: {
                customGameDisabledUntilDate_ = input.readUInt32();
                bitField1_ |= 0x00000100;
                break;
              } // case 504
              case 512: {
                customGameDisabledAccountId_ = input.readUInt32();
                bitField1_ |= 0x00000200;
                break;
              } // case 512
              case 520: {
                isChallengeMatch_ = input.readBool();
                bitField1_ |= 0x00000400;
                break;
              } // case 520
              case 528: {
                partySearchBeaconActive_ = input.readBool();
                bitField1_ |= 0x00000800;
                break;
              } // case 528
              case 536: {
                matchmakingFlags_ = input.readUInt32();
                bitField1_ |= 0x00001000;
                break;
              } // case 536
              case 544: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(68, tmpRaw);
                } else {
                  highPriorityState_ = tmpRaw;
                  bitField1_ |= 0x00002000;
                }
                break;
              } // case 544
              case 552: {
                laneSelectionsEnabled_ = input.readBool();
                bitField1_ |= 0x00004000;
                break;
              } // case 552
              case 560: {
                customGameDifficultyMask_ = input.readUInt32();
                bitField1_ |= 0x00008000;
                break;
              } // case 560
              case 568: {
                isSteamChina_ = input.readBool();
                bitField1_ |= 0x00010000;
                break;
              } // case 568
              case 576: {
                botDifficultyMask_ = input.readUInt32();
                bitField1_ |= 0x00020000;
                break;
              } // case 576
              case 584: {
                botScriptIndexMask_ = input.readUInt32();
                bitField1_ |= 0x00040000;
                break;
              } // case 584
              case 592: {
                restrictedFromRanked_ = input.readBool();
                bitField1_ |= 0x00080000;
                break;
              } // case 592
              case 600: {
                restrictedFromRankedAccountId_ = input.readUInt32();
                bitField1_ |= 0x00100000;
                break;
              } // case 600
              case 608: {
                rankSpreadLikertScale_ = input.readUInt32();
                bitField1_ |= 0x00200000;
                break;
              } // case 608
              case 616: {
                behaviorScoreLikertScale_ = input.readUInt32();
                bitField1_ |= 0x00400000;
                break;
              } // case 616
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private long partyId_ ;
      /**
       * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
       * @return Whether the partyId field is set.
       */
      @java.lang.Override
      public boolean hasPartyId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
       * @return The partyId.
       */
      @java.lang.Override
      public long getPartyId() {
        return partyId_;
      }
      /**
       * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
       * @param value The partyId to set.
       * @return This builder for chaining.
       */
      public Builder setPartyId(long value) {

        partyId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 party_id = 1 [(.key_field) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearPartyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        partyId_ = 0L;
        onChanged();
        return this;
      }

      private long leaderId_ ;
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       * @return Whether the leaderId field is set.
       */
      @java.lang.Override
      public boolean hasLeaderId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       * @return The leaderId.
       */
      @java.lang.Override
      public long getLeaderId() {
        return leaderId_;
      }
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       * @param value The leaderId to set.
       * @return This builder for chaining.
       */
      public Builder setLeaderId(long value) {

        leaderId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeaderId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leaderId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList memberIds_ = emptyLongList();
      private void ensureMemberIdsIsMutable() {
        if (!memberIds_.isModifiable()) {
          memberIds_ = makeMutableCopy(memberIds_);
        }
        bitField0_ |= 0x00000004;
      }
      private void ensureMemberIdsIsMutable(int capacity) {
        if (!memberIds_.isModifiable()) {
          memberIds_ = makeMutableCopy(memberIds_, capacity);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @return A list containing the memberIds.
       */
      public java.util.List<java.lang.Long>
          getMemberIdsList() {
        memberIds_.makeImmutable();
        return memberIds_;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @return The count of memberIds.
       */
      public int getMemberIdsCount() {
        return memberIds_.size();
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @param index The index of the element to return.
       * @return The memberIds at the given index.
       */
      public long getMemberIds(int index) {
        return memberIds_.getLong(index);
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @param index The index to set the value at.
       * @param value The memberIds to set.
       * @return This builder for chaining.
       */
      public Builder setMemberIds(
          int index, long value) {

        ensureMemberIdsIsMutable();
        memberIds_.setLong(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @param value The memberIds to add.
       * @return This builder for chaining.
       */
      public Builder addMemberIds(long value) {

        ensureMemberIdsIsMutable();
        memberIds_.addLong(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @param values The memberIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllMemberIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMemberIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, memberIds_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemberIds() {
        memberIds_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int gameModes_ ;
      /**
       * <code>optional uint32 game_modes = 4;</code>
       * @return Whether the gameModes field is set.
       */
      @java.lang.Override
      public boolean hasGameModes() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 game_modes = 4;</code>
       * @return The gameModes.
       */
      @java.lang.Override
      public int getGameModes() {
        return gameModes_;
      }
      /**
       * <code>optional uint32 game_modes = 4;</code>
       * @param value The gameModes to set.
       * @return This builder for chaining.
       */
      public Builder setGameModes(int value) {

        gameModes_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_modes = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGameModes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameModes_ = 0;
        onChanged();
        return this;
      }

      private int state_ = 0;
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       * @return Whether the state field is set.
       */
      @java.lang.Override public boolean hasState() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       * @return The state.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State getState() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State.forNumber(state_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State.UI : result;
      }
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = 0;
        onChanged();
        return this;
      }

      private int effectiveStartedMatchmakingTime_ ;
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       * @return Whether the effectiveStartedMatchmakingTime field is set.
       */
      @java.lang.Override
      public boolean hasEffectiveStartedMatchmakingTime() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       * @return The effectiveStartedMatchmakingTime.
       */
      @java.lang.Override
      public int getEffectiveStartedMatchmakingTime() {
        return effectiveStartedMatchmakingTime_;
      }
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       * @param value The effectiveStartedMatchmakingTime to set.
       * @return This builder for chaining.
       */
      public Builder setEffectiveStartedMatchmakingTime(int value) {

        effectiveStartedMatchmakingTime_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearEffectiveStartedMatchmakingTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        effectiveStartedMatchmakingTime_ = 0;
        onChanged();
        return this;
      }

      private int rawStartedMatchmakingTime_ ;
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       * @return Whether the rawStartedMatchmakingTime field is set.
       */
      @java.lang.Override
      public boolean hasRawStartedMatchmakingTime() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       * @return The rawStartedMatchmakingTime.
       */
      @java.lang.Override
      public int getRawStartedMatchmakingTime() {
        return rawStartedMatchmakingTime_;
      }
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       * @param value The rawStartedMatchmakingTime to set.
       * @return This builder for chaining.
       */
      public Builder setRawStartedMatchmakingTime(int value) {

        rawStartedMatchmakingTime_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawStartedMatchmakingTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rawStartedMatchmakingTime_ = 0;
        onChanged();
        return this;
      }

      private int attemptStartTime_ ;
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       * @return Whether the attemptStartTime field is set.
       */
      @java.lang.Override
      public boolean hasAttemptStartTime() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       * @return The attemptStartTime.
       */
      @java.lang.Override
      public int getAttemptStartTime() {
        return attemptStartTime_;
      }
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       * @param value The attemptStartTime to set.
       * @return This builder for chaining.
       */
      public Builder setAttemptStartTime(int value) {

        attemptStartTime_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttemptStartTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        attemptStartTime_ = 0;
        onChanged();
        return this;
      }

      private int attemptNum_ ;
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       * @return Whether the attemptNum field is set.
       */
      @java.lang.Override
      public boolean hasAttemptNum() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       * @return The attemptNum.
       */
      @java.lang.Override
      public int getAttemptNum() {
        return attemptNum_;
      }
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       * @param value The attemptNum to set.
       * @return This builder for chaining.
       */
      public Builder setAttemptNum(int value) {

        attemptNum_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttemptNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        attemptNum_ = 0;
        onChanged();
        return this;
      }

      private int matchgroups_ ;
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       * @return Whether the matchgroups field is set.
       */
      @java.lang.Override
      public boolean hasMatchgroups() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       * @return The matchgroups.
       */
      @java.lang.Override
      public int getMatchgroups() {
        return matchgroups_;
      }
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       * @param value The matchgroups to set.
       * @return This builder for chaining.
       */
      public Builder setMatchgroups(int value) {

        matchgroups_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchgroups() {
        bitField0_ = (bitField0_ & ~0x00000200);
        matchgroups_ = 0;
        onChanged();
        return this;
      }

      private int lowPriorityAccountId_ ;
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       * @return Whether the lowPriorityAccountId field is set.
       */
      @java.lang.Override
      public boolean hasLowPriorityAccountId() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       * @return The lowPriorityAccountId.
       */
      @java.lang.Override
      public int getLowPriorityAccountId() {
        return lowPriorityAccountId_;
      }
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       * @param value The lowPriorityAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setLowPriorityAccountId(int value) {

        lowPriorityAccountId_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowPriorityAccountId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lowPriorityAccountId_ = 0;
        onChanged();
        return this;
      }

      private int matchType_ = 0;
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       * @return Whether the matchType field is set.
       */
      @java.lang.Override public boolean hasMatchType() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       * @return The matchType.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType getMatchType() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType result = kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType.forNumber(matchType_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType.MATCH_TYPE_CASUAL : result;
      }
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       * @param value The matchType to set.
       * @return This builder for chaining.
       */
      public Builder setMatchType(kz.moltenhaze.proto.dota.DotaSharedEnums.MatchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        matchType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        matchType_ = 0;
        onChanged();
        return this;
      }

      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 23;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional uint32 team_id = 23;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 23;</code>
       * @param value The teamId to set.
       * @return This builder for chaining.
       */
      public Builder setTeamId(int value) {

        teamId_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 51;</code>
       * @return Whether the teamName field is set.
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional string team_name = 51;</code>
       * @return The teamName.
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 51;</code>
       * @return The bytes for teamName.
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 51;</code>
       * @param value The teamName to set.
       * @return This builder for chaining.
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        teamName_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamName() {
        teamName_ = getDefaultInstance().getTeamName();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 51;</code>
       * @param value The bytes for teamName to set.
       * @return This builder for chaining.
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        teamName_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }

      private long teamUiLogo_ ;
      /**
       * <code>optional uint64 team_ui_logo = 52;</code>
       * @return Whether the teamUiLogo field is set.
       */
      @java.lang.Override
      public boolean hasTeamUiLogo() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional uint64 team_ui_logo = 52;</code>
       * @return The teamUiLogo.
       */
      @java.lang.Override
      public long getTeamUiLogo() {
        return teamUiLogo_;
      }
      /**
       * <code>optional uint64 team_ui_logo = 52;</code>
       * @param value The teamUiLogo to set.
       * @return This builder for chaining.
       */
      public Builder setTeamUiLogo(long value) {

        teamUiLogo_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_ui_logo = 52;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamUiLogo() {
        bitField0_ = (bitField0_ & ~0x00004000);
        teamUiLogo_ = 0L;
        onChanged();
        return this;
      }

      private long teamBaseLogo_ ;
      /**
       * <code>optional uint64 team_base_logo = 53;</code>
       * @return Whether the teamBaseLogo field is set.
       */
      @java.lang.Override
      public boolean hasTeamBaseLogo() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional uint64 team_base_logo = 53;</code>
       * @return The teamBaseLogo.
       */
      @java.lang.Override
      public long getTeamBaseLogo() {
        return teamBaseLogo_;
      }
      /**
       * <code>optional uint64 team_base_logo = 53;</code>
       * @param value The teamBaseLogo to set.
       * @return This builder for chaining.
       */
      public Builder setTeamBaseLogo(long value) {

        teamBaseLogo_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_base_logo = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamBaseLogo() {
        bitField0_ = (bitField0_ & ~0x00008000);
        teamBaseLogo_ = 0L;
        onChanged();
        return this;
      }

      private int matchDisabledUntilDate_ ;
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       * @return Whether the matchDisabledUntilDate field is set.
       */
      @java.lang.Override
      public boolean hasMatchDisabledUntilDate() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       * @return The matchDisabledUntilDate.
       */
      @java.lang.Override
      public int getMatchDisabledUntilDate() {
        return matchDisabledUntilDate_;
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       * @param value The matchDisabledUntilDate to set.
       * @return This builder for chaining.
       */
      public Builder setMatchDisabledUntilDate(int value) {

        matchDisabledUntilDate_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchDisabledUntilDate() {
        bitField0_ = (bitField0_ & ~0x00010000);
        matchDisabledUntilDate_ = 0;
        onChanged();
        return this;
      }

      private int matchDisabledAccountId_ ;
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       * @return Whether the matchDisabledAccountId field is set.
       */
      @java.lang.Override
      public boolean hasMatchDisabledAccountId() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       * @return The matchDisabledAccountId.
       */
      @java.lang.Override
      public int getMatchDisabledAccountId() {
        return matchDisabledAccountId_;
      }
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       * @param value The matchDisabledAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setMatchDisabledAccountId(int value) {

        matchDisabledAccountId_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchDisabledAccountId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        matchDisabledAccountId_ = 0;
        onChanged();
        return this;
      }

      private int matchmakingMaxRangeMinutes_ ;
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       * @return Whether the matchmakingMaxRangeMinutes field is set.
       */
      @java.lang.Override
      public boolean hasMatchmakingMaxRangeMinutes() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       * @return The matchmakingMaxRangeMinutes.
       */
      @java.lang.Override
      public int getMatchmakingMaxRangeMinutes() {
        return matchmakingMaxRangeMinutes_;
      }
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       * @param value The matchmakingMaxRangeMinutes to set.
       * @return This builder for chaining.
       */
      public Builder setMatchmakingMaxRangeMinutes(int value) {

        matchmakingMaxRangeMinutes_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchmakingMaxRangeMinutes() {
        bitField0_ = (bitField0_ & ~0x00040000);
        matchmakingMaxRangeMinutes_ = 0;
        onChanged();
        return this;
      }

      private int matchlanguages_ ;
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       * @return Whether the matchlanguages field is set.
       */
      @java.lang.Override
      public boolean hasMatchlanguages() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       * @return The matchlanguages.
       */
      @java.lang.Override
      public int getMatchlanguages() {
        return matchlanguages_;
      }
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       * @param value The matchlanguages to set.
       * @return This builder for chaining.
       */
      public Builder setMatchlanguages(int value) {

        matchlanguages_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchlanguages() {
        bitField0_ = (bitField0_ & ~0x00080000);
        matchlanguages_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00100000) != 0)) {
          members_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember>(members_);
          bitField0_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00100000);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00100000) != 0),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      private int lowPriorityGamesRemaining_ ;
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       * @return Whether the lowPriorityGamesRemaining field is set.
       */
      @java.lang.Override
      public boolean hasLowPriorityGamesRemaining() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       * @return The lowPriorityGamesRemaining.
       */
      @java.lang.Override
      public int getLowPriorityGamesRemaining() {
        return lowPriorityGamesRemaining_;
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       * @param value The lowPriorityGamesRemaining to set.
       * @return This builder for chaining.
       */
      public Builder setLowPriorityGamesRemaining(int value) {

        lowPriorityGamesRemaining_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowPriorityGamesRemaining() {
        bitField0_ = (bitField0_ & ~0x00200000);
        lowPriorityGamesRemaining_ = 0;
        onChanged();
        return this;
      }

      private boolean openForJoinRequests_ ;
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       * @return Whether the openForJoinRequests field is set.
       */
      @java.lang.Override
      public boolean hasOpenForJoinRequests() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       * @return The openForJoinRequests.
       */
      @java.lang.Override
      public boolean getOpenForJoinRequests() {
        return openForJoinRequests_;
      }
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       * @param value The openForJoinRequests to set.
       * @return This builder for chaining.
       */
      public Builder setOpenForJoinRequests(boolean value) {

        openForJoinRequests_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpenForJoinRequests() {
        bitField0_ = (bitField0_ & ~0x00400000);
        openForJoinRequests_ = false;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> sentInvites_ =
        java.util.Collections.emptyList();
      private void ensureSentInvitesIsMutable() {
        if (!((bitField0_ & 0x00800000) != 0)) {
          sentInvites_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite>(sentInvites_);
          bitField0_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> sentInvitesBuilder_;

      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> getSentInvitesList() {
        if (sentInvitesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sentInvites_);
        } else {
          return sentInvitesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public int getSentInvitesCount() {
        if (sentInvitesBuilder_ == null) {
          return sentInvites_.size();
        } else {
          return sentInvitesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getSentInvites(int index) {
        if (sentInvitesBuilder_ == null) {
          return sentInvites_.get(index);
        } else {
          return sentInvitesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder setSentInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite value) {
        if (sentInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentInvitesIsMutable();
          sentInvites_.set(index, value);
          onChanged();
        } else {
          sentInvitesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder setSentInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder builderForValue) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.set(index, builderForValue.build());
          onChanged();
        } else {
          sentInvitesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite value) {
        if (sentInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentInvitesIsMutable();
          sentInvites_.add(value);
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite value) {
        if (sentInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentInvitesIsMutable();
          sentInvites_.add(index, value);
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder builderForValue) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.add(builderForValue.build());
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder builderForValue) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.add(index, builderForValue.build());
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addAllSentInvites(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> values) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sentInvites_);
          onChanged();
        } else {
          sentInvitesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder clearSentInvites() {
        if (sentInvitesBuilder_ == null) {
          sentInvites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
          onChanged();
        } else {
          sentInvitesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder removeSentInvites(int index) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.remove(index);
          onChanged();
        } else {
          sentInvitesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder getSentInvitesBuilder(
          int index) {
        return getSentInvitesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder getSentInvitesOrBuilder(
          int index) {
        if (sentInvitesBuilder_ == null) {
          return sentInvites_.get(index);  } else {
          return sentInvitesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
           getSentInvitesOrBuilderList() {
        if (sentInvitesBuilder_ != null) {
          return sentInvitesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sentInvites_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder addSentInvitesBuilder() {
        return getSentInvitesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder addSentInvitesBuilder(
          int index) {
        return getSentInvitesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder> 
           getSentInvitesBuilderList() {
        return getSentInvitesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
          getSentInvitesFieldBuilder() {
        if (sentInvitesBuilder_ == null) {
          sentInvitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder>(
                  sentInvites_,
                  ((bitField0_ & 0x00800000) != 0),
                  getParentForChildren(),
                  isClean());
          sentInvites_ = null;
        }
        return sentInvitesBuilder_;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> recvInvites_ =
        java.util.Collections.emptyList();
      private void ensureRecvInvitesIsMutable() {
        if (!((bitField0_ & 0x01000000) != 0)) {
          recvInvites_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite>(recvInvites_);
          bitField0_ |= 0x01000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> recvInvitesBuilder_;

      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> getRecvInvitesList() {
        if (recvInvitesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recvInvites_);
        } else {
          return recvInvitesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public int getRecvInvitesCount() {
        if (recvInvitesBuilder_ == null) {
          return recvInvites_.size();
        } else {
          return recvInvitesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getRecvInvites(int index) {
        if (recvInvitesBuilder_ == null) {
          return recvInvites_.get(index);
        } else {
          return recvInvitesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder setRecvInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite value) {
        if (recvInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvInvitesIsMutable();
          recvInvites_.set(index, value);
          onChanged();
        } else {
          recvInvitesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder setRecvInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder builderForValue) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.set(index, builderForValue.build());
          onChanged();
        } else {
          recvInvitesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite value) {
        if (recvInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvInvitesIsMutable();
          recvInvites_.add(value);
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite value) {
        if (recvInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvInvitesIsMutable();
          recvInvites_.add(index, value);
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder builderForValue) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.add(builderForValue.build());
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder builderForValue) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.add(index, builderForValue.build());
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addAllRecvInvites(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite> values) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, recvInvites_);
          onChanged();
        } else {
          recvInvitesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder clearRecvInvites() {
        if (recvInvitesBuilder_ == null) {
          recvInvites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
          onChanged();
        } else {
          recvInvitesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder removeRecvInvites(int index) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.remove(index);
          onChanged();
        } else {
          recvInvitesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder getRecvInvitesBuilder(
          int index) {
        return getRecvInvitesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder getRecvInvitesOrBuilder(
          int index) {
        if (recvInvitesBuilder_ == null) {
          return recvInvites_.get(index);  } else {
          return recvInvitesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
           getRecvInvitesOrBuilderList() {
        if (recvInvitesBuilder_ != null) {
          return recvInvitesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recvInvites_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder addRecvInvitesBuilder() {
        return getRecvInvitesFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder addRecvInvitesBuilder(
          int index) {
        return getRecvInvitesFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder> 
           getRecvInvitesBuilderList() {
        return getRecvInvitesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder> 
          getRecvInvitesFieldBuilder() {
        if (recvInvitesBuilder_ == null) {
          recvInvitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder>(
                  recvInvites_,
                  ((bitField0_ & 0x01000000) != 0),
                  getParentForChildren(),
                  isClean());
          recvInvites_ = null;
        }
        return recvInvitesBuilder_;
      }

      private int accountFlags_ ;
      /**
       * <code>optional uint32 account_flags = 43;</code>
       * @return Whether the accountFlags field is set.
       */
      @java.lang.Override
      public boolean hasAccountFlags() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <code>optional uint32 account_flags = 43;</code>
       * @return The accountFlags.
       */
      @java.lang.Override
      public int getAccountFlags() {
        return accountFlags_;
      }
      /**
       * <code>optional uint32 account_flags = 43;</code>
       * @param value The accountFlags to set.
       * @return This builder for chaining.
       */
      public Builder setAccountFlags(int value) {

        accountFlags_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_flags = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccountFlags() {
        bitField0_ = (bitField0_ & ~0x02000000);
        accountFlags_ = 0;
        onChanged();
        return this;
      }

      private int regionSelectFlags_ ;
      /**
       * <code>optional uint32 region_select_flags = 44;</code>
       * @return Whether the regionSelectFlags field is set.
       */
      @java.lang.Override
      public boolean hasRegionSelectFlags() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>optional uint32 region_select_flags = 44;</code>
       * @return The regionSelectFlags.
       */
      @java.lang.Override
      public int getRegionSelectFlags() {
        return regionSelectFlags_;
      }
      /**
       * <code>optional uint32 region_select_flags = 44;</code>
       * @param value The regionSelectFlags to set.
       * @return This builder for chaining.
       */
      public Builder setRegionSelectFlags(int value) {

        regionSelectFlags_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 region_select_flags = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegionSelectFlags() {
        bitField0_ = (bitField0_ & ~0x04000000);
        regionSelectFlags_ = 0;
        onChanged();
        return this;
      }

      private int exclusiveTournamentId_ ;
      /**
       * <code>optional uint32 exclusive_tournament_id = 45;</code>
       * @return Whether the exclusiveTournamentId field is set.
       */
      @java.lang.Override
      public boolean hasExclusiveTournamentId() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <code>optional uint32 exclusive_tournament_id = 45;</code>
       * @return The exclusiveTournamentId.
       */
      @java.lang.Override
      public int getExclusiveTournamentId() {
        return exclusiveTournamentId_;
      }
      /**
       * <code>optional uint32 exclusive_tournament_id = 45;</code>
       * @param value The exclusiveTournamentId to set.
       * @return This builder for chaining.
       */
      public Builder setExclusiveTournamentId(int value) {

        exclusiveTournamentId_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 exclusive_tournament_id = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearExclusiveTournamentId() {
        bitField0_ = (bitField0_ & ~0x08000000);
        exclusiveTournamentId_ = 0;
        onChanged();
        return this;
      }

      private int tourneyDivisionId_ ;
      /**
       * <code>optional uint32 tourney_division_id = 47;</code>
       * @return Whether the tourneyDivisionId field is set.
       */
      @java.lang.Override
      public boolean hasTourneyDivisionId() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <code>optional uint32 tourney_division_id = 47;</code>
       * @return The tourneyDivisionId.
       */
      @java.lang.Override
      public int getTourneyDivisionId() {
        return tourneyDivisionId_;
      }
      /**
       * <code>optional uint32 tourney_division_id = 47;</code>
       * @param value The tourneyDivisionId to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyDivisionId(int value) {

        tourneyDivisionId_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_division_id = 47;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyDivisionId() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tourneyDivisionId_ = 0;
        onChanged();
        return this;
      }

      private int tourneyScheduleTime_ ;
      /**
       * <code>optional uint32 tourney_schedule_time = 48;</code>
       * @return Whether the tourneyScheduleTime field is set.
       */
      @java.lang.Override
      public boolean hasTourneyScheduleTime() {
        return ((bitField0_ & 0x20000000) != 0);
      }
      /**
       * <code>optional uint32 tourney_schedule_time = 48;</code>
       * @return The tourneyScheduleTime.
       */
      @java.lang.Override
      public int getTourneyScheduleTime() {
        return tourneyScheduleTime_;
      }
      /**
       * <code>optional uint32 tourney_schedule_time = 48;</code>
       * @param value The tourneyScheduleTime to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyScheduleTime(int value) {

        tourneyScheduleTime_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_schedule_time = 48;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyScheduleTime() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tourneyScheduleTime_ = 0;
        onChanged();
        return this;
      }

      private int tourneySkillLevel_ ;
      /**
       * <code>optional uint32 tourney_skill_level = 49;</code>
       * @return Whether the tourneySkillLevel field is set.
       */
      @java.lang.Override
      public boolean hasTourneySkillLevel() {
        return ((bitField0_ & 0x40000000) != 0);
      }
      /**
       * <code>optional uint32 tourney_skill_level = 49;</code>
       * @return The tourneySkillLevel.
       */
      @java.lang.Override
      public int getTourneySkillLevel() {
        return tourneySkillLevel_;
      }
      /**
       * <code>optional uint32 tourney_skill_level = 49;</code>
       * @param value The tourneySkillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTourneySkillLevel(int value) {

        tourneySkillLevel_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_skill_level = 49;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneySkillLevel() {
        bitField0_ = (bitField0_ & ~0x40000000);
        tourneySkillLevel_ = 0;
        onChanged();
        return this;
      }

      private int tourneyBracketRound_ ;
      /**
       * <code>optional uint32 tourney_bracket_round = 50;</code>
       * @return Whether the tourneyBracketRound field is set.
       */
      @java.lang.Override
      public boolean hasTourneyBracketRound() {
        return ((bitField0_ & 0x80000000) != 0);
      }
      /**
       * <code>optional uint32 tourney_bracket_round = 50;</code>
       * @return The tourneyBracketRound.
       */
      @java.lang.Override
      public int getTourneyBracketRound() {
        return tourneyBracketRound_;
      }
      /**
       * <code>optional uint32 tourney_bracket_round = 50;</code>
       * @param value The tourneyBracketRound to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyBracketRound(int value) {

        tourneyBracketRound_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_bracket_round = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyBracketRound() {
        bitField0_ = (bitField0_ & ~0x80000000);
        tourneyBracketRound_ = 0;
        onChanged();
        return this;
      }

      private int tourneyQueueDeadlineTime_ ;
      /**
       * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
       * @return Whether the tourneyQueueDeadlineTime field is set.
       */
      @java.lang.Override
      public boolean hasTourneyQueueDeadlineTime() {
        return ((bitField1_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
       * @return The tourneyQueueDeadlineTime.
       */
      @java.lang.Override
      public int getTourneyQueueDeadlineTime() {
        return tourneyQueueDeadlineTime_;
      }
      /**
       * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
       * @param value The tourneyQueueDeadlineTime to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyQueueDeadlineTime(int value) {

        tourneyQueueDeadlineTime_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tourney_queue_deadline_time = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyQueueDeadlineTime() {
        bitField1_ = (bitField1_ & ~0x00000001);
        tourneyQueueDeadlineTime_ = 0;
        onChanged();
        return this;
      }

      private int tourneyQueueDeadlineState_ = 0;
      /**
       * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
       * @return Whether the tourneyQueueDeadlineState field is set.
       */
      @java.lang.Override public boolean hasTourneyQueueDeadlineState() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
       * @return The tourneyQueueDeadlineState.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState getTourneyQueueDeadlineState() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState result = kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState.forNumber(tourneyQueueDeadlineState_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState.k_ETourneyQueueDeadlineState_Normal : result;
      }
      /**
       * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
       * @param value The tourneyQueueDeadlineState to set.
       * @return This builder for chaining.
       */
      public Builder setTourneyQueueDeadlineState(kz.moltenhaze.proto.dota.DotaSharedEnums.ETourneyQueueDeadlineState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x00000002;
        tourneyQueueDeadlineState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETourneyQueueDeadlineState tourney_queue_deadline_state = 55 [default = k_ETourneyQueueDeadlineState_Normal];</code>
       * @return This builder for chaining.
       */
      public Builder clearTourneyQueueDeadlineState() {
        bitField1_ = (bitField1_ & ~0x00000002);
        tourneyQueueDeadlineState_ = 0;
        onChanged();
        return this;
      }

      private int partyBuilderSlotsToFill_ ;
      /**
       * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
       * @return Whether the partyBuilderSlotsToFill field is set.
       */
      @java.lang.Override
      public boolean hasPartyBuilderSlotsToFill() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
       * @return The partyBuilderSlotsToFill.
       */
      @java.lang.Override
      public int getPartyBuilderSlotsToFill() {
        return partyBuilderSlotsToFill_;
      }
      /**
       * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
       * @param value The partyBuilderSlotsToFill to set.
       * @return This builder for chaining.
       */
      public Builder setPartyBuilderSlotsToFill(int value) {

        partyBuilderSlotsToFill_ = value;
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 party_builder_slots_to_fill = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartyBuilderSlotsToFill() {
        bitField1_ = (bitField1_ & ~0x00000004);
        partyBuilderSlotsToFill_ = 0;
        onChanged();
        return this;
      }

      private int partyBuilderMatchGroups_ ;
      /**
       * <code>optional uint32 party_builder_match_groups = 57;</code>
       * @return Whether the partyBuilderMatchGroups field is set.
       */
      @java.lang.Override
      public boolean hasPartyBuilderMatchGroups() {
        return ((bitField1_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 party_builder_match_groups = 57;</code>
       * @return The partyBuilderMatchGroups.
       */
      @java.lang.Override
      public int getPartyBuilderMatchGroups() {
        return partyBuilderMatchGroups_;
      }
      /**
       * <code>optional uint32 party_builder_match_groups = 57;</code>
       * @param value The partyBuilderMatchGroups to set.
       * @return This builder for chaining.
       */
      public Builder setPartyBuilderMatchGroups(int value) {

        partyBuilderMatchGroups_ = value;
        bitField1_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 party_builder_match_groups = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartyBuilderMatchGroups() {
        bitField1_ = (bitField1_ & ~0x00000008);
        partyBuilderMatchGroups_ = 0;
        onChanged();
        return this;
      }

      private int partyBuilderStartTime_ ;
      /**
       * <code>optional uint32 party_builder_start_time = 58;</code>
       * @return Whether the partyBuilderStartTime field is set.
       */
      @java.lang.Override
      public boolean hasPartyBuilderStartTime() {
        return ((bitField1_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 party_builder_start_time = 58;</code>
       * @return The partyBuilderStartTime.
       */
      @java.lang.Override
      public int getPartyBuilderStartTime() {
        return partyBuilderStartTime_;
      }
      /**
       * <code>optional uint32 party_builder_start_time = 58;</code>
       * @param value The partyBuilderStartTime to set.
       * @return This builder for chaining.
       */
      public Builder setPartyBuilderStartTime(int value) {

        partyBuilderStartTime_ = value;
        bitField1_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 party_builder_start_time = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartyBuilderStartTime() {
        bitField1_ = (bitField1_ & ~0x00000010);
        partyBuilderStartTime_ = 0;
        onChanged();
        return this;
      }

      private boolean soloQueue_ ;
      /**
       * <code>optional bool solo_queue = 59;</code>
       * @return Whether the soloQueue field is set.
       */
      @java.lang.Override
      public boolean hasSoloQueue() {
        return ((bitField1_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool solo_queue = 59;</code>
       * @return The soloQueue.
       */
      @java.lang.Override
      public boolean getSoloQueue() {
        return soloQueue_;
      }
      /**
       * <code>optional bool solo_queue = 59;</code>
       * @param value The soloQueue to set.
       * @return This builder for chaining.
       */
      public Builder setSoloQueue(boolean value) {

        soloQueue_ = value;
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool solo_queue = 59;</code>
       * @return This builder for chaining.
       */
      public Builder clearSoloQueue() {
        bitField1_ = (bitField1_ & ~0x00000020);
        soloQueue_ = false;
        onChanged();
        return this;
      }

      private int steamClanAccountId_ ;
      /**
       * <code>optional uint32 steam_clan_account_id = 61;</code>
       * @return Whether the steamClanAccountId field is set.
       */
      @java.lang.Override
      public boolean hasSteamClanAccountId() {
        return ((bitField1_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 steam_clan_account_id = 61;</code>
       * @return The steamClanAccountId.
       */
      @java.lang.Override
      public int getSteamClanAccountId() {
        return steamClanAccountId_;
      }
      /**
       * <code>optional uint32 steam_clan_account_id = 61;</code>
       * @param value The steamClanAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setSteamClanAccountId(int value) {

        steamClanAccountId_ = value;
        bitField1_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 steam_clan_account_id = 61;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamClanAccountId() {
        bitField1_ = (bitField1_ & ~0x00000040);
        steamClanAccountId_ = 0;
        onChanged();
        return this;
      }

      private kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus readyCheck_;
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder> readyCheckBuilder_;
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       * @return Whether the readyCheck field is set.
       */
      public boolean hasReadyCheck() {
        return ((bitField1_ & 0x00000080) != 0);
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       * @return The readyCheck.
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus getReadyCheck() {
        if (readyCheckBuilder_ == null) {
          return readyCheck_ == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance() : readyCheck_;
        } else {
          return readyCheckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      public Builder setReadyCheck(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus value) {
        if (readyCheckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          readyCheck_ = value;
        } else {
          readyCheckBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      public Builder setReadyCheck(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder builderForValue) {
        if (readyCheckBuilder_ == null) {
          readyCheck_ = builderForValue.build();
        } else {
          readyCheckBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      public Builder mergeReadyCheck(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus value) {
        if (readyCheckBuilder_ == null) {
          if (((bitField1_ & 0x00000080) != 0) &&
            readyCheck_ != null &&
            readyCheck_ != kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance()) {
            getReadyCheckBuilder().mergeFrom(value);
          } else {
            readyCheck_ = value;
          }
        } else {
          readyCheckBuilder_.mergeFrom(value);
        }
        if (readyCheck_ != null) {
          bitField1_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      public Builder clearReadyCheck() {
        bitField1_ = (bitField1_ & ~0x00000080);
        readyCheck_ = null;
        if (readyCheckBuilder_ != null) {
          readyCheckBuilder_.dispose();
          readyCheckBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder getReadyCheckBuilder() {
        bitField1_ |= 0x00000080;
        onChanged();
        return getReadyCheckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder getReadyCheckOrBuilder() {
        if (readyCheckBuilder_ != null) {
          return readyCheckBuilder_.getMessageOrBuilder();
        } else {
          return readyCheck_ == null ?
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance() : readyCheck_;
        }
      }
      /**
       * <code>optional .CMsgReadyCheckStatus ready_check = 62;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder> 
          getReadyCheckFieldBuilder() {
        if (readyCheckBuilder_ == null) {
          readyCheckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder>(
                  getReadyCheck(),
                  getParentForChildren(),
                  isClean());
          readyCheck_ = null;
        }
        return readyCheckBuilder_;
      }

      private int customGameDisabledUntilDate_ ;
      /**
       * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
       * @return Whether the customGameDisabledUntilDate field is set.
       */
      @java.lang.Override
      public boolean hasCustomGameDisabledUntilDate() {
        return ((bitField1_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
       * @return The customGameDisabledUntilDate.
       */
      @java.lang.Override
      public int getCustomGameDisabledUntilDate() {
        return customGameDisabledUntilDate_;
      }
      /**
       * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
       * @param value The customGameDisabledUntilDate to set.
       * @return This builder for chaining.
       */
      public Builder setCustomGameDisabledUntilDate(int value) {

        customGameDisabledUntilDate_ = value;
        bitField1_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 custom_game_disabled_until_date = 63;</code>
       * @return This builder for chaining.
       */
      public Builder clearCustomGameDisabledUntilDate() {
        bitField1_ = (bitField1_ & ~0x00000100);
        customGameDisabledUntilDate_ = 0;
        onChanged();
        return this;
      }

      private int customGameDisabledAccountId_ ;
      /**
       * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
       * @return Whether the customGameDisabledAccountId field is set.
       */
      @java.lang.Override
      public boolean hasCustomGameDisabledAccountId() {
        return ((bitField1_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
       * @return The customGameDisabledAccountId.
       */
      @java.lang.Override
      public int getCustomGameDisabledAccountId() {
        return customGameDisabledAccountId_;
      }
      /**
       * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
       * @param value The customGameDisabledAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setCustomGameDisabledAccountId(int value) {

        customGameDisabledAccountId_ = value;
        bitField1_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 custom_game_disabled_account_id = 64;</code>
       * @return This builder for chaining.
       */
      public Builder clearCustomGameDisabledAccountId() {
        bitField1_ = (bitField1_ & ~0x00000200);
        customGameDisabledAccountId_ = 0;
        onChanged();
        return this;
      }

      private boolean isChallengeMatch_ ;
      /**
       * <code>optional bool is_challenge_match = 65;</code>
       * @return Whether the isChallengeMatch field is set.
       */
      @java.lang.Override
      public boolean hasIsChallengeMatch() {
        return ((bitField1_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool is_challenge_match = 65;</code>
       * @return The isChallengeMatch.
       */
      @java.lang.Override
      public boolean getIsChallengeMatch() {
        return isChallengeMatch_;
      }
      /**
       * <code>optional bool is_challenge_match = 65;</code>
       * @param value The isChallengeMatch to set.
       * @return This builder for chaining.
       */
      public Builder setIsChallengeMatch(boolean value) {

        isChallengeMatch_ = value;
        bitField1_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_challenge_match = 65;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsChallengeMatch() {
        bitField1_ = (bitField1_ & ~0x00000400);
        isChallengeMatch_ = false;
        onChanged();
        return this;
      }

      private boolean partySearchBeaconActive_ ;
      /**
       * <code>optional bool party_search_beacon_active = 66;</code>
       * @return Whether the partySearchBeaconActive field is set.
       */
      @java.lang.Override
      public boolean hasPartySearchBeaconActive() {
        return ((bitField1_ & 0x00000800) != 0);
      }
      /**
       * <code>optional bool party_search_beacon_active = 66;</code>
       * @return The partySearchBeaconActive.
       */
      @java.lang.Override
      public boolean getPartySearchBeaconActive() {
        return partySearchBeaconActive_;
      }
      /**
       * <code>optional bool party_search_beacon_active = 66;</code>
       * @param value The partySearchBeaconActive to set.
       * @return This builder for chaining.
       */
      public Builder setPartySearchBeaconActive(boolean value) {

        partySearchBeaconActive_ = value;
        bitField1_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool party_search_beacon_active = 66;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartySearchBeaconActive() {
        bitField1_ = (bitField1_ & ~0x00000800);
        partySearchBeaconActive_ = false;
        onChanged();
        return this;
      }

      private int matchmakingFlags_ ;
      /**
       * <code>optional uint32 matchmaking_flags = 67;</code>
       * @return Whether the matchmakingFlags field is set.
       */
      @java.lang.Override
      public boolean hasMatchmakingFlags() {
        return ((bitField1_ & 0x00001000) != 0);
      }
      /**
       * <code>optional uint32 matchmaking_flags = 67;</code>
       * @return The matchmakingFlags.
       */
      @java.lang.Override
      public int getMatchmakingFlags() {
        return matchmakingFlags_;
      }
      /**
       * <code>optional uint32 matchmaking_flags = 67;</code>
       * @param value The matchmakingFlags to set.
       * @return This builder for chaining.
       */
      public Builder setMatchmakingFlags(int value) {

        matchmakingFlags_ = value;
        bitField1_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchmaking_flags = 67;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchmakingFlags() {
        bitField1_ = (bitField1_ & ~0x00001000);
        matchmakingFlags_ = 0;
        onChanged();
        return this;
      }

      private int highPriorityState_ = 0;
      /**
       * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
       * @return Whether the highPriorityState field is set.
       */
      @java.lang.Override public boolean hasHighPriorityState() {
        return ((bitField1_ & 0x00002000) != 0);
      }
      /**
       * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
       * @return The highPriorityState.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState getHighPriorityState() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState.forNumber(highPriorityState_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState.k_EHighPriorityMM_Unknown : result;
      }
      /**
       * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
       * @param value The highPriorityState to set.
       * @return This builder for chaining.
       */
      public Builder setHighPriorityState(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EHighPriorityMMState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x00002000;
        highPriorityState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .EHighPriorityMMState high_priority_state = 68 [default = k_EHighPriorityMM_Unknown];</code>
       * @return This builder for chaining.
       */
      public Builder clearHighPriorityState() {
        bitField1_ = (bitField1_ & ~0x00002000);
        highPriorityState_ = 0;
        onChanged();
        return this;
      }

      private boolean laneSelectionsEnabled_ ;
      /**
       * <code>optional bool lane_selections_enabled = 69;</code>
       * @return Whether the laneSelectionsEnabled field is set.
       */
      @java.lang.Override
      public boolean hasLaneSelectionsEnabled() {
        return ((bitField1_ & 0x00004000) != 0);
      }
      /**
       * <code>optional bool lane_selections_enabled = 69;</code>
       * @return The laneSelectionsEnabled.
       */
      @java.lang.Override
      public boolean getLaneSelectionsEnabled() {
        return laneSelectionsEnabled_;
      }
      /**
       * <code>optional bool lane_selections_enabled = 69;</code>
       * @param value The laneSelectionsEnabled to set.
       * @return This builder for chaining.
       */
      public Builder setLaneSelectionsEnabled(boolean value) {

        laneSelectionsEnabled_ = value;
        bitField1_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool lane_selections_enabled = 69;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneSelectionsEnabled() {
        bitField1_ = (bitField1_ & ~0x00004000);
        laneSelectionsEnabled_ = false;
        onChanged();
        return this;
      }

      private int customGameDifficultyMask_ ;
      /**
       * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
       * @return Whether the customGameDifficultyMask field is set.
       */
      @java.lang.Override
      public boolean hasCustomGameDifficultyMask() {
        return ((bitField1_ & 0x00008000) != 0);
      }
      /**
       * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
       * @return The customGameDifficultyMask.
       */
      @java.lang.Override
      public int getCustomGameDifficultyMask() {
        return customGameDifficultyMask_;
      }
      /**
       * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
       * @param value The customGameDifficultyMask to set.
       * @return This builder for chaining.
       */
      public Builder setCustomGameDifficultyMask(int value) {

        customGameDifficultyMask_ = value;
        bitField1_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 custom_game_difficulty_mask = 70;</code>
       * @return This builder for chaining.
       */
      public Builder clearCustomGameDifficultyMask() {
        bitField1_ = (bitField1_ & ~0x00008000);
        customGameDifficultyMask_ = 0;
        onChanged();
        return this;
      }

      private boolean isSteamChina_ ;
      /**
       * <code>optional bool is_steam_china = 71;</code>
       * @return Whether the isSteamChina field is set.
       */
      @java.lang.Override
      public boolean hasIsSteamChina() {
        return ((bitField1_ & 0x00010000) != 0);
      }
      /**
       * <code>optional bool is_steam_china = 71;</code>
       * @return The isSteamChina.
       */
      @java.lang.Override
      public boolean getIsSteamChina() {
        return isSteamChina_;
      }
      /**
       * <code>optional bool is_steam_china = 71;</code>
       * @param value The isSteamChina to set.
       * @return This builder for chaining.
       */
      public Builder setIsSteamChina(boolean value) {

        isSteamChina_ = value;
        bitField1_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_steam_china = 71;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSteamChina() {
        bitField1_ = (bitField1_ & ~0x00010000);
        isSteamChina_ = false;
        onChanged();
        return this;
      }

      private int botDifficultyMask_ ;
      /**
       * <code>optional uint32 bot_difficulty_mask = 72;</code>
       * @return Whether the botDifficultyMask field is set.
       */
      @java.lang.Override
      public boolean hasBotDifficultyMask() {
        return ((bitField1_ & 0x00020000) != 0);
      }
      /**
       * <code>optional uint32 bot_difficulty_mask = 72;</code>
       * @return The botDifficultyMask.
       */
      @java.lang.Override
      public int getBotDifficultyMask() {
        return botDifficultyMask_;
      }
      /**
       * <code>optional uint32 bot_difficulty_mask = 72;</code>
       * @param value The botDifficultyMask to set.
       * @return This builder for chaining.
       */
      public Builder setBotDifficultyMask(int value) {

        botDifficultyMask_ = value;
        bitField1_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bot_difficulty_mask = 72;</code>
       * @return This builder for chaining.
       */
      public Builder clearBotDifficultyMask() {
        bitField1_ = (bitField1_ & ~0x00020000);
        botDifficultyMask_ = 0;
        onChanged();
        return this;
      }

      private int botScriptIndexMask_ ;
      /**
       * <code>optional uint32 bot_script_index_mask = 73;</code>
       * @return Whether the botScriptIndexMask field is set.
       */
      @java.lang.Override
      public boolean hasBotScriptIndexMask() {
        return ((bitField1_ & 0x00040000) != 0);
      }
      /**
       * <code>optional uint32 bot_script_index_mask = 73;</code>
       * @return The botScriptIndexMask.
       */
      @java.lang.Override
      public int getBotScriptIndexMask() {
        return botScriptIndexMask_;
      }
      /**
       * <code>optional uint32 bot_script_index_mask = 73;</code>
       * @param value The botScriptIndexMask to set.
       * @return This builder for chaining.
       */
      public Builder setBotScriptIndexMask(int value) {

        botScriptIndexMask_ = value;
        bitField1_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bot_script_index_mask = 73;</code>
       * @return This builder for chaining.
       */
      public Builder clearBotScriptIndexMask() {
        bitField1_ = (bitField1_ & ~0x00040000);
        botScriptIndexMask_ = 0;
        onChanged();
        return this;
      }

      private boolean restrictedFromRanked_ ;
      /**
       * <code>optional bool restricted_from_ranked = 74;</code>
       * @return Whether the restrictedFromRanked field is set.
       */
      @java.lang.Override
      public boolean hasRestrictedFromRanked() {
        return ((bitField1_ & 0x00080000) != 0);
      }
      /**
       * <code>optional bool restricted_from_ranked = 74;</code>
       * @return The restrictedFromRanked.
       */
      @java.lang.Override
      public boolean getRestrictedFromRanked() {
        return restrictedFromRanked_;
      }
      /**
       * <code>optional bool restricted_from_ranked = 74;</code>
       * @param value The restrictedFromRanked to set.
       * @return This builder for chaining.
       */
      public Builder setRestrictedFromRanked(boolean value) {

        restrictedFromRanked_ = value;
        bitField1_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool restricted_from_ranked = 74;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestrictedFromRanked() {
        bitField1_ = (bitField1_ & ~0x00080000);
        restrictedFromRanked_ = false;
        onChanged();
        return this;
      }

      private int restrictedFromRankedAccountId_ ;
      /**
       * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
       * @return Whether the restrictedFromRankedAccountId field is set.
       */
      @java.lang.Override
      public boolean hasRestrictedFromRankedAccountId() {
        return ((bitField1_ & 0x00100000) != 0);
      }
      /**
       * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
       * @return The restrictedFromRankedAccountId.
       */
      @java.lang.Override
      public int getRestrictedFromRankedAccountId() {
        return restrictedFromRankedAccountId_;
      }
      /**
       * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
       * @param value The restrictedFromRankedAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setRestrictedFromRankedAccountId(int value) {

        restrictedFromRankedAccountId_ = value;
        bitField1_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 restricted_from_ranked_account_id = 75;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestrictedFromRankedAccountId() {
        bitField1_ = (bitField1_ & ~0x00100000);
        restrictedFromRankedAccountId_ = 0;
        onChanged();
        return this;
      }

      private int rankSpreadLikertScale_ ;
      /**
       * <code>optional uint32 rank_spread_likert_scale = 76;</code>
       * @return Whether the rankSpreadLikertScale field is set.
       */
      @java.lang.Override
      public boolean hasRankSpreadLikertScale() {
        return ((bitField1_ & 0x00200000) != 0);
      }
      /**
       * <code>optional uint32 rank_spread_likert_scale = 76;</code>
       * @return The rankSpreadLikertScale.
       */
      @java.lang.Override
      public int getRankSpreadLikertScale() {
        return rankSpreadLikertScale_;
      }
      /**
       * <code>optional uint32 rank_spread_likert_scale = 76;</code>
       * @param value The rankSpreadLikertScale to set.
       * @return This builder for chaining.
       */
      public Builder setRankSpreadLikertScale(int value) {

        rankSpreadLikertScale_ = value;
        bitField1_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rank_spread_likert_scale = 76;</code>
       * @return This builder for chaining.
       */
      public Builder clearRankSpreadLikertScale() {
        bitField1_ = (bitField1_ & ~0x00200000);
        rankSpreadLikertScale_ = 0;
        onChanged();
        return this;
      }

      private int behaviorScoreLikertScale_ ;
      /**
       * <code>optional uint32 behavior_score_likert_scale = 77;</code>
       * @return Whether the behaviorScoreLikertScale field is set.
       */
      @java.lang.Override
      public boolean hasBehaviorScoreLikertScale() {
        return ((bitField1_ & 0x00400000) != 0);
      }
      /**
       * <code>optional uint32 behavior_score_likert_scale = 77;</code>
       * @return The behaviorScoreLikertScale.
       */
      @java.lang.Override
      public int getBehaviorScoreLikertScale() {
        return behaviorScoreLikertScale_;
      }
      /**
       * <code>optional uint32 behavior_score_likert_scale = 77;</code>
       * @param value The behaviorScoreLikertScale to set.
       * @return This builder for chaining.
       */
      public Builder setBehaviorScoreLikertScale(int value) {

        behaviorScoreLikertScale_ = value;
        bitField1_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 behavior_score_likert_scale = 77;</code>
       * @return This builder for chaining.
       */
      public Builder clearBehaviorScoreLikertScale() {
        bitField1_ = (bitField1_ & ~0x00400000);
        behaviorScoreLikertScale_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAParty)
    }

    // @@protoc_insertion_point(class_scope:CSODOTAParty)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSODOTAParty>
        PARSER = new com.google.protobuf.AbstractParser<CSODOTAParty>() {
      @java.lang.Override
      public CSODOTAParty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSODOTAParty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAParty> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAParty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSODOTAPartyInviteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSODOTAPartyInvite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
     * @return Whether the groupId field is set.
     */
    boolean hasGroupId();
    /**
     * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
     * @return The groupId.
     */
    long getGroupId();

    /**
     * <code>optional fixed64 sender_id = 2;</code>
     * @return Whether the senderId field is set.
     */
    boolean hasSenderId();
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     * @return The senderId.
     */
    long getSenderId();

    /**
     * <code>optional string sender_name = 3;</code>
     * @return Whether the senderName field is set.
     */
    boolean hasSenderName();
    /**
     * <code>optional string sender_name = 3;</code>
     * @return The senderName.
     */
    java.lang.String getSenderName();
    /**
     * <code>optional string sender_name = 3;</code>
     * @return The bytes for senderName.
     */
    com.google.protobuf.ByteString
        getSenderNameBytes();

    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember> 
        getMembersList();
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember getMembers(int index);
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder getMembersOrBuilder(
        int index);

    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return Whether the teamId field is set.
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return The teamId.
     */
    int getTeamId();

    /**
     * <code>optional bool low_priority_status = 6;</code>
     * @return Whether the lowPriorityStatus field is set.
     */
    boolean hasLowPriorityStatus();
    /**
     * <code>optional bool low_priority_status = 6;</code>
     * @return The lowPriorityStatus.
     */
    boolean getLowPriorityStatus();

    /**
     * <code>optional bool as_coach = 7;</code>
     * @return Whether the asCoach field is set.
     */
    boolean hasAsCoach();
    /**
     * <code>optional bool as_coach = 7;</code>
     * @return The asCoach.
     */
    boolean getAsCoach();

    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     * @return Whether the inviteGid field is set.
     */
    boolean hasInviteGid();
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     * @return The inviteGid.
     */
    long getInviteGid();
  }
  /**
   * Protobuf type {@code CSODOTAPartyInvite}
   */
  public static final class CSODOTAPartyInvite extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CSODOTAPartyInvite)
      CSODOTAPartyInviteOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CSODOTAPartyInvite.class.getName());
    }
    // Use CSODOTAPartyInvite.newBuilder() to construct.
    private CSODOTAPartyInvite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSODOTAPartyInvite() {
      senderName_ = "";
      members_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder.class);
    }

    public interface PartyMemberOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CSODOTAPartyInvite.PartyMember)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return Whether the steamId field is set.
       */
      boolean hasSteamId();
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return The steamId.
       */
      long getSteamId();

      /**
       * <code>optional bool is_coach = 4;</code>
       * @return Whether the isCoach field is set.
       */
      boolean hasIsCoach();
      /**
       * <code>optional bool is_coach = 4;</code>
       * @return The isCoach.
       */
      boolean getIsCoach();
    }
    /**
     * Protobuf type {@code CSODOTAPartyInvite.PartyMember}
     */
    public static final class PartyMember extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CSODOTAPartyInvite.PartyMember)
        PartyMemberOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          PartyMember.class.getName());
      }
      // Use PartyMember.newBuilder() to construct.
      private PartyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PartyMember() {
        name_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STEAM_ID_FIELD_NUMBER = 2;
      private long steamId_ = 0L;
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }

      public static final int IS_COACH_FIELD_NUMBER = 4;
      private boolean isCoach_ = false;
      /**
       * <code>optional bool is_coach = 4;</code>
       * @return Whether the isCoach field is set.
       */
      @java.lang.Override
      public boolean hasIsCoach() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool is_coach = 4;</code>
       * @return The isCoach.
       */
      @java.lang.Override
      public boolean getIsCoach() {
        return isCoach_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFixed64(2, steamId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(4, isCoach_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, steamId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, isCoach_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasSteamId() != other.hasSteamId()) return false;
        if (hasSteamId()) {
          if (getSteamId()
              != other.getSteamId()) return false;
        }
        if (hasIsCoach() != other.hasIsCoach()) return false;
        if (hasIsCoach()) {
          if (getIsCoach()
              != other.getIsCoach()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasSteamId()) {
          hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSteamId());
        }
        if (hasIsCoach()) {
          hash = (37 * hash) + IS_COACH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsCoach());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CSODOTAPartyInvite.PartyMember}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CSODOTAPartyInvite.PartyMember)
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          steamId_ = 0L;
          isCoach_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.steamId_ = steamId_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.isCoach_ = isCoach_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.getDefaultInstance()) return this;
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          if (other.hasIsCoach()) {
            setIsCoach(other.getIsCoach());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 17: {
                  steamId_ = input.readFixed64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 32: {
                  isCoach_ = input.readBool();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private long steamId_ ;
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         * @return Whether the steamId field is set.
         */
        @java.lang.Override
        public boolean hasSteamId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         * @return The steamId.
         */
        @java.lang.Override
        public long getSteamId() {
          return steamId_;
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         * @param value The steamId to set.
         * @return This builder for chaining.
         */
        public Builder setSteamId(long value) {

          steamId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSteamId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          steamId_ = 0L;
          onChanged();
          return this;
        }

        private boolean isCoach_ ;
        /**
         * <code>optional bool is_coach = 4;</code>
         * @return Whether the isCoach field is set.
         */
        @java.lang.Override
        public boolean hasIsCoach() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool is_coach = 4;</code>
         * @return The isCoach.
         */
        @java.lang.Override
        public boolean getIsCoach() {
          return isCoach_;
        }
        /**
         * <code>optional bool is_coach = 4;</code>
         * @param value The isCoach to set.
         * @return This builder for chaining.
         */
        public Builder setIsCoach(boolean value) {

          isCoach_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_coach = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsCoach() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isCoach_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CSODOTAPartyInvite.PartyMember)
      }

      // @@protoc_insertion_point(class_scope:CSODOTAPartyInvite.PartyMember)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PartyMember>
          PARSER = new com.google.protobuf.AbstractParser<PartyMember>() {
        @java.lang.Override
        public PartyMember parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PartyMember> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PartyMember> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private long groupId_ = 0L;
    /**
     * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
     * @return Whether the groupId field is set.
     */
    @java.lang.Override
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
     * @return The groupId.
     */
    @java.lang.Override
    public long getGroupId() {
      return groupId_;
    }

    public static final int SENDER_ID_FIELD_NUMBER = 2;
    private long senderId_ = 0L;
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     * @return Whether the senderId field is set.
     */
    @java.lang.Override
    public boolean hasSenderId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     * @return The senderId.
     */
    @java.lang.Override
    public long getSenderId() {
      return senderId_;
    }

    public static final int SENDER_NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object senderName_ = "";
    /**
     * <code>optional string sender_name = 3;</code>
     * @return Whether the senderName field is set.
     */
    @java.lang.Override
    public boolean hasSenderName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string sender_name = 3;</code>
     * @return The senderName.
     */
    @java.lang.Override
    public java.lang.String getSenderName() {
      java.lang.Object ref = senderName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          senderName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sender_name = 3;</code>
     * @return The bytes for senderName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSenderNameBytes() {
      java.lang.Object ref = senderName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        senderName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEMBERS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember> members_;
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    @java.lang.Override
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    public static final int TEAM_ID_FIELD_NUMBER = 5;
    private int teamId_ = 0;
    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return Whether the teamId field is set.
     */
    @java.lang.Override
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 team_id = 5;</code>
     * @return The teamId.
     */
    @java.lang.Override
    public int getTeamId() {
      return teamId_;
    }

    public static final int LOW_PRIORITY_STATUS_FIELD_NUMBER = 6;
    private boolean lowPriorityStatus_ = false;
    /**
     * <code>optional bool low_priority_status = 6;</code>
     * @return Whether the lowPriorityStatus field is set.
     */
    @java.lang.Override
    public boolean hasLowPriorityStatus() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bool low_priority_status = 6;</code>
     * @return The lowPriorityStatus.
     */
    @java.lang.Override
    public boolean getLowPriorityStatus() {
      return lowPriorityStatus_;
    }

    public static final int AS_COACH_FIELD_NUMBER = 7;
    private boolean asCoach_ = false;
    /**
     * <code>optional bool as_coach = 7;</code>
     * @return Whether the asCoach field is set.
     */
    @java.lang.Override
    public boolean hasAsCoach() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bool as_coach = 7;</code>
     * @return The asCoach.
     */
    @java.lang.Override
    public boolean getAsCoach() {
      return asCoach_;
    }

    public static final int INVITE_GID_FIELD_NUMBER = 8;
    private long inviteGid_ = 0L;
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     * @return Whether the inviteGid field is set.
     */
    @java.lang.Override
    public boolean hasInviteGid() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     * @return The inviteGid.
     */
    @java.lang.Override
    public long getInviteGid() {
      return inviteGid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, groupId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, senderId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, senderName_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(4, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(5, teamId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(6, lowPriorityStatus_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(7, asCoach_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFixed64(8, inviteGid_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, groupId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, senderId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, senderName_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, lowPriorityStatus_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, asCoach_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(8, inviteGid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite) obj;

      if (hasGroupId() != other.hasGroupId()) return false;
      if (hasGroupId()) {
        if (getGroupId()
            != other.getGroupId()) return false;
      }
      if (hasSenderId() != other.hasSenderId()) return false;
      if (hasSenderId()) {
        if (getSenderId()
            != other.getSenderId()) return false;
      }
      if (hasSenderName() != other.hasSenderName()) return false;
      if (hasSenderName()) {
        if (!getSenderName()
            .equals(other.getSenderName())) return false;
      }
      if (!getMembersList()
          .equals(other.getMembersList())) return false;
      if (hasTeamId() != other.hasTeamId()) return false;
      if (hasTeamId()) {
        if (getTeamId()
            != other.getTeamId()) return false;
      }
      if (hasLowPriorityStatus() != other.hasLowPriorityStatus()) return false;
      if (hasLowPriorityStatus()) {
        if (getLowPriorityStatus()
            != other.getLowPriorityStatus()) return false;
      }
      if (hasAsCoach() != other.hasAsCoach()) return false;
      if (hasAsCoach()) {
        if (getAsCoach()
            != other.getAsCoach()) return false;
      }
      if (hasInviteGid() != other.hasInviteGid()) return false;
      if (hasInviteGid()) {
        if (getInviteGid()
            != other.getInviteGid()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGroupId()) {
        hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getGroupId());
      }
      if (hasSenderId()) {
        hash = (37 * hash) + SENDER_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSenderId());
      }
      if (hasSenderName()) {
        hash = (37 * hash) + SENDER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getSenderName().hashCode();
      }
      if (getMembersCount() > 0) {
        hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getMembersList().hashCode();
      }
      if (hasTeamId()) {
        hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTeamId();
      }
      if (hasLowPriorityStatus()) {
        hash = (37 * hash) + LOW_PRIORITY_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLowPriorityStatus());
      }
      if (hasAsCoach()) {
        hash = (37 * hash) + AS_COACH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAsCoach());
      }
      if (hasInviteGid()) {
        hash = (37 * hash) + INVITE_GID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInviteGid());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAPartyInvite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSODOTAPartyInvite)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInviteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        groupId_ = 0L;
        senderId_ = 0L;
        senderName_ = "";
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
        } else {
          members_ = null;
          membersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        teamId_ = 0;
        lowPriorityStatus_ = false;
        asCoach_ = false;
        inviteGid_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CSODOTAPartyInvite_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite result) {
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.groupId_ = groupId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.senderId_ = senderId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.senderName_ = senderName_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.teamId_ = teamId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.lowPriorityStatus_ = lowPriorityStatus_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.asCoach_ = asCoach_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.inviteGid_ = inviteGid_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.getDefaultInstance()) return this;
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasSenderId()) {
          setSenderId(other.getSenderId());
        }
        if (other.hasSenderName()) {
          senderName_ = other.senderName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000008);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasLowPriorityStatus()) {
          setLowPriorityStatus(other.getLowPriorityStatus());
        }
        if (other.hasAsCoach()) {
          setAsCoach(other.getAsCoach());
        }
        if (other.hasInviteGid()) {
          setInviteGid(other.getInviteGid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                groupId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 17: {
                senderId_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 26: {
                senderName_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.parser(),
                        extensionRegistry);
                if (membersBuilder_ == null) {
                  ensureMembersIsMutable();
                  members_.add(m);
                } else {
                  membersBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 40: {
                teamId_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                lowPriorityStatus_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                asCoach_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 65: {
                inviteGid_ = input.readFixed64();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long groupId_ ;
      /**
       * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
       * @return Whether the groupId field is set.
       */
      @java.lang.Override
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
       * @return The groupId.
       */
      @java.lang.Override
      public long getGroupId() {
        return groupId_;
      }
      /**
       * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
       * @param value The groupId to set.
       * @return This builder for chaining.
       */
      public Builder setGroupId(long value) {

        groupId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 group_id = 1 [(.key_field) = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        groupId_ = 0L;
        onChanged();
        return this;
      }

      private long senderId_ ;
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       * @return Whether the senderId field is set.
       */
      @java.lang.Override
      public boolean hasSenderId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       * @return The senderId.
       */
      @java.lang.Override
      public long getSenderId() {
        return senderId_;
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       * @param value The senderId to set.
       * @return This builder for chaining.
       */
      public Builder setSenderId(long value) {

        senderId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSenderId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        senderId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object senderName_ = "";
      /**
       * <code>optional string sender_name = 3;</code>
       * @return Whether the senderName field is set.
       */
      public boolean hasSenderName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string sender_name = 3;</code>
       * @return The senderName.
       */
      public java.lang.String getSenderName() {
        java.lang.Object ref = senderName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            senderName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sender_name = 3;</code>
       * @return The bytes for senderName.
       */
      public com.google.protobuf.ByteString
          getSenderNameBytes() {
        java.lang.Object ref = senderName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          senderName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sender_name = 3;</code>
       * @param value The senderName to set.
       * @return This builder for chaining.
       */
      public Builder setSenderName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        senderName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sender_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSenderName() {
        senderName_ = getDefaultInstance().getSenderName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string sender_name = 3;</code>
       * @param value The bytes for senderName to set.
       * @return This builder for chaining.
       */
      public Builder setSenderNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        senderName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          members_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember>(members_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder setMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite.PartyMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @return Whether the teamId field is set.
       */
      @java.lang.Override
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @return The teamId.
       */
      @java.lang.Override
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @param value The teamId to set.
       * @return This builder for chaining.
       */
      public Builder setTeamId(int value) {

        teamId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private boolean lowPriorityStatus_ ;
      /**
       * <code>optional bool low_priority_status = 6;</code>
       * @return Whether the lowPriorityStatus field is set.
       */
      @java.lang.Override
      public boolean hasLowPriorityStatus() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool low_priority_status = 6;</code>
       * @return The lowPriorityStatus.
       */
      @java.lang.Override
      public boolean getLowPriorityStatus() {
        return lowPriorityStatus_;
      }
      /**
       * <code>optional bool low_priority_status = 6;</code>
       * @param value The lowPriorityStatus to set.
       * @return This builder for chaining.
       */
      public Builder setLowPriorityStatus(boolean value) {

        lowPriorityStatus_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool low_priority_status = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowPriorityStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lowPriorityStatus_ = false;
        onChanged();
        return this;
      }

      private boolean asCoach_ ;
      /**
       * <code>optional bool as_coach = 7;</code>
       * @return Whether the asCoach field is set.
       */
      @java.lang.Override
      public boolean hasAsCoach() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bool as_coach = 7;</code>
       * @return The asCoach.
       */
      @java.lang.Override
      public boolean getAsCoach() {
        return asCoach_;
      }
      /**
       * <code>optional bool as_coach = 7;</code>
       * @param value The asCoach to set.
       * @return This builder for chaining.
       */
      public Builder setAsCoach(boolean value) {

        asCoach_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool as_coach = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAsCoach() {
        bitField0_ = (bitField0_ & ~0x00000040);
        asCoach_ = false;
        onChanged();
        return this;
      }

      private long inviteGid_ ;
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       * @return Whether the inviteGid field is set.
       */
      @java.lang.Override
      public boolean hasInviteGid() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       * @return The inviteGid.
       */
      @java.lang.Override
      public long getInviteGid() {
        return inviteGid_;
      }
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       * @param value The inviteGid to set.
       * @return This builder for chaining.
       */
      public Builder setInviteGid(long value) {

        inviteGid_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearInviteGid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        inviteGid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAPartyInvite)
    }

    // @@protoc_insertion_point(class_scope:CSODOTAPartyInvite)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSODOTAPartyInvite>
        PARSER = new com.google.protobuf.AbstractParser<CSODOTAPartyInvite>() {
      @java.lang.Override
      public CSODOTAPartyInvite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSODOTAPartyInvite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAPartyInvite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CSODOTAPartyInvite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgLeaverStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgLeaverState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 lobby_state = 1;</code>
     * @return Whether the lobbyState field is set.
     */
    boolean hasLobbyState();
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     * @return The lobbyState.
     */
    int getLobbyState();

    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     * @return Whether the gameState field is set.
     */
    boolean hasGameState();
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     * @return The gameState.
     */
    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState getGameState();

    /**
     * <code>optional bool leaver_detected = 3;</code>
     * @return Whether the leaverDetected field is set.
     */
    boolean hasLeaverDetected();
    /**
     * <code>optional bool leaver_detected = 3;</code>
     * @return The leaverDetected.
     */
    boolean getLeaverDetected();

    /**
     * <code>optional bool first_blood_happened = 4;</code>
     * @return Whether the firstBloodHappened field is set.
     */
    boolean hasFirstBloodHappened();
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     * @return The firstBloodHappened.
     */
    boolean getFirstBloodHappened();

    /**
     * <code>optional bool discard_match_results = 5;</code>
     * @return Whether the discardMatchResults field is set.
     */
    boolean hasDiscardMatchResults();
    /**
     * <code>optional bool discard_match_results = 5;</code>
     * @return The discardMatchResults.
     */
    boolean getDiscardMatchResults();

    /**
     * <code>optional bool mass_disconnect = 6;</code>
     * @return Whether the massDisconnect field is set.
     */
    boolean hasMassDisconnect();
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     * @return The massDisconnect.
     */
    boolean getMassDisconnect();
  }
  /**
   * Protobuf type {@code CMsgLeaverState}
   */
  public static final class CMsgLeaverState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgLeaverState)
      CMsgLeaverStateOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgLeaverState.class.getName());
    }
    // Use CMsgLeaverState.newBuilder() to construct.
    private CMsgLeaverState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgLeaverState() {
      gameState_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLeaverState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLeaverState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.Builder.class);
    }

    private int bitField0_;
    public static final int LOBBY_STATE_FIELD_NUMBER = 1;
    private int lobbyState_ = 0;
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     * @return Whether the lobbyState field is set.
     */
    @java.lang.Override
    public boolean hasLobbyState() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     * @return The lobbyState.
     */
    @java.lang.Override
    public int getLobbyState() {
      return lobbyState_;
    }

    public static final int GAME_STATE_FIELD_NUMBER = 2;
    private int gameState_ = 0;
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     * @return Whether the gameState field is set.
     */
    @java.lang.Override public boolean hasGameState() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     * @return The gameState.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState getGameState() {
      kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState.forNumber(gameState_);
      return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState.DOTA_GAMERULES_STATE_INIT : result;
    }

    public static final int LEAVER_DETECTED_FIELD_NUMBER = 3;
    private boolean leaverDetected_ = false;
    /**
     * <code>optional bool leaver_detected = 3;</code>
     * @return Whether the leaverDetected field is set.
     */
    @java.lang.Override
    public boolean hasLeaverDetected() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool leaver_detected = 3;</code>
     * @return The leaverDetected.
     */
    @java.lang.Override
    public boolean getLeaverDetected() {
      return leaverDetected_;
    }

    public static final int FIRST_BLOOD_HAPPENED_FIELD_NUMBER = 4;
    private boolean firstBloodHappened_ = false;
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     * @return Whether the firstBloodHappened field is set.
     */
    @java.lang.Override
    public boolean hasFirstBloodHappened() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     * @return The firstBloodHappened.
     */
    @java.lang.Override
    public boolean getFirstBloodHappened() {
      return firstBloodHappened_;
    }

    public static final int DISCARD_MATCH_RESULTS_FIELD_NUMBER = 5;
    private boolean discardMatchResults_ = false;
    /**
     * <code>optional bool discard_match_results = 5;</code>
     * @return Whether the discardMatchResults field is set.
     */
    @java.lang.Override
    public boolean hasDiscardMatchResults() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bool discard_match_results = 5;</code>
     * @return The discardMatchResults.
     */
    @java.lang.Override
    public boolean getDiscardMatchResults() {
      return discardMatchResults_;
    }

    public static final int MASS_DISCONNECT_FIELD_NUMBER = 6;
    private boolean massDisconnect_ = false;
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     * @return Whether the massDisconnect field is set.
     */
    @java.lang.Override
    public boolean hasMassDisconnect() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     * @return The massDisconnect.
     */
    @java.lang.Override
    public boolean getMassDisconnect() {
      return massDisconnect_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, lobbyState_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, gameState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, leaverDetected_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, firstBloodHappened_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(5, discardMatchResults_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(6, massDisconnect_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, lobbyState_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, gameState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, leaverDetected_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, firstBloodHappened_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, discardMatchResults_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, massDisconnect_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState) obj;

      if (hasLobbyState() != other.hasLobbyState()) return false;
      if (hasLobbyState()) {
        if (getLobbyState()
            != other.getLobbyState()) return false;
      }
      if (hasGameState() != other.hasGameState()) return false;
      if (hasGameState()) {
        if (gameState_ != other.gameState_) return false;
      }
      if (hasLeaverDetected() != other.hasLeaverDetected()) return false;
      if (hasLeaverDetected()) {
        if (getLeaverDetected()
            != other.getLeaverDetected()) return false;
      }
      if (hasFirstBloodHappened() != other.hasFirstBloodHappened()) return false;
      if (hasFirstBloodHappened()) {
        if (getFirstBloodHappened()
            != other.getFirstBloodHappened()) return false;
      }
      if (hasDiscardMatchResults() != other.hasDiscardMatchResults()) return false;
      if (hasDiscardMatchResults()) {
        if (getDiscardMatchResults()
            != other.getDiscardMatchResults()) return false;
      }
      if (hasMassDisconnect() != other.hasMassDisconnect()) return false;
      if (hasMassDisconnect()) {
        if (getMassDisconnect()
            != other.getMassDisconnect()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLobbyState()) {
        hash = (37 * hash) + LOBBY_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getLobbyState();
      }
      if (hasGameState()) {
        hash = (37 * hash) + GAME_STATE_FIELD_NUMBER;
        hash = (53 * hash) + gameState_;
      }
      if (hasLeaverDetected()) {
        hash = (37 * hash) + LEAVER_DETECTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLeaverDetected());
      }
      if (hasFirstBloodHappened()) {
        hash = (37 * hash) + FIRST_BLOOD_HAPPENED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFirstBloodHappened());
      }
      if (hasDiscardMatchResults()) {
        hash = (37 * hash) + DISCARD_MATCH_RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDiscardMatchResults());
      }
      if (hasMassDisconnect()) {
        hash = (37 * hash) + MASS_DISCONNECT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMassDisconnect());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgLeaverState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgLeaverState)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLeaverState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLeaverState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        lobbyState_ = 0;
        gameState_ = 0;
        leaverDetected_ = false;
        firstBloodHappened_ = false;
        discardMatchResults_ = false;
        massDisconnect_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLeaverState_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.lobbyState_ = lobbyState_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.gameState_ = gameState_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.leaverDetected_ = leaverDetected_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.firstBloodHappened_ = firstBloodHappened_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.discardMatchResults_ = discardMatchResults_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.massDisconnect_ = massDisconnect_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState.getDefaultInstance()) return this;
        if (other.hasLobbyState()) {
          setLobbyState(other.getLobbyState());
        }
        if (other.hasGameState()) {
          setGameState(other.getGameState());
        }
        if (other.hasLeaverDetected()) {
          setLeaverDetected(other.getLeaverDetected());
        }
        if (other.hasFirstBloodHappened()) {
          setFirstBloodHappened(other.getFirstBloodHappened());
        }
        if (other.hasDiscardMatchResults()) {
          setDiscardMatchResults(other.getDiscardMatchResults());
        }
        if (other.hasMassDisconnect()) {
          setMassDisconnect(other.getMassDisconnect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                lobbyState_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState tmpValue =
                    kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  gameState_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 24: {
                leaverDetected_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                firstBloodHappened_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                discardMatchResults_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                massDisconnect_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int lobbyState_ ;
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       * @return Whether the lobbyState field is set.
       */
      @java.lang.Override
      public boolean hasLobbyState() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       * @return The lobbyState.
       */
      @java.lang.Override
      public int getLobbyState() {
        return lobbyState_;
      }
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       * @param value The lobbyState to set.
       * @return This builder for chaining.
       */
      public Builder setLobbyState(int value) {

        lobbyState_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLobbyState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lobbyState_ = 0;
        onChanged();
        return this;
      }

      private int gameState_ = 0;
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       * @return Whether the gameState field is set.
       */
      @java.lang.Override public boolean hasGameState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       * @return The gameState.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState getGameState() {
        kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState result = kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState.forNumber(gameState_);
        return result == null ? kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState.DOTA_GAMERULES_STATE_INIT : result;
      }
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       * @param value The gameState to set.
       * @return This builder for chaining.
       */
      public Builder setGameState(kz.moltenhaze.proto.dota.DotaSharedEnums.DOTA_GameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        gameState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       * @return This builder for chaining.
       */
      public Builder clearGameState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameState_ = 0;
        onChanged();
        return this;
      }

      private boolean leaverDetected_ ;
      /**
       * <code>optional bool leaver_detected = 3;</code>
       * @return Whether the leaverDetected field is set.
       */
      @java.lang.Override
      public boolean hasLeaverDetected() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool leaver_detected = 3;</code>
       * @return The leaverDetected.
       */
      @java.lang.Override
      public boolean getLeaverDetected() {
        return leaverDetected_;
      }
      /**
       * <code>optional bool leaver_detected = 3;</code>
       * @param value The leaverDetected to set.
       * @return This builder for chaining.
       */
      public Builder setLeaverDetected(boolean value) {

        leaverDetected_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool leaver_detected = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeaverDetected() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leaverDetected_ = false;
        onChanged();
        return this;
      }

      private boolean firstBloodHappened_ ;
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       * @return Whether the firstBloodHappened field is set.
       */
      @java.lang.Override
      public boolean hasFirstBloodHappened() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       * @return The firstBloodHappened.
       */
      @java.lang.Override
      public boolean getFirstBloodHappened() {
        return firstBloodHappened_;
      }
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       * @param value The firstBloodHappened to set.
       * @return This builder for chaining.
       */
      public Builder setFirstBloodHappened(boolean value) {

        firstBloodHappened_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstBloodHappened() {
        bitField0_ = (bitField0_ & ~0x00000008);
        firstBloodHappened_ = false;
        onChanged();
        return this;
      }

      private boolean discardMatchResults_ ;
      /**
       * <code>optional bool discard_match_results = 5;</code>
       * @return Whether the discardMatchResults field is set.
       */
      @java.lang.Override
      public boolean hasDiscardMatchResults() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool discard_match_results = 5;</code>
       * @return The discardMatchResults.
       */
      @java.lang.Override
      public boolean getDiscardMatchResults() {
        return discardMatchResults_;
      }
      /**
       * <code>optional bool discard_match_results = 5;</code>
       * @param value The discardMatchResults to set.
       * @return This builder for chaining.
       */
      public Builder setDiscardMatchResults(boolean value) {

        discardMatchResults_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool discard_match_results = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDiscardMatchResults() {
        bitField0_ = (bitField0_ & ~0x00000010);
        discardMatchResults_ = false;
        onChanged();
        return this;
      }

      private boolean massDisconnect_ ;
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       * @return Whether the massDisconnect field is set.
       */
      @java.lang.Override
      public boolean hasMassDisconnect() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       * @return The massDisconnect.
       */
      @java.lang.Override
      public boolean getMassDisconnect() {
        return massDisconnect_;
      }
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       * @param value The massDisconnect to set.
       * @return This builder for chaining.
       */
      public Builder setMassDisconnect(boolean value) {

        massDisconnect_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMassDisconnect() {
        bitField0_ = (bitField0_ & ~0x00000020);
        massDisconnect_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgLeaverState)
    }

    // @@protoc_insertion_point(class_scope:CMsgLeaverState)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgLeaverState>
        PARSER = new com.google.protobuf.AbstractParser<CMsgLeaverState>() {
      @java.lang.Override
      public CMsgLeaverState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgLeaverState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgLeaverState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLeaverState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgReadyCheckStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgReadyCheckStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 start_timestamp = 1;</code>
     * @return Whether the startTimestamp field is set.
     */
    boolean hasStartTimestamp();
    /**
     * <code>optional uint32 start_timestamp = 1;</code>
     * @return The startTimestamp.
     */
    int getStartTimestamp();

    /**
     * <code>optional uint32 finish_timestamp = 2;</code>
     * @return Whether the finishTimestamp field is set.
     */
    boolean hasFinishTimestamp();
    /**
     * <code>optional uint32 finish_timestamp = 2;</code>
     * @return The finishTimestamp.
     */
    int getFinishTimestamp();

    /**
     * <code>optional uint32 initiator_account_id = 3;</code>
     * @return Whether the initiatorAccountId field is set.
     */
    boolean hasInitiatorAccountId();
    /**
     * <code>optional uint32 initiator_account_id = 3;</code>
     * @return The initiatorAccountId.
     */
    int getInitiatorAccountId();

    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember> 
        getReadyMembersList();
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember getReadyMembers(int index);
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    int getReadyMembersCount();
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder> 
        getReadyMembersOrBuilderList();
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder getReadyMembersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgReadyCheckStatus}
   */
  public static final class CMsgReadyCheckStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgReadyCheckStatus)
      CMsgReadyCheckStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgReadyCheckStatus.class.getName());
    }
    // Use CMsgReadyCheckStatus.newBuilder() to construct.
    private CMsgReadyCheckStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgReadyCheckStatus() {
      readyMembers_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder.class);
    }

    public interface ReadyMemberOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgReadyCheckStatus.ReadyMember)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      int getAccountId();

      /**
       * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return Whether the readyStatus field is set.
       */
      boolean hasReadyStatus();
      /**
       * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return The readyStatus.
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus getReadyStatus();
    }
    /**
     * Protobuf type {@code CMsgReadyCheckStatus.ReadyMember}
     */
    public static final class ReadyMember extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgReadyCheckStatus.ReadyMember)
        ReadyMemberOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          ReadyMember.class.getName());
      }
      // Use ReadyMember.newBuilder() to construct.
      private ReadyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ReadyMember() {
        readyStatus_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_ReadyMember_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_ReadyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder.class);
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_ = 0;
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return Whether the accountId field is set.
       */
      @java.lang.Override
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       * @return The accountId.
       */
      @java.lang.Override
      public int getAccountId() {
        return accountId_;
      }

      public static final int READY_STATUS_FIELD_NUMBER = 2;
      private int readyStatus_ = 0;
      /**
       * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return Whether the readyStatus field is set.
       */
      @java.lang.Override public boolean hasReadyStatus() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return The readyStatus.
       */
      @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus getReadyStatus() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.forNumber(readyStatus_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.k_EReadyCheckStatus_Unknown : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeEnum(2, readyStatus_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, readyStatus_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember) obj;

        if (hasAccountId() != other.hasAccountId()) return false;
        if (hasAccountId()) {
          if (getAccountId()
              != other.getAccountId()) return false;
        }
        if (hasReadyStatus() != other.hasReadyStatus()) return false;
        if (hasReadyStatus()) {
          if (readyStatus_ != other.readyStatus_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasReadyStatus()) {
          hash = (37 * hash) + READY_STATUS_FIELD_NUMBER;
          hash = (53 * hash) + readyStatus_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgReadyCheckStatus.ReadyMember}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgReadyCheckStatus.ReadyMember)
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_ReadyMember_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_ReadyMember_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          accountId_ = 0;
          readyStatus_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_ReadyMember_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.accountId_ = accountId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.readyStatus_ = readyStatus_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasReadyStatus()) {
            setReadyStatus(other.getReadyStatus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  accountId_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  int tmpRaw = input.readEnum();
                  kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus tmpValue =
                      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(2, tmpRaw);
                  } else {
                    readyStatus_ = tmpRaw;
                    bitField0_ |= 0x00000002;
                  }
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @return Whether the accountId field is set.
         */
        @java.lang.Override
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @return The accountId.
         */
        @java.lang.Override
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @param value The accountId to set.
         * @return This builder for chaining.
         */
        public Builder setAccountId(int value) {

          accountId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private int readyStatus_ = 0;
        /**
         * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
         * @return Whether the readyStatus field is set.
         */
        @java.lang.Override public boolean hasReadyStatus() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
         * @return The readyStatus.
         */
        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus getReadyStatus() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.forNumber(readyStatus_);
          return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.k_EReadyCheckStatus_Unknown : result;
        }
        /**
         * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
         * @param value The readyStatus to set.
         * @return This builder for chaining.
         */
        public Builder setReadyStatus(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          readyStatus_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .EReadyCheckStatus ready_status = 2 [default = k_EReadyCheckStatus_Unknown];</code>
         * @return This builder for chaining.
         */
        public Builder clearReadyStatus() {
          bitField0_ = (bitField0_ & ~0x00000002);
          readyStatus_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgReadyCheckStatus.ReadyMember)
      }

      // @@protoc_insertion_point(class_scope:CMsgReadyCheckStatus.ReadyMember)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ReadyMember>
          PARSER = new com.google.protobuf.AbstractParser<ReadyMember>() {
        @java.lang.Override
        public ReadyMember parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ReadyMember> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ReadyMember> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
    private int startTimestamp_ = 0;
    /**
     * <code>optional uint32 start_timestamp = 1;</code>
     * @return Whether the startTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 start_timestamp = 1;</code>
     * @return The startTimestamp.
     */
    @java.lang.Override
    public int getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int FINISH_TIMESTAMP_FIELD_NUMBER = 2;
    private int finishTimestamp_ = 0;
    /**
     * <code>optional uint32 finish_timestamp = 2;</code>
     * @return Whether the finishTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasFinishTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 finish_timestamp = 2;</code>
     * @return The finishTimestamp.
     */
    @java.lang.Override
    public int getFinishTimestamp() {
      return finishTimestamp_;
    }

    public static final int INITIATOR_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int initiatorAccountId_ = 0;
    /**
     * <code>optional uint32 initiator_account_id = 3;</code>
     * @return Whether the initiatorAccountId field is set.
     */
    @java.lang.Override
    public boolean hasInitiatorAccountId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 initiator_account_id = 3;</code>
     * @return The initiatorAccountId.
     */
    @java.lang.Override
    public int getInitiatorAccountId() {
      return initiatorAccountId_;
    }

    public static final int READY_MEMBERS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember> readyMembers_;
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember> getReadyMembersList() {
      return readyMembers_;
    }
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder> 
        getReadyMembersOrBuilderList() {
      return readyMembers_;
    }
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    @java.lang.Override
    public int getReadyMembersCount() {
      return readyMembers_.size();
    }
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember getReadyMembers(int index) {
      return readyMembers_.get(index);
    }
    /**
     * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder getReadyMembersOrBuilder(
        int index) {
      return readyMembers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, finishTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, initiatorAccountId_);
      }
      for (int i = 0; i < readyMembers_.size(); i++) {
        output.writeMessage(4, readyMembers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, finishTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, initiatorAccountId_);
      }
      for (int i = 0; i < readyMembers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, readyMembers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus) obj;

      if (hasStartTimestamp() != other.hasStartTimestamp()) return false;
      if (hasStartTimestamp()) {
        if (getStartTimestamp()
            != other.getStartTimestamp()) return false;
      }
      if (hasFinishTimestamp() != other.hasFinishTimestamp()) return false;
      if (hasFinishTimestamp()) {
        if (getFinishTimestamp()
            != other.getFinishTimestamp()) return false;
      }
      if (hasInitiatorAccountId() != other.hasInitiatorAccountId()) return false;
      if (hasInitiatorAccountId()) {
        if (getInitiatorAccountId()
            != other.getInitiatorAccountId()) return false;
      }
      if (!getReadyMembersList()
          .equals(other.getReadyMembersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartTimestamp()) {
        hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getStartTimestamp();
      }
      if (hasFinishTimestamp()) {
        hash = (37 * hash) + FINISH_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getFinishTimestamp();
      }
      if (hasInitiatorAccountId()) {
        hash = (37 * hash) + INITIATOR_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getInitiatorAccountId();
      }
      if (getReadyMembersCount() > 0) {
        hash = (37 * hash) + READY_MEMBERS_FIELD_NUMBER;
        hash = (53 * hash) + getReadyMembersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgReadyCheckStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgReadyCheckStatus)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        startTimestamp_ = 0;
        finishTimestamp_ = 0;
        initiatorAccountId_ = 0;
        if (readyMembersBuilder_ == null) {
          readyMembers_ = java.util.Collections.emptyList();
        } else {
          readyMembers_ = null;
          readyMembersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgReadyCheckStatus_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus result) {
        if (readyMembersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            readyMembers_ = java.util.Collections.unmodifiableList(readyMembers_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.readyMembers_ = readyMembers_;
        } else {
          result.readyMembers_ = readyMembersBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.startTimestamp_ = startTimestamp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.finishTimestamp_ = finishTimestamp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.initiatorAccountId_ = initiatorAccountId_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.getDefaultInstance()) return this;
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasFinishTimestamp()) {
          setFinishTimestamp(other.getFinishTimestamp());
        }
        if (other.hasInitiatorAccountId()) {
          setInitiatorAccountId(other.getInitiatorAccountId());
        }
        if (readyMembersBuilder_ == null) {
          if (!other.readyMembers_.isEmpty()) {
            if (readyMembers_.isEmpty()) {
              readyMembers_ = other.readyMembers_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureReadyMembersIsMutable();
              readyMembers_.addAll(other.readyMembers_);
            }
            onChanged();
          }
        } else {
          if (!other.readyMembers_.isEmpty()) {
            if (readyMembersBuilder_.isEmpty()) {
              readyMembersBuilder_.dispose();
              readyMembersBuilder_ = null;
              readyMembers_ = other.readyMembers_;
              bitField0_ = (bitField0_ & ~0x00000008);
              readyMembersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getReadyMembersFieldBuilder() : null;
            } else {
              readyMembersBuilder_.addAllMessages(other.readyMembers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                startTimestamp_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                finishTimestamp_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                initiatorAccountId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.parser(),
                        extensionRegistry);
                if (readyMembersBuilder_ == null) {
                  ensureReadyMembersIsMutable();
                  readyMembers_.add(m);
                } else {
                  readyMembersBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int startTimestamp_ ;
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return Whether the startTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return The startTimestamp.
       */
      @java.lang.Override
      public int getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @param value The startTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimestamp(int value) {

        startTimestamp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int finishTimestamp_ ;
      /**
       * <code>optional uint32 finish_timestamp = 2;</code>
       * @return Whether the finishTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasFinishTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 finish_timestamp = 2;</code>
       * @return The finishTimestamp.
       */
      @java.lang.Override
      public int getFinishTimestamp() {
        return finishTimestamp_;
      }
      /**
       * <code>optional uint32 finish_timestamp = 2;</code>
       * @param value The finishTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setFinishTimestamp(int value) {

        finishTimestamp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 finish_timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinishTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        finishTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int initiatorAccountId_ ;
      /**
       * <code>optional uint32 initiator_account_id = 3;</code>
       * @return Whether the initiatorAccountId field is set.
       */
      @java.lang.Override
      public boolean hasInitiatorAccountId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 initiator_account_id = 3;</code>
       * @return The initiatorAccountId.
       */
      @java.lang.Override
      public int getInitiatorAccountId() {
        return initiatorAccountId_;
      }
      /**
       * <code>optional uint32 initiator_account_id = 3;</code>
       * @param value The initiatorAccountId to set.
       * @return This builder for chaining.
       */
      public Builder setInitiatorAccountId(int value) {

        initiatorAccountId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 initiator_account_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitiatorAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        initiatorAccountId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember> readyMembers_ =
        java.util.Collections.emptyList();
      private void ensureReadyMembersIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          readyMembers_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember>(readyMembers_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder> readyMembersBuilder_;

      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember> getReadyMembersList() {
        if (readyMembersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(readyMembers_);
        } else {
          return readyMembersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public int getReadyMembersCount() {
        if (readyMembersBuilder_ == null) {
          return readyMembers_.size();
        } else {
          return readyMembersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember getReadyMembers(int index) {
        if (readyMembersBuilder_ == null) {
          return readyMembers_.get(index);
        } else {
          return readyMembersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder setReadyMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember value) {
        if (readyMembersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReadyMembersIsMutable();
          readyMembers_.set(index, value);
          onChanged();
        } else {
          readyMembersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder setReadyMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder builderForValue) {
        if (readyMembersBuilder_ == null) {
          ensureReadyMembersIsMutable();
          readyMembers_.set(index, builderForValue.build());
          onChanged();
        } else {
          readyMembersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder addReadyMembers(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember value) {
        if (readyMembersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReadyMembersIsMutable();
          readyMembers_.add(value);
          onChanged();
        } else {
          readyMembersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder addReadyMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember value) {
        if (readyMembersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReadyMembersIsMutable();
          readyMembers_.add(index, value);
          onChanged();
        } else {
          readyMembersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder addReadyMembers(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder builderForValue) {
        if (readyMembersBuilder_ == null) {
          ensureReadyMembersIsMutable();
          readyMembers_.add(builderForValue.build());
          onChanged();
        } else {
          readyMembersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder addReadyMembers(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder builderForValue) {
        if (readyMembersBuilder_ == null) {
          ensureReadyMembersIsMutable();
          readyMembers_.add(index, builderForValue.build());
          onChanged();
        } else {
          readyMembersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder addAllReadyMembers(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember> values) {
        if (readyMembersBuilder_ == null) {
          ensureReadyMembersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, readyMembers_);
          onChanged();
        } else {
          readyMembersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder clearReadyMembers() {
        if (readyMembersBuilder_ == null) {
          readyMembers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          readyMembersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public Builder removeReadyMembers(int index) {
        if (readyMembersBuilder_ == null) {
          ensureReadyMembersIsMutable();
          readyMembers_.remove(index);
          onChanged();
        } else {
          readyMembersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder getReadyMembersBuilder(
          int index) {
        return getReadyMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder getReadyMembersOrBuilder(
          int index) {
        if (readyMembersBuilder_ == null) {
          return readyMembers_.get(index);  } else {
          return readyMembersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder> 
           getReadyMembersOrBuilderList() {
        if (readyMembersBuilder_ != null) {
          return readyMembersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(readyMembers_);
        }
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder addReadyMembersBuilder() {
        return getReadyMembersFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder addReadyMembersBuilder(
          int index) {
        return getReadyMembersFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgReadyCheckStatus.ReadyMember ready_members = 4;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder> 
           getReadyMembersBuilderList() {
        return getReadyMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder> 
          getReadyMembersFieldBuilder() {
        if (readyMembersBuilder_ == null) {
          readyMembersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMember.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus.ReadyMemberOrBuilder>(
                  readyMembers_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          readyMembers_ = null;
        }
        return readyMembersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgReadyCheckStatus)
    }

    // @@protoc_insertion_point(class_scope:CMsgReadyCheckStatus)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgReadyCheckStatus>
        PARSER = new com.google.protobuf.AbstractParser<CMsgReadyCheckStatus>() {
      @java.lang.Override
      public CMsgReadyCheckStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgReadyCheckStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgReadyCheckStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgReadyCheckStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgPartyReadyCheckRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgPartyReadyCheckRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgPartyReadyCheckRequest}
   */
  public static final class CMsgPartyReadyCheckRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgPartyReadyCheckRequest)
      CMsgPartyReadyCheckRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgPartyReadyCheckRequest.class.getName());
    }
    // Use CMsgPartyReadyCheckRequest.newBuilder() to construct.
    private CMsgPartyReadyCheckRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgPartyReadyCheckRequest() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPartyReadyCheckRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgPartyReadyCheckRequest)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckRequest_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPartyReadyCheckRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgPartyReadyCheckRequest)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgPartyReadyCheckRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgPartyReadyCheckRequest>() {
      @java.lang.Override
      public CMsgPartyReadyCheckRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgPartyReadyCheckRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPartyReadyCheckRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgPartyReadyCheckResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgPartyReadyCheckResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
     * @return The result.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult getResult();
  }
  /**
   * Protobuf type {@code CMsgPartyReadyCheckResponse}
   */
  public static final class CMsgPartyReadyCheckResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgPartyReadyCheckResponse)
      CMsgPartyReadyCheckResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgPartyReadyCheckResponse.class.getName());
    }
    // Use CMsgPartyReadyCheckResponse.newBuilder() to construct.
    private CMsgPartyReadyCheckResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgPartyReadyCheckResponse() {
      result_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.Builder.class);
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_ = 0;
    /**
     * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
     * @return The result.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult getResult() {
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult.forNumber(result_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult.k_EReadyCheckRequestResult_Success : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, result_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (result_ != other.result_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPartyReadyCheckResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgPartyReadyCheckResponse)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        result_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckResponse_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  result_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
       * @return Whether the result field is set.
       */
      @java.lang.Override public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
       * @return The result.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult getResult() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult.forNumber(result_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult.k_EReadyCheckRequestResult_Success : result;
      }
      /**
       * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckRequestResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .EReadyCheckRequestResult result = 1 [default = k_EReadyCheckRequestResult_Success];</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPartyReadyCheckResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgPartyReadyCheckResponse)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgPartyReadyCheckResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgPartyReadyCheckResponse>() {
      @java.lang.Override
      public CMsgPartyReadyCheckResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgPartyReadyCheckResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPartyReadyCheckResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgPartyReadyCheckAcknowledgeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgPartyReadyCheckAcknowledge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
     * @return Whether the readyStatus field is set.
     */
    boolean hasReadyStatus();
    /**
     * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
     * @return The readyStatus.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus getReadyStatus();
  }
  /**
   * Protobuf type {@code CMsgPartyReadyCheckAcknowledge}
   */
  public static final class CMsgPartyReadyCheckAcknowledge extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgPartyReadyCheckAcknowledge)
      CMsgPartyReadyCheckAcknowledgeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgPartyReadyCheckAcknowledge.class.getName());
    }
    // Use CMsgPartyReadyCheckAcknowledge.newBuilder() to construct.
    private CMsgPartyReadyCheckAcknowledge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgPartyReadyCheckAcknowledge() {
      readyStatus_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckAcknowledge_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckAcknowledge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.Builder.class);
    }

    private int bitField0_;
    public static final int READY_STATUS_FIELD_NUMBER = 1;
    private int readyStatus_ = 0;
    /**
     * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
     * @return Whether the readyStatus field is set.
     */
    @java.lang.Override public boolean hasReadyStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
     * @return The readyStatus.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus getReadyStatus() {
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.forNumber(readyStatus_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.k_EReadyCheckStatus_Unknown : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, readyStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, readyStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge) obj;

      if (hasReadyStatus() != other.hasReadyStatus()) return false;
      if (hasReadyStatus()) {
        if (readyStatus_ != other.readyStatus_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasReadyStatus()) {
        hash = (37 * hash) + READY_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + readyStatus_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPartyReadyCheckAcknowledge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgPartyReadyCheckAcknowledge)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledgeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckAcknowledge_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckAcknowledge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        readyStatus_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgPartyReadyCheckAcknowledge_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.readyStatus_ = readyStatus_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge.getDefaultInstance()) return this;
        if (other.hasReadyStatus()) {
          setReadyStatus(other.getReadyStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  readyStatus_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int readyStatus_ = 0;
      /**
       * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return Whether the readyStatus field is set.
       */
      @java.lang.Override public boolean hasReadyStatus() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return The readyStatus.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus getReadyStatus() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.forNumber(readyStatus_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus.k_EReadyCheckStatus_Unknown : result;
      }
      /**
       * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
       * @param value The readyStatus to set.
       * @return This builder for chaining.
       */
      public Builder setReadyStatus(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EReadyCheckStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        readyStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .EReadyCheckStatus ready_status = 1 [default = k_EReadyCheckStatus_Unknown];</code>
       * @return This builder for chaining.
       */
      public Builder clearReadyStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        readyStatus_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPartyReadyCheckAcknowledge)
    }

    // @@protoc_insertion_point(class_scope:CMsgPartyReadyCheckAcknowledge)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgPartyReadyCheckAcknowledge>
        PARSER = new com.google.protobuf.AbstractParser<CMsgPartyReadyCheckAcknowledge>() {
      @java.lang.Override
      public CMsgPartyReadyCheckAcknowledge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgPartyReadyCheckAcknowledge> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPartyReadyCheckAcknowledge> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgPartyReadyCheckAcknowledge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgLobbyEventGameDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgLobbyEventGameDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes kv_data = 1;</code>
     * @return Whether the kvData field is set.
     */
    boolean hasKvData();
    /**
     * <code>optional bytes kv_data = 1;</code>
     * @return The kvData.
     */
    com.google.protobuf.ByteString getKvData();
  }
  /**
   * Protobuf type {@code CMsgLobbyEventGameDetails}
   */
  public static final class CMsgLobbyEventGameDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgLobbyEventGameDetails)
      CMsgLobbyEventGameDetailsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgLobbyEventGameDetails.class.getName());
    }
    // Use CMsgLobbyEventGameDetails.newBuilder() to construct.
    private CMsgLobbyEventGameDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgLobbyEventGameDetails() {
      kvData_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLobbyEventGameDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLobbyEventGameDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.Builder.class);
    }

    private int bitField0_;
    public static final int KV_DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString kvData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes kv_data = 1;</code>
     * @return Whether the kvData field is set.
     */
    @java.lang.Override
    public boolean hasKvData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bytes kv_data = 1;</code>
     * @return The kvData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKvData() {
      return kvData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, kvData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, kvData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails) obj;

      if (hasKvData() != other.hasKvData()) return false;
      if (hasKvData()) {
        if (!getKvData()
            .equals(other.getKvData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKvData()) {
        hash = (37 * hash) + KV_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getKvData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgLobbyEventGameDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgLobbyEventGameDetails)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLobbyEventGameDetails_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLobbyEventGameDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        kvData_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgLobbyEventGameDetails_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.kvData_ = kvData_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails.getDefaultInstance()) return this;
        if (other.hasKvData()) {
          setKvData(other.getKvData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kvData_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString kvData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes kv_data = 1;</code>
       * @return Whether the kvData field is set.
       */
      @java.lang.Override
      public boolean hasKvData() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bytes kv_data = 1;</code>
       * @return The kvData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKvData() {
        return kvData_;
      }
      /**
       * <code>optional bytes kv_data = 1;</code>
       * @param value The kvData to set.
       * @return This builder for chaining.
       */
      public Builder setKvData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        kvData_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes kv_data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKvData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kvData_ = getDefaultInstance().getKvData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgLobbyEventGameDetails)
    }

    // @@protoc_insertion_point(class_scope:CMsgLobbyEventGameDetails)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgLobbyEventGameDetails>
        PARSER = new com.google.protobuf.AbstractParser<CMsgLobbyEventGameDetails>() {
      @java.lang.Override
      public CMsgLobbyEventGameDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgLobbyEventGameDetails> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgLobbyEventGameDetails> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgLobbyEventGameDetails getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgMatchMatchmakingStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgMatchMatchmakingStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     * @return Whether the averageQueueTime field is set.
     */
    boolean hasAverageQueueTime();
    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     * @return The averageQueueTime.
     */
    int getAverageQueueTime();

    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     * @return Whether the maximumQueueTime field is set.
     */
    boolean hasMaximumQueueTime();
    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     * @return The maximumQueueTime.
     */
    int getMaximumQueueTime();

    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     * @return Whether the behaviorScoreVariance field is set.
     */
    boolean hasBehaviorScoreVariance();
    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     * @return The behaviorScoreVariance.
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance getBehaviorScoreVariance();
  }
  /**
   * Protobuf type {@code CMsgMatchMatchmakingStats}
   */
  public static final class CMsgMatchMatchmakingStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgMatchMatchmakingStats)
      CMsgMatchMatchmakingStatsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMsgMatchMatchmakingStats.class.getName());
    }
    // Use CMsgMatchMatchmakingStats.newBuilder() to construct.
    private CMsgMatchMatchmakingStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgMatchMatchmakingStats() {
      behaviorScoreVariance_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgMatchMatchmakingStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.Builder.class);
    }

    private int bitField0_;
    public static final int AVERAGE_QUEUE_TIME_FIELD_NUMBER = 1;
    private int averageQueueTime_ = 0;
    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     * @return Whether the averageQueueTime field is set.
     */
    @java.lang.Override
    public boolean hasAverageQueueTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     * @return The averageQueueTime.
     */
    @java.lang.Override
    public int getAverageQueueTime() {
      return averageQueueTime_;
    }

    public static final int MAXIMUM_QUEUE_TIME_FIELD_NUMBER = 2;
    private int maximumQueueTime_ = 0;
    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     * @return Whether the maximumQueueTime field is set.
     */
    @java.lang.Override
    public boolean hasMaximumQueueTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     * @return The maximumQueueTime.
     */
    @java.lang.Override
    public int getMaximumQueueTime() {
      return maximumQueueTime_;
    }

    public static final int BEHAVIOR_SCORE_VARIANCE_FIELD_NUMBER = 3;
    private int behaviorScoreVariance_ = 0;
    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     * @return Whether the behaviorScoreVariance field is set.
     */
    @java.lang.Override public boolean hasBehaviorScoreVariance() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     * @return The behaviorScoreVariance.
     */
    @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance getBehaviorScoreVariance() {
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance.forNumber(behaviorScoreVariance_);
      return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance.k_EMatchBehaviorScoreVariance_Invalid : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, averageQueueTime_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, maximumQueueTime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, behaviorScoreVariance_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, averageQueueTime_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, maximumQueueTime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, behaviorScoreVariance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats) obj;

      if (hasAverageQueueTime() != other.hasAverageQueueTime()) return false;
      if (hasAverageQueueTime()) {
        if (getAverageQueueTime()
            != other.getAverageQueueTime()) return false;
      }
      if (hasMaximumQueueTime() != other.hasMaximumQueueTime()) return false;
      if (hasMaximumQueueTime()) {
        if (getMaximumQueueTime()
            != other.getMaximumQueueTime()) return false;
      }
      if (hasBehaviorScoreVariance() != other.hasBehaviorScoreVariance()) return false;
      if (hasBehaviorScoreVariance()) {
        if (behaviorScoreVariance_ != other.behaviorScoreVariance_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAverageQueueTime()) {
        hash = (37 * hash) + AVERAGE_QUEUE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getAverageQueueTime();
      }
      if (hasMaximumQueueTime()) {
        hash = (37 * hash) + MAXIMUM_QUEUE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getMaximumQueueTime();
      }
      if (hasBehaviorScoreVariance()) {
        hash = (37 * hash) + BEHAVIOR_SCORE_VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + behaviorScoreVariance_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgMatchMatchmakingStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgMatchMatchmakingStats)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgMatchMatchmakingStats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        averageQueueTime_ = 0;
        maximumQueueTime_ = 0;
        behaviorScoreVariance_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMsgMatchMatchmakingStats_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.averageQueueTime_ = averageQueueTime_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.maximumQueueTime_ = maximumQueueTime_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.behaviorScoreVariance_ = behaviorScoreVariance_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats.getDefaultInstance()) return this;
        if (other.hasAverageQueueTime()) {
          setAverageQueueTime(other.getAverageQueueTime());
        }
        if (other.hasMaximumQueueTime()) {
          setMaximumQueueTime(other.getMaximumQueueTime());
        }
        if (other.hasBehaviorScoreVariance()) {
          setBehaviorScoreVariance(other.getBehaviorScoreVariance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                averageQueueTime_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                maximumQueueTime_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int tmpRaw = input.readEnum();
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance tmpValue =
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  behaviorScoreVariance_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int averageQueueTime_ ;
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       * @return Whether the averageQueueTime field is set.
       */
      @java.lang.Override
      public boolean hasAverageQueueTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       * @return The averageQueueTime.
       */
      @java.lang.Override
      public int getAverageQueueTime() {
        return averageQueueTime_;
      }
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       * @param value The averageQueueTime to set.
       * @return This builder for chaining.
       */
      public Builder setAverageQueueTime(int value) {

        averageQueueTime_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAverageQueueTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        averageQueueTime_ = 0;
        onChanged();
        return this;
      }

      private int maximumQueueTime_ ;
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       * @return Whether the maximumQueueTime field is set.
       */
      @java.lang.Override
      public boolean hasMaximumQueueTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       * @return The maximumQueueTime.
       */
      @java.lang.Override
      public int getMaximumQueueTime() {
        return maximumQueueTime_;
      }
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       * @param value The maximumQueueTime to set.
       * @return This builder for chaining.
       */
      public Builder setMaximumQueueTime(int value) {

        maximumQueueTime_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaximumQueueTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maximumQueueTime_ = 0;
        onChanged();
        return this;
      }

      private int behaviorScoreVariance_ = 0;
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       * @return Whether the behaviorScoreVariance field is set.
       */
      @java.lang.Override public boolean hasBehaviorScoreVariance() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       * @return The behaviorScoreVariance.
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance getBehaviorScoreVariance() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance.forNumber(behaviorScoreVariance_);
        return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance.k_EMatchBehaviorScoreVariance_Invalid : result;
      }
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       * @param value The behaviorScoreVariance to set.
       * @return This builder for chaining.
       */
      public Builder setBehaviorScoreVariance(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.EMatchBehaviorScoreVariance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        behaviorScoreVariance_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       * @return This builder for chaining.
       */
      public Builder clearBehaviorScoreVariance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        behaviorScoreVariance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgMatchMatchmakingStats)
    }

    // @@protoc_insertion_point(class_scope:CMsgMatchMatchmakingStats)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgMatchMatchmakingStats>
        PARSER = new com.google.protobuf.AbstractParser<CMsgMatchMatchmakingStats>() {
      @java.lang.Override
      public CMsgMatchMatchmakingStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgMatchMatchmakingStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgMatchMatchmakingStats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMsgMatchMatchmakingStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMvpDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMvpData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum> 
        getMvpsList();
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum getMvps(int index);
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    int getMvpsCount();
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder> 
        getMvpsOrBuilderList();
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder getMvpsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMvpData}
   */
  public static final class CMvpData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMvpData)
      CMvpDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "",
        CMvpData.class.getName());
    }
    // Use CMvpData.newBuilder() to construct.
    private CMvpData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMvpData() {
      mvps_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.Builder.class);
    }

    public interface MvpDatumOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMvpData.MvpDatum)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 player_slot = 1;</code>
       * @return Whether the playerSlot field is set.
       */
      boolean hasPlayerSlot();
      /**
       * <code>optional uint32 player_slot = 1;</code>
       * @return The playerSlot.
       */
      int getPlayerSlot();

      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade> 
          getAccoladesList();
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade getAccolades(int index);
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      int getAccoladesCount();
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
          getAccoladesOrBuilderList();
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder getAccoladesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMvpData.MvpDatum}
     */
    public static final class MvpDatum extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMvpData.MvpDatum)
        MvpDatumOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "",
          MvpDatum.class.getName());
      }
      // Use MvpDatum.newBuilder() to construct.
      private MvpDatum(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private MvpDatum() {
        accolades_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder.class);
      }

      public interface MvpAccoladeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMvpData.MvpDatum.MvpAccolade)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         * @return Whether the type field is set.
         */
        boolean hasType();
        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         * @return The type.
         */
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType getType();

        /**
         * <code>optional float detail_value = 2;</code>
         * @return Whether the detailValue field is set.
         */
        boolean hasDetailValue();
        /**
         * <code>optional float detail_value = 2;</code>
         * @return The detailValue.
         */
        float getDetailValue();
      }
      /**
       * Protobuf type {@code CMvpData.MvpDatum.MvpAccolade}
       */
      public static final class MvpAccolade extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMvpData.MvpDatum.MvpAccolade)
          MvpAccoladeOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 0,
            /* suffix= */ "",
            MvpAccolade.class.getName());
        }
        // Use MvpAccolade.newBuilder() to construct.
        private MvpAccolade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private MvpAccolade() {
          type_ = 1;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder.class);
        }

        /**
         * Protobuf enum {@code CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType}
         */
        public enum MvpAccoladeType
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>kills = 1;</code>
           */
          kills(1),
          /**
           * <code>deaths = 2;</code>
           */
          deaths(2),
          /**
           * <code>assists = 3;</code>
           */
          assists(3),
          /**
           * <code>net_worth = 5;</code>
           */
          net_worth(5),
          /**
           * <code>item_value = 6;</code>
           */
          item_value(6),
          /**
           * <code>support_gold_spent = 7;</code>
           */
          support_gold_spent(7),
          /**
           * <code>wards_placed = 8;</code>
           */
          wards_placed(8),
          /**
           * <code>dewards = 9;</code>
           */
          dewards(9),
          /**
           * <code>camps_stacked = 10;</code>
           */
          camps_stacked(10),
          /**
           * <code>last_hits = 11;</code>
           */
          last_hits(11),
          /**
           * <code>denies = 12;</code>
           */
          denies(12),
          /**
           * <code>kKillEaterEvent_Killing_Sprees = 13;</code>
           */
          kKillEaterEvent_Killing_Sprees(13),
          /**
           * <code>kKillEaterEvent_Godlike = 14;</code>
           */
          kKillEaterEvent_Godlike(14),
          /**
           * <code>kKillEaterEvent_Towers_Destroyed = 15;</code>
           */
          kKillEaterEvent_Towers_Destroyed(15),
          /**
           * <code>kKillEaterEventType_Invoker_SunstrikeKills = 16;</code>
           */
          kKillEaterEventType_Invoker_SunstrikeKills(16),
          /**
           * <code>kKillEaterEventType_Axe_Culls = 17;</code>
           */
          kKillEaterEventType_Axe_Culls(17),
          /**
           * <code>kKillEaterEventType_Axe_BattleHungerKills = 18;</code>
           */
          kKillEaterEventType_Axe_BattleHungerKills(18),
          /**
           * <code>kKillEaterEventType_LowHealthKills = 19;</code>
           */
          kKillEaterEventType_LowHealthKills(19),
          /**
           * <code>kKillEaterEventType_Invoker_TornadoKills = 20;</code>
           */
          kKillEaterEventType_Invoker_TornadoKills(20),
          /**
           * <code>kKillEaterEventType_Sven_DoubleStuns = 21;</code>
           */
          kKillEaterEventType_Sven_DoubleStuns(21),
          /**
           * <code>kKillEaterEventType_Sven_WarcryAssists = 22;</code>
           */
          kKillEaterEventType_Sven_WarcryAssists(22),
          /**
           * <code>kKillEaterEventType_Sven_CleaveDoubleKills = 23;</code>
           */
          kKillEaterEventType_Sven_CleaveDoubleKills(23),
          /**
           * <code>kKillEaterEventType_Sven_TeleportInterrupts = 24;</code>
           */
          kKillEaterEventType_Sven_TeleportInterrupts(24),
          /**
           * <code>kKillEaterEventType_Faceless_MultiChrono = 25;</code>
           */
          kKillEaterEventType_Faceless_MultiChrono(25),
          /**
           * <code>kKillEaterEventType_Faceless_ChronoKills = 26;</code>
           */
          kKillEaterEventType_Faceless_ChronoKills(26),
          /**
           * <code>kKillEaterEventType_Ursa_MultiShocks = 27;</code>
           */
          kKillEaterEventType_Ursa_MultiShocks(27),
          /**
           * <code>kKillEaterEventType_RoshanKills = 28;</code>
           */
          kKillEaterEventType_RoshanKills(28),
          /**
           * <code>kKillEaterEventType_Lion_FingerKills = 29;</code>
           */
          kKillEaterEventType_Lion_FingerKills(29),
          /**
           * <code>kKillEaterEventType_Riki_SmokedHeroKills = 32;</code>
           */
          kKillEaterEventType_Riki_SmokedHeroKills(32),
          /**
           * <code>kKillEaterEventType_HeroesRevealedWithDust = 33;</code>
           */
          kKillEaterEventType_HeroesRevealedWithDust(33),
          /**
           * <code>kKillEaterEventType_SkeletonKing_ReincarnationKills = 34;</code>
           */
          kKillEaterEventType_SkeletonKing_ReincarnationKills(34),
          /**
           * <code>kKillEaterEventType_Skywrath_FlareKills = 35;</code>
           */
          kKillEaterEventType_Skywrath_FlareKills(35),
          /**
           * <code>kKillEaterEventType_Leshrac_SplitEarthStuns = 36;</code>
           */
          kKillEaterEventType_Leshrac_SplitEarthStuns(36),
          /**
           * <code>kKillEaterEventType_Mirana_MaxStunArrows = 37;</code>
           */
          kKillEaterEventType_Mirana_MaxStunArrows(37),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits = 38;</code>
           */
          kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits(38),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerCrits = 39;</code>
           */
          kKillEaterEventType_PhantomAssassin_DaggerCrits(39),
          /**
           * <code>kKillEaterEventType_Meepo_Earthbinds = 40;</code>
           */
          kKillEaterEventType_Meepo_Earthbinds(40),
          /**
           * <code>kKillEaterEventType_Bloodseeker_RuptureKills = 41;</code>
           */
          kKillEaterEventType_Bloodseeker_RuptureKills(41),
          /**
           * <code>kKillEaterEventType_Slark_LeashedEnemies = 42;</code>
           */
          kKillEaterEventType_Slark_LeashedEnemies(42),
          /**
           * <code>kKillEaterEventType_Disruptor_FountainGlimpses = 43;</code>
           */
          kKillEaterEventType_Disruptor_FountainGlimpses(43),
          /**
           * <code>kKillEaterEventType_Rubick_SpellsStolen = 44;</code>
           */
          kKillEaterEventType_Rubick_SpellsStolen(44),
          /**
           * <code>kKillEaterEventType_Rubick_UltimatesStolen = 45;</code>
           */
          kKillEaterEventType_Rubick_UltimatesStolen(45),
          /**
           * <code>kKillEaterEventType_Doom_EnemiesDoomed = 46;</code>
           */
          kKillEaterEventType_Doom_EnemiesDoomed(46),
          /**
           * <code>kKillEaterEventType_Omniknight_Purifications = 47;</code>
           */
          kKillEaterEventType_Omniknight_Purifications(47),
          /**
           * <code>kKillEaterEventType_Omniknight_AlliesRepelled = 48;</code>
           */
          kKillEaterEventType_Omniknight_AlliesRepelled(48),
          /**
           * <code>kKillEaterEventType_Omniknight_EnemiesRepelled = 49;</code>
           */
          kKillEaterEventType_Omniknight_EnemiesRepelled(49),
          /**
           * <code>kKillEaterEventType_Warlock_FiveHeroFatalBonds = 50;</code>
           */
          kKillEaterEventType_Warlock_FiveHeroFatalBonds(50),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FrostbittenEnemies = 51;</code>
           */
          kKillEaterEventType_CrystalMaiden_FrostbittenEnemies(51),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_CrystalNovas = 52;</code>
           */
          kKillEaterEventType_CrystalMaiden_CrystalNovas(52),
          /**
           * <code>kKillEaterEventType_Kunkka_DoubleHeroTorrents = 53;</code>
           */
          kKillEaterEventType_Kunkka_DoubleHeroTorrents(53),
          /**
           * <code>kKillEaterEventType_Kunkka_TripleHeroGhostShips = 54;</code>
           */
          kKillEaterEventType_Kunkka_TripleHeroGhostShips(54),
          /**
           * <code>kKillEaterEventType_NagaSiren_EnemiesEnsnared = 55;</code>
           */
          kKillEaterEventType_NagaSiren_EnemiesEnsnared(55),
          /**
           * <code>kKillEaterEventType_NagaSiren_TripleHeroRipTides = 56;</code>
           */
          kKillEaterEventType_NagaSiren_TripleHeroRipTides(56),
          /**
           * <code>kKillEaterEventType_Lycan_KillsDuringShapeshift = 57;</code>
           */
          kKillEaterEventType_Lycan_KillsDuringShapeshift(57),
          /**
           * <code>kKillEaterEventType_Pudge_DismemberKills = 58;</code>
           */
          kKillEaterEventType_Pudge_DismemberKills(58),
          /**
           * <code>kKillEaterEventType_Pudge_EnemyHeroesHooked = 59;</code>
           */
          kKillEaterEventType_Pudge_EnemyHeroesHooked(59),
          /**
           * <code>kKillEaterEventType_Pudge_HookKills = 60;</code>
           */
          kKillEaterEventType_Pudge_HookKills(60),
          /**
           * <code>kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked = 61;</code>
           */
          kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked(61),
          /**
           * <code>kKillEaterEventType_DrowRanger_EnemiesSilenced = 62;</code>
           */
          kKillEaterEventType_DrowRanger_EnemiesSilenced(62),
          /**
           * <code>kKillEaterEventType_DrowRanger_MultiHeroSilences = 63;</code>
           */
          kKillEaterEventType_DrowRanger_MultiHeroSilences(63),
          /**
           * <code>kKillEaterEventType_DrowRanger_SilencedKills = 64;</code>
           */
          kKillEaterEventType_DrowRanger_SilencedKills(64),
          /**
           * <code>kKillEaterEventType_DrowRanger_FrostArrowKills = 65;</code>
           */
          kKillEaterEventType_DrowRanger_FrostArrowKills(65),
          /**
           * <code>kKillEaterEventType_DragonKnight_KillsInDragonForm = 66;</code>
           */
          kKillEaterEventType_DragonKnight_KillsInDragonForm(66),
          /**
           * <code>kKillEaterEventType_DragonKnight_BreatheFireKills = 67;</code>
           */
          kKillEaterEventType_DragonKnight_BreatheFireKills(67),
          /**
           * <code>kKillEaterEventType_DragonKnight_SplashKills = 68;</code>
           */
          kKillEaterEventType_DragonKnight_SplashKills(68),
          /**
           * <code>kKillEaterEventType_WitchDoctor_CaskStuns = 69;</code>
           */
          kKillEaterEventType_WitchDoctor_CaskStuns(69),
          /**
           * <code>kKillEaterEventType_WitchDoctor_MaledictKills = 70;</code>
           */
          kKillEaterEventType_WitchDoctor_MaledictKills(70),
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroMaledicts = 71;</code>
           */
          kKillEaterEventType_WitchDoctor_MultiHeroMaledicts(71),
          /**
           * <code>kKillEaterEventType_WitchDoctor_DeathWardKills = 72;</code>
           */
          kKillEaterEventType_WitchDoctor_DeathWardKills(72),
          /**
           * <code>kKillEaterEventType_Disruptor_ThunderStrikeKills = 73;</code>
           */
          kKillEaterEventType_Disruptor_ThunderStrikeKills(73),
          /**
           * <code>kKillEaterEventType_Disruptor_HeroesGlimpsed = 74;</code>
           */
          kKillEaterEventType_Disruptor_HeroesGlimpsed(74),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FreezingFieldKills = 75;</code>
           */
          kKillEaterEventType_CrystalMaiden_FreezingFieldKills(75),
          /**
           * <code>kKillEaterEventType_Medusa_EnemiesPetrified = 77;</code>
           */
          kKillEaterEventType_Medusa_EnemiesPetrified(77),
          /**
           * <code>kKillEaterEventType_Warlock_FatalBondsKills = 78;</code>
           */
          kKillEaterEventType_Warlock_FatalBondsKills(78),
          /**
           * <code>kKillEaterEventType_Warlock_GolemKills = 79;</code>
           */
          kKillEaterEventType_Warlock_GolemKills(79),
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunches = 80;</code>
           */
          kKillEaterEventType_Tusk_WalrusPunches(80),
          /**
           * <code>kKillEaterEventType_Tusk_SnowballStuns = 81;</code>
           */
          kKillEaterEventType_Tusk_SnowballStuns(81),
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureStuns = 82;</code>
           */
          kKillEaterEventType_Earthshaker_FissureStuns(82),
          /**
           * <code>kKillEaterEventType_Earthshaker_3HeroEchoslams = 83;</code>
           */
          kKillEaterEventType_Earthshaker_3HeroEchoslams(83),
          /**
           * <code>kKillEaterEventType_SandKing_BurrowstrikeStuns = 84;</code>
           */
          kKillEaterEventType_SandKing_BurrowstrikeStuns(84),
          /**
           * <code>kKillEaterEventType_SandKing_EpicenterKills = 85;</code>
           */
          kKillEaterEventType_SandKing_EpicenterKills(85),
          /**
           * <code>kKillEaterEventType_SkywrathMage_AncientSealKills = 86;</code>
           */
          kKillEaterEventType_SkywrathMage_AncientSealKills(86),
          /**
           * <code>kKillEaterEventType_SkywrathMage_ConcussiveShotKills = 87;</code>
           */
          kKillEaterEventType_SkywrathMage_ConcussiveShotKills(87),
          /**
           * <code>kKillEaterEventType_Luna_LucentBeamKills = 88;</code>
           */
          kKillEaterEventType_Luna_LucentBeamKills(88),
          /**
           * <code>kKillEaterEventType_Luna_EclipseKills = 89;</code>
           */
          kKillEaterEventType_Luna_EclipseKills(89),
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_IlluminateKills = 90;</code>
           */
          kKillEaterEventType_KeeperOfTheLight_IlluminateKills(90),
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns = 91;</code>
           */
          kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns(91),
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled = 92;</code>
           */
          kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled(92),
          /**
           * <code>kKillEaterEventType_LegionCommander_DuelsWon = 93;</code>
           */
          kKillEaterEventType_LegionCommander_DuelsWon(93),
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarKills = 94;</code>
           */
          kKillEaterEventType_Beastmaster_RoarKills(94),
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarMultiKills = 95;</code>
           */
          kKillEaterEventType_Beastmaster_RoarMultiKills(95),
          /**
           * <code>kKillEaterEventType_Windrunner_FocusFireBuildings = 96;</code>
           */
          kKillEaterEventType_Windrunner_FocusFireBuildings(96),
          /**
           * <code>kKillEaterEventType_Windrunner_PowershotKills = 97;</code>
           */
          kKillEaterEventType_Windrunner_PowershotKills(97),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerLastHits = 98;</code>
           */
          kKillEaterEventType_PhantomAssassin_DaggerLastHits(98),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_PhantomStrikeKills = 99;</code>
           */
          kKillEaterEventType_PhantomAssassin_PhantomStrikeKills(99),
          /**
           * <code>kKillEaterEventType_DeathProphet_CryptSwarmKills = 100;</code>
           */
          kKillEaterEventType_DeathProphet_CryptSwarmKills(100),
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismBuildingKills = 101;</code>
           */
          kKillEaterEventType_DeathProphet_ExorcismBuildingKills(101),
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned = 102;</code>
           */
          kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned(102),
          /**
           * <code>kKillEaterEventType_DeathProphet_MultiHeroSilences = 103;</code>
           */
          kKillEaterEventType_DeathProphet_MultiHeroSilences(103),
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilKills = 104;</code>
           */
          kKillEaterEventType_Abaddon_MistCoilKills(104),
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilHealed = 105;</code>
           */
          kKillEaterEventType_Abaddon_MistCoilHealed(105),
          /**
           * <code>kKillEaterEventType_Abaddon_AphoticShieldKills = 106;</code>
           */
          kKillEaterEventType_Abaddon_AphoticShieldKills(106),
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostTripleKills = 107;</code>
           */
          kKillEaterEventType_Lich_ChainFrostTripleKills(107),
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostMultiKills = 108;</code>
           */
          kKillEaterEventType_Lich_ChainFrostMultiKills(108),
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostBounces = 109;</code>
           */
          kKillEaterEventType_Lich_ChainFrostBounces(109),
          /**
           * <code>kKillEaterEventType_Ursa_EnragedKills = 110;</code>
           */
          kKillEaterEventType_Ursa_EnragedKills(110),
          /**
           * <code>kKillEaterEventType_Ursa_EarthshockKills = 111;</code>
           */
          kKillEaterEventType_Ursa_EarthshockKills(111),
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeKills = 112;</code>
           */
          kKillEaterEventType_Lina_LagunaBladeKills(112),
          /**
           * <code>kKillEaterEventType_Lina_DragonSlaveKills = 113;</code>
           */
          kKillEaterEventType_Lina_DragonSlaveKills(113),
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeArrayStuns = 114;</code>
           */
          kKillEaterEventType_Lina_LightStrikeArrayStuns(114),
          /**
           * <code>kKillEaterEvent_Barracks_Destroyed = 115;</code>
           */
          kKillEaterEvent_Barracks_Destroyed(115),
          /**
           * <code>kKillEaterEvent_TemplarAssassin_MeldKills = 116;</code>
           */
          kKillEaterEvent_TemplarAssassin_MeldKills(116),
          /**
           * <code>kKillEaterEvent_TemplarAssassin_HeroesSlowed = 117;</code>
           */
          kKillEaterEvent_TemplarAssassin_HeroesSlowed(117),
          /**
           * <code>kKillEaterEvent_Sniper_AssassinationKills = 118;</code>
           */
          kKillEaterEvent_Sniper_AssassinationKills(118),
          /**
           * <code>kKillEaterEvent_Sniper_HeadshotStuns = 119;</code>
           */
          kKillEaterEvent_Sniper_HeadshotStuns(119),
          /**
           * <code>kKillEaterEvent_EarthSpirit_SmashStuns = 120;</code>
           */
          kKillEaterEvent_EarthSpirit_SmashStuns(120),
          /**
           * <code>kKillEaterEvent_EarthSpirit_GripSilences = 121;</code>
           */
          kKillEaterEvent_EarthSpirit_GripSilences(121),
          /**
           * <code>kKillEaterEvent_ShadowShaman_ShackleKills = 122;</code>
           */
          kKillEaterEvent_ShadowShaman_ShackleKills(122),
          /**
           * <code>kKillEaterEvent_ShadowShaman_HexKills = 123;</code>
           */
          kKillEaterEvent_ShadowShaman_HexKills(123),
          /**
           * <code>kKillEaterEvent_Centaur_EnemiesStomped = 124;</code>
           */
          kKillEaterEvent_Centaur_EnemiesStomped(124),
          /**
           * <code>kKillEaterEvent_Centaur_DoubleEdgeKills = 125;</code>
           */
          kKillEaterEvent_Centaur_DoubleEdgeKills(125),
          /**
           * <code>kKillEaterEvent_Centaur_ReturnKills = 126;</code>
           */
          kKillEaterEvent_Centaur_ReturnKills(126),
          /**
           * <code>kKillEaterEvent_EmberSpirit_EnemiesChained = 127;</code>
           */
          kKillEaterEvent_EmberSpirit_EnemiesChained(127),
          /**
           * <code>kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills = 128;</code>
           */
          kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills(128),
          /**
           * <code>kKillEaterEvent_Puck_OrbKills = 129;</code>
           */
          kKillEaterEvent_Puck_OrbKills(129),
          /**
           * <code>kKillEaterEvent_VengefulSpirit_EnemiesStunned = 130;</code>
           */
          kKillEaterEvent_VengefulSpirit_EnemiesStunned(130),
          /**
           * <code>kKillEaterEvent_Lifestealer_RageKills = 131;</code>
           */
          kKillEaterEvent_Lifestealer_RageKills(131),
          /**
           * <code>kKillEaterEvent_Lifestealer_OpenWoundsKills = 132;</code>
           */
          kKillEaterEvent_Lifestealer_OpenWoundsKills(132),
          /**
           * <code>kKillEaterEvent_Lifestealer_InfestKills = 133;</code>
           */
          kKillEaterEvent_Lifestealer_InfestKills(133),
          /**
           * <code>kKillEaterEvent_ElderTitan_SpiritKills = 134;</code>
           */
          kKillEaterEvent_ElderTitan_SpiritKills(134),
          /**
           * <code>kKillEaterEvent_ElderTitan_GoodStomps = 135;</code>
           */
          kKillEaterEvent_ElderTitan_GoodStomps(135),
          /**
           * <code>kKillEaterEvent_Clockwerk_RocketKills = 136;</code>
           */
          kKillEaterEvent_Clockwerk_RocketKills(136),
          /**
           * <code>kKillEaterEvent_Clockwerk_BlindRocketKills = 137;</code>
           */
          kKillEaterEvent_Clockwerk_BlindRocketKills(137),
          /**
           * <code>kKillEaterEvent_StormSpirit_BallKills = 138;</code>
           */
          kKillEaterEvent_StormSpirit_BallKills(138),
          /**
           * <code>kKillEaterEvent_StormSpirit_DoubleRemnantKills = 139;</code>
           */
          kKillEaterEvent_StormSpirit_DoubleRemnantKills(139),
          /**
           * <code>kKillEaterEvent_StormSpirit_VortexKills = 140;</code>
           */
          kKillEaterEvent_StormSpirit_VortexKills(140),
          /**
           * <code>kKillEaterEvent_Tinker_DoubleMissileKills = 141;</code>
           */
          kKillEaterEvent_Tinker_DoubleMissileKills(141),
          /**
           * <code>kKillEaterEvent_Tinker_LaserKills = 142;</code>
           */
          kKillEaterEvent_Tinker_LaserKills(142),
          /**
           * <code>kKillEaterEvent_Techies_SuicideKills = 143;</code>
           */
          kKillEaterEvent_Techies_SuicideKills(143),
          /**
           * <code>kKillEaterEvent_Techies_LandMineKills = 144;</code>
           */
          kKillEaterEvent_Techies_LandMineKills(144),
          /**
           * <code>kKillEaterEvent_Techies_StatisTrapStuns = 145;</code>
           */
          kKillEaterEvent_Techies_StatisTrapStuns(145),
          /**
           * <code>kKillEaterEvent_Techies_RemoteMineKills = 146;</code>
           */
          kKillEaterEvent_Techies_RemoteMineKills(146),
          /**
           * <code>kKillEaterEvent_ShadowFiend_TripleRazeKills = 147;</code>
           */
          kKillEaterEvent_ShadowFiend_TripleRazeKills(147),
          /**
           * <code>kKillEaterEvent_ShadowFiend_RequiemMultiKills = 148;</code>
           */
          kKillEaterEvent_ShadowFiend_RequiemMultiKills(148),
          /**
           * <code>kKillEaterEvent_ShadowFiend_QRazeKills = 149;</code>
           */
          kKillEaterEvent_ShadowFiend_QRazeKills(149),
          /**
           * <code>kKillEaterEvent_ShadowFiend_WRazeKills = 150;</code>
           */
          kKillEaterEvent_ShadowFiend_WRazeKills(150),
          /**
           * <code>kKillEaterEvent_ShadowFiend_ERazeKills = 151;</code>
           */
          kKillEaterEvent_ShadowFiend_ERazeKills(151),
          /**
           * <code>kKillEaterEvent_Oracle_FatesEdictKills = 152;</code>
           */
          kKillEaterEvent_Oracle_FatesEdictKills(152),
          /**
           * <code>kKillEaterEvent_Oracle_FalsePromiseSaves = 153;</code>
           */
          kKillEaterEvent_Oracle_FalsePromiseSaves(153),
          /**
           * <code>kKillEaterEvent_Juggernaut_OmnislashKills = 154;</code>
           */
          kKillEaterEvent_Juggernaut_OmnislashKills(154),
          /**
           * <code>kKillEaterEventType_SkeletonKing_SkeletonHeroKills = 157;</code>
           */
          kKillEaterEventType_SkeletonKing_SkeletonHeroKills(157),
          /**
           * <code>kKillEaterEventType_DarkWillow_CursedCrownTripleStuns = 158;</code>
           */
          kKillEaterEventType_DarkWillow_CursedCrownTripleStuns(158),
          /**
           * <code>kKillEaterEventType_Dazzle_ShallowGraveSaves = 159;</code>
           */
          kKillEaterEventType_Dazzle_ShallowGraveSaves(159),
          /**
           * <code>kKillEaterEventType_Dazzle_PoisonTouchKills = 160;</code>
           */
          kKillEaterEventType_Dazzle_PoisonTouchKills(160),
          /**
           * <code>kKillEaterEventType_ThreeManMeks = 161;</code>
           */
          kKillEaterEventType_ThreeManMeks(161),
          /**
           * <code>kKillEaterEventType_Viper_PoisonAttackKills = 162;</code>
           */
          kKillEaterEventType_Viper_PoisonAttackKills(162),
          /**
           * <code>kKillEaterEventType_Viper_CorrosiveSkinKills = 163;</code>
           */
          kKillEaterEventType_Viper_CorrosiveSkinKills(163),
          /**
           * <code>kKillEaterEventType_ThreeHeroVeils = 164;</code>
           */
          kKillEaterEventType_ThreeHeroVeils(164),
          /**
           * <code>kKillEaterEventType_Viper_KillsDuringViperStrike = 165;</code>
           */
          kKillEaterEventType_Viper_KillsDuringViperStrike(165),
          /**
           * <code>kKillEaterEventType_SolarCrestKills = 166;</code>
           */
          kKillEaterEventType_SolarCrestKills(166),
          /**
           * <code>kKillEaterEventType_Tiny_TreeThrowKills = 167;</code>
           */
          kKillEaterEventType_Tiny_TreeThrowKills(167),
          /**
           * <code>kKillEaterEventType_Riki_BackstabKills = 168;</code>
           */
          kKillEaterEventType_Riki_BackstabKills(168),
          /**
           * <code>kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns = 169;</code>
           */
          kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns(169),
          /**
           * <code>kKillEaterEventType_Terrorblade_MetamorphosisKills = 170;</code>
           */
          kKillEaterEventType_Terrorblade_MetamorphosisKills(170),
          /**
           * <code>kKillEaterEventType_Lion_GreatFingerKills = 171;</code>
           */
          kKillEaterEventType_Lion_GreatFingerKills(171),
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithAghanims = 172;</code>
           */
          kKillEaterEventType_Antimage_SpellsBlockedWithAghanims(172),
          /**
           * <code>kKillEaterEventType_Antimage_ThreeManManaVoids = 173;</code>
           */
          kKillEaterEventType_Antimage_ThreeManManaVoids(173),
          /**
           * <code>kKillEaterEventType_ArcWarden_TempestDoubleKills = 174;</code>
           */
          kKillEaterEventType_ArcWarden_TempestDoubleKills(174),
          /**
           * <code>kKillEaterEventType_ArcWarden_SparkWraithKills = 175;</code>
           */
          kKillEaterEventType_ArcWarden_SparkWraithKills(175),
          /**
           * <code>kKillEaterEventType_Bane_BrainSapKills = 176;</code>
           */
          kKillEaterEventType_Bane_BrainSapKills(176),
          /**
           * <code>kKillEaterEventType_Bane_FiendsGripKills = 177;</code>
           */
          kKillEaterEventType_Bane_FiendsGripKills(177),
          /**
           * <code>kKillEaterEventType_Batrider_TripleHeroFlamebreaks = 178;</code>
           */
          kKillEaterEventType_Batrider_TripleHeroFlamebreaks(178),
          /**
           * <code>kKillEaterEventType_Batrider_DoubleHeroLassoes = 179;</code>
           */
          kKillEaterEventType_Batrider_DoubleHeroLassoes(179),
          /**
           * <code>kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit = 180;</code>
           */
          kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit(180),
          /**
           * <code>kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks = 181;</code>
           */
          kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks(181),
          /**
           * <code>kKillEaterEventType_Bristleback_TripleHeroNasalGoo = 182;</code>
           */
          kKillEaterEventType_Bristleback_TripleHeroNasalGoo(182),
          /**
           * <code>kKillEaterEventType_Broodmother_SpiderlingHeroKills = 183;</code>
           */
          kKillEaterEventType_Broodmother_SpiderlingHeroKills(183),
          /**
           * <code>kKillEaterEventType_Broodmother_KillsInsideWeb = 184;</code>
           */
          kKillEaterEventType_Broodmother_KillsInsideWeb(184),
          /**
           * <code>kKillEaterEventType_Centaur_ThreeHeroStampede = 185;</code>
           */
          kKillEaterEventType_Centaur_ThreeHeroStampede(185),
          /**
           * <code>kKillEaterEventType_ChaosKnight_RealityRiftKills = 186;</code>
           */
          kKillEaterEventType_ChaosKnight_RealityRiftKills(186),
          /**
           * <code>kKillEaterEventType_Chen_KillsWithPenitence = 187;</code>
           */
          kKillEaterEventType_Chen_KillsWithPenitence(187),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas = 188;</code>
           */
          kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas(188),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields = 189;</code>
           */
          kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields(189),
          /**
           * <code>kKillEaterEventType_Dazzle_ShadowWaveKills = 190;</code>
           */
          kKillEaterEventType_Dazzle_ShadowWaveKills(190),
          /**
           * <code>kKillEaterEventType_DeathProphet_SiphonKills = 191;</code>
           */
          kKillEaterEventType_DeathProphet_SiphonKills(191),
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls = 192;</code>
           */
          kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls(192),
          /**
           * <code>kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm = 193;</code>
           */
          kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm(193),
          /**
           * <code>kKillEaterEventType_Doom_InfernalBladeBurnKills = 194;</code>
           */
          kKillEaterEventType_Doom_InfernalBladeBurnKills(194),
          /**
           * <code>kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills = 195;</code>
           */
          kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills(195),
          /**
           * <code>kKillEaterEventType_EmberSpirit_RemnantKills = 196;</code>
           */
          kKillEaterEventType_EmberSpirit_RemnantKills(196),
          /**
           * <code>kKillEaterEventType_EmberSpirit_SleightOfFistKills = 197;</code>
           */
          kKillEaterEventType_EmberSpirit_SleightOfFistKills(197),
          /**
           * <code>kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos = 198;</code>
           */
          kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos(198),
          /**
           * <code>kKillEaterEventType_Enigma_ThreeManBlackHoles = 199;</code>
           */
          kKillEaterEventType_Enigma_ThreeManBlackHoles(199),
          /**
           * <code>kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation = 200;</code>
           */
          kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation(200),
          /**
           * <code>kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon = 201;</code>
           */
          kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon(201),
          /**
           * <code>kKillEaterEventType_Gyrocopter_HomingMissileKills = 202;</code>
           */
          kKillEaterEventType_Gyrocopter_HomingMissileKills(202),
          /**
           * <code>kKillEaterEventType_Gyrocopter_RocketBarrageKills = 203;</code>
           */
          kKillEaterEventType_Gyrocopter_RocketBarrageKills(203),
          /**
           * <code>kKillEaterEventType_Huskar_KillsDuringLifeBreak = 204;</code>
           */
          kKillEaterEventType_Huskar_KillsDuringLifeBreak(204),
          /**
           * <code>kKillEaterEventType_Huskar_BurningSpearKills = 205;</code>
           */
          kKillEaterEventType_Huskar_BurningSpearKills(205),
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroIceWall = 206;</code>
           */
          kKillEaterEventType_Invoker_MultiHeroIceWall(206),
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroEMP = 207;</code>
           */
          kKillEaterEventType_Invoker_ThreeHeroEMP(207),
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast = 208;</code>
           */
          kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast(208),
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroChaosMeteor = 209;</code>
           */
          kKillEaterEventType_Invoker_MultiHeroChaosMeteor(209),
          /**
           * <code>kKillEaterEventType_Jakiro_MultiHeroDualBreath = 210;</code>
           */
          kKillEaterEventType_Jakiro_MultiHeroDualBreath(210),
          /**
           * <code>kKillEaterEventType_Jakiro_IcePathMacropyreCombos = 211;</code>
           */
          kKillEaterEventType_Jakiro_IcePathMacropyreCombos(211),
          /**
           * <code>kKillEaterEventType_Leshrac_PulseNovaKills = 212;</code>
           */
          kKillEaterEventType_Leshrac_PulseNovaKills(212),
          /**
           * <code>kKillEaterEventType_Leshrac_ThreeHeroLightningStorm = 213;</code>
           */
          kKillEaterEventType_Leshrac_ThreeHeroLightningStorm(213),
          /**
           * <code>kKillEaterEventType_Lion_ThreeHeroFingerOfDeath = 214;</code>
           */
          kKillEaterEventType_Lion_ThreeHeroFingerOfDeath(214),
          /**
           * <code>kKillEaterEventType_Meepo_PoofKills = 215;</code>
           */
          kKillEaterEventType_Meepo_PoofKills(215),
          /**
           * <code>kKillEaterEventType_Meepo_MultiHeroEarthbinds = 216;</code>
           */
          kKillEaterEventType_Meepo_MultiHeroEarthbinds(216),
          /**
           * <code>kKillEaterEventType_NightStalker_NighttimeKills = 217;</code>
           */
          kKillEaterEventType_NightStalker_NighttimeKills(217),
          /**
           * <code>kKillEaterEventType_Morphling_KillsDuringReplicate = 218;</code>
           */
          kKillEaterEventType_Morphling_KillsDuringReplicate(218),
          /**
           * <code>kKillEaterEventType_OgreMagi_FireblastKills = 219;</code>
           */
          kKillEaterEventType_OgreMagi_FireblastKills(219),
          /**
           * <code>kKillEaterEventType_OgreMagi_IgniteKills = 220;</code>
           */
          kKillEaterEventType_OgreMagi_IgniteKills(220),
          /**
           * <code>kKillEaterEventType_DominatingKillStreaks = 221;</code>
           */
          kKillEaterEventType_DominatingKillStreaks(221),
          /**
           * <code>kKillEaterEventType_MegaKillStreaks = 222;</code>
           */
          kKillEaterEventType_MegaKillStreaks(222),
          /**
           * <code>kKillEaterEventType_Alchemist_AghanimsGiven = 223;</code>
           */
          kKillEaterEventType_Alchemist_AghanimsGiven(223),
          /**
           * <code>kKillEaterEventType_VeilsLeadingToKills = 224;</code>
           */
          kKillEaterEventType_VeilsLeadingToKills(224),
          /**
           * <code>kKillEaterEventType_DustLeadingToKills = 225;</code>
           */
          kKillEaterEventType_DustLeadingToKills(225),
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns = 226;</code>
           */
          kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns(226),
          /**
           * <code>kKillEaterEventType_Weaver_ShukuchiKills = 227;</code>
           */
          kKillEaterEventType_Weaver_ShukuchiKills(227),
          /**
           * <code>kKillEaterEventType_Windrunner_ShackleFocusFireKills = 228;</code>
           */
          kKillEaterEventType_Windrunner_ShackleFocusFireKills(228),
          /**
           * <code>kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills = 229;</code>
           */
          kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills(229),
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunchKills = 230;</code>
           */
          kKillEaterEventType_Tusk_WalrusPunchKills(230),
          /**
           * <code>kKillEaterEventType_Tinker_MultiHeroLasers = 231;</code>
           */
          kKillEaterEventType_Tinker_MultiHeroLasers(231),
          /**
           * <code>kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades = 232;</code>
           */
          kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades(232),
          /**
           * <code>kKillEaterEventType_Sven_KillsDuringGodsStrength = 233;</code>
           */
          kKillEaterEventType_Sven_KillsDuringGodsStrength(233),
          /**
           * <code>kKillEaterEventType_Sniper_ThreeHeroShrapnels = 234;</code>
           */
          kKillEaterEventType_Sniper_ThreeHeroShrapnels(234),
          /**
           * <code>kKillEaterEventType_Slark_KillsDuringShadowDance = 235;</code>
           */
          kKillEaterEventType_Slark_KillsDuringShadowDance(235),
          /**
           * <code>kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks = 236;</code>
           */
          kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks(236),
          /**
           * <code>kKillEaterEventType_ShadowShaman_SerpentWardShackleKills = 237;</code>
           */
          kKillEaterEventType_ShadowShaman_SerpentWardShackleKills(237),
          /**
           * <code>kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade = 238;</code>
           */
          kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade(238),
          /**
           * <code>kKillEaterEventType_Razor_EyeOfTheStormKills = 239;</code>
           */
          kKillEaterEventType_Razor_EyeOfTheStormKills(239),
          /**
           * <code>kKillEaterEventType_Pugna_LifeDrainKills = 240;</code>
           */
          kKillEaterEventType_Pugna_LifeDrainKills(240),
          /**
           * <code>kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills = 241;</code>
           */
          kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills(241),
          /**
           * <code>kKillEaterEventType_Oracle_MultiHeroFortunesEnd = 242;</code>
           */
          kKillEaterEventType_Oracle_MultiHeroFortunesEnd(242),
          /**
           * <code>kKillEaterEventType_Omniknight_PurificationKills = 243;</code>
           */
          kKillEaterEventType_Omniknight_PurificationKills(243),
          /**
           * <code>kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear = 244;</code>
           */
          kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear(244),
          /**
           * <code>kKillEaterEventType_Warlock_ThreeHeroFatalBonds = 245;</code>
           */
          kKillEaterEventType_Warlock_ThreeHeroFatalBonds(245),
          /**
           * <code>kKillEaterEventType_Riki_TricksOfTheTradeKills = 246;</code>
           */
          kKillEaterEventType_Riki_TricksOfTheTradeKills(246),
          /**
           * <code>kKillEaterEventType_Earthshaker_AftershockHits10 = 247;</code>
           */
          kKillEaterEventType_Earthshaker_AftershockHits10(247),
          /**
           * <code>kKillEaterEventType_Earthshaker_5HeroEchoslams = 248;</code>
           */
          kKillEaterEventType_Earthshaker_5HeroEchoslams(248),
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeHeroKills = 249;</code>
           */
          kKillEaterEventType_Lina_LagunaBladeHeroKills(249),
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeHeroStuns = 250;</code>
           */
          kKillEaterEventType_Lina_LightStrikeHeroStuns(250),
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureMultiStuns = 251;</code>
           */
          kKillEaterEventType_Earthshaker_FissureMultiStuns(251),
          /**
           * <code>kKillEaterEventType_Earthshaker_TotemKills = 252;</code>
           */
          kKillEaterEventType_Earthshaker_TotemKills(252),
          /**
           * <code>kKillEaterEventType_Pangolier_SwashbuckleKills = 253;</code>
           */
          kKillEaterEventType_Pangolier_SwashbuckleKills(253),
          /**
           * <code>kKillEaterEventType_Furion_EnemyHeroesTrapped = 254;</code>
           */
          kKillEaterEventType_Furion_EnemyHeroesTrapped(254),
          /**
           * <code>kKillEaterEventType_Pangolier_HeartpiercerKills = 255;</code>
           */
          kKillEaterEventType_Pangolier_HeartpiercerKills(255),
          /**
           * <code>kKillEaterEventType_Medusa_MultiHeroStoneGaze = 256;</code>
           */
          kKillEaterEventType_Medusa_MultiHeroStoneGaze(256),
          /**
           * <code>kKillEaterEventType_Medusa_SplitShotKills = 257;</code>
           */
          kKillEaterEventType_Medusa_SplitShotKills(257),
          /**
           * <code>kKillEaterEventType_Mirana_MultiHeroStarstorm = 258;</code>
           */
          kKillEaterEventType_Mirana_MultiHeroStarstorm(258),
          /**
           * <code>kKillEaterEventType_Mirana_KillsFromMoonlightShadow = 259;</code>
           */
          kKillEaterEventType_Mirana_KillsFromMoonlightShadow(259),
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroSkewers = 260;</code>
           */
          kKillEaterEventType_Magnus_MultiHeroSkewers(260),
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroReversePolarity = 261;</code>
           */
          kKillEaterEventType_Magnus_MultiHeroReversePolarity(261),
          /**
           * <code>kKillEaterEventType_Magnus_HeroesSlowedWithShockwave = 262;</code>
           */
          kKillEaterEventType_Magnus_HeroesSlowedWithShockwave(262),
          /**
           * <code>kKillEaterEventType_NagaSiren_MultiHeroSong = 263;</code>
           */
          kKillEaterEventType_NagaSiren_MultiHeroSong(263),
          /**
           * <code>kKillEaterEventType_NagaSiren_AlliesHealedBySong = 264;</code>
           */
          kKillEaterEventType_NagaSiren_AlliesHealedBySong(264),
          /**
           * <code>kKillEaterEventType_LoneDruid_MultiHeroRoar = 265;</code>
           */
          kKillEaterEventType_LoneDruid_MultiHeroRoar(265),
          /**
           * <code>kKillEaterEventType_LoneDruid_BattleCryKills = 266;</code>
           */
          kKillEaterEventType_LoneDruid_BattleCryKills(266),
          /**
           * <code>kKillEaterEventType_WinterWyvern_ThreeHeroCurses = 267;</code>
           */
          kKillEaterEventType_WinterWyvern_ThreeHeroCurses(267),
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell = 268;</code>
           */
          kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell(268),
          /**
           * <code>kKillEaterEventType_Mars_EnemiesKilledInArena = 269;</code>
           */
          kKillEaterEventType_Mars_EnemiesKilledInArena(269),
          /**
           * <code>kKillEaterEventType_Mars_MultiHeroGodsRebuke = 270;</code>
           */
          kKillEaterEventType_Mars_MultiHeroGodsRebuke(270),
          /**
           * <code>kKillEaterEventType_Mars_GodsRebukeKills = 271;</code>
           */
          kKillEaterEventType_Mars_GodsRebukeKills(271),
          /**
           * <code>kKillEaterEventType_Snapfire_LizardBlobsKills = 272;</code>
           */
          kKillEaterEventType_Snapfire_LizardBlobsKills(272),
          /**
           * <code>kKillEaterEventType_Snapfire_TwoHeroCookieStuns = 273;</code>
           */
          kKillEaterEventType_Snapfire_TwoHeroCookieStuns(273),
          /**
           * <code>Custom_KillStreak = 274;</code>
           */
          Custom_KillStreak(274),
          /**
           * <code>kKillEaterEventType_Muerta_DeadShotKills = 275;</code>
           */
          kKillEaterEventType_Muerta_DeadShotKills(275),
          /**
           * <code>kKillEaterEventType_Muerta_PierceTheVeilKills = 276;</code>
           */
          kKillEaterEventType_Muerta_PierceTheVeilKills(276),
          /**
           * <code>kKillEaterEventType_Muerta_MultiHeroDeadShot = 277;</code>
           */
          kKillEaterEventType_Muerta_MultiHeroDeadShot(277),
          /**
           * <code>kKillEaterEventType_Muerta_DeadShotsIntoTheCalling = 278;</code>
           */
          kKillEaterEventType_Muerta_DeadShotsIntoTheCalling(278),
          /**
           * <code>kKillEaterEventType_Ringmaster_LongRangeDaggerHits = 279;</code>
           */
          kKillEaterEventType_Ringmaster_LongRangeDaggerHits(279),
          /**
           * <code>kKillEaterEventType_Ringmaster_MultiHeroWhips = 280;</code>
           */
          kKillEaterEventType_Ringmaster_MultiHeroWhips(280),
          /**
           * <code>kKillEaterEventType_Ringmaster_MultiHeroMesmerizes = 281;</code>
           */
          kKillEaterEventType_Ringmaster_MultiHeroMesmerizes(281),
          ;

          static {
            com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
              com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
              /* major= */ 4,
              /* minor= */ 28,
              /* patch= */ 0,
              /* suffix= */ "",
              MvpAccoladeType.class.getName());
          }
          /**
           * <code>kills = 1;</code>
           */
          public static final int kills_VALUE = 1;
          /**
           * <code>deaths = 2;</code>
           */
          public static final int deaths_VALUE = 2;
          /**
           * <code>assists = 3;</code>
           */
          public static final int assists_VALUE = 3;
          /**
           * <code>net_worth = 5;</code>
           */
          public static final int net_worth_VALUE = 5;
          /**
           * <code>item_value = 6;</code>
           */
          public static final int item_value_VALUE = 6;
          /**
           * <code>support_gold_spent = 7;</code>
           */
          public static final int support_gold_spent_VALUE = 7;
          /**
           * <code>wards_placed = 8;</code>
           */
          public static final int wards_placed_VALUE = 8;
          /**
           * <code>dewards = 9;</code>
           */
          public static final int dewards_VALUE = 9;
          /**
           * <code>camps_stacked = 10;</code>
           */
          public static final int camps_stacked_VALUE = 10;
          /**
           * <code>last_hits = 11;</code>
           */
          public static final int last_hits_VALUE = 11;
          /**
           * <code>denies = 12;</code>
           */
          public static final int denies_VALUE = 12;
          /**
           * <code>kKillEaterEvent_Killing_Sprees = 13;</code>
           */
          public static final int kKillEaterEvent_Killing_Sprees_VALUE = 13;
          /**
           * <code>kKillEaterEvent_Godlike = 14;</code>
           */
          public static final int kKillEaterEvent_Godlike_VALUE = 14;
          /**
           * <code>kKillEaterEvent_Towers_Destroyed = 15;</code>
           */
          public static final int kKillEaterEvent_Towers_Destroyed_VALUE = 15;
          /**
           * <code>kKillEaterEventType_Invoker_SunstrikeKills = 16;</code>
           */
          public static final int kKillEaterEventType_Invoker_SunstrikeKills_VALUE = 16;
          /**
           * <code>kKillEaterEventType_Axe_Culls = 17;</code>
           */
          public static final int kKillEaterEventType_Axe_Culls_VALUE = 17;
          /**
           * <code>kKillEaterEventType_Axe_BattleHungerKills = 18;</code>
           */
          public static final int kKillEaterEventType_Axe_BattleHungerKills_VALUE = 18;
          /**
           * <code>kKillEaterEventType_LowHealthKills = 19;</code>
           */
          public static final int kKillEaterEventType_LowHealthKills_VALUE = 19;
          /**
           * <code>kKillEaterEventType_Invoker_TornadoKills = 20;</code>
           */
          public static final int kKillEaterEventType_Invoker_TornadoKills_VALUE = 20;
          /**
           * <code>kKillEaterEventType_Sven_DoubleStuns = 21;</code>
           */
          public static final int kKillEaterEventType_Sven_DoubleStuns_VALUE = 21;
          /**
           * <code>kKillEaterEventType_Sven_WarcryAssists = 22;</code>
           */
          public static final int kKillEaterEventType_Sven_WarcryAssists_VALUE = 22;
          /**
           * <code>kKillEaterEventType_Sven_CleaveDoubleKills = 23;</code>
           */
          public static final int kKillEaterEventType_Sven_CleaveDoubleKills_VALUE = 23;
          /**
           * <code>kKillEaterEventType_Sven_TeleportInterrupts = 24;</code>
           */
          public static final int kKillEaterEventType_Sven_TeleportInterrupts_VALUE = 24;
          /**
           * <code>kKillEaterEventType_Faceless_MultiChrono = 25;</code>
           */
          public static final int kKillEaterEventType_Faceless_MultiChrono_VALUE = 25;
          /**
           * <code>kKillEaterEventType_Faceless_ChronoKills = 26;</code>
           */
          public static final int kKillEaterEventType_Faceless_ChronoKills_VALUE = 26;
          /**
           * <code>kKillEaterEventType_Ursa_MultiShocks = 27;</code>
           */
          public static final int kKillEaterEventType_Ursa_MultiShocks_VALUE = 27;
          /**
           * <code>kKillEaterEventType_RoshanKills = 28;</code>
           */
          public static final int kKillEaterEventType_RoshanKills_VALUE = 28;
          /**
           * <code>kKillEaterEventType_Lion_FingerKills = 29;</code>
           */
          public static final int kKillEaterEventType_Lion_FingerKills_VALUE = 29;
          /**
           * <code>kKillEaterEventType_Riki_SmokedHeroKills = 32;</code>
           */
          public static final int kKillEaterEventType_Riki_SmokedHeroKills_VALUE = 32;
          /**
           * <code>kKillEaterEventType_HeroesRevealedWithDust = 33;</code>
           */
          public static final int kKillEaterEventType_HeroesRevealedWithDust_VALUE = 33;
          /**
           * <code>kKillEaterEventType_SkeletonKing_ReincarnationKills = 34;</code>
           */
          public static final int kKillEaterEventType_SkeletonKing_ReincarnationKills_VALUE = 34;
          /**
           * <code>kKillEaterEventType_Skywrath_FlareKills = 35;</code>
           */
          public static final int kKillEaterEventType_Skywrath_FlareKills_VALUE = 35;
          /**
           * <code>kKillEaterEventType_Leshrac_SplitEarthStuns = 36;</code>
           */
          public static final int kKillEaterEventType_Leshrac_SplitEarthStuns_VALUE = 36;
          /**
           * <code>kKillEaterEventType_Mirana_MaxStunArrows = 37;</code>
           */
          public static final int kKillEaterEventType_Mirana_MaxStunArrows_VALUE = 37;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits = 38;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits_VALUE = 38;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerCrits = 39;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_DaggerCrits_VALUE = 39;
          /**
           * <code>kKillEaterEventType_Meepo_Earthbinds = 40;</code>
           */
          public static final int kKillEaterEventType_Meepo_Earthbinds_VALUE = 40;
          /**
           * <code>kKillEaterEventType_Bloodseeker_RuptureKills = 41;</code>
           */
          public static final int kKillEaterEventType_Bloodseeker_RuptureKills_VALUE = 41;
          /**
           * <code>kKillEaterEventType_Slark_LeashedEnemies = 42;</code>
           */
          public static final int kKillEaterEventType_Slark_LeashedEnemies_VALUE = 42;
          /**
           * <code>kKillEaterEventType_Disruptor_FountainGlimpses = 43;</code>
           */
          public static final int kKillEaterEventType_Disruptor_FountainGlimpses_VALUE = 43;
          /**
           * <code>kKillEaterEventType_Rubick_SpellsStolen = 44;</code>
           */
          public static final int kKillEaterEventType_Rubick_SpellsStolen_VALUE = 44;
          /**
           * <code>kKillEaterEventType_Rubick_UltimatesStolen = 45;</code>
           */
          public static final int kKillEaterEventType_Rubick_UltimatesStolen_VALUE = 45;
          /**
           * <code>kKillEaterEventType_Doom_EnemiesDoomed = 46;</code>
           */
          public static final int kKillEaterEventType_Doom_EnemiesDoomed_VALUE = 46;
          /**
           * <code>kKillEaterEventType_Omniknight_Purifications = 47;</code>
           */
          public static final int kKillEaterEventType_Omniknight_Purifications_VALUE = 47;
          /**
           * <code>kKillEaterEventType_Omniknight_AlliesRepelled = 48;</code>
           */
          public static final int kKillEaterEventType_Omniknight_AlliesRepelled_VALUE = 48;
          /**
           * <code>kKillEaterEventType_Omniknight_EnemiesRepelled = 49;</code>
           */
          public static final int kKillEaterEventType_Omniknight_EnemiesRepelled_VALUE = 49;
          /**
           * <code>kKillEaterEventType_Warlock_FiveHeroFatalBonds = 50;</code>
           */
          public static final int kKillEaterEventType_Warlock_FiveHeroFatalBonds_VALUE = 50;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FrostbittenEnemies = 51;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_FrostbittenEnemies_VALUE = 51;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_CrystalNovas = 52;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_CrystalNovas_VALUE = 52;
          /**
           * <code>kKillEaterEventType_Kunkka_DoubleHeroTorrents = 53;</code>
           */
          public static final int kKillEaterEventType_Kunkka_DoubleHeroTorrents_VALUE = 53;
          /**
           * <code>kKillEaterEventType_Kunkka_TripleHeroGhostShips = 54;</code>
           */
          public static final int kKillEaterEventType_Kunkka_TripleHeroGhostShips_VALUE = 54;
          /**
           * <code>kKillEaterEventType_NagaSiren_EnemiesEnsnared = 55;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_EnemiesEnsnared_VALUE = 55;
          /**
           * <code>kKillEaterEventType_NagaSiren_TripleHeroRipTides = 56;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_TripleHeroRipTides_VALUE = 56;
          /**
           * <code>kKillEaterEventType_Lycan_KillsDuringShapeshift = 57;</code>
           */
          public static final int kKillEaterEventType_Lycan_KillsDuringShapeshift_VALUE = 57;
          /**
           * <code>kKillEaterEventType_Pudge_DismemberKills = 58;</code>
           */
          public static final int kKillEaterEventType_Pudge_DismemberKills_VALUE = 58;
          /**
           * <code>kKillEaterEventType_Pudge_EnemyHeroesHooked = 59;</code>
           */
          public static final int kKillEaterEventType_Pudge_EnemyHeroesHooked_VALUE = 59;
          /**
           * <code>kKillEaterEventType_Pudge_HookKills = 60;</code>
           */
          public static final int kKillEaterEventType_Pudge_HookKills_VALUE = 60;
          /**
           * <code>kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked = 61;</code>
           */
          public static final int kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked_VALUE = 61;
          /**
           * <code>kKillEaterEventType_DrowRanger_EnemiesSilenced = 62;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_EnemiesSilenced_VALUE = 62;
          /**
           * <code>kKillEaterEventType_DrowRanger_MultiHeroSilences = 63;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_MultiHeroSilences_VALUE = 63;
          /**
           * <code>kKillEaterEventType_DrowRanger_SilencedKills = 64;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_SilencedKills_VALUE = 64;
          /**
           * <code>kKillEaterEventType_DrowRanger_FrostArrowKills = 65;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_FrostArrowKills_VALUE = 65;
          /**
           * <code>kKillEaterEventType_DragonKnight_KillsInDragonForm = 66;</code>
           */
          public static final int kKillEaterEventType_DragonKnight_KillsInDragonForm_VALUE = 66;
          /**
           * <code>kKillEaterEventType_DragonKnight_BreatheFireKills = 67;</code>
           */
          public static final int kKillEaterEventType_DragonKnight_BreatheFireKills_VALUE = 67;
          /**
           * <code>kKillEaterEventType_DragonKnight_SplashKills = 68;</code>
           */
          public static final int kKillEaterEventType_DragonKnight_SplashKills_VALUE = 68;
          /**
           * <code>kKillEaterEventType_WitchDoctor_CaskStuns = 69;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_CaskStuns_VALUE = 69;
          /**
           * <code>kKillEaterEventType_WitchDoctor_MaledictKills = 70;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_MaledictKills_VALUE = 70;
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroMaledicts = 71;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_MultiHeroMaledicts_VALUE = 71;
          /**
           * <code>kKillEaterEventType_WitchDoctor_DeathWardKills = 72;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_DeathWardKills_VALUE = 72;
          /**
           * <code>kKillEaterEventType_Disruptor_ThunderStrikeKills = 73;</code>
           */
          public static final int kKillEaterEventType_Disruptor_ThunderStrikeKills_VALUE = 73;
          /**
           * <code>kKillEaterEventType_Disruptor_HeroesGlimpsed = 74;</code>
           */
          public static final int kKillEaterEventType_Disruptor_HeroesGlimpsed_VALUE = 74;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FreezingFieldKills = 75;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_FreezingFieldKills_VALUE = 75;
          /**
           * <code>kKillEaterEventType_Medusa_EnemiesPetrified = 77;</code>
           */
          public static final int kKillEaterEventType_Medusa_EnemiesPetrified_VALUE = 77;
          /**
           * <code>kKillEaterEventType_Warlock_FatalBondsKills = 78;</code>
           */
          public static final int kKillEaterEventType_Warlock_FatalBondsKills_VALUE = 78;
          /**
           * <code>kKillEaterEventType_Warlock_GolemKills = 79;</code>
           */
          public static final int kKillEaterEventType_Warlock_GolemKills_VALUE = 79;
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunches = 80;</code>
           */
          public static final int kKillEaterEventType_Tusk_WalrusPunches_VALUE = 80;
          /**
           * <code>kKillEaterEventType_Tusk_SnowballStuns = 81;</code>
           */
          public static final int kKillEaterEventType_Tusk_SnowballStuns_VALUE = 81;
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureStuns = 82;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_FissureStuns_VALUE = 82;
          /**
           * <code>kKillEaterEventType_Earthshaker_3HeroEchoslams = 83;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_3HeroEchoslams_VALUE = 83;
          /**
           * <code>kKillEaterEventType_SandKing_BurrowstrikeStuns = 84;</code>
           */
          public static final int kKillEaterEventType_SandKing_BurrowstrikeStuns_VALUE = 84;
          /**
           * <code>kKillEaterEventType_SandKing_EpicenterKills = 85;</code>
           */
          public static final int kKillEaterEventType_SandKing_EpicenterKills_VALUE = 85;
          /**
           * <code>kKillEaterEventType_SkywrathMage_AncientSealKills = 86;</code>
           */
          public static final int kKillEaterEventType_SkywrathMage_AncientSealKills_VALUE = 86;
          /**
           * <code>kKillEaterEventType_SkywrathMage_ConcussiveShotKills = 87;</code>
           */
          public static final int kKillEaterEventType_SkywrathMage_ConcussiveShotKills_VALUE = 87;
          /**
           * <code>kKillEaterEventType_Luna_LucentBeamKills = 88;</code>
           */
          public static final int kKillEaterEventType_Luna_LucentBeamKills_VALUE = 88;
          /**
           * <code>kKillEaterEventType_Luna_EclipseKills = 89;</code>
           */
          public static final int kKillEaterEventType_Luna_EclipseKills_VALUE = 89;
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_IlluminateKills = 90;</code>
           */
          public static final int kKillEaterEventType_KeeperOfTheLight_IlluminateKills_VALUE = 90;
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns = 91;</code>
           */
          public static final int kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns_VALUE = 91;
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled = 92;</code>
           */
          public static final int kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled_VALUE = 92;
          /**
           * <code>kKillEaterEventType_LegionCommander_DuelsWon = 93;</code>
           */
          public static final int kKillEaterEventType_LegionCommander_DuelsWon_VALUE = 93;
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarKills = 94;</code>
           */
          public static final int kKillEaterEventType_Beastmaster_RoarKills_VALUE = 94;
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarMultiKills = 95;</code>
           */
          public static final int kKillEaterEventType_Beastmaster_RoarMultiKills_VALUE = 95;
          /**
           * <code>kKillEaterEventType_Windrunner_FocusFireBuildings = 96;</code>
           */
          public static final int kKillEaterEventType_Windrunner_FocusFireBuildings_VALUE = 96;
          /**
           * <code>kKillEaterEventType_Windrunner_PowershotKills = 97;</code>
           */
          public static final int kKillEaterEventType_Windrunner_PowershotKills_VALUE = 97;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerLastHits = 98;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_DaggerLastHits_VALUE = 98;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_PhantomStrikeKills = 99;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_PhantomStrikeKills_VALUE = 99;
          /**
           * <code>kKillEaterEventType_DeathProphet_CryptSwarmKills = 100;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_CryptSwarmKills_VALUE = 100;
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismBuildingKills = 101;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_ExorcismBuildingKills_VALUE = 101;
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned = 102;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned_VALUE = 102;
          /**
           * <code>kKillEaterEventType_DeathProphet_MultiHeroSilences = 103;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_MultiHeroSilences_VALUE = 103;
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilKills = 104;</code>
           */
          public static final int kKillEaterEventType_Abaddon_MistCoilKills_VALUE = 104;
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilHealed = 105;</code>
           */
          public static final int kKillEaterEventType_Abaddon_MistCoilHealed_VALUE = 105;
          /**
           * <code>kKillEaterEventType_Abaddon_AphoticShieldKills = 106;</code>
           */
          public static final int kKillEaterEventType_Abaddon_AphoticShieldKills_VALUE = 106;
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostTripleKills = 107;</code>
           */
          public static final int kKillEaterEventType_Lich_ChainFrostTripleKills_VALUE = 107;
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostMultiKills = 108;</code>
           */
          public static final int kKillEaterEventType_Lich_ChainFrostMultiKills_VALUE = 108;
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostBounces = 109;</code>
           */
          public static final int kKillEaterEventType_Lich_ChainFrostBounces_VALUE = 109;
          /**
           * <code>kKillEaterEventType_Ursa_EnragedKills = 110;</code>
           */
          public static final int kKillEaterEventType_Ursa_EnragedKills_VALUE = 110;
          /**
           * <code>kKillEaterEventType_Ursa_EarthshockKills = 111;</code>
           */
          public static final int kKillEaterEventType_Ursa_EarthshockKills_VALUE = 111;
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeKills = 112;</code>
           */
          public static final int kKillEaterEventType_Lina_LagunaBladeKills_VALUE = 112;
          /**
           * <code>kKillEaterEventType_Lina_DragonSlaveKills = 113;</code>
           */
          public static final int kKillEaterEventType_Lina_DragonSlaveKills_VALUE = 113;
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeArrayStuns = 114;</code>
           */
          public static final int kKillEaterEventType_Lina_LightStrikeArrayStuns_VALUE = 114;
          /**
           * <code>kKillEaterEvent_Barracks_Destroyed = 115;</code>
           */
          public static final int kKillEaterEvent_Barracks_Destroyed_VALUE = 115;
          /**
           * <code>kKillEaterEvent_TemplarAssassin_MeldKills = 116;</code>
           */
          public static final int kKillEaterEvent_TemplarAssassin_MeldKills_VALUE = 116;
          /**
           * <code>kKillEaterEvent_TemplarAssassin_HeroesSlowed = 117;</code>
           */
          public static final int kKillEaterEvent_TemplarAssassin_HeroesSlowed_VALUE = 117;
          /**
           * <code>kKillEaterEvent_Sniper_AssassinationKills = 118;</code>
           */
          public static final int kKillEaterEvent_Sniper_AssassinationKills_VALUE = 118;
          /**
           * <code>kKillEaterEvent_Sniper_HeadshotStuns = 119;</code>
           */
          public static final int kKillEaterEvent_Sniper_HeadshotStuns_VALUE = 119;
          /**
           * <code>kKillEaterEvent_EarthSpirit_SmashStuns = 120;</code>
           */
          public static final int kKillEaterEvent_EarthSpirit_SmashStuns_VALUE = 120;
          /**
           * <code>kKillEaterEvent_EarthSpirit_GripSilences = 121;</code>
           */
          public static final int kKillEaterEvent_EarthSpirit_GripSilences_VALUE = 121;
          /**
           * <code>kKillEaterEvent_ShadowShaman_ShackleKills = 122;</code>
           */
          public static final int kKillEaterEvent_ShadowShaman_ShackleKills_VALUE = 122;
          /**
           * <code>kKillEaterEvent_ShadowShaman_HexKills = 123;</code>
           */
          public static final int kKillEaterEvent_ShadowShaman_HexKills_VALUE = 123;
          /**
           * <code>kKillEaterEvent_Centaur_EnemiesStomped = 124;</code>
           */
          public static final int kKillEaterEvent_Centaur_EnemiesStomped_VALUE = 124;
          /**
           * <code>kKillEaterEvent_Centaur_DoubleEdgeKills = 125;</code>
           */
          public static final int kKillEaterEvent_Centaur_DoubleEdgeKills_VALUE = 125;
          /**
           * <code>kKillEaterEvent_Centaur_ReturnKills = 126;</code>
           */
          public static final int kKillEaterEvent_Centaur_ReturnKills_VALUE = 126;
          /**
           * <code>kKillEaterEvent_EmberSpirit_EnemiesChained = 127;</code>
           */
          public static final int kKillEaterEvent_EmberSpirit_EnemiesChained_VALUE = 127;
          /**
           * <code>kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills = 128;</code>
           */
          public static final int kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills_VALUE = 128;
          /**
           * <code>kKillEaterEvent_Puck_OrbKills = 129;</code>
           */
          public static final int kKillEaterEvent_Puck_OrbKills_VALUE = 129;
          /**
           * <code>kKillEaterEvent_VengefulSpirit_EnemiesStunned = 130;</code>
           */
          public static final int kKillEaterEvent_VengefulSpirit_EnemiesStunned_VALUE = 130;
          /**
           * <code>kKillEaterEvent_Lifestealer_RageKills = 131;</code>
           */
          public static final int kKillEaterEvent_Lifestealer_RageKills_VALUE = 131;
          /**
           * <code>kKillEaterEvent_Lifestealer_OpenWoundsKills = 132;</code>
           */
          public static final int kKillEaterEvent_Lifestealer_OpenWoundsKills_VALUE = 132;
          /**
           * <code>kKillEaterEvent_Lifestealer_InfestKills = 133;</code>
           */
          public static final int kKillEaterEvent_Lifestealer_InfestKills_VALUE = 133;
          /**
           * <code>kKillEaterEvent_ElderTitan_SpiritKills = 134;</code>
           */
          public static final int kKillEaterEvent_ElderTitan_SpiritKills_VALUE = 134;
          /**
           * <code>kKillEaterEvent_ElderTitan_GoodStomps = 135;</code>
           */
          public static final int kKillEaterEvent_ElderTitan_GoodStomps_VALUE = 135;
          /**
           * <code>kKillEaterEvent_Clockwerk_RocketKills = 136;</code>
           */
          public static final int kKillEaterEvent_Clockwerk_RocketKills_VALUE = 136;
          /**
           * <code>kKillEaterEvent_Clockwerk_BlindRocketKills = 137;</code>
           */
          public static final int kKillEaterEvent_Clockwerk_BlindRocketKills_VALUE = 137;
          /**
           * <code>kKillEaterEvent_StormSpirit_BallKills = 138;</code>
           */
          public static final int kKillEaterEvent_StormSpirit_BallKills_VALUE = 138;
          /**
           * <code>kKillEaterEvent_StormSpirit_DoubleRemnantKills = 139;</code>
           */
          public static final int kKillEaterEvent_StormSpirit_DoubleRemnantKills_VALUE = 139;
          /**
           * <code>kKillEaterEvent_StormSpirit_VortexKills = 140;</code>
           */
          public static final int kKillEaterEvent_StormSpirit_VortexKills_VALUE = 140;
          /**
           * <code>kKillEaterEvent_Tinker_DoubleMissileKills = 141;</code>
           */
          public static final int kKillEaterEvent_Tinker_DoubleMissileKills_VALUE = 141;
          /**
           * <code>kKillEaterEvent_Tinker_LaserKills = 142;</code>
           */
          public static final int kKillEaterEvent_Tinker_LaserKills_VALUE = 142;
          /**
           * <code>kKillEaterEvent_Techies_SuicideKills = 143;</code>
           */
          public static final int kKillEaterEvent_Techies_SuicideKills_VALUE = 143;
          /**
           * <code>kKillEaterEvent_Techies_LandMineKills = 144;</code>
           */
          public static final int kKillEaterEvent_Techies_LandMineKills_VALUE = 144;
          /**
           * <code>kKillEaterEvent_Techies_StatisTrapStuns = 145;</code>
           */
          public static final int kKillEaterEvent_Techies_StatisTrapStuns_VALUE = 145;
          /**
           * <code>kKillEaterEvent_Techies_RemoteMineKills = 146;</code>
           */
          public static final int kKillEaterEvent_Techies_RemoteMineKills_VALUE = 146;
          /**
           * <code>kKillEaterEvent_ShadowFiend_TripleRazeKills = 147;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_TripleRazeKills_VALUE = 147;
          /**
           * <code>kKillEaterEvent_ShadowFiend_RequiemMultiKills = 148;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_RequiemMultiKills_VALUE = 148;
          /**
           * <code>kKillEaterEvent_ShadowFiend_QRazeKills = 149;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_QRazeKills_VALUE = 149;
          /**
           * <code>kKillEaterEvent_ShadowFiend_WRazeKills = 150;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_WRazeKills_VALUE = 150;
          /**
           * <code>kKillEaterEvent_ShadowFiend_ERazeKills = 151;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_ERazeKills_VALUE = 151;
          /**
           * <code>kKillEaterEvent_Oracle_FatesEdictKills = 152;</code>
           */
          public static final int kKillEaterEvent_Oracle_FatesEdictKills_VALUE = 152;
          /**
           * <code>kKillEaterEvent_Oracle_FalsePromiseSaves = 153;</code>
           */
          public static final int kKillEaterEvent_Oracle_FalsePromiseSaves_VALUE = 153;
          /**
           * <code>kKillEaterEvent_Juggernaut_OmnislashKills = 154;</code>
           */
          public static final int kKillEaterEvent_Juggernaut_OmnislashKills_VALUE = 154;
          /**
           * <code>kKillEaterEventType_SkeletonKing_SkeletonHeroKills = 157;</code>
           */
          public static final int kKillEaterEventType_SkeletonKing_SkeletonHeroKills_VALUE = 157;
          /**
           * <code>kKillEaterEventType_DarkWillow_CursedCrownTripleStuns = 158;</code>
           */
          public static final int kKillEaterEventType_DarkWillow_CursedCrownTripleStuns_VALUE = 158;
          /**
           * <code>kKillEaterEventType_Dazzle_ShallowGraveSaves = 159;</code>
           */
          public static final int kKillEaterEventType_Dazzle_ShallowGraveSaves_VALUE = 159;
          /**
           * <code>kKillEaterEventType_Dazzle_PoisonTouchKills = 160;</code>
           */
          public static final int kKillEaterEventType_Dazzle_PoisonTouchKills_VALUE = 160;
          /**
           * <code>kKillEaterEventType_ThreeManMeks = 161;</code>
           */
          public static final int kKillEaterEventType_ThreeManMeks_VALUE = 161;
          /**
           * <code>kKillEaterEventType_Viper_PoisonAttackKills = 162;</code>
           */
          public static final int kKillEaterEventType_Viper_PoisonAttackKills_VALUE = 162;
          /**
           * <code>kKillEaterEventType_Viper_CorrosiveSkinKills = 163;</code>
           */
          public static final int kKillEaterEventType_Viper_CorrosiveSkinKills_VALUE = 163;
          /**
           * <code>kKillEaterEventType_ThreeHeroVeils = 164;</code>
           */
          public static final int kKillEaterEventType_ThreeHeroVeils_VALUE = 164;
          /**
           * <code>kKillEaterEventType_Viper_KillsDuringViperStrike = 165;</code>
           */
          public static final int kKillEaterEventType_Viper_KillsDuringViperStrike_VALUE = 165;
          /**
           * <code>kKillEaterEventType_SolarCrestKills = 166;</code>
           */
          public static final int kKillEaterEventType_SolarCrestKills_VALUE = 166;
          /**
           * <code>kKillEaterEventType_Tiny_TreeThrowKills = 167;</code>
           */
          public static final int kKillEaterEventType_Tiny_TreeThrowKills_VALUE = 167;
          /**
           * <code>kKillEaterEventType_Riki_BackstabKills = 168;</code>
           */
          public static final int kKillEaterEventType_Riki_BackstabKills_VALUE = 168;
          /**
           * <code>kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns = 169;</code>
           */
          public static final int kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns_VALUE = 169;
          /**
           * <code>kKillEaterEventType_Terrorblade_MetamorphosisKills = 170;</code>
           */
          public static final int kKillEaterEventType_Terrorblade_MetamorphosisKills_VALUE = 170;
          /**
           * <code>kKillEaterEventType_Lion_GreatFingerKills = 171;</code>
           */
          public static final int kKillEaterEventType_Lion_GreatFingerKills_VALUE = 171;
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithAghanims = 172;</code>
           */
          public static final int kKillEaterEventType_Antimage_SpellsBlockedWithAghanims_VALUE = 172;
          /**
           * <code>kKillEaterEventType_Antimage_ThreeManManaVoids = 173;</code>
           */
          public static final int kKillEaterEventType_Antimage_ThreeManManaVoids_VALUE = 173;
          /**
           * <code>kKillEaterEventType_ArcWarden_TempestDoubleKills = 174;</code>
           */
          public static final int kKillEaterEventType_ArcWarden_TempestDoubleKills_VALUE = 174;
          /**
           * <code>kKillEaterEventType_ArcWarden_SparkWraithKills = 175;</code>
           */
          public static final int kKillEaterEventType_ArcWarden_SparkWraithKills_VALUE = 175;
          /**
           * <code>kKillEaterEventType_Bane_BrainSapKills = 176;</code>
           */
          public static final int kKillEaterEventType_Bane_BrainSapKills_VALUE = 176;
          /**
           * <code>kKillEaterEventType_Bane_FiendsGripKills = 177;</code>
           */
          public static final int kKillEaterEventType_Bane_FiendsGripKills_VALUE = 177;
          /**
           * <code>kKillEaterEventType_Batrider_TripleHeroFlamebreaks = 178;</code>
           */
          public static final int kKillEaterEventType_Batrider_TripleHeroFlamebreaks_VALUE = 178;
          /**
           * <code>kKillEaterEventType_Batrider_DoubleHeroLassoes = 179;</code>
           */
          public static final int kKillEaterEventType_Batrider_DoubleHeroLassoes_VALUE = 179;
          /**
           * <code>kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit = 180;</code>
           */
          public static final int kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit_VALUE = 180;
          /**
           * <code>kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks = 181;</code>
           */
          public static final int kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks_VALUE = 181;
          /**
           * <code>kKillEaterEventType_Bristleback_TripleHeroNasalGoo = 182;</code>
           */
          public static final int kKillEaterEventType_Bristleback_TripleHeroNasalGoo_VALUE = 182;
          /**
           * <code>kKillEaterEventType_Broodmother_SpiderlingHeroKills = 183;</code>
           */
          public static final int kKillEaterEventType_Broodmother_SpiderlingHeroKills_VALUE = 183;
          /**
           * <code>kKillEaterEventType_Broodmother_KillsInsideWeb = 184;</code>
           */
          public static final int kKillEaterEventType_Broodmother_KillsInsideWeb_VALUE = 184;
          /**
           * <code>kKillEaterEventType_Centaur_ThreeHeroStampede = 185;</code>
           */
          public static final int kKillEaterEventType_Centaur_ThreeHeroStampede_VALUE = 185;
          /**
           * <code>kKillEaterEventType_ChaosKnight_RealityRiftKills = 186;</code>
           */
          public static final int kKillEaterEventType_ChaosKnight_RealityRiftKills_VALUE = 186;
          /**
           * <code>kKillEaterEventType_Chen_KillsWithPenitence = 187;</code>
           */
          public static final int kKillEaterEventType_Chen_KillsWithPenitence_VALUE = 187;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas = 188;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas_VALUE = 188;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields = 189;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields_VALUE = 189;
          /**
           * <code>kKillEaterEventType_Dazzle_ShadowWaveKills = 190;</code>
           */
          public static final int kKillEaterEventType_Dazzle_ShadowWaveKills_VALUE = 190;
          /**
           * <code>kKillEaterEventType_DeathProphet_SiphonKills = 191;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_SiphonKills_VALUE = 191;
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls = 192;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls_VALUE = 192;
          /**
           * <code>kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm = 193;</code>
           */
          public static final int kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm_VALUE = 193;
          /**
           * <code>kKillEaterEventType_Doom_InfernalBladeBurnKills = 194;</code>
           */
          public static final int kKillEaterEventType_Doom_InfernalBladeBurnKills_VALUE = 194;
          /**
           * <code>kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills = 195;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills_VALUE = 195;
          /**
           * <code>kKillEaterEventType_EmberSpirit_RemnantKills = 196;</code>
           */
          public static final int kKillEaterEventType_EmberSpirit_RemnantKills_VALUE = 196;
          /**
           * <code>kKillEaterEventType_EmberSpirit_SleightOfFistKills = 197;</code>
           */
          public static final int kKillEaterEventType_EmberSpirit_SleightOfFistKills_VALUE = 197;
          /**
           * <code>kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos = 198;</code>
           */
          public static final int kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos_VALUE = 198;
          /**
           * <code>kKillEaterEventType_Enigma_ThreeManBlackHoles = 199;</code>
           */
          public static final int kKillEaterEventType_Enigma_ThreeManBlackHoles_VALUE = 199;
          /**
           * <code>kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation = 200;</code>
           */
          public static final int kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation_VALUE = 200;
          /**
           * <code>kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon = 201;</code>
           */
          public static final int kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon_VALUE = 201;
          /**
           * <code>kKillEaterEventType_Gyrocopter_HomingMissileKills = 202;</code>
           */
          public static final int kKillEaterEventType_Gyrocopter_HomingMissileKills_VALUE = 202;
          /**
           * <code>kKillEaterEventType_Gyrocopter_RocketBarrageKills = 203;</code>
           */
          public static final int kKillEaterEventType_Gyrocopter_RocketBarrageKills_VALUE = 203;
          /**
           * <code>kKillEaterEventType_Huskar_KillsDuringLifeBreak = 204;</code>
           */
          public static final int kKillEaterEventType_Huskar_KillsDuringLifeBreak_VALUE = 204;
          /**
           * <code>kKillEaterEventType_Huskar_BurningSpearKills = 205;</code>
           */
          public static final int kKillEaterEventType_Huskar_BurningSpearKills_VALUE = 205;
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroIceWall = 206;</code>
           */
          public static final int kKillEaterEventType_Invoker_MultiHeroIceWall_VALUE = 206;
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroEMP = 207;</code>
           */
          public static final int kKillEaterEventType_Invoker_ThreeHeroEMP_VALUE = 207;
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast = 208;</code>
           */
          public static final int kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast_VALUE = 208;
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroChaosMeteor = 209;</code>
           */
          public static final int kKillEaterEventType_Invoker_MultiHeroChaosMeteor_VALUE = 209;
          /**
           * <code>kKillEaterEventType_Jakiro_MultiHeroDualBreath = 210;</code>
           */
          public static final int kKillEaterEventType_Jakiro_MultiHeroDualBreath_VALUE = 210;
          /**
           * <code>kKillEaterEventType_Jakiro_IcePathMacropyreCombos = 211;</code>
           */
          public static final int kKillEaterEventType_Jakiro_IcePathMacropyreCombos_VALUE = 211;
          /**
           * <code>kKillEaterEventType_Leshrac_PulseNovaKills = 212;</code>
           */
          public static final int kKillEaterEventType_Leshrac_PulseNovaKills_VALUE = 212;
          /**
           * <code>kKillEaterEventType_Leshrac_ThreeHeroLightningStorm = 213;</code>
           */
          public static final int kKillEaterEventType_Leshrac_ThreeHeroLightningStorm_VALUE = 213;
          /**
           * <code>kKillEaterEventType_Lion_ThreeHeroFingerOfDeath = 214;</code>
           */
          public static final int kKillEaterEventType_Lion_ThreeHeroFingerOfDeath_VALUE = 214;
          /**
           * <code>kKillEaterEventType_Meepo_PoofKills = 215;</code>
           */
          public static final int kKillEaterEventType_Meepo_PoofKills_VALUE = 215;
          /**
           * <code>kKillEaterEventType_Meepo_MultiHeroEarthbinds = 216;</code>
           */
          public static final int kKillEaterEventType_Meepo_MultiHeroEarthbinds_VALUE = 216;
          /**
           * <code>kKillEaterEventType_NightStalker_NighttimeKills = 217;</code>
           */
          public static final int kKillEaterEventType_NightStalker_NighttimeKills_VALUE = 217;
          /**
           * <code>kKillEaterEventType_Morphling_KillsDuringReplicate = 218;</code>
           */
          public static final int kKillEaterEventType_Morphling_KillsDuringReplicate_VALUE = 218;
          /**
           * <code>kKillEaterEventType_OgreMagi_FireblastKills = 219;</code>
           */
          public static final int kKillEaterEventType_OgreMagi_FireblastKills_VALUE = 219;
          /**
           * <code>kKillEaterEventType_OgreMagi_IgniteKills = 220;</code>
           */
          public static final int kKillEaterEventType_OgreMagi_IgniteKills_VALUE = 220;
          /**
           * <code>kKillEaterEventType_DominatingKillStreaks = 221;</code>
           */
          public static final int kKillEaterEventType_DominatingKillStreaks_VALUE = 221;
          /**
           * <code>kKillEaterEventType_MegaKillStreaks = 222;</code>
           */
          public static final int kKillEaterEventType_MegaKillStreaks_VALUE = 222;
          /**
           * <code>kKillEaterEventType_Alchemist_AghanimsGiven = 223;</code>
           */
          public static final int kKillEaterEventType_Alchemist_AghanimsGiven_VALUE = 223;
          /**
           * <code>kKillEaterEventType_VeilsLeadingToKills = 224;</code>
           */
          public static final int kKillEaterEventType_VeilsLeadingToKills_VALUE = 224;
          /**
           * <code>kKillEaterEventType_DustLeadingToKills = 225;</code>
           */
          public static final int kKillEaterEventType_DustLeadingToKills_VALUE = 225;
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns = 226;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns_VALUE = 226;
          /**
           * <code>kKillEaterEventType_Weaver_ShukuchiKills = 227;</code>
           */
          public static final int kKillEaterEventType_Weaver_ShukuchiKills_VALUE = 227;
          /**
           * <code>kKillEaterEventType_Windrunner_ShackleFocusFireKills = 228;</code>
           */
          public static final int kKillEaterEventType_Windrunner_ShackleFocusFireKills_VALUE = 228;
          /**
           * <code>kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills = 229;</code>
           */
          public static final int kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills_VALUE = 229;
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunchKills = 230;</code>
           */
          public static final int kKillEaterEventType_Tusk_WalrusPunchKills_VALUE = 230;
          /**
           * <code>kKillEaterEventType_Tinker_MultiHeroLasers = 231;</code>
           */
          public static final int kKillEaterEventType_Tinker_MultiHeroLasers_VALUE = 231;
          /**
           * <code>kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades = 232;</code>
           */
          public static final int kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades_VALUE = 232;
          /**
           * <code>kKillEaterEventType_Sven_KillsDuringGodsStrength = 233;</code>
           */
          public static final int kKillEaterEventType_Sven_KillsDuringGodsStrength_VALUE = 233;
          /**
           * <code>kKillEaterEventType_Sniper_ThreeHeroShrapnels = 234;</code>
           */
          public static final int kKillEaterEventType_Sniper_ThreeHeroShrapnels_VALUE = 234;
          /**
           * <code>kKillEaterEventType_Slark_KillsDuringShadowDance = 235;</code>
           */
          public static final int kKillEaterEventType_Slark_KillsDuringShadowDance_VALUE = 235;
          /**
           * <code>kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks = 236;</code>
           */
          public static final int kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks_VALUE = 236;
          /**
           * <code>kKillEaterEventType_ShadowShaman_SerpentWardShackleKills = 237;</code>
           */
          public static final int kKillEaterEventType_ShadowShaman_SerpentWardShackleKills_VALUE = 237;
          /**
           * <code>kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade = 238;</code>
           */
          public static final int kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade_VALUE = 238;
          /**
           * <code>kKillEaterEventType_Razor_EyeOfTheStormKills = 239;</code>
           */
          public static final int kKillEaterEventType_Razor_EyeOfTheStormKills_VALUE = 239;
          /**
           * <code>kKillEaterEventType_Pugna_LifeDrainKills = 240;</code>
           */
          public static final int kKillEaterEventType_Pugna_LifeDrainKills_VALUE = 240;
          /**
           * <code>kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills = 241;</code>
           */
          public static final int kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills_VALUE = 241;
          /**
           * <code>kKillEaterEventType_Oracle_MultiHeroFortunesEnd = 242;</code>
           */
          public static final int kKillEaterEventType_Oracle_MultiHeroFortunesEnd_VALUE = 242;
          /**
           * <code>kKillEaterEventType_Omniknight_PurificationKills = 243;</code>
           */
          public static final int kKillEaterEventType_Omniknight_PurificationKills_VALUE = 243;
          /**
           * <code>kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear = 244;</code>
           */
          public static final int kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear_VALUE = 244;
          /**
           * <code>kKillEaterEventType_Warlock_ThreeHeroFatalBonds = 245;</code>
           */
          public static final int kKillEaterEventType_Warlock_ThreeHeroFatalBonds_VALUE = 245;
          /**
           * <code>kKillEaterEventType_Riki_TricksOfTheTradeKills = 246;</code>
           */
          public static final int kKillEaterEventType_Riki_TricksOfTheTradeKills_VALUE = 246;
          /**
           * <code>kKillEaterEventType_Earthshaker_AftershockHits10 = 247;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_AftershockHits10_VALUE = 247;
          /**
           * <code>kKillEaterEventType_Earthshaker_5HeroEchoslams = 248;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_5HeroEchoslams_VALUE = 248;
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeHeroKills = 249;</code>
           */
          public static final int kKillEaterEventType_Lina_LagunaBladeHeroKills_VALUE = 249;
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeHeroStuns = 250;</code>
           */
          public static final int kKillEaterEventType_Lina_LightStrikeHeroStuns_VALUE = 250;
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureMultiStuns = 251;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_FissureMultiStuns_VALUE = 251;
          /**
           * <code>kKillEaterEventType_Earthshaker_TotemKills = 252;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_TotemKills_VALUE = 252;
          /**
           * <code>kKillEaterEventType_Pangolier_SwashbuckleKills = 253;</code>
           */
          public static final int kKillEaterEventType_Pangolier_SwashbuckleKills_VALUE = 253;
          /**
           * <code>kKillEaterEventType_Furion_EnemyHeroesTrapped = 254;</code>
           */
          public static final int kKillEaterEventType_Furion_EnemyHeroesTrapped_VALUE = 254;
          /**
           * <code>kKillEaterEventType_Pangolier_HeartpiercerKills = 255;</code>
           */
          public static final int kKillEaterEventType_Pangolier_HeartpiercerKills_VALUE = 255;
          /**
           * <code>kKillEaterEventType_Medusa_MultiHeroStoneGaze = 256;</code>
           */
          public static final int kKillEaterEventType_Medusa_MultiHeroStoneGaze_VALUE = 256;
          /**
           * <code>kKillEaterEventType_Medusa_SplitShotKills = 257;</code>
           */
          public static final int kKillEaterEventType_Medusa_SplitShotKills_VALUE = 257;
          /**
           * <code>kKillEaterEventType_Mirana_MultiHeroStarstorm = 258;</code>
           */
          public static final int kKillEaterEventType_Mirana_MultiHeroStarstorm_VALUE = 258;
          /**
           * <code>kKillEaterEventType_Mirana_KillsFromMoonlightShadow = 259;</code>
           */
          public static final int kKillEaterEventType_Mirana_KillsFromMoonlightShadow_VALUE = 259;
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroSkewers = 260;</code>
           */
          public static final int kKillEaterEventType_Magnus_MultiHeroSkewers_VALUE = 260;
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroReversePolarity = 261;</code>
           */
          public static final int kKillEaterEventType_Magnus_MultiHeroReversePolarity_VALUE = 261;
          /**
           * <code>kKillEaterEventType_Magnus_HeroesSlowedWithShockwave = 262;</code>
           */
          public static final int kKillEaterEventType_Magnus_HeroesSlowedWithShockwave_VALUE = 262;
          /**
           * <code>kKillEaterEventType_NagaSiren_MultiHeroSong = 263;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_MultiHeroSong_VALUE = 263;
          /**
           * <code>kKillEaterEventType_NagaSiren_AlliesHealedBySong = 264;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_AlliesHealedBySong_VALUE = 264;
          /**
           * <code>kKillEaterEventType_LoneDruid_MultiHeroRoar = 265;</code>
           */
          public static final int kKillEaterEventType_LoneDruid_MultiHeroRoar_VALUE = 265;
          /**
           * <code>kKillEaterEventType_LoneDruid_BattleCryKills = 266;</code>
           */
          public static final int kKillEaterEventType_LoneDruid_BattleCryKills_VALUE = 266;
          /**
           * <code>kKillEaterEventType_WinterWyvern_ThreeHeroCurses = 267;</code>
           */
          public static final int kKillEaterEventType_WinterWyvern_ThreeHeroCurses_VALUE = 267;
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell = 268;</code>
           */
          public static final int kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell_VALUE = 268;
          /**
           * <code>kKillEaterEventType_Mars_EnemiesKilledInArena = 269;</code>
           */
          public static final int kKillEaterEventType_Mars_EnemiesKilledInArena_VALUE = 269;
          /**
           * <code>kKillEaterEventType_Mars_MultiHeroGodsRebuke = 270;</code>
           */
          public static final int kKillEaterEventType_Mars_MultiHeroGodsRebuke_VALUE = 270;
          /**
           * <code>kKillEaterEventType_Mars_GodsRebukeKills = 271;</code>
           */
          public static final int kKillEaterEventType_Mars_GodsRebukeKills_VALUE = 271;
          /**
           * <code>kKillEaterEventType_Snapfire_LizardBlobsKills = 272;</code>
           */
          public static final int kKillEaterEventType_Snapfire_LizardBlobsKills_VALUE = 272;
          /**
           * <code>kKillEaterEventType_Snapfire_TwoHeroCookieStuns = 273;</code>
           */
          public static final int kKillEaterEventType_Snapfire_TwoHeroCookieStuns_VALUE = 273;
          /**
           * <code>Custom_KillStreak = 274;</code>
           */
          public static final int Custom_KillStreak_VALUE = 274;
          /**
           * <code>kKillEaterEventType_Muerta_DeadShotKills = 275;</code>
           */
          public static final int kKillEaterEventType_Muerta_DeadShotKills_VALUE = 275;
          /**
           * <code>kKillEaterEventType_Muerta_PierceTheVeilKills = 276;</code>
           */
          public static final int kKillEaterEventType_Muerta_PierceTheVeilKills_VALUE = 276;
          /**
           * <code>kKillEaterEventType_Muerta_MultiHeroDeadShot = 277;</code>
           */
          public static final int kKillEaterEventType_Muerta_MultiHeroDeadShot_VALUE = 277;
          /**
           * <code>kKillEaterEventType_Muerta_DeadShotsIntoTheCalling = 278;</code>
           */
          public static final int kKillEaterEventType_Muerta_DeadShotsIntoTheCalling_VALUE = 278;
          /**
           * <code>kKillEaterEventType_Ringmaster_LongRangeDaggerHits = 279;</code>
           */
          public static final int kKillEaterEventType_Ringmaster_LongRangeDaggerHits_VALUE = 279;
          /**
           * <code>kKillEaterEventType_Ringmaster_MultiHeroWhips = 280;</code>
           */
          public static final int kKillEaterEventType_Ringmaster_MultiHeroWhips_VALUE = 280;
          /**
           * <code>kKillEaterEventType_Ringmaster_MultiHeroMesmerizes = 281;</code>
           */
          public static final int kKillEaterEventType_Ringmaster_MultiHeroMesmerizes_VALUE = 281;


          public final int getNumber() {
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static MvpAccoladeType valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static MvpAccoladeType forNumber(int value) {
            switch (value) {
              case 1: return kills;
              case 2: return deaths;
              case 3: return assists;
              case 5: return net_worth;
              case 6: return item_value;
              case 7: return support_gold_spent;
              case 8: return wards_placed;
              case 9: return dewards;
              case 10: return camps_stacked;
              case 11: return last_hits;
              case 12: return denies;
              case 13: return kKillEaterEvent_Killing_Sprees;
              case 14: return kKillEaterEvent_Godlike;
              case 15: return kKillEaterEvent_Towers_Destroyed;
              case 16: return kKillEaterEventType_Invoker_SunstrikeKills;
              case 17: return kKillEaterEventType_Axe_Culls;
              case 18: return kKillEaterEventType_Axe_BattleHungerKills;
              case 19: return kKillEaterEventType_LowHealthKills;
              case 20: return kKillEaterEventType_Invoker_TornadoKills;
              case 21: return kKillEaterEventType_Sven_DoubleStuns;
              case 22: return kKillEaterEventType_Sven_WarcryAssists;
              case 23: return kKillEaterEventType_Sven_CleaveDoubleKills;
              case 24: return kKillEaterEventType_Sven_TeleportInterrupts;
              case 25: return kKillEaterEventType_Faceless_MultiChrono;
              case 26: return kKillEaterEventType_Faceless_ChronoKills;
              case 27: return kKillEaterEventType_Ursa_MultiShocks;
              case 28: return kKillEaterEventType_RoshanKills;
              case 29: return kKillEaterEventType_Lion_FingerKills;
              case 32: return kKillEaterEventType_Riki_SmokedHeroKills;
              case 33: return kKillEaterEventType_HeroesRevealedWithDust;
              case 34: return kKillEaterEventType_SkeletonKing_ReincarnationKills;
              case 35: return kKillEaterEventType_Skywrath_FlareKills;
              case 36: return kKillEaterEventType_Leshrac_SplitEarthStuns;
              case 37: return kKillEaterEventType_Mirana_MaxStunArrows;
              case 38: return kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits;
              case 39: return kKillEaterEventType_PhantomAssassin_DaggerCrits;
              case 40: return kKillEaterEventType_Meepo_Earthbinds;
              case 41: return kKillEaterEventType_Bloodseeker_RuptureKills;
              case 42: return kKillEaterEventType_Slark_LeashedEnemies;
              case 43: return kKillEaterEventType_Disruptor_FountainGlimpses;
              case 44: return kKillEaterEventType_Rubick_SpellsStolen;
              case 45: return kKillEaterEventType_Rubick_UltimatesStolen;
              case 46: return kKillEaterEventType_Doom_EnemiesDoomed;
              case 47: return kKillEaterEventType_Omniknight_Purifications;
              case 48: return kKillEaterEventType_Omniknight_AlliesRepelled;
              case 49: return kKillEaterEventType_Omniknight_EnemiesRepelled;
              case 50: return kKillEaterEventType_Warlock_FiveHeroFatalBonds;
              case 51: return kKillEaterEventType_CrystalMaiden_FrostbittenEnemies;
              case 52: return kKillEaterEventType_CrystalMaiden_CrystalNovas;
              case 53: return kKillEaterEventType_Kunkka_DoubleHeroTorrents;
              case 54: return kKillEaterEventType_Kunkka_TripleHeroGhostShips;
              case 55: return kKillEaterEventType_NagaSiren_EnemiesEnsnared;
              case 56: return kKillEaterEventType_NagaSiren_TripleHeroRipTides;
              case 57: return kKillEaterEventType_Lycan_KillsDuringShapeshift;
              case 58: return kKillEaterEventType_Pudge_DismemberKills;
              case 59: return kKillEaterEventType_Pudge_EnemyHeroesHooked;
              case 60: return kKillEaterEventType_Pudge_HookKills;
              case 61: return kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked;
              case 62: return kKillEaterEventType_DrowRanger_EnemiesSilenced;
              case 63: return kKillEaterEventType_DrowRanger_MultiHeroSilences;
              case 64: return kKillEaterEventType_DrowRanger_SilencedKills;
              case 65: return kKillEaterEventType_DrowRanger_FrostArrowKills;
              case 66: return kKillEaterEventType_DragonKnight_KillsInDragonForm;
              case 67: return kKillEaterEventType_DragonKnight_BreatheFireKills;
              case 68: return kKillEaterEventType_DragonKnight_SplashKills;
              case 69: return kKillEaterEventType_WitchDoctor_CaskStuns;
              case 70: return kKillEaterEventType_WitchDoctor_MaledictKills;
              case 71: return kKillEaterEventType_WitchDoctor_MultiHeroMaledicts;
              case 72: return kKillEaterEventType_WitchDoctor_DeathWardKills;
              case 73: return kKillEaterEventType_Disruptor_ThunderStrikeKills;
              case 74: return kKillEaterEventType_Disruptor_HeroesGlimpsed;
              case 75: return kKillEaterEventType_CrystalMaiden_FreezingFieldKills;
              case 77: return kKillEaterEventType_Medusa_EnemiesPetrified;
              case 78: return kKillEaterEventType_Warlock_FatalBondsKills;
              case 79: return kKillEaterEventType_Warlock_GolemKills;
              case 80: return kKillEaterEventType_Tusk_WalrusPunches;
              case 81: return kKillEaterEventType_Tusk_SnowballStuns;
              case 82: return kKillEaterEventType_Earthshaker_FissureStuns;
              case 83: return kKillEaterEventType_Earthshaker_3HeroEchoslams;
              case 84: return kKillEaterEventType_SandKing_BurrowstrikeStuns;
              case 85: return kKillEaterEventType_SandKing_EpicenterKills;
              case 86: return kKillEaterEventType_SkywrathMage_AncientSealKills;
              case 87: return kKillEaterEventType_SkywrathMage_ConcussiveShotKills;
              case 88: return kKillEaterEventType_Luna_LucentBeamKills;
              case 89: return kKillEaterEventType_Luna_EclipseKills;
              case 90: return kKillEaterEventType_KeeperOfTheLight_IlluminateKills;
              case 91: return kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns;
              case 92: return kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled;
              case 93: return kKillEaterEventType_LegionCommander_DuelsWon;
              case 94: return kKillEaterEventType_Beastmaster_RoarKills;
              case 95: return kKillEaterEventType_Beastmaster_RoarMultiKills;
              case 96: return kKillEaterEventType_Windrunner_FocusFireBuildings;
              case 97: return kKillEaterEventType_Windrunner_PowershotKills;
              case 98: return kKillEaterEventType_PhantomAssassin_DaggerLastHits;
              case 99: return kKillEaterEventType_PhantomAssassin_PhantomStrikeKills;
              case 100: return kKillEaterEventType_DeathProphet_CryptSwarmKills;
              case 101: return kKillEaterEventType_DeathProphet_ExorcismBuildingKills;
              case 102: return kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned;
              case 103: return kKillEaterEventType_DeathProphet_MultiHeroSilences;
              case 104: return kKillEaterEventType_Abaddon_MistCoilKills;
              case 105: return kKillEaterEventType_Abaddon_MistCoilHealed;
              case 106: return kKillEaterEventType_Abaddon_AphoticShieldKills;
              case 107: return kKillEaterEventType_Lich_ChainFrostTripleKills;
              case 108: return kKillEaterEventType_Lich_ChainFrostMultiKills;
              case 109: return kKillEaterEventType_Lich_ChainFrostBounces;
              case 110: return kKillEaterEventType_Ursa_EnragedKills;
              case 111: return kKillEaterEventType_Ursa_EarthshockKills;
              case 112: return kKillEaterEventType_Lina_LagunaBladeKills;
              case 113: return kKillEaterEventType_Lina_DragonSlaveKills;
              case 114: return kKillEaterEventType_Lina_LightStrikeArrayStuns;
              case 115: return kKillEaterEvent_Barracks_Destroyed;
              case 116: return kKillEaterEvent_TemplarAssassin_MeldKills;
              case 117: return kKillEaterEvent_TemplarAssassin_HeroesSlowed;
              case 118: return kKillEaterEvent_Sniper_AssassinationKills;
              case 119: return kKillEaterEvent_Sniper_HeadshotStuns;
              case 120: return kKillEaterEvent_EarthSpirit_SmashStuns;
              case 121: return kKillEaterEvent_EarthSpirit_GripSilences;
              case 122: return kKillEaterEvent_ShadowShaman_ShackleKills;
              case 123: return kKillEaterEvent_ShadowShaman_HexKills;
              case 124: return kKillEaterEvent_Centaur_EnemiesStomped;
              case 125: return kKillEaterEvent_Centaur_DoubleEdgeKills;
              case 126: return kKillEaterEvent_Centaur_ReturnKills;
              case 127: return kKillEaterEvent_EmberSpirit_EnemiesChained;
              case 128: return kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills;
              case 129: return kKillEaterEvent_Puck_OrbKills;
              case 130: return kKillEaterEvent_VengefulSpirit_EnemiesStunned;
              case 131: return kKillEaterEvent_Lifestealer_RageKills;
              case 132: return kKillEaterEvent_Lifestealer_OpenWoundsKills;
              case 133: return kKillEaterEvent_Lifestealer_InfestKills;
              case 134: return kKillEaterEvent_ElderTitan_SpiritKills;
              case 135: return kKillEaterEvent_ElderTitan_GoodStomps;
              case 136: return kKillEaterEvent_Clockwerk_RocketKills;
              case 137: return kKillEaterEvent_Clockwerk_BlindRocketKills;
              case 138: return kKillEaterEvent_StormSpirit_BallKills;
              case 139: return kKillEaterEvent_StormSpirit_DoubleRemnantKills;
              case 140: return kKillEaterEvent_StormSpirit_VortexKills;
              case 141: return kKillEaterEvent_Tinker_DoubleMissileKills;
              case 142: return kKillEaterEvent_Tinker_LaserKills;
              case 143: return kKillEaterEvent_Techies_SuicideKills;
              case 144: return kKillEaterEvent_Techies_LandMineKills;
              case 145: return kKillEaterEvent_Techies_StatisTrapStuns;
              case 146: return kKillEaterEvent_Techies_RemoteMineKills;
              case 147: return kKillEaterEvent_ShadowFiend_TripleRazeKills;
              case 148: return kKillEaterEvent_ShadowFiend_RequiemMultiKills;
              case 149: return kKillEaterEvent_ShadowFiend_QRazeKills;
              case 150: return kKillEaterEvent_ShadowFiend_WRazeKills;
              case 151: return kKillEaterEvent_ShadowFiend_ERazeKills;
              case 152: return kKillEaterEvent_Oracle_FatesEdictKills;
              case 153: return kKillEaterEvent_Oracle_FalsePromiseSaves;
              case 154: return kKillEaterEvent_Juggernaut_OmnislashKills;
              case 157: return kKillEaterEventType_SkeletonKing_SkeletonHeroKills;
              case 158: return kKillEaterEventType_DarkWillow_CursedCrownTripleStuns;
              case 159: return kKillEaterEventType_Dazzle_ShallowGraveSaves;
              case 160: return kKillEaterEventType_Dazzle_PoisonTouchKills;
              case 161: return kKillEaterEventType_ThreeManMeks;
              case 162: return kKillEaterEventType_Viper_PoisonAttackKills;
              case 163: return kKillEaterEventType_Viper_CorrosiveSkinKills;
              case 164: return kKillEaterEventType_ThreeHeroVeils;
              case 165: return kKillEaterEventType_Viper_KillsDuringViperStrike;
              case 166: return kKillEaterEventType_SolarCrestKills;
              case 167: return kKillEaterEventType_Tiny_TreeThrowKills;
              case 168: return kKillEaterEventType_Riki_BackstabKills;
              case 169: return kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns;
              case 170: return kKillEaterEventType_Terrorblade_MetamorphosisKills;
              case 171: return kKillEaterEventType_Lion_GreatFingerKills;
              case 172: return kKillEaterEventType_Antimage_SpellsBlockedWithAghanims;
              case 173: return kKillEaterEventType_Antimage_ThreeManManaVoids;
              case 174: return kKillEaterEventType_ArcWarden_TempestDoubleKills;
              case 175: return kKillEaterEventType_ArcWarden_SparkWraithKills;
              case 176: return kKillEaterEventType_Bane_BrainSapKills;
              case 177: return kKillEaterEventType_Bane_FiendsGripKills;
              case 178: return kKillEaterEventType_Batrider_TripleHeroFlamebreaks;
              case 179: return kKillEaterEventType_Batrider_DoubleHeroLassoes;
              case 180: return kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit;
              case 181: return kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks;
              case 182: return kKillEaterEventType_Bristleback_TripleHeroNasalGoo;
              case 183: return kKillEaterEventType_Broodmother_SpiderlingHeroKills;
              case 184: return kKillEaterEventType_Broodmother_KillsInsideWeb;
              case 185: return kKillEaterEventType_Centaur_ThreeHeroStampede;
              case 186: return kKillEaterEventType_ChaosKnight_RealityRiftKills;
              case 187: return kKillEaterEventType_Chen_KillsWithPenitence;
              case 188: return kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas;
              case 189: return kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields;
              case 190: return kKillEaterEventType_Dazzle_ShadowWaveKills;
              case 191: return kKillEaterEventType_DeathProphet_SiphonKills;
              case 192: return kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls;
              case 193: return kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm;
              case 194: return kKillEaterEventType_Doom_InfernalBladeBurnKills;
              case 195: return kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills;
              case 196: return kKillEaterEventType_EmberSpirit_RemnantKills;
              case 197: return kKillEaterEventType_EmberSpirit_SleightOfFistKills;
              case 198: return kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos;
              case 199: return kKillEaterEventType_Enigma_ThreeManBlackHoles;
              case 200: return kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation;
              case 201: return kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon;
              case 202: return kKillEaterEventType_Gyrocopter_HomingMissileKills;
              case 203: return kKillEaterEventType_Gyrocopter_RocketBarrageKills;
              case 204: return kKillEaterEventType_Huskar_KillsDuringLifeBreak;
              case 205: return kKillEaterEventType_Huskar_BurningSpearKills;
              case 206: return kKillEaterEventType_Invoker_MultiHeroIceWall;
              case 207: return kKillEaterEventType_Invoker_ThreeHeroEMP;
              case 208: return kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast;
              case 209: return kKillEaterEventType_Invoker_MultiHeroChaosMeteor;
              case 210: return kKillEaterEventType_Jakiro_MultiHeroDualBreath;
              case 211: return kKillEaterEventType_Jakiro_IcePathMacropyreCombos;
              case 212: return kKillEaterEventType_Leshrac_PulseNovaKills;
              case 213: return kKillEaterEventType_Leshrac_ThreeHeroLightningStorm;
              case 214: return kKillEaterEventType_Lion_ThreeHeroFingerOfDeath;
              case 215: return kKillEaterEventType_Meepo_PoofKills;
              case 216: return kKillEaterEventType_Meepo_MultiHeroEarthbinds;
              case 217: return kKillEaterEventType_NightStalker_NighttimeKills;
              case 218: return kKillEaterEventType_Morphling_KillsDuringReplicate;
              case 219: return kKillEaterEventType_OgreMagi_FireblastKills;
              case 220: return kKillEaterEventType_OgreMagi_IgniteKills;
              case 221: return kKillEaterEventType_DominatingKillStreaks;
              case 222: return kKillEaterEventType_MegaKillStreaks;
              case 223: return kKillEaterEventType_Alchemist_AghanimsGiven;
              case 224: return kKillEaterEventType_VeilsLeadingToKills;
              case 225: return kKillEaterEventType_DustLeadingToKills;
              case 226: return kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns;
              case 227: return kKillEaterEventType_Weaver_ShukuchiKills;
              case 228: return kKillEaterEventType_Windrunner_ShackleFocusFireKills;
              case 229: return kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills;
              case 230: return kKillEaterEventType_Tusk_WalrusPunchKills;
              case 231: return kKillEaterEventType_Tinker_MultiHeroLasers;
              case 232: return kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades;
              case 233: return kKillEaterEventType_Sven_KillsDuringGodsStrength;
              case 234: return kKillEaterEventType_Sniper_ThreeHeroShrapnels;
              case 235: return kKillEaterEventType_Slark_KillsDuringShadowDance;
              case 236: return kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks;
              case 237: return kKillEaterEventType_ShadowShaman_SerpentWardShackleKills;
              case 238: return kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade;
              case 239: return kKillEaterEventType_Razor_EyeOfTheStormKills;
              case 240: return kKillEaterEventType_Pugna_LifeDrainKills;
              case 241: return kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills;
              case 242: return kKillEaterEventType_Oracle_MultiHeroFortunesEnd;
              case 243: return kKillEaterEventType_Omniknight_PurificationKills;
              case 244: return kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear;
              case 245: return kKillEaterEventType_Warlock_ThreeHeroFatalBonds;
              case 246: return kKillEaterEventType_Riki_TricksOfTheTradeKills;
              case 247: return kKillEaterEventType_Earthshaker_AftershockHits10;
              case 248: return kKillEaterEventType_Earthshaker_5HeroEchoslams;
              case 249: return kKillEaterEventType_Lina_LagunaBladeHeroKills;
              case 250: return kKillEaterEventType_Lina_LightStrikeHeroStuns;
              case 251: return kKillEaterEventType_Earthshaker_FissureMultiStuns;
              case 252: return kKillEaterEventType_Earthshaker_TotemKills;
              case 253: return kKillEaterEventType_Pangolier_SwashbuckleKills;
              case 254: return kKillEaterEventType_Furion_EnemyHeroesTrapped;
              case 255: return kKillEaterEventType_Pangolier_HeartpiercerKills;
              case 256: return kKillEaterEventType_Medusa_MultiHeroStoneGaze;
              case 257: return kKillEaterEventType_Medusa_SplitShotKills;
              case 258: return kKillEaterEventType_Mirana_MultiHeroStarstorm;
              case 259: return kKillEaterEventType_Mirana_KillsFromMoonlightShadow;
              case 260: return kKillEaterEventType_Magnus_MultiHeroSkewers;
              case 261: return kKillEaterEventType_Magnus_MultiHeroReversePolarity;
              case 262: return kKillEaterEventType_Magnus_HeroesSlowedWithShockwave;
              case 263: return kKillEaterEventType_NagaSiren_MultiHeroSong;
              case 264: return kKillEaterEventType_NagaSiren_AlliesHealedBySong;
              case 265: return kKillEaterEventType_LoneDruid_MultiHeroRoar;
              case 266: return kKillEaterEventType_LoneDruid_BattleCryKills;
              case 267: return kKillEaterEventType_WinterWyvern_ThreeHeroCurses;
              case 268: return kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell;
              case 269: return kKillEaterEventType_Mars_EnemiesKilledInArena;
              case 270: return kKillEaterEventType_Mars_MultiHeroGodsRebuke;
              case 271: return kKillEaterEventType_Mars_GodsRebukeKills;
              case 272: return kKillEaterEventType_Snapfire_LizardBlobsKills;
              case 273: return kKillEaterEventType_Snapfire_TwoHeroCookieStuns;
              case 274: return Custom_KillStreak;
              case 275: return kKillEaterEventType_Muerta_DeadShotKills;
              case 276: return kKillEaterEventType_Muerta_PierceTheVeilKills;
              case 277: return kKillEaterEventType_Muerta_MultiHeroDeadShot;
              case 278: return kKillEaterEventType_Muerta_DeadShotsIntoTheCalling;
              case 279: return kKillEaterEventType_Ringmaster_LongRangeDaggerHits;
              case 280: return kKillEaterEventType_Ringmaster_MultiHeroWhips;
              case 281: return kKillEaterEventType_Ringmaster_MultiHeroMesmerizes;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<MvpAccoladeType>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              MvpAccoladeType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<MvpAccoladeType>() {
                  public MvpAccoladeType findValueByNumber(int number) {
                    return MvpAccoladeType.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.getDescriptor().getEnumTypes().get(0);
          }

          private static final MvpAccoladeType[] VALUES = values();

          public static MvpAccoladeType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private MvpAccoladeType(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType)
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_ = 1;
        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         * @return The type.
         */
        @java.lang.Override public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType getType() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.forNumber(type_);
          return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.kills : result;
        }

        public static final int DETAIL_VALUE_FIELD_NUMBER = 2;
        private float detailValue_ = 0F;
        /**
         * <code>optional float detail_value = 2;</code>
         * @return Whether the detailValue field is set.
         */
        @java.lang.Override
        public boolean hasDetailValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float detail_value = 2;</code>
         * @return The detailValue.
         */
        @java.lang.Override
        public float getDetailValue() {
          return detailValue_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeEnum(1, type_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, detailValue_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, type_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, detailValue_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade)) {
            return super.equals(obj);
          }
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade) obj;

          if (hasType() != other.hasType()) return false;
          if (hasType()) {
            if (type_ != other.type_) return false;
          }
          if (hasDetailValue() != other.hasDetailValue()) return false;
          if (hasDetailValue()) {
            if (java.lang.Float.floatToIntBits(getDetailValue())
                != java.lang.Float.floatToIntBits(
                    other.getDetailValue())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasType()) {
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
          }
          if (hasDetailValue()) {
            hash = (37 * hash) + DETAIL_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getDetailValue());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMvpData.MvpDatum.MvpAccolade}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMvpData.MvpDatum.MvpAccolade)
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder.class);
          }

          // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            type_ = 1;
            detailValue_ = 0F;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade getDefaultInstanceForType() {
            return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance();
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade build() {
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade buildPartial() {
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.type_ = type_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.detailValue_ = detailValue_;
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade) {
              return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade other) {
            if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance()) return this;
            if (other.hasType()) {
              setType(other.getType());
            }
            if (other.hasDetailValue()) {
              setDetailValue(other.getDetailValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    int tmpRaw = input.readEnum();
                    kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType tmpValue =
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.forNumber(tmpRaw);
                    if (tmpValue == null) {
                      mergeUnknownVarintField(1, tmpRaw);
                    } else {
                      type_ = tmpRaw;
                      bitField0_ |= 0x00000001;
                    }
                    break;
                  } // case 8
                  case 21: {
                    detailValue_ = input.readFloat();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 21
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int type_ = 1;
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           * @return Whether the type field is set.
           */
          @java.lang.Override public boolean hasType() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           * @return The type.
           */
          @java.lang.Override
          public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType getType() {
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType result = kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.forNumber(type_);
            return result == null ? kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.kills : result;
          }
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            type_ = 1;
            onChanged();
            return this;
          }

          private float detailValue_ ;
          /**
           * <code>optional float detail_value = 2;</code>
           * @return Whether the detailValue field is set.
           */
          @java.lang.Override
          public boolean hasDetailValue() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float detail_value = 2;</code>
           * @return The detailValue.
           */
          @java.lang.Override
          public float getDetailValue() {
            return detailValue_;
          }
          /**
           * <code>optional float detail_value = 2;</code>
           * @param value The detailValue to set.
           * @return This builder for chaining.
           */
          public Builder setDetailValue(float value) {

            detailValue_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional float detail_value = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearDetailValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            detailValue_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMvpData.MvpDatum.MvpAccolade)
        }

        // @@protoc_insertion_point(class_scope:CMvpData.MvpDatum.MvpAccolade)
        private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade();
        }

        public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MvpAccolade>
            PARSER = new com.google.protobuf.AbstractParser<MvpAccolade>() {
          @java.lang.Override
          public MvpAccolade parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<MvpAccolade> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MvpAccolade> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int PLAYER_SLOT_FIELD_NUMBER = 1;
      private int playerSlot_ = 0;
      /**
       * <code>optional uint32 player_slot = 1;</code>
       * @return Whether the playerSlot field is set.
       */
      @java.lang.Override
      public boolean hasPlayerSlot() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 player_slot = 1;</code>
       * @return The playerSlot.
       */
      @java.lang.Override
      public int getPlayerSlot() {
        return playerSlot_;
      }

      public static final int ACCOLADES_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade> accolades_;
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      @java.lang.Override
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade> getAccoladesList() {
        return accolades_;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
          getAccoladesOrBuilderList() {
        return accolades_;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      @java.lang.Override
      public int getAccoladesCount() {
        return accolades_.size();
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade getAccolades(int index) {
        return accolades_.get(index);
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder getAccoladesOrBuilder(
          int index) {
        return accolades_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, playerSlot_);
        }
        for (int i = 0; i < accolades_.size(); i++) {
          output.writeMessage(2, accolades_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerSlot_);
        }
        for (int i = 0; i < accolades_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, accolades_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum)) {
          return super.equals(obj);
        }
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum) obj;

        if (hasPlayerSlot() != other.hasPlayerSlot()) return false;
        if (hasPlayerSlot()) {
          if (getPlayerSlot()
              != other.getPlayerSlot()) return false;
        }
        if (!getAccoladesList()
            .equals(other.getAccoladesList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPlayerSlot()) {
          hash = (37 * hash) + PLAYER_SLOT_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerSlot();
        }
        if (getAccoladesCount() > 0) {
          hash = (37 * hash) + ACCOLADES_FIELD_NUMBER;
          hash = (53 * hash) + getAccoladesList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMvpData.MvpDatum}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMvpData.MvpDatum)
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder.class);
        }

        // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          playerSlot_ = 0;
          if (accoladesBuilder_ == null) {
            accolades_ = java.util.Collections.emptyList();
          } else {
            accolades_ = null;
            accoladesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_MvpDatum_descriptor;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum getDefaultInstanceForType() {
          return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.getDefaultInstance();
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum build() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum buildPartial() {
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum result) {
          if (accoladesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              accolades_ = java.util.Collections.unmodifiableList(accolades_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.accolades_ = accolades_;
          } else {
            result.accolades_ = accoladesBuilder_.build();
          }
        }

        private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.playerSlot_ = playerSlot_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum) {
            return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum other) {
          if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.getDefaultInstance()) return this;
          if (other.hasPlayerSlot()) {
            setPlayerSlot(other.getPlayerSlot());
          }
          if (accoladesBuilder_ == null) {
            if (!other.accolades_.isEmpty()) {
              if (accolades_.isEmpty()) {
                accolades_ = other.accolades_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureAccoladesIsMutable();
                accolades_.addAll(other.accolades_);
              }
              onChanged();
            }
          } else {
            if (!other.accolades_.isEmpty()) {
              if (accoladesBuilder_.isEmpty()) {
                accoladesBuilder_.dispose();
                accoladesBuilder_ = null;
                accolades_ = other.accolades_;
                bitField0_ = (bitField0_ & ~0x00000002);
                accoladesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAccoladesFieldBuilder() : null;
              } else {
                accoladesBuilder_.addAllMessages(other.accolades_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  playerSlot_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade m =
                      input.readMessage(
                          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.parser(),
                          extensionRegistry);
                  if (accoladesBuilder_ == null) {
                    ensureAccoladesIsMutable();
                    accolades_.add(m);
                  } else {
                    accoladesBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int playerSlot_ ;
        /**
         * <code>optional uint32 player_slot = 1;</code>
         * @return Whether the playerSlot field is set.
         */
        @java.lang.Override
        public boolean hasPlayerSlot() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 player_slot = 1;</code>
         * @return The playerSlot.
         */
        @java.lang.Override
        public int getPlayerSlot() {
          return playerSlot_;
        }
        /**
         * <code>optional uint32 player_slot = 1;</code>
         * @param value The playerSlot to set.
         * @return This builder for chaining.
         */
        public Builder setPlayerSlot(int value) {

          playerSlot_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_slot = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayerSlot() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerSlot_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade> accolades_ =
          java.util.Collections.emptyList();
        private void ensureAccoladesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            accolades_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade>(accolades_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder> accoladesBuilder_;

        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade> getAccoladesList() {
          if (accoladesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(accolades_);
          } else {
            return accoladesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public int getAccoladesCount() {
          if (accoladesBuilder_ == null) {
            return accolades_.size();
          } else {
            return accoladesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade getAccolades(int index) {
          if (accoladesBuilder_ == null) {
            return accolades_.get(index);
          } else {
            return accoladesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder setAccolades(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade value) {
          if (accoladesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAccoladesIsMutable();
            accolades_.set(index, value);
            onChanged();
          } else {
            accoladesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder setAccolades(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder builderForValue) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.set(index, builderForValue.build());
            onChanged();
          } else {
            accoladesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade value) {
          if (accoladesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAccoladesIsMutable();
            accolades_.add(value);
            onChanged();
          } else {
            accoladesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade value) {
          if (accoladesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAccoladesIsMutable();
            accolades_.add(index, value);
            onChanged();
          } else {
            accoladesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder builderForValue) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.add(builderForValue.build());
            onChanged();
          } else {
            accoladesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(
            int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder builderForValue) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.add(index, builderForValue.build());
            onChanged();
          } else {
            accoladesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAllAccolades(
            java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade> values) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, accolades_);
            onChanged();
          } else {
            accoladesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder clearAccolades() {
          if (accoladesBuilder_ == null) {
            accolades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            accoladesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder removeAccolades(int index) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.remove(index);
            onChanged();
          } else {
            accoladesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder getAccoladesBuilder(
            int index) {
          return getAccoladesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder getAccoladesOrBuilder(
            int index) {
          if (accoladesBuilder_ == null) {
            return accolades_.get(index);  } else {
            return accoladesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
             getAccoladesOrBuilderList() {
          if (accoladesBuilder_ != null) {
            return accoladesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(accolades_);
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder addAccoladesBuilder() {
          return getAccoladesFieldBuilder().addBuilder(
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance());
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder addAccoladesBuilder(
            int index) {
          return getAccoladesFieldBuilder().addBuilder(
              index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance());
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder> 
             getAccoladesBuilderList() {
          return getAccoladesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
            getAccoladesFieldBuilder() {
          if (accoladesBuilder_ == null) {
            accoladesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccolade.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.MvpAccoladeOrBuilder>(
                    accolades_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            accolades_ = null;
          }
          return accoladesBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMvpData.MvpDatum)
      }

      // @@protoc_insertion_point(class_scope:CMvpData.MvpDatum)
      private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum();
      }

      public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MvpDatum>
          PARSER = new com.google.protobuf.AbstractParser<MvpDatum>() {
        @java.lang.Override
        public MvpDatum parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<MvpDatum> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MvpDatum> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MVPS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum> mvps_;
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    @java.lang.Override
    public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum> getMvpsList() {
      return mvps_;
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder> 
        getMvpsOrBuilderList() {
      return mvps_;
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    @java.lang.Override
    public int getMvpsCount() {
      return mvps_.size();
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum getMvps(int index) {
      return mvps_.get(index);
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder getMvpsOrBuilder(
        int index) {
      return mvps_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < mvps_.size(); i++) {
        output.writeMessage(1, mvps_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mvps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mvps_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData)) {
        return super.equals(obj);
      }
      kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData other = (kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData) obj;

      if (!getMvpsList()
          .equals(other.getMvpsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMvpsCount() > 0) {
        hash = (37 * hash) + MVPS_FIELD_NUMBER;
        hash = (53 * hash) + getMvpsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMvpData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMvpData)
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.class, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.Builder.class);
      }

      // Construct using kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (mvpsBuilder_ == null) {
          mvps_ = java.util.Collections.emptyList();
        } else {
          mvps_ = null;
          mvpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.internal_static_CMvpData_descriptor;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData getDefaultInstanceForType() {
        return kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.getDefaultInstance();
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData build() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData buildPartial() {
        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData result = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData result) {
        if (mvpsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            mvps_ = java.util.Collections.unmodifiableList(mvps_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mvps_ = mvps_;
        } else {
          result.mvps_ = mvpsBuilder_.build();
        }
      }

      private void buildPartial0(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData) {
          return mergeFrom((kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData other) {
        if (other == kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.getDefaultInstance()) return this;
        if (mvpsBuilder_ == null) {
          if (!other.mvps_.isEmpty()) {
            if (mvps_.isEmpty()) {
              mvps_ = other.mvps_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMvpsIsMutable();
              mvps_.addAll(other.mvps_);
            }
            onChanged();
          }
        } else {
          if (!other.mvps_.isEmpty()) {
            if (mvpsBuilder_.isEmpty()) {
              mvpsBuilder_.dispose();
              mvpsBuilder_ = null;
              mvps_ = other.mvps_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mvpsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMvpsFieldBuilder() : null;
            } else {
              mvpsBuilder_.addAllMessages(other.mvps_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum m =
                    input.readMessage(
                        kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.parser(),
                        extensionRegistry);
                if (mvpsBuilder_ == null) {
                  ensureMvpsIsMutable();
                  mvps_.add(m);
                } else {
                  mvpsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum> mvps_ =
        java.util.Collections.emptyList();
      private void ensureMvpsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          mvps_ = new java.util.ArrayList<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum>(mvps_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder> mvpsBuilder_;

      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum> getMvpsList() {
        if (mvpsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mvps_);
        } else {
          return mvpsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public int getMvpsCount() {
        if (mvpsBuilder_ == null) {
          return mvps_.size();
        } else {
          return mvpsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum getMvps(int index) {
        if (mvpsBuilder_ == null) {
          return mvps_.get(index);
        } else {
          return mvpsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder setMvps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum value) {
        if (mvpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMvpsIsMutable();
          mvps_.set(index, value);
          onChanged();
        } else {
          mvpsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder setMvps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder builderForValue) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.set(index, builderForValue.build());
          onChanged();
        } else {
          mvpsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum value) {
        if (mvpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMvpsIsMutable();
          mvps_.add(value);
          onChanged();
        } else {
          mvpsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum value) {
        if (mvpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMvpsIsMutable();
          mvps_.add(index, value);
          onChanged();
        } else {
          mvpsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder builderForValue) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.add(builderForValue.build());
          onChanged();
        } else {
          mvpsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(
          int index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder builderForValue) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.add(index, builderForValue.build());
          onChanged();
        } else {
          mvpsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addAllMvps(
          java.lang.Iterable<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum> values) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mvps_);
          onChanged();
        } else {
          mvpsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder clearMvps() {
        if (mvpsBuilder_ == null) {
          mvps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mvpsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder removeMvps(int index) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.remove(index);
          onChanged();
        } else {
          mvpsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder getMvpsBuilder(
          int index) {
        return getMvpsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder getMvpsOrBuilder(
          int index) {
        if (mvpsBuilder_ == null) {
          return mvps_.get(index);  } else {
          return mvpsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public java.util.List<? extends kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder> 
           getMvpsOrBuilderList() {
        if (mvpsBuilder_ != null) {
          return mvpsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mvps_);
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder addMvpsBuilder() {
        return getMvpsFieldBuilder().addBuilder(
            kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.getDefaultInstance());
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder addMvpsBuilder(
          int index) {
        return getMvpsFieldBuilder().addBuilder(
            index, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.getDefaultInstance());
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public java.util.List<kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder> 
           getMvpsBuilderList() {
        return getMvpsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder> 
          getMvpsFieldBuilder() {
        if (mvpsBuilder_ == null) {
          mvpsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatum.Builder, kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData.MvpDatumOrBuilder>(
                  mvps_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          mvps_ = null;
        }
        return mvpsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMvpData)
    }

    // @@protoc_insertion_point(class_scope:CMvpData)
    private static final kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData();
    }

    public static kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMvpData>
        PARSER = new com.google.protobuf.AbstractParser<CMvpData>() {
      @java.lang.Override
      public CMvpData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMvpData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMvpData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kz.moltenhaze.proto.dota.DotaGcmessagesCommonMatchManagement.CMvpData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPartyMember_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPartyMember_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAParty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAParty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPartyInvite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPartyInvite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgLeaverState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgLeaverState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgReadyCheckStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgReadyCheckStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgReadyCheckStatus_ReadyMember_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgReadyCheckStatus_ReadyMember_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPartyReadyCheckRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPartyReadyCheckRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPartyReadyCheckResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPartyReadyCheckResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPartyReadyCheckAcknowledge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPartyReadyCheckAcknowledge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgLobbyEventGameDetails_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgLobbyEventGameDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgMatchMatchmakingStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMvpData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMvpData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMvpData_MvpDatum_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMvpData_MvpDatum_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-dota_gcmessages_common_match_managemen" +
      "t.proto\032\023steammessages.proto\032\026gcsdk_gcme" +
      "ssages.proto\032\027dota_shared_enums.proto\"\267\003" +
      "\n\022CSODOTAPartyMember\022\020\n\010is_coach\030\002 \001(\010\022\035" +
      "\n\021region_ping_codes\030\004 \003(\rB\002\020\001\022\035\n\021region_" +
      "ping_times\030\005 \003(\rB\002\020\001\022\"\n\032region_ping_fail" +
      "ed_bitmask\030\006 \001(\r\022\032\n\022is_plus_subscriber\030\n" +
      " \001(\010\022\033\n\023tourney_skill_level\030\007 \001(\r\022\025\n\rtou" +
      "rney_buyin\030\010 \001(\r\022\035\n\025tourney_prevent_unti" +
      "l\030\t \001(\r\022\025\n\rmm_data_valid\030\r \001(\010\022\034\n\024lane_s" +
      "election_flags\030\013 \001(\r\022\036\n\026high_priority_di" +
      "sabled\030\016 \001(\010\022\027\n\017has_hp_resource\030\017 \001(\010\022\037\n" +
      "\027joined_from_partyfinder\030\014 \001(\010\022\026\n\016is_ste" +
      "am_china\030\020 \001(\010\022\027\n\017banned_hero_ids\030\021 \003(\005\"" +
      "\214\017\n\014CSODOTAParty\022\026\n\010party_id\030\001 \001(\004B\004\200\246\035\001" +
      "\022\021\n\tleader_id\030\002 \001(\006\022\022\n\nmember_ids\030\003 \003(\006\022" +
      "\022\n\ngame_modes\030\004 \001(\r\022&\n\005state\030\006 \001(\0162\023.CSO" +
      "DOTAParty.State:\002UI\022*\n\"effective_started" +
      "_matchmaking_time\030\007 \001(\r\022$\n\034raw_started_m" +
      "atchmaking_time\030  \001(\r\022\032\n\022attempt_start_t" +
      "ime\030! \001(\r\022\023\n\013attempt_num\030\" \001(\r\022\023\n\013matchg" +
      "roups\030\013 \001(\r\022\037\n\027low_priority_account_id\030\023" +
      " \001(\r\0221\n\nmatch_type\030\025 \001(\0162\n.MatchType:\021MA" +
      "TCH_TYPE_CASUAL\022\017\n\007team_id\030\027 \001(\r\022\021\n\tteam" +
      "_name\0303 \001(\t\022\024\n\014team_ui_logo\0304 \001(\004\022\026\n\016tea" +
      "m_base_logo\0305 \001(\004\022!\n\031match_disabled_unti" +
      "l_date\030\030 \001(\r\022!\n\031match_disabled_account_i" +
      "d\030\031 \001(\r\022%\n\035matchmaking_max_range_minutes" +
      "\030\032 \001(\r\022\026\n\016matchlanguages\030\033 \001(\r\022$\n\007member" +
      "s\030\035 \003(\0132\023.CSODOTAPartyMember\022$\n\034low_prio" +
      "rity_games_remaining\030# \001(\r\022\036\n\026open_for_j" +
      "oin_requests\030( \001(\010\022)\n\014sent_invites\030) \003(\013" +
      "2\023.CSODOTAPartyInvite\022)\n\014recv_invites\030* " +
      "\003(\0132\023.CSODOTAPartyInvite\022\025\n\raccount_flag" +
      "s\030+ \001(\r\022\033\n\023region_select_flags\030, \001(\r\022\037\n\027" +
      "exclusive_tournament_id\030- \001(\r\022\033\n\023tourney" +
      "_division_id\030/ \001(\r\022\035\n\025tourney_schedule_t" +
      "ime\0300 \001(\r\022\033\n\023tourney_skill_level\0301 \001(\r\022\035" +
      "\n\025tourney_bracket_round\0302 \001(\r\022#\n\033tourney" +
      "_queue_deadline_time\0306 \001(\r\022f\n\034tourney_qu" +
      "eue_deadline_state\0307 \001(\0162\033.ETourneyQueue" +
      "DeadlineState:#k_ETourneyQueueDeadlineSt" +
      "ate_Normal\022#\n\033party_builder_slots_to_fil" +
      "l\0308 \001(\r\022\"\n\032party_builder_match_groups\0309 " +
      "\001(\r\022 \n\030party_builder_start_time\030: \001(\r\022\022\n" +
      "\nsolo_queue\030; \001(\010\022\035\n\025steam_clan_account_" +
      "id\030= \001(\r\022*\n\013ready_check\030> \001(\0132\025.CMsgRead" +
      "yCheckStatus\022\'\n\037custom_game_disabled_unt" +
      "il_date\030? \001(\r\022\'\n\037custom_game_disabled_ac" +
      "count_id\030@ \001(\r\022\032\n\022is_challenge_match\030A \001" +
      "(\010\022\"\n\032party_search_beacon_active\030B \001(\010\022\031" +
      "\n\021matchmaking_flags\030C \001(\r\022M\n\023high_priori" +
      "ty_state\030D \001(\0162\025.EHighPriorityMMState:\031k" +
      "_EHighPriorityMM_Unknown\022\037\n\027lane_selecti" +
      "ons_enabled\030E \001(\010\022#\n\033custom_game_difficu" +
      "lty_mask\030F \001(\r\022\026\n\016is_steam_china\030G \001(\010\022\033" +
      "\n\023bot_difficulty_mask\030H \001(\r\022\035\n\025bot_scrip" +
      "t_index_mask\030I \001(\r\022\036\n\026restricted_from_ra" +
      "nked\030J \001(\010\022)\n!restricted_from_ranked_acc" +
      "ount_id\030K \001(\r\022 \n\030rank_spread_likert_scal" +
      "e\030L \001(\r\022#\n\033behavior_score_likert_scale\030M" +
      " \001(\r\"0\n\005State\022\006\n\002UI\020\000\022\021\n\rFINDING_MATCH\020\001" +
      "\022\014\n\010IN_MATCH\020\002\"\233\002\n\022CSODOTAPartyInvite\022\026\n" +
      "\010group_id\030\001 \001(\004B\004\200\246\035\001\022\021\n\tsender_id\030\002 \001(\006" +
      "\022\023\n\013sender_name\030\003 \001(\t\0220\n\007members\030\004 \003(\0132\037" +
      ".CSODOTAPartyInvite.PartyMember\022\017\n\007team_" +
      "id\030\005 \001(\r\022\033\n\023low_priority_status\030\006 \001(\010\022\020\n" +
      "\010as_coach\030\007 \001(\010\022\022\n\ninvite_gid\030\010 \001(\006\032?\n\013P" +
      "artyMember\022\014\n\004name\030\001 \001(\t\022\020\n\010steam_id\030\002 \001" +
      "(\006\022\020\n\010is_coach\030\004 \001(\010\"\325\001\n\017CMsgLeaverState" +
      "\022\023\n\013lobby_state\030\001 \001(\r\022>\n\ngame_state\030\002 \001(" +
      "\0162\017.DOTA_GameState:\031DOTA_GAMERULES_STATE" +
      "_INIT\022\027\n\017leaver_detected\030\003 \001(\010\022\034\n\024first_" +
      "blood_happened\030\004 \001(\010\022\035\n\025discard_match_re" +
      "sults\030\005 \001(\010\022\027\n\017mass_disconnect\030\006 \001(\010\"\213\002\n" +
      "\024CMsgReadyCheckStatus\022\027\n\017start_timestamp" +
      "\030\001 \001(\r\022\030\n\020finish_timestamp\030\002 \001(\r\022\034\n\024init" +
      "iator_account_id\030\003 \001(\r\0228\n\rready_members\030" +
      "\004 \003(\0132!.CMsgReadyCheckStatus.ReadyMember" +
      "\032h\n\013ReadyMember\022\022\n\naccount_id\030\001 \001(\r\022E\n\014r" +
      "eady_status\030\002 \001(\0162\022.EReadyCheckStatus:\033k" +
      "_EReadyCheckStatus_Unknown\"\034\n\032CMsgPartyR" +
      "eadyCheckRequest\"l\n\033CMsgPartyReadyCheckR" +
      "esponse\022M\n\006result\030\001 \001(\0162\031.EReadyCheckReq" +
      "uestResult:\"k_EReadyCheckRequestResult_S" +
      "uccess\"g\n\036CMsgPartyReadyCheckAcknowledge" +
      "\022E\n\014ready_status\030\001 \001(\0162\022.EReadyCheckStat" +
      "us:\033k_EReadyCheckStatus_Unknown\",\n\031CMsgL" +
      "obbyEventGameDetails\022\017\n\007kv_data\030\001 \001(\014\"\271\001" +
      "\n\031CMsgMatchMatchmakingStats\022\032\n\022average_q" +
      "ueue_time\030\001 \001(\r\022\032\n\022maximum_queue_time\030\002 " +
      "\001(\r\022d\n\027behavior_score_variance\030\003 \001(\0162\034.E" +
      "MatchBehaviorScoreVariance:%k_EMatchBeha" +
      "viorScoreVariance_Invalid\"\215l\n\010CMvpData\022 " +
      "\n\004mvps\030\001 \003(\0132\022.CMvpData.MvpDatum\032\336k\n\010Mvp" +
      "Datum\022\023\n\013player_slot\030\001 \001(\r\0221\n\taccolades\030" +
      "\002 \003(\0132\036.CMvpData.MvpDatum.MvpAccolade\032\211k" +
      "\n\013MvpAccolade\022C\n\004type\030\001 \001(\0162..CMvpData.M" +
      "vpDatum.MvpAccolade.MvpAccoladeType:\005kil" +
      "ls\022\024\n\014detail_value\030\002 \001(\002\"\236j\n\017MvpAccolade" +
      "Type\022\t\n\005kills\020\001\022\n\n\006deaths\020\002\022\013\n\007assists\020\003" +
      "\022\r\n\tnet_worth\020\005\022\016\n\nitem_value\020\006\022\026\n\022suppo" +
      "rt_gold_spent\020\007\022\020\n\014wards_placed\020\010\022\013\n\007dew" +
      "ards\020\t\022\021\n\rcamps_stacked\020\n\022\r\n\tlast_hits\020\013" +
      "\022\n\n\006denies\020\014\022\"\n\036kKillEaterEvent_Killing_" +
      "Sprees\020\r\022\033\n\027kKillEaterEvent_Godlike\020\016\022$\n" +
      " kKillEaterEvent_Towers_Destroyed\020\017\022.\n*k" +
      "KillEaterEventType_Invoker_SunstrikeKill" +
      "s\020\020\022!\n\035kKillEaterEventType_Axe_Culls\020\021\022-" +
      "\n)kKillEaterEventType_Axe_BattleHungerKi" +
      "lls\020\022\022&\n\"kKillEaterEventType_LowHealthKi" +
      "lls\020\023\022,\n(kKillEaterEventType_Invoker_Tor" +
      "nadoKills\020\024\022(\n$kKillEaterEventType_Sven_" +
      "DoubleStuns\020\025\022*\n&kKillEaterEventType_Sve" +
      "n_WarcryAssists\020\026\022.\n*kKillEaterEventType" +
      "_Sven_CleaveDoubleKills\020\027\022/\n+kKillEaterE" +
      "ventType_Sven_TeleportInterrupts\020\030\022,\n(kK" +
      "illEaterEventType_Faceless_MultiChrono\020\031" +
      "\022,\n(kKillEaterEventType_Faceless_ChronoK" +
      "ills\020\032\022(\n$kKillEaterEventType_Ursa_Multi" +
      "Shocks\020\033\022#\n\037kKillEaterEventType_RoshanKi" +
      "lls\020\034\022(\n$kKillEaterEventType_Lion_Finger" +
      "Kills\020\035\022,\n(kKillEaterEventType_Riki_Smok" +
      "edHeroKills\020 \022.\n*kKillEaterEventType_Her" +
      "oesRevealedWithDust\020!\0227\n3kKillEaterEvent" +
      "Type_SkeletonKing_ReincarnationKills\020\"\022+" +
      "\n\'kKillEaterEventType_Skywrath_FlareKill" +
      "s\020#\022/\n+kKillEaterEventType_Leshrac_Split" +
      "EarthStuns\020$\022,\n(kKillEaterEventType_Mira" +
      "na_MaxStunArrows\020%\0228\n4kKillEaterEventTyp" +
      "e_PhantomAssassin_CoupdeGraceCrits\020&\0223\n/" +
      "kKillEaterEventType_PhantomAssassin_Dagg" +
      "erCrits\020\'\022(\n$kKillEaterEventType_Meepo_E" +
      "arthbinds\020(\0220\n,kKillEaterEventType_Blood" +
      "seeker_RuptureKills\020)\022,\n(kKillEaterEvent" +
      "Type_Slark_LeashedEnemies\020*\0222\n.kKillEate" +
      "rEventType_Disruptor_FountainGlimpses\020+\022" +
      "+\n\'kKillEaterEventType_Rubick_SpellsStol" +
      "en\020,\022.\n*kKillEaterEventType_Rubick_Ultim" +
      "atesStolen\020-\022*\n&kKillEaterEventType_Doom" +
      "_EnemiesDoomed\020.\0220\n,kKillEaterEventType_" +
      "Omniknight_Purifications\020/\0221\n-kKillEater" +
      "EventType_Omniknight_AlliesRepelled\0200\0222\n" +
      ".kKillEaterEventType_Omniknight_EnemiesR" +
      "epelled\0201\0222\n.kKillEaterEventType_Warlock" +
      "_FiveHeroFatalBonds\0202\0228\n4kKillEaterEvent" +
      "Type_CrystalMaiden_FrostbittenEnemies\0203\022" +
      "2\n.kKillEaterEventType_CrystalMaiden_Cry" +
      "stalNovas\0204\0221\n-kKillEaterEventType_Kunkk" +
      "a_DoubleHeroTorrents\0205\0223\n/kKillEaterEven" +
      "tType_Kunkka_TripleHeroGhostShips\0206\0221\n-k" +
      "KillEaterEventType_NagaSiren_EnemiesEnsn" +
      "ared\0207\0224\n0kKillEaterEventType_NagaSiren_" +
      "TripleHeroRipTides\0208\0223\n/kKillEaterEventT" +
      "ype_Lycan_KillsDuringShapeshift\0209\022,\n(kKi" +
      "llEaterEventType_Pudge_DismemberKills\020:\022" +
      "/\n+kKillEaterEventType_Pudge_EnemyHeroes" +
      "Hooked\020;\022\'\n#kKillEaterEventType_Pudge_Ho" +
      "okKills\020<\0225\n1kKillEaterEventType_Pudge_U" +
      "nseenEnemyHeroesHooked\020=\0222\n.kKillEaterEv" +
      "entType_DrowRanger_EnemiesSilenced\020>\0224\n0" +
      "kKillEaterEventType_DrowRanger_MultiHero" +
      "Silences\020?\0220\n,kKillEaterEventType_DrowRa" +
      "nger_SilencedKills\020@\0222\n.kKillEaterEventT" +
      "ype_DrowRanger_FrostArrowKills\020A\0226\n2kKil" +
      "lEaterEventType_DragonKnight_KillsInDrag" +
      "onForm\020B\0225\n1kKillEaterEventType_DragonKn" +
      "ight_BreatheFireKills\020C\0220\n,kKillEaterEve" +
      "ntType_DragonKnight_SplashKills\020D\022-\n)kKi" +
      "llEaterEventType_WitchDoctor_CaskStuns\020E" +
      "\0221\n-kKillEaterEventType_WitchDoctor_Male" +
      "dictKills\020F\0226\n2kKillEaterEventType_Witch" +
      "Doctor_MultiHeroMaledicts\020G\0222\n.kKillEate" +
      "rEventType_WitchDoctor_DeathWardKills\020H\022" +
      "4\n0kKillEaterEventType_Disruptor_Thunder" +
      "StrikeKills\020I\0220\n,kKillEaterEventType_Dis" +
      "ruptor_HeroesGlimpsed\020J\0228\n4kKillEaterEve" +
      "ntType_CrystalMaiden_FreezingFieldKills\020" +
      "K\022/\n+kKillEaterEventType_Medusa_EnemiesP" +
      "etrified\020M\022/\n+kKillEaterEventType_Warloc" +
      "k_FatalBondsKills\020N\022*\n&kKillEaterEventTy" +
      "pe_Warlock_GolemKills\020O\022*\n&kKillEaterEve" +
      "ntType_Tusk_WalrusPunches\020P\022*\n&kKillEate" +
      "rEventType_Tusk_SnowballStuns\020Q\0220\n,kKill" +
      "EaterEventType_Earthshaker_FissureStuns\020" +
      "R\0222\n.kKillEaterEventType_Earthshaker_3He" +
      "roEchoslams\020S\0222\n.kKillEaterEventType_San" +
      "dKing_BurrowstrikeStuns\020T\022/\n+kKillEaterE" +
      "ventType_SandKing_EpicenterKills\020U\0225\n1kK" +
      "illEaterEventType_SkywrathMage_AncientSe" +
      "alKills\020V\0228\n4kKillEaterEventType_Skywrat" +
      "hMage_ConcussiveShotKills\020W\022,\n(kKillEate" +
      "rEventType_Luna_LucentBeamKills\020X\022)\n%kKi" +
      "llEaterEventType_Luna_EclipseKills\020Y\0228\n4" +
      "kKillEaterEventType_KeeperOfTheLight_Ill" +
      "uminateKills\020Z\0226\n2kKillEaterEventType_Ke" +
      "eperOfTheLight_ManaLeakStuns\020[\022:\n6kKillE" +
      "aterEventType_KeeperOfTheLight_Teammates" +
      "Recalled\020\\\0220\n,kKillEaterEventType_Legion" +
      "Commander_DuelsWon\020]\022-\n)kKillEaterEventT" +
      "ype_Beastmaster_RoarKills\020^\0222\n.kKillEate" +
      "rEventType_Beastmaster_RoarMultiKills\020_\022" +
      "5\n1kKillEaterEventType_Windrunner_FocusF" +
      "ireBuildings\020`\0221\n-kKillEaterEventType_Wi" +
      "ndrunner_PowershotKills\020a\0226\n2kKillEaterE" +
      "ventType_PhantomAssassin_DaggerLastHits\020" +
      "b\022:\n6kKillEaterEventType_PhantomAssassin" +
      "_PhantomStrikeKills\020c\0224\n0kKillEaterEvent" +
      "Type_DeathProphet_CryptSwarmKills\020d\022:\n6k" +
      "KillEaterEventType_DeathProphet_Exorcism" +
      "BuildingKills\020e\022<\n8kKillEaterEventType_D" +
      "eathProphet_ExorcismSpiritsSummoned\020f\0226\n" +
      "2kKillEaterEventType_DeathProphet_MultiH" +
      "eroSilences\020g\022-\n)kKillEaterEventType_Aba" +
      "ddon_MistCoilKills\020h\022.\n*kKillEaterEventT" +
      "ype_Abaddon_MistCoilHealed\020i\0222\n.kKillEat" +
      "erEventType_Abaddon_AphoticShieldKills\020j" +
      "\0222\n.kKillEaterEventType_Lich_ChainFrostT" +
      "ripleKills\020k\0221\n-kKillEaterEventType_Lich" +
      "_ChainFrostMultiKills\020l\022.\n*kKillEaterEve" +
      "ntType_Lich_ChainFrostBounces\020m\022)\n%kKill" +
      "EaterEventType_Ursa_EnragedKills\020n\022,\n(kK" +
      "illEaterEventType_Ursa_EarthshockKills\020o" +
      "\022-\n)kKillEaterEventType_Lina_LagunaBlade" +
      "Kills\020p\022-\n)kKillEaterEventType_Lina_Drag" +
      "onSlaveKills\020q\0222\n.kKillEaterEventType_Li" +
      "na_LightStrikeArrayStuns\020r\022&\n\"kKillEater" +
      "Event_Barracks_Destroyed\020s\022-\n)kKillEater" +
      "Event_TemplarAssassin_MeldKills\020t\0220\n,kKi" +
      "llEaterEvent_TemplarAssassin_HeroesSlowe" +
      "d\020u\022-\n)kKillEaterEvent_Sniper_Assassinat" +
      "ionKills\020v\022(\n$kKillEaterEvent_Sniper_Hea" +
      "dshotStuns\020w\022*\n&kKillEaterEvent_EarthSpi" +
      "rit_SmashStuns\020x\022,\n(kKillEaterEvent_Eart" +
      "hSpirit_GripSilences\020y\022-\n)kKillEaterEven" +
      "t_ShadowShaman_ShackleKills\020z\022)\n%kKillEa" +
      "terEvent_ShadowShaman_HexKills\020{\022*\n&kKil" +
      "lEaterEvent_Centaur_EnemiesStomped\020|\022+\n\'" +
      "kKillEaterEvent_Centaur_DoubleEdgeKills\020" +
      "}\022\'\n#kKillEaterEvent_Centaur_ReturnKills" +
      "\020~\022.\n*kKillEaterEvent_EmberSpirit_Enemie" +
      "sChained\020\177\0228\n3kKillEaterEvent_EmberSpiri" +
      "t_SleightOfFistMultiKills\020\200\001\022\"\n\035kKillEat" +
      "erEvent_Puck_OrbKills\020\201\001\0222\n-kKillEaterEv" +
      "ent_VengefulSpirit_EnemiesStunned\020\202\001\022*\n%" +
      "kKillEaterEvent_Lifestealer_RageKills\020\203\001" +
      "\0220\n+kKillEaterEvent_Lifestealer_OpenWoun" +
      "dsKills\020\204\001\022,\n\'kKillEaterEvent_Lifesteale" +
      "r_InfestKills\020\205\001\022+\n&kKillEaterEvent_Elde" +
      "rTitan_SpiritKills\020\206\001\022*\n%kKillEaterEvent" +
      "_ElderTitan_GoodStomps\020\207\001\022*\n%kKillEaterE" +
      "vent_Clockwerk_RocketKills\020\210\001\022/\n*kKillEa" +
      "terEvent_Clockwerk_BlindRocketKills\020\211\001\022*" +
      "\n%kKillEaterEvent_StormSpirit_BallKills\020" +
      "\212\001\0223\n.kKillEaterEvent_StormSpirit_Double" +
      "RemnantKills\020\213\001\022,\n\'kKillEaterEvent_Storm" +
      "Spirit_VortexKills\020\214\001\022.\n)kKillEaterEvent" +
      "_Tinker_DoubleMissileKills\020\215\001\022&\n!kKillEa" +
      "terEvent_Tinker_LaserKills\020\216\001\022)\n$kKillEa" +
      "terEvent_Techies_SuicideKills\020\217\001\022*\n%kKil" +
      "lEaterEvent_Techies_LandMineKills\020\220\001\022,\n\'" +
      "kKillEaterEvent_Techies_StatisTrapStuns\020" +
      "\221\001\022,\n\'kKillEaterEvent_Techies_RemoteMine" +
      "Kills\020\222\001\0220\n+kKillEaterEvent_ShadowFiend_" +
      "TripleRazeKills\020\223\001\0222\n-kKillEaterEvent_Sh" +
      "adowFiend_RequiemMultiKills\020\224\001\022+\n&kKillE" +
      "aterEvent_ShadowFiend_QRazeKills\020\225\001\022+\n&k" +
      "KillEaterEvent_ShadowFiend_WRazeKills\020\226\001" +
      "\022+\n&kKillEaterEvent_ShadowFiend_ERazeKil" +
      "ls\020\227\001\022+\n&kKillEaterEvent_Oracle_FatesEdi" +
      "ctKills\020\230\001\022-\n(kKillEaterEvent_Oracle_Fal" +
      "sePromiseSaves\020\231\001\022.\n)kKillEaterEvent_Jug" +
      "gernaut_OmnislashKills\020\232\001\0227\n2kKillEaterE" +
      "ventType_SkeletonKing_SkeletonHeroKills\020" +
      "\235\001\022:\n5kKillEaterEventType_DarkWillow_Cur" +
      "sedCrownTripleStuns\020\236\001\0221\n,kKillEaterEven" +
      "tType_Dazzle_ShallowGraveSaves\020\237\001\0220\n+kKi" +
      "llEaterEventType_Dazzle_PoisonTouchKills" +
      "\020\240\001\022%\n kKillEaterEventType_ThreeManMeks\020" +
      "\241\001\0220\n+kKillEaterEventType_Viper_PoisonAt" +
      "tackKills\020\242\001\0221\n,kKillEaterEventType_Vipe" +
      "r_CorrosiveSkinKills\020\243\001\022\'\n\"kKillEaterEve" +
      "ntType_ThreeHeroVeils\020\244\001\0225\n0kKillEaterEv" +
      "entType_Viper_KillsDuringViperStrike\020\245\001\022" +
      "(\n#kKillEaterEventType_SolarCrestKills\020\246" +
      "\001\022,\n\'kKillEaterEventType_Tiny_TreeThrowK" +
      "ills\020\247\001\022+\n&kKillEaterEventType_Riki_Back" +
      "stabKills\020\250\001\0228\n3kKillEaterEventType_Phoe" +
      "nix_ThreeHeroSupernovaStuns\020\251\001\0227\n2kKillE" +
      "aterEventType_Terrorblade_MetamorphosisK" +
      "ills\020\252\001\022.\n)kKillEaterEventType_Lion_Grea" +
      "tFingerKills\020\253\001\022;\n6kKillEaterEventType_A" +
      "ntimage_SpellsBlockedWithAghanims\020\254\001\0223\n." +
      "kKillEaterEventType_Antimage_ThreeManMan" +
      "aVoids\020\255\001\0225\n0kKillEaterEventType_ArcWard" +
      "en_TempestDoubleKills\020\256\001\0223\n.kKillEaterEv" +
      "entType_ArcWarden_SparkWraithKills\020\257\001\022+\n" +
      "&kKillEaterEventType_Bane_BrainSapKills\020" +
      "\260\001\022-\n(kKillEaterEventType_Bane_FiendsGri" +
      "pKills\020\261\001\0227\n2kKillEaterEventType_Batride" +
      "r_TripleHeroFlamebreaks\020\262\001\0223\n.kKillEater" +
      "EventType_Batrider_DoubleHeroLassoes\020\263\001\022" +
      ":\n5kKillEaterEventType_Brewmaster_KillsD" +
      "uringPrimalSplit\020\264\001\022>\n9kKillEaterEventTy" +
      "pe_Bristleback_KillsUnderFourQuillStacks" +
      "\020\265\001\0227\n2kKillEaterEventType_Bristleback_T" +
      "ripleHeroNasalGoo\020\266\001\0228\n3kKillEaterEventT" +
      "ype_Broodmother_SpiderlingHeroKills\020\267\001\0223" +
      "\n.kKillEaterEventType_Broodmother_KillsI" +
      "nsideWeb\020\270\001\0222\n-kKillEaterEventType_Centa" +
      "ur_ThreeHeroStampede\020\271\001\0225\n0kKillEaterEve" +
      "ntType_ChaosKnight_RealityRiftKills\020\272\001\0220" +
      "\n+kKillEaterEventType_Chen_KillsWithPeni" +
      "tence\020\273\001\022:\n5kKillEaterEventType_CrystalM" +
      "aiden_TwoHeroCrystalNovas\020\274\001\022>\n9kKillEat" +
      "erEventType_CrystalMaiden_ThreeHeroFreez" +
      "ingFields\020\275\001\022/\n*kKillEaterEventType_Dazz" +
      "le_ShadowWaveKills\020\276\001\0221\n,kKillEaterEvent" +
      "Type_DeathProphet_SiphonKills\020\277\001\022=\n8kKil" +
      "lEaterEventType_DeathProphet_ExorcismKil" +
      "lsDuringEuls\020\300\001\022C\n>kKillEaterEventType_D" +
      "isruptor_ThreeHeroKineticFieldStaticStor" +
      "m\020\301\001\0224\n/kKillEaterEventType_Doom_Inferna" +
      "lBladeBurnKills\020\302\001\022@\n;kKillEaterEventTyp" +
      "e_DrowRanger_PrecisionAuraCreepTowerKill" +
      "s\020\303\001\0221\n,kKillEaterEventType_EmberSpirit_" +
      "RemnantKills\020\304\001\0227\n2kKillEaterEventType_E" +
      "mberSpirit_SleightOfFistKills\020\305\001\022<\n7kKil" +
      "lEaterEventType_Enigma_MidnightPulseBlac" +
      "kHoleCombos\020\306\001\0222\n-kKillEaterEventType_En" +
      "igma_ThreeManBlackHoles\020\307\001\022;\n6kKillEater" +
      "EventType_FacelessVoid_MultiHeroTimeDila" +
      "tion\020\310\001\0227\n2kKillEaterEventType_Gyrocopte" +
      "r_ThreeHeroFlakCannon\020\311\001\0226\n1kKillEaterEv" +
      "entType_Gyrocopter_HomingMissileKills\020\312\001" +
      "\0226\n1kKillEaterEventType_Gyrocopter_Rocke" +
      "tBarrageKills\020\313\001\0224\n/kKillEaterEventType_" +
      "Huskar_KillsDuringLifeBreak\020\314\001\0221\n,kKillE" +
      "aterEventType_Huskar_BurningSpearKills\020\315" +
      "\001\0221\n,kKillEaterEventType_Invoker_MultiHe" +
      "roIceWall\020\316\001\022-\n(kKillEaterEventType_Invo" +
      "ker_ThreeHeroEMP\020\317\001\0228\n3kKillEaterEventTy" +
      "pe_Invoker_ThreeHeroDeafeningBlast\020\320\001\0225\n" +
      "0kKillEaterEventType_Invoker_MultiHeroCh" +
      "aosMeteor\020\321\001\0223\n.kKillEaterEventType_Jaki" +
      "ro_MultiHeroDualBreath\020\322\001\0226\n1kKillEaterE" +
      "ventType_Jakiro_IcePathMacropyreCombos\020\323" +
      "\001\022/\n*kKillEaterEventType_Leshrac_PulseNo" +
      "vaKills\020\324\001\0228\n3kKillEaterEventType_Leshra" +
      "c_ThreeHeroLightningStorm\020\325\001\0224\n/kKillEat" +
      "erEventType_Lion_ThreeHeroFingerOfDeath\020" +
      "\326\001\022(\n#kKillEaterEventType_Meepo_PoofKill" +
      "s\020\327\001\0222\n-kKillEaterEventType_Meepo_MultiH" +
      "eroEarthbinds\020\330\001\0224\n/kKillEaterEventType_" +
      "NightStalker_NighttimeKills\020\331\001\0227\n2kKillE" +
      "aterEventType_Morphling_KillsDuringRepli" +
      "cate\020\332\001\0220\n+kKillEaterEventType_OgreMagi_" +
      "FireblastKills\020\333\001\022-\n(kKillEaterEventType" +
      "_OgreMagi_IgniteKills\020\334\001\022.\n)kKillEaterEv" +
      "entType_DominatingKillStreaks\020\335\001\022(\n#kKil" +
      "lEaterEventType_MegaKillStreaks\020\336\001\0220\n+kK" +
      "illEaterEventType_Alchemist_AghanimsGive" +
      "n\020\337\001\022,\n\'kKillEaterEventType_VeilsLeading" +
      "ToKills\020\340\001\022+\n&kKillEaterEventType_DustLe" +
      "adingToKills\020\341\001\0227\n2kKillEaterEventType_W" +
      "itchDoctor_MultiHeroCaskStuns\020\342\001\022-\n(kKil" +
      "lEaterEventType_Weaver_ShukuchiKills\020\343\001\022" +
      "9\n4kKillEaterEventType_Windrunner_Shackl" +
      "eFocusFireKills\020\344\001\022B\n=kKillEaterEventTyp" +
      "e_VengefulSpirit_VengeanceAuraIllusionKi" +
      "lls\020\345\001\022.\n)kKillEaterEventType_Tusk_Walru" +
      "sPunchKills\020\346\001\022/\n*kKillEaterEventType_Ti" +
      "nker_MultiHeroLasers\020\347\001\022;\n6kKillEaterEve" +
      "ntType_TemplarAssassin_MultiHeroPsiBlade" +
      "s\020\350\001\0225\n0kKillEaterEventType_Sven_KillsDu" +
      "ringGodsStrength\020\351\001\0222\n-kKillEaterEventTy" +
      "pe_Sniper_ThreeHeroShrapnels\020\352\001\0225\n0kKill" +
      "EaterEventType_Slark_KillsDuringShadowDa" +
      "nce\020\353\001\022:\n5kKillEaterEventType_ShadowSham" +
      "an_MultiHeroEtherShocks\020\354\001\022=\n8kKillEater" +
      "EventType_ShadowShaman_SerpentWardShackl" +
      "eKills\020\355\001\0227\n2kKillEaterEventType_Riki_Th" +
      "reeHeroTricksOfTheTrade\020\356\001\0221\n,kKillEater" +
      "EventType_Razor_EyeOfTheStormKills\020\357\001\022-\n" +
      "(kKillEaterEventType_Pugna_LifeDrainKill" +
      "s\020\360\001\022>\n9kKillEaterEventType_ObsidianDest" +
      "royer_SanitysEclipseKills\020\361\001\0224\n/kKillEat" +
      "erEventType_Oracle_MultiHeroFortunesEnd\020" +
      "\362\001\0225\n0kKillEaterEventType_Omniknight_Pur" +
      "ificationKills\020\363\001\022C\n>kKillEaterEventType" +
      "_NightStalker_EnemyMissesUnderCripplingF" +
      "ear\020\364\001\0224\n/kKillEaterEventType_Warlock_Th" +
      "reeHeroFatalBonds\020\365\001\0223\n.kKillEaterEventT" +
      "ype_Riki_TricksOfTheTradeKills\020\366\001\0225\n0kKi" +
      "llEaterEventType_Earthshaker_AftershockH" +
      "its10\020\367\001\0223\n.kKillEaterEventType_Earthsha" +
      "ker_5HeroEchoslams\020\370\001\0222\n-kKillEaterEvent" +
      "Type_Lina_LagunaBladeHeroKills\020\371\001\0222\n-kKi" +
      "llEaterEventType_Lina_LightStrikeHeroStu" +
      "ns\020\372\001\0226\n1kKillEaterEventType_Earthshaker",
      "_FissureMultiStuns\020\373\001\022/\n*kKillEaterEvent" +
      "Type_Earthshaker_TotemKills\020\374\001\0223\n.kKillE" +
      "aterEventType_Pangolier_SwashbuckleKills" +
      "\020\375\001\0222\n-kKillEaterEventType_Furion_EnemyH" +
      "eroesTrapped\020\376\001\0224\n/kKillEaterEventType_P" +
      "angolier_HeartpiercerKills\020\377\001\0222\n-kKillEa" +
      "terEventType_Medusa_MultiHeroStoneGaze\020\200" +
      "\002\022.\n)kKillEaterEventType_Medusa_SplitSho" +
      "tKills\020\201\002\0222\n-kKillEaterEventType_Mirana_" +
      "MultiHeroStarstorm\020\202\002\0228\n3kKillEaterEvent" +
      "Type_Mirana_KillsFromMoonlightShadow\020\203\002\022" +
      "0\n+kKillEaterEventType_Magnus_MultiHeroS" +
      "kewers\020\204\002\0228\n3kKillEaterEventType_Magnus_" +
      "MultiHeroReversePolarity\020\205\002\0229\n4kKillEate" +
      "rEventType_Magnus_HeroesSlowedWithShockw" +
      "ave\020\206\002\0220\n+kKillEaterEventType_NagaSiren_" +
      "MultiHeroSong\020\207\002\0225\n0kKillEaterEventType_" +
      "NagaSiren_AlliesHealedBySong\020\210\002\0220\n+kKill" +
      "EaterEventType_LoneDruid_MultiHeroRoar\020\211" +
      "\002\0221\n,kKillEaterEventType_LoneDruid_Battl" +
      "eCryKills\020\212\002\0225\n0kKillEaterEventType_Wint" +
      "erWyvern_ThreeHeroCurses\020\213\002\022?\n:kKillEate" +
      "rEventType_Antimage_SpellsBlockedWithCou" +
      "nterspell\020\214\002\0222\n-kKillEaterEventType_Mars" +
      "_EnemiesKilledInArena\020\215\002\0221\n,kKillEaterEv" +
      "entType_Mars_MultiHeroGodsRebuke\020\216\002\022-\n(k" +
      "KillEaterEventType_Mars_GodsRebukeKills\020" +
      "\217\002\0222\n-kKillEaterEventType_Snapfire_Lizar" +
      "dBlobsKills\020\220\002\0224\n/kKillEaterEventType_Sn" +
      "apfire_TwoHeroCookieStuns\020\221\002\022\026\n\021Custom_K" +
      "illStreak\020\222\002\022-\n(kKillEaterEventType_Muer" +
      "ta_DeadShotKills\020\223\002\0222\n-kKillEaterEventTy" +
      "pe_Muerta_PierceTheVeilKills\020\224\002\0221\n,kKill" +
      "EaterEventType_Muerta_MultiHeroDeadShot\020" +
      "\225\002\0227\n2kKillEaterEventType_Muerta_DeadSho" +
      "tsIntoTheCalling\020\226\002\0227\n2kKillEaterEventTy" +
      "pe_Ringmaster_LongRangeDaggerHits\020\227\002\0222\n-" +
      "kKillEaterEventType_Ringmaster_MultiHero" +
      "Whips\020\230\002\0227\n2kKillEaterEventType_Ringmast" +
      "er_MultiHeroMesmerizes\020\231\002*\253\001\n\016ELaneSelec" +
      "tion\022\035\n\031k_ELaneSelection_SAFELANE\020\000\022\034\n\030k" +
      "_ELaneSelection_OFFLANE\020\001\022\034\n\030k_ELaneSele" +
      "ction_MIDLANE\020\002\022\034\n\030k_ELaneSelection_SUPP" +
      "ORT\020\003\022 \n\034k_ELaneSelection_HARDSUPPORT\020\004*" +
      "\333\002\n\023ELaneSelectionFlags\022\"\n\036k_ELaneSelect" +
      "ionFlags_SAFELANE\020\001\022!\n\035k_ELaneSelectionF" +
      "lags_OFFLANE\020\002\022!\n\035k_ELaneSelectionFlags_" +
      "MIDLANE\020\004\022!\n\035k_ELaneSelectionFlags_SUPPO" +
      "RT\020\010\022%\n!k_ELaneSelectionFlags_HARDSUPPOR" +
      "T\020\020\022\"\n\036k_ELaneSelectionFlagGroup_None\020\000\022" +
      "\"\n\036k_ELaneSelectionFlagGroup_CORE\020\007\022%\n!k" +
      "_ELaneSelectionFlagGroup_SUPPORT\020\030\022!\n\035k_" +
      "ELaneSelectionFlagGroup_ALL\020\037*i\n\026EPartyM" +
      "atchmakingFlags\022!\n\035k_EPartyMatchmakingFl" +
      "ags_None\020\000\022,\n(k_EPartyMatchmakingFlags_L" +
      "argeRankSpread\020\001*\334\002\n\024EHighPriorityMMStat" +
      "e\022\035\n\031k_EHighPriorityMM_Unknown\020\000\022#\n\037k_EH" +
      "ighPriorityMM_MissingMMData\020\001\022%\n!k_EHigh" +
      "PriorityMM_ResourceMissing\020\002\022&\n\"k_EHighP" +
      "riorityMM_ManuallyDisabled\020\003\022!\n\035k_EHighP" +
      "riorityMM_Min_Enabled\020@\022&\n\"k_EHighPriori" +
      "tyMM_AllRolesSelected\020A\022#\n\037k_EHighPriori" +
      "tyMM_UsingResource\020B\022\037\n\033k_EHighPriorityM" +
      "M_FiveStack\020C\022 \n\034k_EHighPriorityMM_HighD" +
      "emand\020D*u\n\021EReadyCheckStatus\022\037\n\033k_EReady" +
      "CheckStatus_Unknown\020\000\022 \n\034k_EReadyCheckSt" +
      "atus_NotReady\020\001\022\035\n\031k_EReadyCheckStatus_R" +
      "eady\020\002*\366\001\n\030EReadyCheckRequestResult\022&\n\"k" +
      "_EReadyCheckRequestResult_Success\020\000\0220\n,k" +
      "_EReadyCheckRequestResult_AlreadyInProgr" +
      "ess\020\001\022)\n%k_EReadyCheckRequestResult_NotI" +
      "nParty\020\002\022(\n$k_EReadyCheckRequestResult_S" +
      "endError\020\003\022+\n\'k_EReadyCheckRequestResult" +
      "_UnknownError\020\004*\301\001\n\033EMatchBehaviorScoreV" +
      "ariance\022)\n%k_EMatchBehaviorScoreVariance" +
      "_Invalid\020\000\022%\n!k_EMatchBehaviorScoreVaria" +
      "nce_Low\020\001\022(\n$k_EMatchBehaviorScoreVarian" +
      "ce_Medium\020\002\022&\n\"k_EMatchBehaviorScoreVari" +
      "ance_High\020\003B\032\n\030kz.moltenhaze.proto.dota"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          kz.moltenhaze.proto.dota.Steammessages.getDescriptor(),
          kz.moltenhaze.proto.dota.GcsdkGcmessages.getDescriptor(),
          kz.moltenhaze.proto.dota.DotaSharedEnums.getDescriptor(),
        });
    internal_static_CSODOTAPartyMember_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CSODOTAPartyMember_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSODOTAPartyMember_descriptor,
        new java.lang.String[] { "IsCoach", "RegionPingCodes", "RegionPingTimes", "RegionPingFailedBitmask", "IsPlusSubscriber", "TourneySkillLevel", "TourneyBuyin", "TourneyPreventUntil", "MmDataValid", "LaneSelectionFlags", "HighPriorityDisabled", "HasHpResource", "JoinedFromPartyfinder", "IsSteamChina", "BannedHeroIds", });
    internal_static_CSODOTAParty_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CSODOTAParty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSODOTAParty_descriptor,
        new java.lang.String[] { "PartyId", "LeaderId", "MemberIds", "GameModes", "State", "EffectiveStartedMatchmakingTime", "RawStartedMatchmakingTime", "AttemptStartTime", "AttemptNum", "Matchgroups", "LowPriorityAccountId", "MatchType", "TeamId", "TeamName", "TeamUiLogo", "TeamBaseLogo", "MatchDisabledUntilDate", "MatchDisabledAccountId", "MatchmakingMaxRangeMinutes", "Matchlanguages", "Members", "LowPriorityGamesRemaining", "OpenForJoinRequests", "SentInvites", "RecvInvites", "AccountFlags", "RegionSelectFlags", "ExclusiveTournamentId", "TourneyDivisionId", "TourneyScheduleTime", "TourneySkillLevel", "TourneyBracketRound", "TourneyQueueDeadlineTime", "TourneyQueueDeadlineState", "PartyBuilderSlotsToFill", "PartyBuilderMatchGroups", "PartyBuilderStartTime", "SoloQueue", "SteamClanAccountId", "ReadyCheck", "CustomGameDisabledUntilDate", "CustomGameDisabledAccountId", "IsChallengeMatch", "PartySearchBeaconActive", "MatchmakingFlags", "HighPriorityState", "LaneSelectionsEnabled", "CustomGameDifficultyMask", "IsSteamChina", "BotDifficultyMask", "BotScriptIndexMask", "RestrictedFromRanked", "RestrictedFromRankedAccountId", "RankSpreadLikertScale", "BehaviorScoreLikertScale", });
    internal_static_CSODOTAPartyInvite_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CSODOTAPartyInvite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSODOTAPartyInvite_descriptor,
        new java.lang.String[] { "GroupId", "SenderId", "SenderName", "Members", "TeamId", "LowPriorityStatus", "AsCoach", "InviteGid", });
    internal_static_CSODOTAPartyInvite_PartyMember_descriptor =
      internal_static_CSODOTAPartyInvite_descriptor.getNestedTypes().get(0);
    internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSODOTAPartyInvite_PartyMember_descriptor,
        new java.lang.String[] { "Name", "SteamId", "IsCoach", });
    internal_static_CMsgLeaverState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgLeaverState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgLeaverState_descriptor,
        new java.lang.String[] { "LobbyState", "GameState", "LeaverDetected", "FirstBloodHappened", "DiscardMatchResults", "MassDisconnect", });
    internal_static_CMsgReadyCheckStatus_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgReadyCheckStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgReadyCheckStatus_descriptor,
        new java.lang.String[] { "StartTimestamp", "FinishTimestamp", "InitiatorAccountId", "ReadyMembers", });
    internal_static_CMsgReadyCheckStatus_ReadyMember_descriptor =
      internal_static_CMsgReadyCheckStatus_descriptor.getNestedTypes().get(0);
    internal_static_CMsgReadyCheckStatus_ReadyMember_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgReadyCheckStatus_ReadyMember_descriptor,
        new java.lang.String[] { "AccountId", "ReadyStatus", });
    internal_static_CMsgPartyReadyCheckRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgPartyReadyCheckRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgPartyReadyCheckRequest_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgPartyReadyCheckResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgPartyReadyCheckResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgPartyReadyCheckResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgPartyReadyCheckAcknowledge_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgPartyReadyCheckAcknowledge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgPartyReadyCheckAcknowledge_descriptor,
        new java.lang.String[] { "ReadyStatus", });
    internal_static_CMsgLobbyEventGameDetails_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgLobbyEventGameDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgLobbyEventGameDetails_descriptor,
        new java.lang.String[] { "KvData", });
    internal_static_CMsgMatchMatchmakingStats_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgMatchMatchmakingStats_descriptor,
        new java.lang.String[] { "AverageQueueTime", "MaximumQueueTime", "BehaviorScoreVariance", });
    internal_static_CMvpData_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMvpData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMvpData_descriptor,
        new java.lang.String[] { "Mvps", });
    internal_static_CMvpData_MvpDatum_descriptor =
      internal_static_CMvpData_descriptor.getNestedTypes().get(0);
    internal_static_CMvpData_MvpDatum_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMvpData_MvpDatum_descriptor,
        new java.lang.String[] { "PlayerSlot", "Accolades", });
    internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor =
      internal_static_CMvpData_MvpDatum_descriptor.getNestedTypes().get(0);
    internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor,
        new java.lang.String[] { "Type", "DetailValue", });
    descriptor.resolveAllFeaturesImmutable();
    kz.moltenhaze.proto.dota.Steammessages.getDescriptor();
    kz.moltenhaze.proto.dota.GcsdkGcmessages.getDescriptor();
    kz.moltenhaze.proto.dota.DotaSharedEnums.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(kz.moltenhaze.proto.dota.Steammessages.keyField);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
